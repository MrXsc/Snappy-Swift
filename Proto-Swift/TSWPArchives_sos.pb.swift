// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: TSWPArchives_sos.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

struct TSWP_SpecSetCharacterStyleArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var characterStyle: TSP_Reference {
    get {return _characterStyle ?? TSP_Reference()}
    set {_characterStyle = newValue}
  }
  /// Returns true if `characterStyle` has been explicitly set.
  var hasCharacterStyle: Bool {return self._characterStyle != nil}
  /// Clears the value of `characterStyle`. Subsequent reads from it will return its default value.
  mutating func clearCharacterStyle() {self._characterStyle = nil}

  var unset: Bool {
    get {return _unset ?? false}
    set {_unset = newValue}
  }
  /// Returns true if `unset` has been explicitly set.
  var hasUnset: Bool {return self._unset != nil}
  /// Clears the value of `unset`. Subsequent reads from it will return its default value.
  mutating func clearUnset() {self._unset = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _characterStyle: TSP_Reference? = nil
  fileprivate var _unset: Bool? = nil
}

struct TSWP_SpecSetColumnsArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var columns: TSWP_ColumnsArchive {
    get {return _columns ?? TSWP_ColumnsArchive()}
    set {_columns = newValue}
  }
  /// Returns true if `columns` has been explicitly set.
  var hasColumns: Bool {return self._columns != nil}
  /// Clears the value of `columns`. Subsequent reads from it will return its default value.
  mutating func clearColumns() {self._columns = nil}

  var unset: Bool {
    get {return _unset ?? false}
    set {_unset = newValue}
  }
  /// Returns true if `unset` has been explicitly set.
  var hasUnset: Bool {return self._unset != nil}
  /// Clears the value of `unset`. Subsequent reads from it will return its default value.
  mutating func clearUnset() {self._unset = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _columns: TSWP_ColumnsArchive? = nil
  fileprivate var _unset: Bool? = nil
}

struct TSWP_SpecSetDropCapArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var dropCap: TSWP_DropCapArchive {
    get {return _dropCap ?? TSWP_DropCapArchive()}
    set {_dropCap = newValue}
  }
  /// Returns true if `dropCap` has been explicitly set.
  var hasDropCap: Bool {return self._dropCap != nil}
  /// Clears the value of `dropCap`. Subsequent reads from it will return its default value.
  mutating func clearDropCap() {self._dropCap = nil}

  var unset: Bool {
    get {return _unset ?? false}
    set {_unset = newValue}
  }
  /// Returns true if `unset` has been explicitly set.
  var hasUnset: Bool {return self._unset != nil}
  /// Clears the value of `unset`. Subsequent reads from it will return its default value.
  mutating func clearUnset() {self._unset = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _dropCap: TSWP_DropCapArchive? = nil
  fileprivate var _unset: Bool? = nil
}

struct TSWP_SpecSetFontFeaturesArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var fontFeatures: [TSWP_FontFeatureArchive] = []

  var fontFeaturesUndefined: Bool {
    get {return _fontFeaturesUndefined ?? false}
    set {_fontFeaturesUndefined = newValue}
  }
  /// Returns true if `fontFeaturesUndefined` has been explicitly set.
  var hasFontFeaturesUndefined: Bool {return self._fontFeaturesUndefined != nil}
  /// Clears the value of `fontFeaturesUndefined`. Subsequent reads from it will return its default value.
  mutating func clearFontFeaturesUndefined() {self._fontFeaturesUndefined = nil}

  var unset: Bool {
    get {return _unset ?? false}
    set {_unset = newValue}
  }
  /// Returns true if `unset` has been explicitly set.
  var hasUnset: Bool {return self._unset != nil}
  /// Clears the value of `unset`. Subsequent reads from it will return its default value.
  mutating func clearUnset() {self._unset = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _fontFeaturesUndefined: Bool? = nil
  fileprivate var _unset: Bool? = nil
}

struct TSWP_SpecSetLineSpacingArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var lineSpacing: TSWP_LineSpacingArchive {
    get {return _lineSpacing ?? TSWP_LineSpacingArchive()}
    set {_lineSpacing = newValue}
  }
  /// Returns true if `lineSpacing` has been explicitly set.
  var hasLineSpacing: Bool {return self._lineSpacing != nil}
  /// Clears the value of `lineSpacing`. Subsequent reads from it will return its default value.
  mutating func clearLineSpacing() {self._lineSpacing = nil}

  var unset: Bool {
    get {return _unset ?? false}
    set {_unset = newValue}
  }
  /// Returns true if `unset` has been explicitly set.
  var hasUnset: Bool {return self._unset != nil}
  /// Clears the value of `unset`. Subsequent reads from it will return its default value.
  mutating func clearUnset() {self._unset = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _lineSpacing: TSWP_LineSpacingArchive? = nil
  fileprivate var _unset: Bool? = nil
}

struct TSWP_SpecSetListStyleArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var listStyle: TSP_Reference {
    get {return _listStyle ?? TSP_Reference()}
    set {_listStyle = newValue}
  }
  /// Returns true if `listStyle` has been explicitly set.
  var hasListStyle: Bool {return self._listStyle != nil}
  /// Clears the value of `listStyle`. Subsequent reads from it will return its default value.
  mutating func clearListStyle() {self._listStyle = nil}

  var unset: Bool {
    get {return _unset ?? false}
    set {_unset = newValue}
  }
  /// Returns true if `unset` has been explicitly set.
  var hasUnset: Bool {return self._unset != nil}
  /// Clears the value of `unset`. Subsequent reads from it will return its default value.
  mutating func clearUnset() {self._unset = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _listStyle: TSP_Reference? = nil
  fileprivate var _unset: Bool? = nil
}

struct TSWP_SpecSetListStyleBoolArrayArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var listStyleBoolArray: [Bool] = []

  var listStyleBoolArrayUndefined: Bool {
    get {return _listStyleBoolArrayUndefined ?? false}
    set {_listStyleBoolArrayUndefined = newValue}
  }
  /// Returns true if `listStyleBoolArrayUndefined` has been explicitly set.
  var hasListStyleBoolArrayUndefined: Bool {return self._listStyleBoolArrayUndefined != nil}
  /// Clears the value of `listStyleBoolArrayUndefined`. Subsequent reads from it will return its default value.
  mutating func clearListStyleBoolArrayUndefined() {self._listStyleBoolArrayUndefined = nil}

  var unset: Bool {
    get {return _unset ?? false}
    set {_unset = newValue}
  }
  /// Returns true if `unset` has been explicitly set.
  var hasUnset: Bool {return self._unset != nil}
  /// Clears the value of `unset`. Subsequent reads from it will return its default value.
  mutating func clearUnset() {self._unset = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _listStyleBoolArrayUndefined: Bool? = nil
  fileprivate var _unset: Bool? = nil
}

struct TSWP_SpecSetListStyleFloatArrayArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var listStyleFloatArray: [Float] = []

  var listStyleFloatArrayUndefined: Bool {
    get {return _listStyleFloatArrayUndefined ?? false}
    set {_listStyleFloatArrayUndefined = newValue}
  }
  /// Returns true if `listStyleFloatArrayUndefined` has been explicitly set.
  var hasListStyleFloatArrayUndefined: Bool {return self._listStyleFloatArrayUndefined != nil}
  /// Clears the value of `listStyleFloatArrayUndefined`. Subsequent reads from it will return its default value.
  mutating func clearListStyleFloatArrayUndefined() {self._listStyleFloatArrayUndefined = nil}

  var unset: Bool {
    get {return _unset ?? false}
    set {_unset = newValue}
  }
  /// Returns true if `unset` has been explicitly set.
  var hasUnset: Bool {return self._unset != nil}
  /// Clears the value of `unset`. Subsequent reads from it will return its default value.
  mutating func clearUnset() {self._unset = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _listStyleFloatArrayUndefined: Bool? = nil
  fileprivate var _unset: Bool? = nil
}

struct TSWP_SpecSetListStyleImageDataArrayArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var listStyleImageDataArray: [TSWP_ListStyleArchive.LabelImage] = []

  var listStyleImageDataArrayUndefined: Bool {
    get {return _listStyleImageDataArrayUndefined ?? false}
    set {_listStyleImageDataArrayUndefined = newValue}
  }
  /// Returns true if `listStyleImageDataArrayUndefined` has been explicitly set.
  var hasListStyleImageDataArrayUndefined: Bool {return self._listStyleImageDataArrayUndefined != nil}
  /// Clears the value of `listStyleImageDataArrayUndefined`. Subsequent reads from it will return its default value.
  mutating func clearListStyleImageDataArrayUndefined() {self._listStyleImageDataArrayUndefined = nil}

  var unset: Bool {
    get {return _unset ?? false}
    set {_unset = newValue}
  }
  /// Returns true if `unset` has been explicitly set.
  var hasUnset: Bool {return self._unset != nil}
  /// Clears the value of `unset`. Subsequent reads from it will return its default value.
  mutating func clearUnset() {self._unset = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _listStyleImageDataArrayUndefined: Bool? = nil
  fileprivate var _unset: Bool? = nil
}

struct TSWP_SpecSetListStyleListLabelGeometryArrayArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var listStyleListLabelGeometryArray: [TSWP_ListStyleArchive.LabelGeometry] = []

  var listStyleListLabelGeometryArrayUndefined: Bool {
    get {return _listStyleListLabelGeometryArrayUndefined ?? false}
    set {_listStyleListLabelGeometryArrayUndefined = newValue}
  }
  /// Returns true if `listStyleListLabelGeometryArrayUndefined` has been explicitly set.
  var hasListStyleListLabelGeometryArrayUndefined: Bool {return self._listStyleListLabelGeometryArrayUndefined != nil}
  /// Clears the value of `listStyleListLabelGeometryArrayUndefined`. Subsequent reads from it will return its default value.
  mutating func clearListStyleListLabelGeometryArrayUndefined() {self._listStyleListLabelGeometryArrayUndefined = nil}

  var unset: Bool {
    get {return _unset ?? false}
    set {_unset = newValue}
  }
  /// Returns true if `unset` has been explicitly set.
  var hasUnset: Bool {return self._unset != nil}
  /// Clears the value of `unset`. Subsequent reads from it will return its default value.
  mutating func clearUnset() {self._unset = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _listStyleListLabelGeometryArrayUndefined: Bool? = nil
  fileprivate var _unset: Bool? = nil
}

struct TSWP_SpecSetListStyleListLabelTypeArrayArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var listStyleListLabelTypeArray: [TSWP_ListStyleArchive.LabelType] = []

  var listStyleListLabelTypeArrayUndefined: Bool {
    get {return _listStyleListLabelTypeArrayUndefined ?? false}
    set {_listStyleListLabelTypeArrayUndefined = newValue}
  }
  /// Returns true if `listStyleListLabelTypeArrayUndefined` has been explicitly set.
  var hasListStyleListLabelTypeArrayUndefined: Bool {return self._listStyleListLabelTypeArrayUndefined != nil}
  /// Clears the value of `listStyleListLabelTypeArrayUndefined`. Subsequent reads from it will return its default value.
  mutating func clearListStyleListLabelTypeArrayUndefined() {self._listStyleListLabelTypeArrayUndefined = nil}

  var unset: Bool {
    get {return _unset ?? false}
    set {_unset = newValue}
  }
  /// Returns true if `unset` has been explicitly set.
  var hasUnset: Bool {return self._unset != nil}
  /// Clears the value of `unset`. Subsequent reads from it will return its default value.
  mutating func clearUnset() {self._unset = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _listStyleListLabelTypeArrayUndefined: Bool? = nil
  fileprivate var _unset: Bool? = nil
}

struct TSWP_SpecSetListStyleListNumberTypeArrayArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var listStyleListNumberTypeArray: [TSWP_ListStyleArchive.NumberType] = []

  var listStyleListNumberTypeArrayUndefined: Bool {
    get {return _listStyleListNumberTypeArrayUndefined ?? false}
    set {_listStyleListNumberTypeArrayUndefined = newValue}
  }
  /// Returns true if `listStyleListNumberTypeArrayUndefined` has been explicitly set.
  var hasListStyleListNumberTypeArrayUndefined: Bool {return self._listStyleListNumberTypeArrayUndefined != nil}
  /// Clears the value of `listStyleListNumberTypeArrayUndefined`. Subsequent reads from it will return its default value.
  mutating func clearListStyleListNumberTypeArrayUndefined() {self._listStyleListNumberTypeArrayUndefined = nil}

  var unset: Bool {
    get {return _unset ?? false}
    set {_unset = newValue}
  }
  /// Returns true if `unset` has been explicitly set.
  var hasUnset: Bool {return self._unset != nil}
  /// Clears the value of `unset`. Subsequent reads from it will return its default value.
  mutating func clearUnset() {self._unset = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _listStyleListNumberTypeArrayUndefined: Bool? = nil
  fileprivate var _unset: Bool? = nil
}

struct TSWP_SpecSetListStyleStringArrayArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var listStyleStringArray: [String] = []

  var listStyleStringArrayUndefined: Bool {
    get {return _listStyleStringArrayUndefined ?? false}
    set {_listStyleStringArrayUndefined = newValue}
  }
  /// Returns true if `listStyleStringArrayUndefined` has been explicitly set.
  var hasListStyleStringArrayUndefined: Bool {return self._listStyleStringArrayUndefined != nil}
  /// Clears the value of `listStyleStringArrayUndefined`. Subsequent reads from it will return its default value.
  mutating func clearListStyleStringArrayUndefined() {self._listStyleStringArrayUndefined = nil}

  var unset: Bool {
    get {return _unset ?? false}
    set {_unset = newValue}
  }
  /// Returns true if `unset` has been explicitly set.
  var hasUnset: Bool {return self._unset != nil}
  /// Clears the value of `unset`. Subsequent reads from it will return its default value.
  mutating func clearUnset() {self._unset = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _listStyleStringArrayUndefined: Bool? = nil
  fileprivate var _unset: Bool? = nil
}

struct TSWP_SpecSetPaddingArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var padding: TSWP_PaddingArchive {
    get {return _padding ?? TSWP_PaddingArchive()}
    set {_padding = newValue}
  }
  /// Returns true if `padding` has been explicitly set.
  var hasPadding: Bool {return self._padding != nil}
  /// Clears the value of `padding`. Subsequent reads from it will return its default value.
  mutating func clearPadding() {self._padding = nil}

  var unset: Bool {
    get {return _unset ?? false}
    set {_unset = newValue}
  }
  /// Returns true if `unset` has been explicitly set.
  var hasUnset: Bool {return self._unset != nil}
  /// Clears the value of `unset`. Subsequent reads from it will return its default value.
  mutating func clearUnset() {self._unset = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _padding: TSWP_PaddingArchive? = nil
  fileprivate var _unset: Bool? = nil
}

struct TSWP_SpecSetParagraphStyleArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var paragraphStyle: TSP_Reference {
    get {return _paragraphStyle ?? TSP_Reference()}
    set {_paragraphStyle = newValue}
  }
  /// Returns true if `paragraphStyle` has been explicitly set.
  var hasParagraphStyle: Bool {return self._paragraphStyle != nil}
  /// Clears the value of `paragraphStyle`. Subsequent reads from it will return its default value.
  mutating func clearParagraphStyle() {self._paragraphStyle = nil}

  var unset: Bool {
    get {return _unset ?? false}
    set {_unset = newValue}
  }
  /// Returns true if `unset` has been explicitly set.
  var hasUnset: Bool {return self._unset != nil}
  /// Clears the value of `unset`. Subsequent reads from it will return its default value.
  mutating func clearUnset() {self._unset = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _paragraphStyle: TSP_Reference? = nil
  fileprivate var _unset: Bool? = nil
}

struct TSWP_SpecSetRuleOffsetArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var ruleOffset: TSP_Point {
    get {return _ruleOffset ?? TSP_Point()}
    set {_ruleOffset = newValue}
  }
  /// Returns true if `ruleOffset` has been explicitly set.
  var hasRuleOffset: Bool {return self._ruleOffset != nil}
  /// Clears the value of `ruleOffset`. Subsequent reads from it will return its default value.
  mutating func clearRuleOffset() {self._ruleOffset = nil}

  var unset: Bool {
    get {return _unset ?? false}
    set {_unset = newValue}
  }
  /// Returns true if `unset` has been explicitly set.
  var hasUnset: Bool {return self._unset != nil}
  /// Clears the value of `unset`. Subsequent reads from it will return its default value.
  mutating func clearUnset() {self._unset = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _ruleOffset: TSP_Point? = nil
  fileprivate var _unset: Bool? = nil
}

struct TSWP_SpecSetTabsArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var tabs: TSWP_TabsArchive {
    get {return _tabs ?? TSWP_TabsArchive()}
    set {_tabs = newValue}
  }
  /// Returns true if `tabs` has been explicitly set.
  var hasTabs: Bool {return self._tabs != nil}
  /// Clears the value of `tabs`. Subsequent reads from it will return its default value.
  mutating func clearTabs() {self._tabs = nil}

  var unset: Bool {
    get {return _unset ?? false}
    set {_unset = newValue}
  }
  /// Returns true if `unset` has been explicitly set.
  var hasUnset: Bool {return self._unset != nil}
  /// Clears the value of `unset`. Subsequent reads from it will return its default value.
  mutating func clearUnset() {self._unset = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _tabs: TSWP_TabsArchive? = nil
  fileprivate var _unset: Bool? = nil
}

struct TSWP_SpecCharacterStyleArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var specSetCharacterStyle: TSWP_SpecSetCharacterStyleArchive {
    get {return _specSetCharacterStyle ?? TSWP_SpecSetCharacterStyleArchive()}
    set {_specSetCharacterStyle = newValue}
  }
  /// Returns true if `specSetCharacterStyle` has been explicitly set.
  var hasSpecSetCharacterStyle: Bool {return self._specSetCharacterStyle != nil}
  /// Clears the value of `specSetCharacterStyle`. Subsequent reads from it will return its default value.
  mutating func clearSpecSetCharacterStyle() {self._specSetCharacterStyle = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _specSetCharacterStyle: TSWP_SpecSetCharacterStyleArchive? = nil
}

struct TSWP_SpecColumnsArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var specSetColumns: TSWP_SpecSetColumnsArchive {
    get {return _specSetColumns ?? TSWP_SpecSetColumnsArchive()}
    set {_specSetColumns = newValue}
  }
  /// Returns true if `specSetColumns` has been explicitly set.
  var hasSpecSetColumns: Bool {return self._specSetColumns != nil}
  /// Clears the value of `specSetColumns`. Subsequent reads from it will return its default value.
  mutating func clearSpecSetColumns() {self._specSetColumns = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _specSetColumns: TSWP_SpecSetColumnsArchive? = nil
}

struct TSWP_SpecDropCapArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var specSetDropCap: TSWP_SpecSetDropCapArchive {
    get {return _specSetDropCap ?? TSWP_SpecSetDropCapArchive()}
    set {_specSetDropCap = newValue}
  }
  /// Returns true if `specSetDropCap` has been explicitly set.
  var hasSpecSetDropCap: Bool {return self._specSetDropCap != nil}
  /// Clears the value of `specSetDropCap`. Subsequent reads from it will return its default value.
  mutating func clearSpecSetDropCap() {self._specSetDropCap = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _specSetDropCap: TSWP_SpecSetDropCapArchive? = nil
}

struct TSWP_SpecFontFeaturesArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var specSetFontFeatures: TSWP_SpecSetFontFeaturesArchive {
    get {return _specSetFontFeatures ?? TSWP_SpecSetFontFeaturesArchive()}
    set {_specSetFontFeatures = newValue}
  }
  /// Returns true if `specSetFontFeatures` has been explicitly set.
  var hasSpecSetFontFeatures: Bool {return self._specSetFontFeatures != nil}
  /// Clears the value of `specSetFontFeatures`. Subsequent reads from it will return its default value.
  mutating func clearSpecSetFontFeatures() {self._specSetFontFeatures = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _specSetFontFeatures: TSWP_SpecSetFontFeaturesArchive? = nil
}

struct TSWP_SpecLineSpacingArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var specSetLineSpacing: TSWP_SpecSetLineSpacingArchive {
    get {return _specSetLineSpacing ?? TSWP_SpecSetLineSpacingArchive()}
    set {_specSetLineSpacing = newValue}
  }
  /// Returns true if `specSetLineSpacing` has been explicitly set.
  var hasSpecSetLineSpacing: Bool {return self._specSetLineSpacing != nil}
  /// Clears the value of `specSetLineSpacing`. Subsequent reads from it will return its default value.
  mutating func clearSpecSetLineSpacing() {self._specSetLineSpacing = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _specSetLineSpacing: TSWP_SpecSetLineSpacingArchive? = nil
}

struct TSWP_SpecListStyleArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var specSetListStyle: TSWP_SpecSetListStyleArchive {
    get {return _specSetListStyle ?? TSWP_SpecSetListStyleArchive()}
    set {_specSetListStyle = newValue}
  }
  /// Returns true if `specSetListStyle` has been explicitly set.
  var hasSpecSetListStyle: Bool {return self._specSetListStyle != nil}
  /// Clears the value of `specSetListStyle`. Subsequent reads from it will return its default value.
  mutating func clearSpecSetListStyle() {self._specSetListStyle = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _specSetListStyle: TSWP_SpecSetListStyleArchive? = nil
}

struct TSWP_SpecListStyleBoolArrayArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var specSetListStyleBoolArray: TSWP_SpecSetListStyleBoolArrayArchive {
    get {return _specSetListStyleBoolArray ?? TSWP_SpecSetListStyleBoolArrayArchive()}
    set {_specSetListStyleBoolArray = newValue}
  }
  /// Returns true if `specSetListStyleBoolArray` has been explicitly set.
  var hasSpecSetListStyleBoolArray: Bool {return self._specSetListStyleBoolArray != nil}
  /// Clears the value of `specSetListStyleBoolArray`. Subsequent reads from it will return its default value.
  mutating func clearSpecSetListStyleBoolArray() {self._specSetListStyleBoolArray = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _specSetListStyleBoolArray: TSWP_SpecSetListStyleBoolArrayArchive? = nil
}

struct TSWP_SpecListStyleFloatArrayArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var specSetListStyleFloatArray: TSWP_SpecSetListStyleFloatArrayArchive {
    get {return _specSetListStyleFloatArray ?? TSWP_SpecSetListStyleFloatArrayArchive()}
    set {_specSetListStyleFloatArray = newValue}
  }
  /// Returns true if `specSetListStyleFloatArray` has been explicitly set.
  var hasSpecSetListStyleFloatArray: Bool {return self._specSetListStyleFloatArray != nil}
  /// Clears the value of `specSetListStyleFloatArray`. Subsequent reads from it will return its default value.
  mutating func clearSpecSetListStyleFloatArray() {self._specSetListStyleFloatArray = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _specSetListStyleFloatArray: TSWP_SpecSetListStyleFloatArrayArchive? = nil
}

struct TSWP_SpecListStyleImageDataArrayArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var specSetListStyleImageDataArray: TSWP_SpecSetListStyleImageDataArrayArchive {
    get {return _specSetListStyleImageDataArray ?? TSWP_SpecSetListStyleImageDataArrayArchive()}
    set {_specSetListStyleImageDataArray = newValue}
  }
  /// Returns true if `specSetListStyleImageDataArray` has been explicitly set.
  var hasSpecSetListStyleImageDataArray: Bool {return self._specSetListStyleImageDataArray != nil}
  /// Clears the value of `specSetListStyleImageDataArray`. Subsequent reads from it will return its default value.
  mutating func clearSpecSetListStyleImageDataArray() {self._specSetListStyleImageDataArray = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _specSetListStyleImageDataArray: TSWP_SpecSetListStyleImageDataArrayArchive? = nil
}

struct TSWP_SpecListStyleListLabelGeometryArrayArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var specSetListStyleListLabelGeometryArray: TSWP_SpecSetListStyleListLabelGeometryArrayArchive {
    get {return _specSetListStyleListLabelGeometryArray ?? TSWP_SpecSetListStyleListLabelGeometryArrayArchive()}
    set {_specSetListStyleListLabelGeometryArray = newValue}
  }
  /// Returns true if `specSetListStyleListLabelGeometryArray` has been explicitly set.
  var hasSpecSetListStyleListLabelGeometryArray: Bool {return self._specSetListStyleListLabelGeometryArray != nil}
  /// Clears the value of `specSetListStyleListLabelGeometryArray`. Subsequent reads from it will return its default value.
  mutating func clearSpecSetListStyleListLabelGeometryArray() {self._specSetListStyleListLabelGeometryArray = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _specSetListStyleListLabelGeometryArray: TSWP_SpecSetListStyleListLabelGeometryArrayArchive? = nil
}

struct TSWP_SpecListStyleListLabelTypeArrayArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var specSetListStyleListLabelTypeArray: TSWP_SpecSetListStyleListLabelTypeArrayArchive {
    get {return _specSetListStyleListLabelTypeArray ?? TSWP_SpecSetListStyleListLabelTypeArrayArchive()}
    set {_specSetListStyleListLabelTypeArray = newValue}
  }
  /// Returns true if `specSetListStyleListLabelTypeArray` has been explicitly set.
  var hasSpecSetListStyleListLabelTypeArray: Bool {return self._specSetListStyleListLabelTypeArray != nil}
  /// Clears the value of `specSetListStyleListLabelTypeArray`. Subsequent reads from it will return its default value.
  mutating func clearSpecSetListStyleListLabelTypeArray() {self._specSetListStyleListLabelTypeArray = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _specSetListStyleListLabelTypeArray: TSWP_SpecSetListStyleListLabelTypeArrayArchive? = nil
}

struct TSWP_SpecListStyleListNumberTypeArrayArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var specSetListStyleListNumberTypeArray: TSWP_SpecSetListStyleListNumberTypeArrayArchive {
    get {return _specSetListStyleListNumberTypeArray ?? TSWP_SpecSetListStyleListNumberTypeArrayArchive()}
    set {_specSetListStyleListNumberTypeArray = newValue}
  }
  /// Returns true if `specSetListStyleListNumberTypeArray` has been explicitly set.
  var hasSpecSetListStyleListNumberTypeArray: Bool {return self._specSetListStyleListNumberTypeArray != nil}
  /// Clears the value of `specSetListStyleListNumberTypeArray`. Subsequent reads from it will return its default value.
  mutating func clearSpecSetListStyleListNumberTypeArray() {self._specSetListStyleListNumberTypeArray = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _specSetListStyleListNumberTypeArray: TSWP_SpecSetListStyleListNumberTypeArrayArchive? = nil
}

struct TSWP_SpecListStyleStringArrayArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var specSetListStyleStringArray: TSWP_SpecSetListStyleStringArrayArchive {
    get {return _specSetListStyleStringArray ?? TSWP_SpecSetListStyleStringArrayArchive()}
    set {_specSetListStyleStringArray = newValue}
  }
  /// Returns true if `specSetListStyleStringArray` has been explicitly set.
  var hasSpecSetListStyleStringArray: Bool {return self._specSetListStyleStringArray != nil}
  /// Clears the value of `specSetListStyleStringArray`. Subsequent reads from it will return its default value.
  mutating func clearSpecSetListStyleStringArray() {self._specSetListStyleStringArray = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _specSetListStyleStringArray: TSWP_SpecSetListStyleStringArrayArchive? = nil
}

struct TSWP_SpecPaddingArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var specSetPadding: TSWP_SpecSetPaddingArchive {
    get {return _specSetPadding ?? TSWP_SpecSetPaddingArchive()}
    set {_specSetPadding = newValue}
  }
  /// Returns true if `specSetPadding` has been explicitly set.
  var hasSpecSetPadding: Bool {return self._specSetPadding != nil}
  /// Clears the value of `specSetPadding`. Subsequent reads from it will return its default value.
  mutating func clearSpecSetPadding() {self._specSetPadding = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _specSetPadding: TSWP_SpecSetPaddingArchive? = nil
}

struct TSWP_SpecParagraphStyleArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var specSetParagraphStyle: TSWP_SpecSetParagraphStyleArchive {
    get {return _specSetParagraphStyle ?? TSWP_SpecSetParagraphStyleArchive()}
    set {_specSetParagraphStyle = newValue}
  }
  /// Returns true if `specSetParagraphStyle` has been explicitly set.
  var hasSpecSetParagraphStyle: Bool {return self._specSetParagraphStyle != nil}
  /// Clears the value of `specSetParagraphStyle`. Subsequent reads from it will return its default value.
  mutating func clearSpecSetParagraphStyle() {self._specSetParagraphStyle = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _specSetParagraphStyle: TSWP_SpecSetParagraphStyleArchive? = nil
}

struct TSWP_SpecRuleOffsetArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var specSetRuleOffset: TSWP_SpecSetRuleOffsetArchive {
    get {return _specSetRuleOffset ?? TSWP_SpecSetRuleOffsetArchive()}
    set {_specSetRuleOffset = newValue}
  }
  /// Returns true if `specSetRuleOffset` has been explicitly set.
  var hasSpecSetRuleOffset: Bool {return self._specSetRuleOffset != nil}
  /// Clears the value of `specSetRuleOffset`. Subsequent reads from it will return its default value.
  mutating func clearSpecSetRuleOffset() {self._specSetRuleOffset = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _specSetRuleOffset: TSWP_SpecSetRuleOffsetArchive? = nil
}

struct TSWP_SpecTabsArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var specSetTabs: TSWP_SpecSetTabsArchive {
    get {return _specSetTabs ?? TSWP_SpecSetTabsArchive()}
    set {_specSetTabs = newValue}
  }
  /// Returns true if `specSetTabs` has been explicitly set.
  var hasSpecSetTabs: Bool {return self._specSetTabs != nil}
  /// Clears the value of `specSetTabs`. Subsequent reads from it will return its default value.
  mutating func clearSpecSetTabs() {self._specSetTabs = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _specSetTabs: TSWP_SpecSetTabsArchive? = nil
}

struct TSWP_CharacterStylePropertyChangeSetArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var baselineShift: TSS_SpecDoubleArchive {
    get {return _storage._baselineShift ?? TSS_SpecDoubleArchive()}
    set {_uniqueStorage()._baselineShift = newValue}
  }
  /// Returns true if `baselineShift` has been explicitly set.
  var hasBaselineShift: Bool {return _storage._baselineShift != nil}
  /// Clears the value of `baselineShift`. Subsequent reads from it will return its default value.
  mutating func clearBaselineShift() {_uniqueStorage()._baselineShift = nil}

  var baselineShiftUndefined: Bool {
    get {return _storage._baselineShiftUndefined ?? false}
    set {_uniqueStorage()._baselineShiftUndefined = newValue}
  }
  /// Returns true if `baselineShiftUndefined` has been explicitly set.
  var hasBaselineShiftUndefined: Bool {return _storage._baselineShiftUndefined != nil}
  /// Clears the value of `baselineShiftUndefined`. Subsequent reads from it will return its default value.
  mutating func clearBaselineShiftUndefined() {_uniqueStorage()._baselineShiftUndefined = nil}

  var capitalization: TSS_SpecIntegerArchive {
    get {return _storage._capitalization ?? TSS_SpecIntegerArchive()}
    set {_uniqueStorage()._capitalization = newValue}
  }
  /// Returns true if `capitalization` has been explicitly set.
  var hasCapitalization: Bool {return _storage._capitalization != nil}
  /// Clears the value of `capitalization`. Subsequent reads from it will return its default value.
  mutating func clearCapitalization() {_uniqueStorage()._capitalization = nil}

  var capitalizationUndefined: Bool {
    get {return _storage._capitalizationUndefined ?? false}
    set {_uniqueStorage()._capitalizationUndefined = newValue}
  }
  /// Returns true if `capitalizationUndefined` has been explicitly set.
  var hasCapitalizationUndefined: Bool {return _storage._capitalizationUndefined != nil}
  /// Clears the value of `capitalizationUndefined`. Subsequent reads from it will return its default value.
  mutating func clearCapitalizationUndefined() {_uniqueStorage()._capitalizationUndefined = nil}

  var compatibilityFontName: TSS_SpecStringArchive {
    get {return _storage._compatibilityFontName ?? TSS_SpecStringArchive()}
    set {_uniqueStorage()._compatibilityFontName = newValue}
  }
  /// Returns true if `compatibilityFontName` has been explicitly set.
  var hasCompatibilityFontName: Bool {return _storage._compatibilityFontName != nil}
  /// Clears the value of `compatibilityFontName`. Subsequent reads from it will return its default value.
  mutating func clearCompatibilityFontName() {_uniqueStorage()._compatibilityFontName = nil}

  var compatibilityFontNameUndefined: Bool {
    get {return _storage._compatibilityFontNameUndefined ?? false}
    set {_uniqueStorage()._compatibilityFontNameUndefined = newValue}
  }
  /// Returns true if `compatibilityFontNameUndefined` has been explicitly set.
  var hasCompatibilityFontNameUndefined: Bool {return _storage._compatibilityFontNameUndefined != nil}
  /// Clears the value of `compatibilityFontNameUndefined`. Subsequent reads from it will return its default value.
  mutating func clearCompatibilityFontNameUndefined() {_uniqueStorage()._compatibilityFontNameUndefined = nil}

  var emphasisMarks: TSS_SpecStringArchive {
    get {return _storage._emphasisMarks ?? TSS_SpecStringArchive()}
    set {_uniqueStorage()._emphasisMarks = newValue}
  }
  /// Returns true if `emphasisMarks` has been explicitly set.
  var hasEmphasisMarks: Bool {return _storage._emphasisMarks != nil}
  /// Clears the value of `emphasisMarks`. Subsequent reads from it will return its default value.
  mutating func clearEmphasisMarks() {_uniqueStorage()._emphasisMarks = nil}

  var emphasisMarksUndefined: Bool {
    get {return _storage._emphasisMarksUndefined ?? false}
    set {_uniqueStorage()._emphasisMarksUndefined = newValue}
  }
  /// Returns true if `emphasisMarksUndefined` has been explicitly set.
  var hasEmphasisMarksUndefined: Bool {return _storage._emphasisMarksUndefined != nil}
  /// Clears the value of `emphasisMarksUndefined`. Subsequent reads from it will return its default value.
  mutating func clearEmphasisMarksUndefined() {_uniqueStorage()._emphasisMarksUndefined = nil}

  var bold: TSS_SpecBoolArchive {
    get {return _storage._bold ?? TSS_SpecBoolArchive()}
    set {_uniqueStorage()._bold = newValue}
  }
  /// Returns true if `bold` has been explicitly set.
  var hasBold: Bool {return _storage._bold != nil}
  /// Clears the value of `bold`. Subsequent reads from it will return its default value.
  mutating func clearBold() {_uniqueStorage()._bold = nil}

  var boldUndefined: Bool {
    get {return _storage._boldUndefined ?? false}
    set {_uniqueStorage()._boldUndefined = newValue}
  }
  /// Returns true if `boldUndefined` has been explicitly set.
  var hasBoldUndefined: Bool {return _storage._boldUndefined != nil}
  /// Clears the value of `boldUndefined`. Subsequent reads from it will return its default value.
  mutating func clearBoldUndefined() {_uniqueStorage()._boldUndefined = nil}

  var italic: TSS_SpecBoolArchive {
    get {return _storage._italic ?? TSS_SpecBoolArchive()}
    set {_uniqueStorage()._italic = newValue}
  }
  /// Returns true if `italic` has been explicitly set.
  var hasItalic: Bool {return _storage._italic != nil}
  /// Clears the value of `italic`. Subsequent reads from it will return its default value.
  mutating func clearItalic() {_uniqueStorage()._italic = nil}

  var italicUndefined: Bool {
    get {return _storage._italicUndefined ?? false}
    set {_uniqueStorage()._italicUndefined = newValue}
  }
  /// Returns true if `italicUndefined` has been explicitly set.
  var hasItalicUndefined: Bool {return _storage._italicUndefined != nil}
  /// Clears the value of `italicUndefined`. Subsequent reads from it will return its default value.
  mutating func clearItalicUndefined() {_uniqueStorage()._italicUndefined = nil}

  var fontFeatures: TSWP_SpecFontFeaturesArchive {
    get {return _storage._fontFeatures ?? TSWP_SpecFontFeaturesArchive()}
    set {_uniqueStorage()._fontFeatures = newValue}
  }
  /// Returns true if `fontFeatures` has been explicitly set.
  var hasFontFeatures: Bool {return _storage._fontFeatures != nil}
  /// Clears the value of `fontFeatures`. Subsequent reads from it will return its default value.
  mutating func clearFontFeatures() {_uniqueStorage()._fontFeatures = nil}

  var fontFeaturesUndefined: Bool {
    get {return _storage._fontFeaturesUndefined ?? false}
    set {_uniqueStorage()._fontFeaturesUndefined = newValue}
  }
  /// Returns true if `fontFeaturesUndefined` has been explicitly set.
  var hasFontFeaturesUndefined: Bool {return _storage._fontFeaturesUndefined != nil}
  /// Clears the value of `fontFeaturesUndefined`. Subsequent reads from it will return its default value.
  mutating func clearFontFeaturesUndefined() {_uniqueStorage()._fontFeaturesUndefined = nil}

  var fontName: TSS_SpecStringArchive {
    get {return _storage._fontName ?? TSS_SpecStringArchive()}
    set {_uniqueStorage()._fontName = newValue}
  }
  /// Returns true if `fontName` has been explicitly set.
  var hasFontName: Bool {return _storage._fontName != nil}
  /// Clears the value of `fontName`. Subsequent reads from it will return its default value.
  mutating func clearFontName() {_uniqueStorage()._fontName = nil}

  var fontNameUndefined: Bool {
    get {return _storage._fontNameUndefined ?? false}
    set {_uniqueStorage()._fontNameUndefined = newValue}
  }
  /// Returns true if `fontNameUndefined` has been explicitly set.
  var hasFontNameUndefined: Bool {return _storage._fontNameUndefined != nil}
  /// Clears the value of `fontNameUndefined`. Subsequent reads from it will return its default value.
  mutating func clearFontNameUndefined() {_uniqueStorage()._fontNameUndefined = nil}

  var fontSize: TSS_SpecDoubleArchive {
    get {return _storage._fontSize ?? TSS_SpecDoubleArchive()}
    set {_uniqueStorage()._fontSize = newValue}
  }
  /// Returns true if `fontSize` has been explicitly set.
  var hasFontSize: Bool {return _storage._fontSize != nil}
  /// Clears the value of `fontSize`. Subsequent reads from it will return its default value.
  mutating func clearFontSize() {_uniqueStorage()._fontSize = nil}

  var fontSizeUndefined: Bool {
    get {return _storage._fontSizeUndefined ?? false}
    set {_uniqueStorage()._fontSizeUndefined = newValue}
  }
  /// Returns true if `fontSizeUndefined` has been explicitly set.
  var hasFontSizeUndefined: Bool {return _storage._fontSizeUndefined != nil}
  /// Clears the value of `fontSizeUndefined`. Subsequent reads from it will return its default value.
  mutating func clearFontSizeUndefined() {_uniqueStorage()._fontSizeUndefined = nil}

  var fontSizeDelta: TSS_SpecDoubleArchive {
    get {return _storage._fontSizeDelta ?? TSS_SpecDoubleArchive()}
    set {_uniqueStorage()._fontSizeDelta = newValue}
  }
  /// Returns true if `fontSizeDelta` has been explicitly set.
  var hasFontSizeDelta: Bool {return _storage._fontSizeDelta != nil}
  /// Clears the value of `fontSizeDelta`. Subsequent reads from it will return its default value.
  mutating func clearFontSizeDelta() {_uniqueStorage()._fontSizeDelta = nil}

  var fontSizeDeltaUndefined: Bool {
    get {return _storage._fontSizeDeltaUndefined ?? false}
    set {_uniqueStorage()._fontSizeDeltaUndefined = newValue}
  }
  /// Returns true if `fontSizeDeltaUndefined` has been explicitly set.
  var hasFontSizeDeltaUndefined: Bool {return _storage._fontSizeDeltaUndefined != nil}
  /// Clears the value of `fontSizeDeltaUndefined`. Subsequent reads from it will return its default value.
  mutating func clearFontSizeDeltaUndefined() {_uniqueStorage()._fontSizeDeltaUndefined = nil}

  var kerning: TSS_SpecDoubleArchive {
    get {return _storage._kerning ?? TSS_SpecDoubleArchive()}
    set {_uniqueStorage()._kerning = newValue}
  }
  /// Returns true if `kerning` has been explicitly set.
  var hasKerning: Bool {return _storage._kerning != nil}
  /// Clears the value of `kerning`. Subsequent reads from it will return its default value.
  mutating func clearKerning() {_uniqueStorage()._kerning = nil}

  var kerningUndefined: Bool {
    get {return _storage._kerningUndefined ?? false}
    set {_uniqueStorage()._kerningUndefined = newValue}
  }
  /// Returns true if `kerningUndefined` has been explicitly set.
  var hasKerningUndefined: Bool {return _storage._kerningUndefined != nil}
  /// Clears the value of `kerningUndefined`. Subsequent reads from it will return its default value.
  mutating func clearKerningUndefined() {_uniqueStorage()._kerningUndefined = nil}

  var language: TSS_SpecStringArchive {
    get {return _storage._language ?? TSS_SpecStringArchive()}
    set {_uniqueStorage()._language = newValue}
  }
  /// Returns true if `language` has been explicitly set.
  var hasLanguage: Bool {return _storage._language != nil}
  /// Clears the value of `language`. Subsequent reads from it will return its default value.
  mutating func clearLanguage() {_uniqueStorage()._language = nil}

  var languageUndefined: Bool {
    get {return _storage._languageUndefined ?? false}
    set {_uniqueStorage()._languageUndefined = newValue}
  }
  /// Returns true if `languageUndefined` has been explicitly set.
  var hasLanguageUndefined: Bool {return _storage._languageUndefined != nil}
  /// Clears the value of `languageUndefined`. Subsequent reads from it will return its default value.
  mutating func clearLanguageUndefined() {_uniqueStorage()._languageUndefined = nil}

  var ligatures: TSS_SpecIntegerArchive {
    get {return _storage._ligatures ?? TSS_SpecIntegerArchive()}
    set {_uniqueStorage()._ligatures = newValue}
  }
  /// Returns true if `ligatures` has been explicitly set.
  var hasLigatures: Bool {return _storage._ligatures != nil}
  /// Clears the value of `ligatures`. Subsequent reads from it will return its default value.
  mutating func clearLigatures() {_uniqueStorage()._ligatures = nil}

  var ligaturesUndefined: Bool {
    get {return _storage._ligaturesUndefined ?? false}
    set {_uniqueStorage()._ligaturesUndefined = newValue}
  }
  /// Returns true if `ligaturesUndefined` has been explicitly set.
  var hasLigaturesUndefined: Bool {return _storage._ligaturesUndefined != nil}
  /// Clears the value of `ligaturesUndefined`. Subsequent reads from it will return its default value.
  mutating func clearLigaturesUndefined() {_uniqueStorage()._ligaturesUndefined = nil}

  var textShadow: TSD_SpecShadowArchive {
    get {return _storage._textShadow ?? TSD_SpecShadowArchive()}
    set {_uniqueStorage()._textShadow = newValue}
  }
  /// Returns true if `textShadow` has been explicitly set.
  var hasTextShadow: Bool {return _storage._textShadow != nil}
  /// Clears the value of `textShadow`. Subsequent reads from it will return its default value.
  mutating func clearTextShadow() {_uniqueStorage()._textShadow = nil}

  var textShadowUndefined: Bool {
    get {return _storage._textShadowUndefined ?? false}
    set {_uniqueStorage()._textShadowUndefined = newValue}
  }
  /// Returns true if `textShadowUndefined` has been explicitly set.
  var hasTextShadowUndefined: Bool {return _storage._textShadowUndefined != nil}
  /// Clears the value of `textShadowUndefined`. Subsequent reads from it will return its default value.
  mutating func clearTextShadowUndefined() {_uniqueStorage()._textShadowUndefined = nil}

  var strikethruColor: TSS_SpecColorArchive {
    get {return _storage._strikethruColor ?? TSS_SpecColorArchive()}
    set {_uniqueStorage()._strikethruColor = newValue}
  }
  /// Returns true if `strikethruColor` has been explicitly set.
  var hasStrikethruColor: Bool {return _storage._strikethruColor != nil}
  /// Clears the value of `strikethruColor`. Subsequent reads from it will return its default value.
  mutating func clearStrikethruColor() {_uniqueStorage()._strikethruColor = nil}

  var strikethruColorUndefined: Bool {
    get {return _storage._strikethruColorUndefined ?? false}
    set {_uniqueStorage()._strikethruColorUndefined = newValue}
  }
  /// Returns true if `strikethruColorUndefined` has been explicitly set.
  var hasStrikethruColorUndefined: Bool {return _storage._strikethruColorUndefined != nil}
  /// Clears the value of `strikethruColorUndefined`. Subsequent reads from it will return its default value.
  mutating func clearStrikethruColorUndefined() {_uniqueStorage()._strikethruColorUndefined = nil}

  var strikethru: TSS_SpecIntegerArchive {
    get {return _storage._strikethru ?? TSS_SpecIntegerArchive()}
    set {_uniqueStorage()._strikethru = newValue}
  }
  /// Returns true if `strikethru` has been explicitly set.
  var hasStrikethru: Bool {return _storage._strikethru != nil}
  /// Clears the value of `strikethru`. Subsequent reads from it will return its default value.
  mutating func clearStrikethru() {_uniqueStorage()._strikethru = nil}

  var strikethruUndefined: Bool {
    get {return _storage._strikethruUndefined ?? false}
    set {_uniqueStorage()._strikethruUndefined = newValue}
  }
  /// Returns true if `strikethruUndefined` has been explicitly set.
  var hasStrikethruUndefined: Bool {return _storage._strikethruUndefined != nil}
  /// Clears the value of `strikethruUndefined`. Subsequent reads from it will return its default value.
  mutating func clearStrikethruUndefined() {_uniqueStorage()._strikethruUndefined = nil}

  var strikethruWidth: TSS_SpecDoubleArchive {
    get {return _storage._strikethruWidth ?? TSS_SpecDoubleArchive()}
    set {_uniqueStorage()._strikethruWidth = newValue}
  }
  /// Returns true if `strikethruWidth` has been explicitly set.
  var hasStrikethruWidth: Bool {return _storage._strikethruWidth != nil}
  /// Clears the value of `strikethruWidth`. Subsequent reads from it will return its default value.
  mutating func clearStrikethruWidth() {_uniqueStorage()._strikethruWidth = nil}

  var strikethruWidthUndefined: Bool {
    get {return _storage._strikethruWidthUndefined ?? false}
    set {_uniqueStorage()._strikethruWidthUndefined = newValue}
  }
  /// Returns true if `strikethruWidthUndefined` has been explicitly set.
  var hasStrikethruWidthUndefined: Bool {return _storage._strikethruWidthUndefined != nil}
  /// Clears the value of `strikethruWidthUndefined`. Subsequent reads from it will return its default value.
  mutating func clearStrikethruWidthUndefined() {_uniqueStorage()._strikethruWidthUndefined = nil}

  var superscript: TSS_SpecIntegerArchive {
    get {return _storage._superscript ?? TSS_SpecIntegerArchive()}
    set {_uniqueStorage()._superscript = newValue}
  }
  /// Returns true if `superscript` has been explicitly set.
  var hasSuperscript: Bool {return _storage._superscript != nil}
  /// Clears the value of `superscript`. Subsequent reads from it will return its default value.
  mutating func clearSuperscript() {_uniqueStorage()._superscript = nil}

  var superscriptUndefined: Bool {
    get {return _storage._superscriptUndefined ?? false}
    set {_uniqueStorage()._superscriptUndefined = newValue}
  }
  /// Returns true if `superscriptUndefined` has been explicitly set.
  var hasSuperscriptUndefined: Bool {return _storage._superscriptUndefined != nil}
  /// Clears the value of `superscriptUndefined`. Subsequent reads from it will return its default value.
  mutating func clearSuperscriptUndefined() {_uniqueStorage()._superscriptUndefined = nil}

  var textBackground: TSS_SpecColorArchive {
    get {return _storage._textBackground ?? TSS_SpecColorArchive()}
    set {_uniqueStorage()._textBackground = newValue}
  }
  /// Returns true if `textBackground` has been explicitly set.
  var hasTextBackground: Bool {return _storage._textBackground != nil}
  /// Clears the value of `textBackground`. Subsequent reads from it will return its default value.
  mutating func clearTextBackground() {_uniqueStorage()._textBackground = nil}

  var textBackgroundUndefined: Bool {
    get {return _storage._textBackgroundUndefined ?? false}
    set {_uniqueStorage()._textBackgroundUndefined = newValue}
  }
  /// Returns true if `textBackgroundUndefined` has been explicitly set.
  var hasTextBackgroundUndefined: Bool {return _storage._textBackgroundUndefined != nil}
  /// Clears the value of `textBackgroundUndefined`. Subsequent reads from it will return its default value.
  mutating func clearTextBackgroundUndefined() {_uniqueStorage()._textBackgroundUndefined = nil}

  var tracking: TSS_SpecDoubleArchive {
    get {return _storage._tracking ?? TSS_SpecDoubleArchive()}
    set {_uniqueStorage()._tracking = newValue}
  }
  /// Returns true if `tracking` has been explicitly set.
  var hasTracking: Bool {return _storage._tracking != nil}
  /// Clears the value of `tracking`. Subsequent reads from it will return its default value.
  mutating func clearTracking() {_uniqueStorage()._tracking = nil}

  var trackingUndefined: Bool {
    get {return _storage._trackingUndefined ?? false}
    set {_uniqueStorage()._trackingUndefined = newValue}
  }
  /// Returns true if `trackingUndefined` has been explicitly set.
  var hasTrackingUndefined: Bool {return _storage._trackingUndefined != nil}
  /// Clears the value of `trackingUndefined`. Subsequent reads from it will return its default value.
  mutating func clearTrackingUndefined() {_uniqueStorage()._trackingUndefined = nil}

  var underlineColor: TSS_SpecColorArchive {
    get {return _storage._underlineColor ?? TSS_SpecColorArchive()}
    set {_uniqueStorage()._underlineColor = newValue}
  }
  /// Returns true if `underlineColor` has been explicitly set.
  var hasUnderlineColor: Bool {return _storage._underlineColor != nil}
  /// Clears the value of `underlineColor`. Subsequent reads from it will return its default value.
  mutating func clearUnderlineColor() {_uniqueStorage()._underlineColor = nil}

  var underlineColorUndefined: Bool {
    get {return _storage._underlineColorUndefined ?? false}
    set {_uniqueStorage()._underlineColorUndefined = newValue}
  }
  /// Returns true if `underlineColorUndefined` has been explicitly set.
  var hasUnderlineColorUndefined: Bool {return _storage._underlineColorUndefined != nil}
  /// Clears the value of `underlineColorUndefined`. Subsequent reads from it will return its default value.
  mutating func clearUnderlineColorUndefined() {_uniqueStorage()._underlineColorUndefined = nil}

  var underline: TSS_SpecIntegerArchive {
    get {return _storage._underline ?? TSS_SpecIntegerArchive()}
    set {_uniqueStorage()._underline = newValue}
  }
  /// Returns true if `underline` has been explicitly set.
  var hasUnderline: Bool {return _storage._underline != nil}
  /// Clears the value of `underline`. Subsequent reads from it will return its default value.
  mutating func clearUnderline() {_uniqueStorage()._underline = nil}

  var underlineUndefined: Bool {
    get {return _storage._underlineUndefined ?? false}
    set {_uniqueStorage()._underlineUndefined = newValue}
  }
  /// Returns true if `underlineUndefined` has been explicitly set.
  var hasUnderlineUndefined: Bool {return _storage._underlineUndefined != nil}
  /// Clears the value of `underlineUndefined`. Subsequent reads from it will return its default value.
  mutating func clearUnderlineUndefined() {_uniqueStorage()._underlineUndefined = nil}

  var underlineWidth: TSS_SpecDoubleArchive {
    get {return _storage._underlineWidth ?? TSS_SpecDoubleArchive()}
    set {_uniqueStorage()._underlineWidth = newValue}
  }
  /// Returns true if `underlineWidth` has been explicitly set.
  var hasUnderlineWidth: Bool {return _storage._underlineWidth != nil}
  /// Clears the value of `underlineWidth`. Subsequent reads from it will return its default value.
  mutating func clearUnderlineWidth() {_uniqueStorage()._underlineWidth = nil}

  var underlineWidthUndefined: Bool {
    get {return _storage._underlineWidthUndefined ?? false}
    set {_uniqueStorage()._underlineWidthUndefined = newValue}
  }
  /// Returns true if `underlineWidthUndefined` has been explicitly set.
  var hasUnderlineWidthUndefined: Bool {return _storage._underlineWidthUndefined != nil}
  /// Clears the value of `underlineWidthUndefined`. Subsequent reads from it will return its default value.
  mutating func clearUnderlineWidthUndefined() {_uniqueStorage()._underlineWidthUndefined = nil}

  var wordStrikethru: TSS_SpecBoolArchive {
    get {return _storage._wordStrikethru ?? TSS_SpecBoolArchive()}
    set {_uniqueStorage()._wordStrikethru = newValue}
  }
  /// Returns true if `wordStrikethru` has been explicitly set.
  var hasWordStrikethru: Bool {return _storage._wordStrikethru != nil}
  /// Clears the value of `wordStrikethru`. Subsequent reads from it will return its default value.
  mutating func clearWordStrikethru() {_uniqueStorage()._wordStrikethru = nil}

  var wordStrikethruUndefined: Bool {
    get {return _storage._wordStrikethruUndefined ?? false}
    set {_uniqueStorage()._wordStrikethruUndefined = newValue}
  }
  /// Returns true if `wordStrikethruUndefined` has been explicitly set.
  var hasWordStrikethruUndefined: Bool {return _storage._wordStrikethruUndefined != nil}
  /// Clears the value of `wordStrikethruUndefined`. Subsequent reads from it will return its default value.
  mutating func clearWordStrikethruUndefined() {_uniqueStorage()._wordStrikethruUndefined = nil}

  var wordUnderline: TSS_SpecBoolArchive {
    get {return _storage._wordUnderline ?? TSS_SpecBoolArchive()}
    set {_uniqueStorage()._wordUnderline = newValue}
  }
  /// Returns true if `wordUnderline` has been explicitly set.
  var hasWordUnderline: Bool {return _storage._wordUnderline != nil}
  /// Clears the value of `wordUnderline`. Subsequent reads from it will return its default value.
  mutating func clearWordUnderline() {_uniqueStorage()._wordUnderline = nil}

  var wordUnderlineUndefined: Bool {
    get {return _storage._wordUnderlineUndefined ?? false}
    set {_uniqueStorage()._wordUnderlineUndefined = newValue}
  }
  /// Returns true if `wordUnderlineUndefined` has been explicitly set.
  var hasWordUnderlineUndefined: Bool {return _storage._wordUnderlineUndefined != nil}
  /// Clears the value of `wordUnderlineUndefined`. Subsequent reads from it will return its default value.
  mutating func clearWordUnderlineUndefined() {_uniqueStorage()._wordUnderlineUndefined = nil}

  var writingDirection: TSS_SpecIntegerArchive {
    get {return _storage._writingDirection ?? TSS_SpecIntegerArchive()}
    set {_uniqueStorage()._writingDirection = newValue}
  }
  /// Returns true if `writingDirection` has been explicitly set.
  var hasWritingDirection: Bool {return _storage._writingDirection != nil}
  /// Clears the value of `writingDirection`. Subsequent reads from it will return its default value.
  mutating func clearWritingDirection() {_uniqueStorage()._writingDirection = nil}

  var writingDirectionUndefined: Bool {
    get {return _storage._writingDirectionUndefined ?? false}
    set {_uniqueStorage()._writingDirectionUndefined = newValue}
  }
  /// Returns true if `writingDirectionUndefined` has been explicitly set.
  var hasWritingDirectionUndefined: Bool {return _storage._writingDirectionUndefined != nil}
  /// Clears the value of `writingDirectionUndefined`. Subsequent reads from it will return its default value.
  mutating func clearWritingDirectionUndefined() {_uniqueStorage()._writingDirectionUndefined = nil}

  var isNamedPointSize: TSS_SpecBoolArchive {
    get {return _storage._isNamedPointSize ?? TSS_SpecBoolArchive()}
    set {_uniqueStorage()._isNamedPointSize = newValue}
  }
  /// Returns true if `isNamedPointSize` has been explicitly set.
  var hasIsNamedPointSize: Bool {return _storage._isNamedPointSize != nil}
  /// Clears the value of `isNamedPointSize`. Subsequent reads from it will return its default value.
  mutating func clearIsNamedPointSize() {_uniqueStorage()._isNamedPointSize = nil}

  var isNamedPointSizeUndefined: Bool {
    get {return _storage._isNamedPointSizeUndefined ?? false}
    set {_uniqueStorage()._isNamedPointSizeUndefined = newValue}
  }
  /// Returns true if `isNamedPointSizeUndefined` has been explicitly set.
  var hasIsNamedPointSizeUndefined: Bool {return _storage._isNamedPointSizeUndefined != nil}
  /// Clears the value of `isNamedPointSizeUndefined`. Subsequent reads from it will return its default value.
  mutating func clearIsNamedPointSizeUndefined() {_uniqueStorage()._isNamedPointSizeUndefined = nil}

  var capitalizationUsesLinguistics: TSS_SpecBoolArchive {
    get {return _storage._capitalizationUsesLinguistics ?? TSS_SpecBoolArchive()}
    set {_uniqueStorage()._capitalizationUsesLinguistics = newValue}
  }
  /// Returns true if `capitalizationUsesLinguistics` has been explicitly set.
  var hasCapitalizationUsesLinguistics: Bool {return _storage._capitalizationUsesLinguistics != nil}
  /// Clears the value of `capitalizationUsesLinguistics`. Subsequent reads from it will return its default value.
  mutating func clearCapitalizationUsesLinguistics() {_uniqueStorage()._capitalizationUsesLinguistics = nil}

  var capitalizationUsesLinguisticsUndefined: Bool {
    get {return _storage._capitalizationUsesLinguisticsUndefined ?? false}
    set {_uniqueStorage()._capitalizationUsesLinguisticsUndefined = newValue}
  }
  /// Returns true if `capitalizationUsesLinguisticsUndefined` has been explicitly set.
  var hasCapitalizationUsesLinguisticsUndefined: Bool {return _storage._capitalizationUsesLinguisticsUndefined != nil}
  /// Clears the value of `capitalizationUsesLinguisticsUndefined`. Subsequent reads from it will return its default value.
  mutating func clearCapitalizationUsesLinguisticsUndefined() {_uniqueStorage()._capitalizationUsesLinguisticsUndefined = nil}

  var characterStroke: TSD_SpecStrokeArchive {
    get {return _storage._characterStroke ?? TSD_SpecStrokeArchive()}
    set {_uniqueStorage()._characterStroke = newValue}
  }
  /// Returns true if `characterStroke` has been explicitly set.
  var hasCharacterStroke: Bool {return _storage._characterStroke != nil}
  /// Clears the value of `characterStroke`. Subsequent reads from it will return its default value.
  mutating func clearCharacterStroke() {_uniqueStorage()._characterStroke = nil}

  var characterStrokeUndefined: Bool {
    get {return _storage._characterStrokeUndefined ?? false}
    set {_uniqueStorage()._characterStrokeUndefined = newValue}
  }
  /// Returns true if `characterStrokeUndefined` has been explicitly set.
  var hasCharacterStrokeUndefined: Bool {return _storage._characterStrokeUndefined != nil}
  /// Clears the value of `characterStrokeUndefined`. Subsequent reads from it will return its default value.
  mutating func clearCharacterStrokeUndefined() {_uniqueStorage()._characterStrokeUndefined = nil}

  var characterFill: TSD_SpecFillArchive {
    get {return _storage._characterFill ?? TSD_SpecFillArchive()}
    set {_uniqueStorage()._characterFill = newValue}
  }
  /// Returns true if `characterFill` has been explicitly set.
  var hasCharacterFill: Bool {return _storage._characterFill != nil}
  /// Clears the value of `characterFill`. Subsequent reads from it will return its default value.
  mutating func clearCharacterFill() {_uniqueStorage()._characterFill = nil}

  var characterFillUndefined: Bool {
    get {return _storage._characterFillUndefined ?? false}
    set {_uniqueStorage()._characterFillUndefined = newValue}
  }
  /// Returns true if `characterFillUndefined` has been explicitly set.
  var hasCharacterFillUndefined: Bool {return _storage._characterFillUndefined != nil}
  /// Clears the value of `characterFillUndefined`. Subsequent reads from it will return its default value.
  mutating func clearCharacterFillUndefined() {_uniqueStorage()._characterFillUndefined = nil}

  var characterFillShouldFillTextContainer: TSS_SpecBoolArchive {
    get {return _storage._characterFillShouldFillTextContainer ?? TSS_SpecBoolArchive()}
    set {_uniqueStorage()._characterFillShouldFillTextContainer = newValue}
  }
  /// Returns true if `characterFillShouldFillTextContainer` has been explicitly set.
  var hasCharacterFillShouldFillTextContainer: Bool {return _storage._characterFillShouldFillTextContainer != nil}
  /// Clears the value of `characterFillShouldFillTextContainer`. Subsequent reads from it will return its default value.
  mutating func clearCharacterFillShouldFillTextContainer() {_uniqueStorage()._characterFillShouldFillTextContainer = nil}

  var characterFillShouldFillTextContainerUndefined: Bool {
    get {return _storage._characterFillShouldFillTextContainerUndefined ?? false}
    set {_uniqueStorage()._characterFillShouldFillTextContainerUndefined = newValue}
  }
  /// Returns true if `characterFillShouldFillTextContainerUndefined` has been explicitly set.
  var hasCharacterFillShouldFillTextContainerUndefined: Bool {return _storage._characterFillShouldFillTextContainerUndefined != nil}
  /// Clears the value of `characterFillShouldFillTextContainerUndefined`. Subsequent reads from it will return its default value.
  mutating func clearCharacterFillShouldFillTextContainerUndefined() {_uniqueStorage()._characterFillShouldFillTextContainerUndefined = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

struct TSWP_ColumnStylePropertyChangeSetArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var columns: TSWP_SpecColumnsArchive {
    get {return _storage._columns ?? TSWP_SpecColumnsArchive()}
    set {_uniqueStorage()._columns = newValue}
  }
  /// Returns true if `columns` has been explicitly set.
  var hasColumns: Bool {return _storage._columns != nil}
  /// Clears the value of `columns`. Subsequent reads from it will return its default value.
  mutating func clearColumns() {_uniqueStorage()._columns = nil}

  var columnsUndefined: Bool {
    get {return _storage._columnsUndefined ?? false}
    set {_uniqueStorage()._columnsUndefined = newValue}
  }
  /// Returns true if `columnsUndefined` has been explicitly set.
  var hasColumnsUndefined: Bool {return _storage._columnsUndefined != nil}
  /// Clears the value of `columnsUndefined`. Subsequent reads from it will return its default value.
  mutating func clearColumnsUndefined() {_uniqueStorage()._columnsUndefined = nil}

  var continuous: TSS_SpecBoolArchive {
    get {return _storage._continuous ?? TSS_SpecBoolArchive()}
    set {_uniqueStorage()._continuous = newValue}
  }
  /// Returns true if `continuous` has been explicitly set.
  var hasContinuous: Bool {return _storage._continuous != nil}
  /// Clears the value of `continuous`. Subsequent reads from it will return its default value.
  mutating func clearContinuous() {_uniqueStorage()._continuous = nil}

  var continuousUndefined: Bool {
    get {return _storage._continuousUndefined ?? false}
    set {_uniqueStorage()._continuousUndefined = newValue}
  }
  /// Returns true if `continuousUndefined` has been explicitly set.
  var hasContinuousUndefined: Bool {return _storage._continuousUndefined != nil}
  /// Clears the value of `continuousUndefined`. Subsequent reads from it will return its default value.
  mutating func clearContinuousUndefined() {_uniqueStorage()._continuousUndefined = nil}

  var margins: TSWP_SpecPaddingArchive {
    get {return _storage._margins ?? TSWP_SpecPaddingArchive()}
    set {_uniqueStorage()._margins = newValue}
  }
  /// Returns true if `margins` has been explicitly set.
  var hasMargins: Bool {return _storage._margins != nil}
  /// Clears the value of `margins`. Subsequent reads from it will return its default value.
  mutating func clearMargins() {_uniqueStorage()._margins = nil}

  var marginsUndefined: Bool {
    get {return _storage._marginsUndefined ?? false}
    set {_uniqueStorage()._marginsUndefined = newValue}
  }
  /// Returns true if `marginsUndefined` has been explicitly set.
  var hasMarginsUndefined: Bool {return _storage._marginsUndefined != nil}
  /// Clears the value of `marginsUndefined`. Subsequent reads from it will return its default value.
  mutating func clearMarginsUndefined() {_uniqueStorage()._marginsUndefined = nil}

  var minHorizontalInset: TSS_SpecDoubleArchive {
    get {return _storage._minHorizontalInset ?? TSS_SpecDoubleArchive()}
    set {_uniqueStorage()._minHorizontalInset = newValue}
  }
  /// Returns true if `minHorizontalInset` has been explicitly set.
  var hasMinHorizontalInset: Bool {return _storage._minHorizontalInset != nil}
  /// Clears the value of `minHorizontalInset`. Subsequent reads from it will return its default value.
  mutating func clearMinHorizontalInset() {_uniqueStorage()._minHorizontalInset = nil}

  var minHorizontalInsetUndefined: Bool {
    get {return _storage._minHorizontalInsetUndefined ?? false}
    set {_uniqueStorage()._minHorizontalInsetUndefined = newValue}
  }
  /// Returns true if `minHorizontalInsetUndefined` has been explicitly set.
  var hasMinHorizontalInsetUndefined: Bool {return _storage._minHorizontalInsetUndefined != nil}
  /// Clears the value of `minHorizontalInsetUndefined`. Subsequent reads from it will return its default value.
  mutating func clearMinHorizontalInsetUndefined() {_uniqueStorage()._minHorizontalInsetUndefined = nil}

  var padding: TSWP_SpecPaddingArchive {
    get {return _storage._padding ?? TSWP_SpecPaddingArchive()}
    set {_uniqueStorage()._padding = newValue}
  }
  /// Returns true if `padding` has been explicitly set.
  var hasPadding: Bool {return _storage._padding != nil}
  /// Clears the value of `padding`. Subsequent reads from it will return its default value.
  mutating func clearPadding() {_uniqueStorage()._padding = nil}

  var paddingUndefined: Bool {
    get {return _storage._paddingUndefined ?? false}
    set {_uniqueStorage()._paddingUndefined = newValue}
  }
  /// Returns true if `paddingUndefined` has been explicitly set.
  var hasPaddingUndefined: Bool {return _storage._paddingUndefined != nil}
  /// Clears the value of `paddingUndefined`. Subsequent reads from it will return its default value.
  mutating func clearPaddingUndefined() {_uniqueStorage()._paddingUndefined = nil}

  var shrinkToFit: TSS_SpecBoolArchive {
    get {return _storage._shrinkToFit ?? TSS_SpecBoolArchive()}
    set {_uniqueStorage()._shrinkToFit = newValue}
  }
  /// Returns true if `shrinkToFit` has been explicitly set.
  var hasShrinkToFit: Bool {return _storage._shrinkToFit != nil}
  /// Clears the value of `shrinkToFit`. Subsequent reads from it will return its default value.
  mutating func clearShrinkToFit() {_uniqueStorage()._shrinkToFit = nil}

  var shrinkToFitUndefined: Bool {
    get {return _storage._shrinkToFitUndefined ?? false}
    set {_uniqueStorage()._shrinkToFitUndefined = newValue}
  }
  /// Returns true if `shrinkToFitUndefined` has been explicitly set.
  var hasShrinkToFitUndefined: Bool {return _storage._shrinkToFitUndefined != nil}
  /// Clears the value of `shrinkToFitUndefined`. Subsequent reads from it will return its default value.
  mutating func clearShrinkToFitUndefined() {_uniqueStorage()._shrinkToFitUndefined = nil}

  var verticalAlignment: TSS_SpecIntegerArchive {
    get {return _storage._verticalAlignment ?? TSS_SpecIntegerArchive()}
    set {_uniqueStorage()._verticalAlignment = newValue}
  }
  /// Returns true if `verticalAlignment` has been explicitly set.
  var hasVerticalAlignment: Bool {return _storage._verticalAlignment != nil}
  /// Clears the value of `verticalAlignment`. Subsequent reads from it will return its default value.
  mutating func clearVerticalAlignment() {_uniqueStorage()._verticalAlignment = nil}

  var verticalAlignmentUndefined: Bool {
    get {return _storage._verticalAlignmentUndefined ?? false}
    set {_uniqueStorage()._verticalAlignmentUndefined = newValue}
  }
  /// Returns true if `verticalAlignmentUndefined` has been explicitly set.
  var hasVerticalAlignmentUndefined: Bool {return _storage._verticalAlignmentUndefined != nil}
  /// Clears the value of `verticalAlignmentUndefined`. Subsequent reads from it will return its default value.
  mutating func clearVerticalAlignmentUndefined() {_uniqueStorage()._verticalAlignmentUndefined = nil}

  var verticalText: TSS_SpecBoolArchive {
    get {return _storage._verticalText ?? TSS_SpecBoolArchive()}
    set {_uniqueStorage()._verticalText = newValue}
  }
  /// Returns true if `verticalText` has been explicitly set.
  var hasVerticalText: Bool {return _storage._verticalText != nil}
  /// Clears the value of `verticalText`. Subsequent reads from it will return its default value.
  mutating func clearVerticalText() {_uniqueStorage()._verticalText = nil}

  var verticalTextUndefined: Bool {
    get {return _storage._verticalTextUndefined ?? false}
    set {_uniqueStorage()._verticalTextUndefined = newValue}
  }
  /// Returns true if `verticalTextUndefined` has been explicitly set.
  var hasVerticalTextUndefined: Bool {return _storage._verticalTextUndefined != nil}
  /// Clears the value of `verticalTextUndefined`. Subsequent reads from it will return its default value.
  mutating func clearVerticalTextUndefined() {_uniqueStorage()._verticalTextUndefined = nil}

  var writingDirection: TSS_SpecIntegerArchive {
    get {return _storage._writingDirection ?? TSS_SpecIntegerArchive()}
    set {_uniqueStorage()._writingDirection = newValue}
  }
  /// Returns true if `writingDirection` has been explicitly set.
  var hasWritingDirection: Bool {return _storage._writingDirection != nil}
  /// Clears the value of `writingDirection`. Subsequent reads from it will return its default value.
  mutating func clearWritingDirection() {_uniqueStorage()._writingDirection = nil}

  var writingDirectionUndefined: Bool {
    get {return _storage._writingDirectionUndefined ?? false}
    set {_uniqueStorage()._writingDirectionUndefined = newValue}
  }
  /// Returns true if `writingDirectionUndefined` has been explicitly set.
  var hasWritingDirectionUndefined: Bool {return _storage._writingDirectionUndefined != nil}
  /// Clears the value of `writingDirectionUndefined`. Subsequent reads from it will return its default value.
  mutating func clearWritingDirectionUndefined() {_uniqueStorage()._writingDirectionUndefined = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

struct TSWP_DropCapSpecificStylePropertyChangeSetArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var dropCapModel: TSWP_SpecDropCapArchive {
    get {return _dropCapModel ?? TSWP_SpecDropCapArchive()}
    set {_dropCapModel = newValue}
  }
  /// Returns true if `dropCapModel` has been explicitly set.
  var hasDropCapModel: Bool {return self._dropCapModel != nil}
  /// Clears the value of `dropCapModel`. Subsequent reads from it will return its default value.
  mutating func clearDropCapModel() {self._dropCapModel = nil}

  var dropCapModelUndefined: Bool {
    get {return _dropCapModelUndefined ?? false}
    set {_dropCapModelUndefined = newValue}
  }
  /// Returns true if `dropCapModelUndefined` has been explicitly set.
  var hasDropCapModelUndefined: Bool {return self._dropCapModelUndefined != nil}
  /// Clears the value of `dropCapModelUndefined`. Subsequent reads from it will return its default value.
  mutating func clearDropCapModelUndefined() {self._dropCapModelUndefined = nil}

  var dropCapShapeStroke: TSD_SpecStrokeArchive {
    get {return _dropCapShapeStroke ?? TSD_SpecStrokeArchive()}
    set {_dropCapShapeStroke = newValue}
  }
  /// Returns true if `dropCapShapeStroke` has been explicitly set.
  var hasDropCapShapeStroke: Bool {return self._dropCapShapeStroke != nil}
  /// Clears the value of `dropCapShapeStroke`. Subsequent reads from it will return its default value.
  mutating func clearDropCapShapeStroke() {self._dropCapShapeStroke = nil}

  var dropCapShapeStrokeUndefined: Bool {
    get {return _dropCapShapeStrokeUndefined ?? false}
    set {_dropCapShapeStrokeUndefined = newValue}
  }
  /// Returns true if `dropCapShapeStrokeUndefined` has been explicitly set.
  var hasDropCapShapeStrokeUndefined: Bool {return self._dropCapShapeStrokeUndefined != nil}
  /// Clears the value of `dropCapShapeStrokeUndefined`. Subsequent reads from it will return its default value.
  mutating func clearDropCapShapeStrokeUndefined() {self._dropCapShapeStrokeUndefined = nil}

  var dropCapShapeFill: TSD_SpecFillArchive {
    get {return _dropCapShapeFill ?? TSD_SpecFillArchive()}
    set {_dropCapShapeFill = newValue}
  }
  /// Returns true if `dropCapShapeFill` has been explicitly set.
  var hasDropCapShapeFill: Bool {return self._dropCapShapeFill != nil}
  /// Clears the value of `dropCapShapeFill`. Subsequent reads from it will return its default value.
  mutating func clearDropCapShapeFill() {self._dropCapShapeFill = nil}

  var dropCapShapeFillUndefined: Bool {
    get {return _dropCapShapeFillUndefined ?? false}
    set {_dropCapShapeFillUndefined = newValue}
  }
  /// Returns true if `dropCapShapeFillUndefined` has been explicitly set.
  var hasDropCapShapeFillUndefined: Bool {return self._dropCapShapeFillUndefined != nil}
  /// Clears the value of `dropCapShapeFillUndefined`. Subsequent reads from it will return its default value.
  mutating func clearDropCapShapeFillUndefined() {self._dropCapShapeFillUndefined = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _dropCapModel: TSWP_SpecDropCapArchive? = nil
  fileprivate var _dropCapModelUndefined: Bool? = nil
  fileprivate var _dropCapShapeStroke: TSD_SpecStrokeArchive? = nil
  fileprivate var _dropCapShapeStrokeUndefined: Bool? = nil
  fileprivate var _dropCapShapeFill: TSD_SpecFillArchive? = nil
  fileprivate var _dropCapShapeFillUndefined: Bool? = nil
}

struct TSWP_DropCapStylePropertyChangeSetArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var `super`: TSWP_CharacterStylePropertyChangeSetArchive {
    get {return _super ?? TSWP_CharacterStylePropertyChangeSetArchive()}
    set {_super = newValue}
  }
  /// Returns true if ``super`` has been explicitly set.
  var hasSuper: Bool {return self._super != nil}
  /// Clears the value of ``super``. Subsequent reads from it will return its default value.
  mutating func clearSuper() {self._super = nil}

  var dropCapModel: TSWP_SpecDropCapArchive {
    get {return _dropCapModel ?? TSWP_SpecDropCapArchive()}
    set {_dropCapModel = newValue}
  }
  /// Returns true if `dropCapModel` has been explicitly set.
  var hasDropCapModel: Bool {return self._dropCapModel != nil}
  /// Clears the value of `dropCapModel`. Subsequent reads from it will return its default value.
  mutating func clearDropCapModel() {self._dropCapModel = nil}

  var dropCapModelUndefined: Bool {
    get {return _dropCapModelUndefined ?? false}
    set {_dropCapModelUndefined = newValue}
  }
  /// Returns true if `dropCapModelUndefined` has been explicitly set.
  var hasDropCapModelUndefined: Bool {return self._dropCapModelUndefined != nil}
  /// Clears the value of `dropCapModelUndefined`. Subsequent reads from it will return its default value.
  mutating func clearDropCapModelUndefined() {self._dropCapModelUndefined = nil}

  var dropCapShapeStroke: TSD_SpecStrokeArchive {
    get {return _dropCapShapeStroke ?? TSD_SpecStrokeArchive()}
    set {_dropCapShapeStroke = newValue}
  }
  /// Returns true if `dropCapShapeStroke` has been explicitly set.
  var hasDropCapShapeStroke: Bool {return self._dropCapShapeStroke != nil}
  /// Clears the value of `dropCapShapeStroke`. Subsequent reads from it will return its default value.
  mutating func clearDropCapShapeStroke() {self._dropCapShapeStroke = nil}

  var dropCapShapeStrokeUndefined: Bool {
    get {return _dropCapShapeStrokeUndefined ?? false}
    set {_dropCapShapeStrokeUndefined = newValue}
  }
  /// Returns true if `dropCapShapeStrokeUndefined` has been explicitly set.
  var hasDropCapShapeStrokeUndefined: Bool {return self._dropCapShapeStrokeUndefined != nil}
  /// Clears the value of `dropCapShapeStrokeUndefined`. Subsequent reads from it will return its default value.
  mutating func clearDropCapShapeStrokeUndefined() {self._dropCapShapeStrokeUndefined = nil}

  var dropCapShapeFill: TSD_SpecFillArchive {
    get {return _dropCapShapeFill ?? TSD_SpecFillArchive()}
    set {_dropCapShapeFill = newValue}
  }
  /// Returns true if `dropCapShapeFill` has been explicitly set.
  var hasDropCapShapeFill: Bool {return self._dropCapShapeFill != nil}
  /// Clears the value of `dropCapShapeFill`. Subsequent reads from it will return its default value.
  mutating func clearDropCapShapeFill() {self._dropCapShapeFill = nil}

  var dropCapShapeFillUndefined: Bool {
    get {return _dropCapShapeFillUndefined ?? false}
    set {_dropCapShapeFillUndefined = newValue}
  }
  /// Returns true if `dropCapShapeFillUndefined` has been explicitly set.
  var hasDropCapShapeFillUndefined: Bool {return self._dropCapShapeFillUndefined != nil}
  /// Clears the value of `dropCapShapeFillUndefined`. Subsequent reads from it will return its default value.
  mutating func clearDropCapShapeFillUndefined() {self._dropCapShapeFillUndefined = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _super: TSWP_CharacterStylePropertyChangeSetArchive? = nil
  fileprivate var _dropCapModel: TSWP_SpecDropCapArchive? = nil
  fileprivate var _dropCapModelUndefined: Bool? = nil
  fileprivate var _dropCapShapeStroke: TSD_SpecStrokeArchive? = nil
  fileprivate var _dropCapShapeStrokeUndefined: Bool? = nil
  fileprivate var _dropCapShapeFill: TSD_SpecFillArchive? = nil
  fileprivate var _dropCapShapeFillUndefined: Bool? = nil
}

struct TSWP_ListStylePropertyChangeSetArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var listFontColor: TSS_SpecColorArchive {
    get {return _storage._listFontColor ?? TSS_SpecColorArchive()}
    set {_uniqueStorage()._listFontColor = newValue}
  }
  /// Returns true if `listFontColor` has been explicitly set.
  var hasListFontColor: Bool {return _storage._listFontColor != nil}
  /// Clears the value of `listFontColor`. Subsequent reads from it will return its default value.
  mutating func clearListFontColor() {_uniqueStorage()._listFontColor = nil}

  var listFontColorUndefined: Bool {
    get {return _storage._listFontColorUndefined ?? false}
    set {_uniqueStorage()._listFontColorUndefined = newValue}
  }
  /// Returns true if `listFontColorUndefined` has been explicitly set.
  var hasListFontColorUndefined: Bool {return _storage._listFontColorUndefined != nil}
  /// Clears the value of `listFontColorUndefined`. Subsequent reads from it will return its default value.
  mutating func clearListFontColorUndefined() {_uniqueStorage()._listFontColorUndefined = nil}

  var fontName: TSS_SpecStringArchive {
    get {return _storage._fontName ?? TSS_SpecStringArchive()}
    set {_uniqueStorage()._fontName = newValue}
  }
  /// Returns true if `fontName` has been explicitly set.
  var hasFontName: Bool {return _storage._fontName != nil}
  /// Clears the value of `fontName`. Subsequent reads from it will return its default value.
  mutating func clearFontName() {_uniqueStorage()._fontName = nil}

  var fontNameUndefined: Bool {
    get {return _storage._fontNameUndefined ?? false}
    set {_uniqueStorage()._fontNameUndefined = newValue}
  }
  /// Returns true if `fontNameUndefined` has been explicitly set.
  var hasFontNameUndefined: Bool {return _storage._fontNameUndefined != nil}
  /// Clears the value of `fontNameUndefined`. Subsequent reads from it will return its default value.
  mutating func clearFontNameUndefined() {_uniqueStorage()._fontNameUndefined = nil}

  var listClassicTextIndentArray: TSWP_SpecListStyleFloatArrayArchive {
    get {return _storage._listClassicTextIndentArray ?? TSWP_SpecListStyleFloatArrayArchive()}
    set {_uniqueStorage()._listClassicTextIndentArray = newValue}
  }
  /// Returns true if `listClassicTextIndentArray` has been explicitly set.
  var hasListClassicTextIndentArray: Bool {return _storage._listClassicTextIndentArray != nil}
  /// Clears the value of `listClassicTextIndentArray`. Subsequent reads from it will return its default value.
  mutating func clearListClassicTextIndentArray() {_uniqueStorage()._listClassicTextIndentArray = nil}

  var listClassicTextIndentArrayUndefined: Bool {
    get {return _storage._listClassicTextIndentArrayUndefined ?? false}
    set {_uniqueStorage()._listClassicTextIndentArrayUndefined = newValue}
  }
  /// Returns true if `listClassicTextIndentArrayUndefined` has been explicitly set.
  var hasListClassicTextIndentArrayUndefined: Bool {return _storage._listClassicTextIndentArrayUndefined != nil}
  /// Clears the value of `listClassicTextIndentArrayUndefined`. Subsequent reads from it will return its default value.
  mutating func clearListClassicTextIndentArrayUndefined() {_uniqueStorage()._listClassicTextIndentArrayUndefined = nil}

  var listLabelGeometryArray: TSWP_SpecListStyleListLabelGeometryArrayArchive {
    get {return _storage._listLabelGeometryArray ?? TSWP_SpecListStyleListLabelGeometryArrayArchive()}
    set {_uniqueStorage()._listLabelGeometryArray = newValue}
  }
  /// Returns true if `listLabelGeometryArray` has been explicitly set.
  var hasListLabelGeometryArray: Bool {return _storage._listLabelGeometryArray != nil}
  /// Clears the value of `listLabelGeometryArray`. Subsequent reads from it will return its default value.
  mutating func clearListLabelGeometryArray() {_uniqueStorage()._listLabelGeometryArray = nil}

  var listLabelGeometryArrayUndefined: Bool {
    get {return _storage._listLabelGeometryArrayUndefined ?? false}
    set {_uniqueStorage()._listLabelGeometryArrayUndefined = newValue}
  }
  /// Returns true if `listLabelGeometryArrayUndefined` has been explicitly set.
  var hasListLabelGeometryArrayUndefined: Bool {return _storage._listLabelGeometryArrayUndefined != nil}
  /// Clears the value of `listLabelGeometryArrayUndefined`. Subsequent reads from it will return its default value.
  mutating func clearListLabelGeometryArrayUndefined() {_uniqueStorage()._listLabelGeometryArrayUndefined = nil}

  var listLabelImageDataArray: TSWP_SpecListStyleImageDataArrayArchive {
    get {return _storage._listLabelImageDataArray ?? TSWP_SpecListStyleImageDataArrayArchive()}
    set {_uniqueStorage()._listLabelImageDataArray = newValue}
  }
  /// Returns true if `listLabelImageDataArray` has been explicitly set.
  var hasListLabelImageDataArray: Bool {return _storage._listLabelImageDataArray != nil}
  /// Clears the value of `listLabelImageDataArray`. Subsequent reads from it will return its default value.
  mutating func clearListLabelImageDataArray() {_uniqueStorage()._listLabelImageDataArray = nil}

  var listLabelImageDataArrayUndefined: Bool {
    get {return _storage._listLabelImageDataArrayUndefined ?? false}
    set {_uniqueStorage()._listLabelImageDataArrayUndefined = newValue}
  }
  /// Returns true if `listLabelImageDataArrayUndefined` has been explicitly set.
  var hasListLabelImageDataArrayUndefined: Bool {return _storage._listLabelImageDataArrayUndefined != nil}
  /// Clears the value of `listLabelImageDataArrayUndefined`. Subsequent reads from it will return its default value.
  mutating func clearListLabelImageDataArrayUndefined() {_uniqueStorage()._listLabelImageDataArrayUndefined = nil}

  var listLabelIndentArray: TSWP_SpecListStyleFloatArrayArchive {
    get {return _storage._listLabelIndentArray ?? TSWP_SpecListStyleFloatArrayArchive()}
    set {_uniqueStorage()._listLabelIndentArray = newValue}
  }
  /// Returns true if `listLabelIndentArray` has been explicitly set.
  var hasListLabelIndentArray: Bool {return _storage._listLabelIndentArray != nil}
  /// Clears the value of `listLabelIndentArray`. Subsequent reads from it will return its default value.
  mutating func clearListLabelIndentArray() {_uniqueStorage()._listLabelIndentArray = nil}

  var listLabelIndentArrayUndefined: Bool {
    get {return _storage._listLabelIndentArrayUndefined ?? false}
    set {_uniqueStorage()._listLabelIndentArrayUndefined = newValue}
  }
  /// Returns true if `listLabelIndentArrayUndefined` has been explicitly set.
  var hasListLabelIndentArrayUndefined: Bool {return _storage._listLabelIndentArrayUndefined != nil}
  /// Clears the value of `listLabelIndentArrayUndefined`. Subsequent reads from it will return its default value.
  mutating func clearListLabelIndentArrayUndefined() {_uniqueStorage()._listLabelIndentArrayUndefined = nil}

  var listLabelNumberArray: TSWP_SpecListStyleListNumberTypeArrayArchive {
    get {return _storage._listLabelNumberArray ?? TSWP_SpecListStyleListNumberTypeArrayArchive()}
    set {_uniqueStorage()._listLabelNumberArray = newValue}
  }
  /// Returns true if `listLabelNumberArray` has been explicitly set.
  var hasListLabelNumberArray: Bool {return _storage._listLabelNumberArray != nil}
  /// Clears the value of `listLabelNumberArray`. Subsequent reads from it will return its default value.
  mutating func clearListLabelNumberArray() {_uniqueStorage()._listLabelNumberArray = nil}

  var listLabelNumberArrayUndefined: Bool {
    get {return _storage._listLabelNumberArrayUndefined ?? false}
    set {_uniqueStorage()._listLabelNumberArrayUndefined = newValue}
  }
  /// Returns true if `listLabelNumberArrayUndefined` has been explicitly set.
  var hasListLabelNumberArrayUndefined: Bool {return _storage._listLabelNumberArrayUndefined != nil}
  /// Clears the value of `listLabelNumberArrayUndefined`. Subsequent reads from it will return its default value.
  mutating func clearListLabelNumberArrayUndefined() {_uniqueStorage()._listLabelNumberArrayUndefined = nil}

  var listLabelTieredNumberArray: TSWP_SpecListStyleBoolArrayArchive {
    get {return _storage._listLabelTieredNumberArray ?? TSWP_SpecListStyleBoolArrayArchive()}
    set {_uniqueStorage()._listLabelTieredNumberArray = newValue}
  }
  /// Returns true if `listLabelTieredNumberArray` has been explicitly set.
  var hasListLabelTieredNumberArray: Bool {return _storage._listLabelTieredNumberArray != nil}
  /// Clears the value of `listLabelTieredNumberArray`. Subsequent reads from it will return its default value.
  mutating func clearListLabelTieredNumberArray() {_uniqueStorage()._listLabelTieredNumberArray = nil}

  var listLabelTieredNumberArrayUndefined: Bool {
    get {return _storage._listLabelTieredNumberArrayUndefined ?? false}
    set {_uniqueStorage()._listLabelTieredNumberArrayUndefined = newValue}
  }
  /// Returns true if `listLabelTieredNumberArrayUndefined` has been explicitly set.
  var hasListLabelTieredNumberArrayUndefined: Bool {return _storage._listLabelTieredNumberArrayUndefined != nil}
  /// Clears the value of `listLabelTieredNumberArrayUndefined`. Subsequent reads from it will return its default value.
  mutating func clearListLabelTieredNumberArrayUndefined() {_uniqueStorage()._listLabelTieredNumberArrayUndefined = nil}

  var textShadow: TSD_SpecShadowArchive {
    get {return _storage._textShadow ?? TSD_SpecShadowArchive()}
    set {_uniqueStorage()._textShadow = newValue}
  }
  /// Returns true if `textShadow` has been explicitly set.
  var hasTextShadow: Bool {return _storage._textShadow != nil}
  /// Clears the value of `textShadow`. Subsequent reads from it will return its default value.
  mutating func clearTextShadow() {_uniqueStorage()._textShadow = nil}

  var textShadowUndefined: Bool {
    get {return _storage._textShadowUndefined ?? false}
    set {_uniqueStorage()._textShadowUndefined = newValue}
  }
  /// Returns true if `textShadowUndefined` has been explicitly set.
  var hasTextShadowUndefined: Bool {return _storage._textShadowUndefined != nil}
  /// Clears the value of `textShadowUndefined`. Subsequent reads from it will return its default value.
  mutating func clearTextShadowUndefined() {_uniqueStorage()._textShadowUndefined = nil}

  var listLabelStringArray: TSWP_SpecListStyleStringArrayArchive {
    get {return _storage._listLabelStringArray ?? TSWP_SpecListStyleStringArrayArchive()}
    set {_uniqueStorage()._listLabelStringArray = newValue}
  }
  /// Returns true if `listLabelStringArray` has been explicitly set.
  var hasListLabelStringArray: Bool {return _storage._listLabelStringArray != nil}
  /// Clears the value of `listLabelStringArray`. Subsequent reads from it will return its default value.
  mutating func clearListLabelStringArray() {_uniqueStorage()._listLabelStringArray = nil}

  var listLabelStringArrayUndefined: Bool {
    get {return _storage._listLabelStringArrayUndefined ?? false}
    set {_uniqueStorage()._listLabelStringArrayUndefined = newValue}
  }
  /// Returns true if `listLabelStringArrayUndefined` has been explicitly set.
  var hasListLabelStringArrayUndefined: Bool {return _storage._listLabelStringArrayUndefined != nil}
  /// Clears the value of `listLabelStringArrayUndefined`. Subsequent reads from it will return its default value.
  mutating func clearListLabelStringArrayUndefined() {_uniqueStorage()._listLabelStringArrayUndefined = nil}

  var listTextIndentArray: TSWP_SpecListStyleFloatArrayArchive {
    get {return _storage._listTextIndentArray ?? TSWP_SpecListStyleFloatArrayArchive()}
    set {_uniqueStorage()._listTextIndentArray = newValue}
  }
  /// Returns true if `listTextIndentArray` has been explicitly set.
  var hasListTextIndentArray: Bool {return _storage._listTextIndentArray != nil}
  /// Clears the value of `listTextIndentArray`. Subsequent reads from it will return its default value.
  mutating func clearListTextIndentArray() {_uniqueStorage()._listTextIndentArray = nil}

  var listTextIndentArrayUndefined: Bool {
    get {return _storage._listTextIndentArrayUndefined ?? false}
    set {_uniqueStorage()._listTextIndentArrayUndefined = newValue}
  }
  /// Returns true if `listTextIndentArrayUndefined` has been explicitly set.
  var hasListTextIndentArrayUndefined: Bool {return _storage._listTextIndentArrayUndefined != nil}
  /// Clears the value of `listTextIndentArrayUndefined`. Subsequent reads from it will return its default value.
  mutating func clearListTextIndentArrayUndefined() {_uniqueStorage()._listTextIndentArrayUndefined = nil}

  var listLabelTypeArray: TSWP_SpecListStyleListLabelTypeArrayArchive {
    get {return _storage._listLabelTypeArray ?? TSWP_SpecListStyleListLabelTypeArrayArchive()}
    set {_uniqueStorage()._listLabelTypeArray = newValue}
  }
  /// Returns true if `listLabelTypeArray` has been explicitly set.
  var hasListLabelTypeArray: Bool {return _storage._listLabelTypeArray != nil}
  /// Clears the value of `listLabelTypeArray`. Subsequent reads from it will return its default value.
  mutating func clearListLabelTypeArray() {_uniqueStorage()._listLabelTypeArray = nil}

  var listLabelTypeArrayUndefined: Bool {
    get {return _storage._listLabelTypeArrayUndefined ?? false}
    set {_uniqueStorage()._listLabelTypeArrayUndefined = newValue}
  }
  /// Returns true if `listLabelTypeArrayUndefined` has been explicitly set.
  var hasListLabelTypeArrayUndefined: Bool {return _storage._listLabelTypeArrayUndefined != nil}
  /// Clears the value of `listLabelTypeArrayUndefined`. Subsequent reads from it will return its default value.
  mutating func clearListLabelTypeArrayUndefined() {_uniqueStorage()._listLabelTypeArrayUndefined = nil}

  var writingDirection: TSS_SpecIntegerArchive {
    get {return _storage._writingDirection ?? TSS_SpecIntegerArchive()}
    set {_uniqueStorage()._writingDirection = newValue}
  }
  /// Returns true if `writingDirection` has been explicitly set.
  var hasWritingDirection: Bool {return _storage._writingDirection != nil}
  /// Clears the value of `writingDirection`. Subsequent reads from it will return its default value.
  mutating func clearWritingDirection() {_uniqueStorage()._writingDirection = nil}

  var writingDirectionUndefined: Bool {
    get {return _storage._writingDirectionUndefined ?? false}
    set {_uniqueStorage()._writingDirectionUndefined = newValue}
  }
  /// Returns true if `writingDirectionUndefined` has been explicitly set.
  var hasWritingDirectionUndefined: Bool {return _storage._writingDirectionUndefined != nil}
  /// Clears the value of `writingDirectionUndefined`. Subsequent reads from it will return its default value.
  mutating func clearWritingDirectionUndefined() {_uniqueStorage()._writingDirectionUndefined = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

struct TSWP_ParagraphSpecificStylePropertyChangeSetArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var alignment: TSS_SpecIntegerArchive {
    get {return _storage._alignment ?? TSS_SpecIntegerArchive()}
    set {_uniqueStorage()._alignment = newValue}
  }
  /// Returns true if `alignment` has been explicitly set.
  var hasAlignment: Bool {return _storage._alignment != nil}
  /// Clears the value of `alignment`. Subsequent reads from it will return its default value.
  mutating func clearAlignment() {_uniqueStorage()._alignment = nil}

  var alignmentUndefined: Bool {
    get {return _storage._alignmentUndefined ?? false}
    set {_uniqueStorage()._alignmentUndefined = newValue}
  }
  /// Returns true if `alignmentUndefined` has been explicitly set.
  var hasAlignmentUndefined: Bool {return _storage._alignmentUndefined != nil}
  /// Clears the value of `alignmentUndefined`. Subsequent reads from it will return its default value.
  mutating func clearAlignmentUndefined() {_uniqueStorage()._alignmentUndefined = nil}

  var decimalTab: TSS_SpecStringArchive {
    get {return _storage._decimalTab ?? TSS_SpecStringArchive()}
    set {_uniqueStorage()._decimalTab = newValue}
  }
  /// Returns true if `decimalTab` has been explicitly set.
  var hasDecimalTab: Bool {return _storage._decimalTab != nil}
  /// Clears the value of `decimalTab`. Subsequent reads from it will return its default value.
  mutating func clearDecimalTab() {_uniqueStorage()._decimalTab = nil}

  var decimalTabUndefined: Bool {
    get {return _storage._decimalTabUndefined ?? false}
    set {_uniqueStorage()._decimalTabUndefined = newValue}
  }
  /// Returns true if `decimalTabUndefined` has been explicitly set.
  var hasDecimalTabUndefined: Bool {return _storage._decimalTabUndefined != nil}
  /// Clears the value of `decimalTabUndefined`. Subsequent reads from it will return its default value.
  mutating func clearDecimalTabUndefined() {_uniqueStorage()._decimalTabUndefined = nil}

  var defaultTabStops: TSS_SpecDoubleArchive {
    get {return _storage._defaultTabStops ?? TSS_SpecDoubleArchive()}
    set {_uniqueStorage()._defaultTabStops = newValue}
  }
  /// Returns true if `defaultTabStops` has been explicitly set.
  var hasDefaultTabStops: Bool {return _storage._defaultTabStops != nil}
  /// Clears the value of `defaultTabStops`. Subsequent reads from it will return its default value.
  mutating func clearDefaultTabStops() {_uniqueStorage()._defaultTabStops = nil}

  var defaultTabStopsUndefined: Bool {
    get {return _storage._defaultTabStopsUndefined ?? false}
    set {_uniqueStorage()._defaultTabStopsUndefined = newValue}
  }
  /// Returns true if `defaultTabStopsUndefined` has been explicitly set.
  var hasDefaultTabStopsUndefined: Bool {return _storage._defaultTabStopsUndefined != nil}
  /// Clears the value of `defaultTabStopsUndefined`. Subsequent reads from it will return its default value.
  mutating func clearDefaultTabStopsUndefined() {_uniqueStorage()._defaultTabStopsUndefined = nil}

  var paragraphFill: TSS_SpecColorArchive {
    get {return _storage._paragraphFill ?? TSS_SpecColorArchive()}
    set {_uniqueStorage()._paragraphFill = newValue}
  }
  /// Returns true if `paragraphFill` has been explicitly set.
  var hasParagraphFill: Bool {return _storage._paragraphFill != nil}
  /// Clears the value of `paragraphFill`. Subsequent reads from it will return its default value.
  mutating func clearParagraphFill() {_uniqueStorage()._paragraphFill = nil}

  var paragraphFillUndefined: Bool {
    get {return _storage._paragraphFillUndefined ?? false}
    set {_uniqueStorage()._paragraphFillUndefined = newValue}
  }
  /// Returns true if `paragraphFillUndefined` has been explicitly set.
  var hasParagraphFillUndefined: Bool {return _storage._paragraphFillUndefined != nil}
  /// Clears the value of `paragraphFillUndefined`. Subsequent reads from it will return its default value.
  mutating func clearParagraphFillUndefined() {_uniqueStorage()._paragraphFillUndefined = nil}

  var firstLineIndent: TSS_SpecDoubleArchive {
    get {return _storage._firstLineIndent ?? TSS_SpecDoubleArchive()}
    set {_uniqueStorage()._firstLineIndent = newValue}
  }
  /// Returns true if `firstLineIndent` has been explicitly set.
  var hasFirstLineIndent: Bool {return _storage._firstLineIndent != nil}
  /// Clears the value of `firstLineIndent`. Subsequent reads from it will return its default value.
  mutating func clearFirstLineIndent() {_uniqueStorage()._firstLineIndent = nil}

  var firstLineIndentUndefined: Bool {
    get {return _storage._firstLineIndentUndefined ?? false}
    set {_uniqueStorage()._firstLineIndentUndefined = newValue}
  }
  /// Returns true if `firstLineIndentUndefined` has been explicitly set.
  var hasFirstLineIndentUndefined: Bool {return _storage._firstLineIndentUndefined != nil}
  /// Clears the value of `firstLineIndentUndefined`. Subsequent reads from it will return its default value.
  mutating func clearFirstLineIndentUndefined() {_uniqueStorage()._firstLineIndentUndefined = nil}

  var followingParagraphStyle: TSWP_SpecParagraphStyleArchive {
    get {return _storage._followingParagraphStyle ?? TSWP_SpecParagraphStyleArchive()}
    set {_uniqueStorage()._followingParagraphStyle = newValue}
  }
  /// Returns true if `followingParagraphStyle` has been explicitly set.
  var hasFollowingParagraphStyle: Bool {return _storage._followingParagraphStyle != nil}
  /// Clears the value of `followingParagraphStyle`. Subsequent reads from it will return its default value.
  mutating func clearFollowingParagraphStyle() {_uniqueStorage()._followingParagraphStyle = nil}

  var followingParagraphStyleUndefined: Bool {
    get {return _storage._followingParagraphStyleUndefined ?? false}
    set {_uniqueStorage()._followingParagraphStyleUndefined = newValue}
  }
  /// Returns true if `followingParagraphStyleUndefined` has been explicitly set.
  var hasFollowingParagraphStyleUndefined: Bool {return _storage._followingParagraphStyleUndefined != nil}
  /// Clears the value of `followingParagraphStyleUndefined`. Subsequent reads from it will return its default value.
  mutating func clearFollowingParagraphStyleUndefined() {_uniqueStorage()._followingParagraphStyleUndefined = nil}

  var hyphenate: TSS_SpecBoolArchive {
    get {return _storage._hyphenate ?? TSS_SpecBoolArchive()}
    set {_uniqueStorage()._hyphenate = newValue}
  }
  /// Returns true if `hyphenate` has been explicitly set.
  var hasHyphenate: Bool {return _storage._hyphenate != nil}
  /// Clears the value of `hyphenate`. Subsequent reads from it will return its default value.
  mutating func clearHyphenate() {_uniqueStorage()._hyphenate = nil}

  var hyphenateUndefined: Bool {
    get {return _storage._hyphenateUndefined ?? false}
    set {_uniqueStorage()._hyphenateUndefined = newValue}
  }
  /// Returns true if `hyphenateUndefined` has been explicitly set.
  var hasHyphenateUndefined: Bool {return _storage._hyphenateUndefined != nil}
  /// Clears the value of `hyphenateUndefined`. Subsequent reads from it will return its default value.
  mutating func clearHyphenateUndefined() {_uniqueStorage()._hyphenateUndefined = nil}

  var initialListStyle: TSWP_SpecListStyleArchive {
    get {return _storage._initialListStyle ?? TSWP_SpecListStyleArchive()}
    set {_uniqueStorage()._initialListStyle = newValue}
  }
  /// Returns true if `initialListStyle` has been explicitly set.
  var hasInitialListStyle: Bool {return _storage._initialListStyle != nil}
  /// Clears the value of `initialListStyle`. Subsequent reads from it will return its default value.
  mutating func clearInitialListStyle() {_uniqueStorage()._initialListStyle = nil}

  var initialListStyleUndefined: Bool {
    get {return _storage._initialListStyleUndefined ?? false}
    set {_uniqueStorage()._initialListStyleUndefined = newValue}
  }
  /// Returns true if `initialListStyleUndefined` has been explicitly set.
  var hasInitialListStyleUndefined: Bool {return _storage._initialListStyleUndefined != nil}
  /// Clears the value of `initialListStyleUndefined`. Subsequent reads from it will return its default value.
  mutating func clearInitialListStyleUndefined() {_uniqueStorage()._initialListStyleUndefined = nil}

  var keepLinesTogether: TSS_SpecBoolArchive {
    get {return _storage._keepLinesTogether ?? TSS_SpecBoolArchive()}
    set {_uniqueStorage()._keepLinesTogether = newValue}
  }
  /// Returns true if `keepLinesTogether` has been explicitly set.
  var hasKeepLinesTogether: Bool {return _storage._keepLinesTogether != nil}
  /// Clears the value of `keepLinesTogether`. Subsequent reads from it will return its default value.
  mutating func clearKeepLinesTogether() {_uniqueStorage()._keepLinesTogether = nil}

  var keepLinesTogetherUndefined: Bool {
    get {return _storage._keepLinesTogetherUndefined ?? false}
    set {_uniqueStorage()._keepLinesTogetherUndefined = newValue}
  }
  /// Returns true if `keepLinesTogetherUndefined` has been explicitly set.
  var hasKeepLinesTogetherUndefined: Bool {return _storage._keepLinesTogetherUndefined != nil}
  /// Clears the value of `keepLinesTogetherUndefined`. Subsequent reads from it will return its default value.
  mutating func clearKeepLinesTogetherUndefined() {_uniqueStorage()._keepLinesTogetherUndefined = nil}

  var keepWithNext: TSS_SpecBoolArchive {
    get {return _storage._keepWithNext ?? TSS_SpecBoolArchive()}
    set {_uniqueStorage()._keepWithNext = newValue}
  }
  /// Returns true if `keepWithNext` has been explicitly set.
  var hasKeepWithNext: Bool {return _storage._keepWithNext != nil}
  /// Clears the value of `keepWithNext`. Subsequent reads from it will return its default value.
  mutating func clearKeepWithNext() {_uniqueStorage()._keepWithNext = nil}

  var keepWithNextUndefined: Bool {
    get {return _storage._keepWithNextUndefined ?? false}
    set {_uniqueStorage()._keepWithNextUndefined = newValue}
  }
  /// Returns true if `keepWithNextUndefined` has been explicitly set.
  var hasKeepWithNextUndefined: Bool {return _storage._keepWithNextUndefined != nil}
  /// Clears the value of `keepWithNextUndefined`. Subsequent reads from it will return its default value.
  mutating func clearKeepWithNextUndefined() {_uniqueStorage()._keepWithNextUndefined = nil}

  var leftIndent: TSS_SpecDoubleArchive {
    get {return _storage._leftIndent ?? TSS_SpecDoubleArchive()}
    set {_uniqueStorage()._leftIndent = newValue}
  }
  /// Returns true if `leftIndent` has been explicitly set.
  var hasLeftIndent: Bool {return _storage._leftIndent != nil}
  /// Clears the value of `leftIndent`. Subsequent reads from it will return its default value.
  mutating func clearLeftIndent() {_uniqueStorage()._leftIndent = nil}

  var leftIndentUndefined: Bool {
    get {return _storage._leftIndentUndefined ?? false}
    set {_uniqueStorage()._leftIndentUndefined = newValue}
  }
  /// Returns true if `leftIndentUndefined` has been explicitly set.
  var hasLeftIndentUndefined: Bool {return _storage._leftIndentUndefined != nil}
  /// Clears the value of `leftIndentUndefined`. Subsequent reads from it will return its default value.
  mutating func clearLeftIndentUndefined() {_uniqueStorage()._leftIndentUndefined = nil}

  var lineSpacing: TSWP_SpecLineSpacingArchive {
    get {return _storage._lineSpacing ?? TSWP_SpecLineSpacingArchive()}
    set {_uniqueStorage()._lineSpacing = newValue}
  }
  /// Returns true if `lineSpacing` has been explicitly set.
  var hasLineSpacing: Bool {return _storage._lineSpacing != nil}
  /// Clears the value of `lineSpacing`. Subsequent reads from it will return its default value.
  mutating func clearLineSpacing() {_uniqueStorage()._lineSpacing = nil}

  var lineSpacingUndefined: Bool {
    get {return _storage._lineSpacingUndefined ?? false}
    set {_uniqueStorage()._lineSpacingUndefined = newValue}
  }
  /// Returns true if `lineSpacingUndefined` has been explicitly set.
  var hasLineSpacingUndefined: Bool {return _storage._lineSpacingUndefined != nil}
  /// Clears the value of `lineSpacingUndefined`. Subsequent reads from it will return its default value.
  mutating func clearLineSpacingUndefined() {_uniqueStorage()._lineSpacingUndefined = nil}

  var outlineLevel: TSS_SpecIntegerArchive {
    get {return _storage._outlineLevel ?? TSS_SpecIntegerArchive()}
    set {_uniqueStorage()._outlineLevel = newValue}
  }
  /// Returns true if `outlineLevel` has been explicitly set.
  var hasOutlineLevel: Bool {return _storage._outlineLevel != nil}
  /// Clears the value of `outlineLevel`. Subsequent reads from it will return its default value.
  mutating func clearOutlineLevel() {_uniqueStorage()._outlineLevel = nil}

  var outlineLevelUndefined: Bool {
    get {return _storage._outlineLevelUndefined ?? false}
    set {_uniqueStorage()._outlineLevelUndefined = newValue}
  }
  /// Returns true if `outlineLevelUndefined` has been explicitly set.
  var hasOutlineLevelUndefined: Bool {return _storage._outlineLevelUndefined != nil}
  /// Clears the value of `outlineLevelUndefined`. Subsequent reads from it will return its default value.
  mutating func clearOutlineLevelUndefined() {_uniqueStorage()._outlineLevelUndefined = nil}

  var outlineStyleType: TSS_SpecIntegerArchive {
    get {return _storage._outlineStyleType ?? TSS_SpecIntegerArchive()}
    set {_uniqueStorage()._outlineStyleType = newValue}
  }
  /// Returns true if `outlineStyleType` has been explicitly set.
  var hasOutlineStyleType: Bool {return _storage._outlineStyleType != nil}
  /// Clears the value of `outlineStyleType`. Subsequent reads from it will return its default value.
  mutating func clearOutlineStyleType() {_uniqueStorage()._outlineStyleType = nil}

  var outlineStyleTypeUndefined: Bool {
    get {return _storage._outlineStyleTypeUndefined ?? false}
    set {_uniqueStorage()._outlineStyleTypeUndefined = newValue}
  }
  /// Returns true if `outlineStyleTypeUndefined` has been explicitly set.
  var hasOutlineStyleTypeUndefined: Bool {return _storage._outlineStyleTypeUndefined != nil}
  /// Clears the value of `outlineStyleTypeUndefined`. Subsequent reads from it will return its default value.
  mutating func clearOutlineStyleTypeUndefined() {_uniqueStorage()._outlineStyleTypeUndefined = nil}

  var pageBreakBefore: TSS_SpecBoolArchive {
    get {return _storage._pageBreakBefore ?? TSS_SpecBoolArchive()}
    set {_uniqueStorage()._pageBreakBefore = newValue}
  }
  /// Returns true if `pageBreakBefore` has been explicitly set.
  var hasPageBreakBefore: Bool {return _storage._pageBreakBefore != nil}
  /// Clears the value of `pageBreakBefore`. Subsequent reads from it will return its default value.
  mutating func clearPageBreakBefore() {_uniqueStorage()._pageBreakBefore = nil}

  var pageBreakBeforeUndefined: Bool {
    get {return _storage._pageBreakBeforeUndefined ?? false}
    set {_uniqueStorage()._pageBreakBeforeUndefined = newValue}
  }
  /// Returns true if `pageBreakBeforeUndefined` has been explicitly set.
  var hasPageBreakBeforeUndefined: Bool {return _storage._pageBreakBeforeUndefined != nil}
  /// Clears the value of `pageBreakBeforeUndefined`. Subsequent reads from it will return its default value.
  mutating func clearPageBreakBeforeUndefined() {_uniqueStorage()._pageBreakBeforeUndefined = nil}

  var paragraphBorders: TSS_SpecIntegerArchive {
    get {return _storage._paragraphBorders ?? TSS_SpecIntegerArchive()}
    set {_uniqueStorage()._paragraphBorders = newValue}
  }
  /// Returns true if `paragraphBorders` has been explicitly set.
  var hasParagraphBorders: Bool {return _storage._paragraphBorders != nil}
  /// Clears the value of `paragraphBorders`. Subsequent reads from it will return its default value.
  mutating func clearParagraphBorders() {_uniqueStorage()._paragraphBorders = nil}

  var paragraphBordersUndefined: Bool {
    get {return _storage._paragraphBordersUndefined ?? false}
    set {_uniqueStorage()._paragraphBordersUndefined = newValue}
  }
  /// Returns true if `paragraphBordersUndefined` has been explicitly set.
  var hasParagraphBordersUndefined: Bool {return _storage._paragraphBordersUndefined != nil}
  /// Clears the value of `paragraphBordersUndefined`. Subsequent reads from it will return its default value.
  mutating func clearParagraphBordersUndefined() {_uniqueStorage()._paragraphBordersUndefined = nil}

  var paragraphRuleOffset: TSWP_SpecRuleOffsetArchive {
    get {return _storage._paragraphRuleOffset ?? TSWP_SpecRuleOffsetArchive()}
    set {_uniqueStorage()._paragraphRuleOffset = newValue}
  }
  /// Returns true if `paragraphRuleOffset` has been explicitly set.
  var hasParagraphRuleOffset: Bool {return _storage._paragraphRuleOffset != nil}
  /// Clears the value of `paragraphRuleOffset`. Subsequent reads from it will return its default value.
  mutating func clearParagraphRuleOffset() {_uniqueStorage()._paragraphRuleOffset = nil}

  var paragraphRuleOffsetUndefined: Bool {
    get {return _storage._paragraphRuleOffsetUndefined ?? false}
    set {_uniqueStorage()._paragraphRuleOffsetUndefined = newValue}
  }
  /// Returns true if `paragraphRuleOffsetUndefined` has been explicitly set.
  var hasParagraphRuleOffsetUndefined: Bool {return _storage._paragraphRuleOffsetUndefined != nil}
  /// Clears the value of `paragraphRuleOffsetUndefined`. Subsequent reads from it will return its default value.
  mutating func clearParagraphRuleOffsetUndefined() {_uniqueStorage()._paragraphRuleOffsetUndefined = nil}

  var paragraphRuleWidth: TSS_SpecDoubleArchive {
    get {return _storage._paragraphRuleWidth ?? TSS_SpecDoubleArchive()}
    set {_uniqueStorage()._paragraphRuleWidth = newValue}
  }
  /// Returns true if `paragraphRuleWidth` has been explicitly set.
  var hasParagraphRuleWidth: Bool {return _storage._paragraphRuleWidth != nil}
  /// Clears the value of `paragraphRuleWidth`. Subsequent reads from it will return its default value.
  mutating func clearParagraphRuleWidth() {_uniqueStorage()._paragraphRuleWidth = nil}

  var paragraphRuleWidthUndefined: Bool {
    get {return _storage._paragraphRuleWidthUndefined ?? false}
    set {_uniqueStorage()._paragraphRuleWidthUndefined = newValue}
  }
  /// Returns true if `paragraphRuleWidthUndefined` has been explicitly set.
  var hasParagraphRuleWidthUndefined: Bool {return _storage._paragraphRuleWidthUndefined != nil}
  /// Clears the value of `paragraphRuleWidthUndefined`. Subsequent reads from it will return its default value.
  mutating func clearParagraphRuleWidthUndefined() {_uniqueStorage()._paragraphRuleWidthUndefined = nil}

  var rightIndent: TSS_SpecDoubleArchive {
    get {return _storage._rightIndent ?? TSS_SpecDoubleArchive()}
    set {_uniqueStorage()._rightIndent = newValue}
  }
  /// Returns true if `rightIndent` has been explicitly set.
  var hasRightIndent: Bool {return _storage._rightIndent != nil}
  /// Clears the value of `rightIndent`. Subsequent reads from it will return its default value.
  mutating func clearRightIndent() {_uniqueStorage()._rightIndent = nil}

  var rightIndentUndefined: Bool {
    get {return _storage._rightIndentUndefined ?? false}
    set {_uniqueStorage()._rightIndentUndefined = newValue}
  }
  /// Returns true if `rightIndentUndefined` has been explicitly set.
  var hasRightIndentUndefined: Bool {return _storage._rightIndentUndefined != nil}
  /// Clears the value of `rightIndentUndefined`. Subsequent reads from it will return its default value.
  mutating func clearRightIndentUndefined() {_uniqueStorage()._rightIndentUndefined = nil}

  var spaceAfter: TSS_SpecDoubleArchive {
    get {return _storage._spaceAfter ?? TSS_SpecDoubleArchive()}
    set {_uniqueStorage()._spaceAfter = newValue}
  }
  /// Returns true if `spaceAfter` has been explicitly set.
  var hasSpaceAfter: Bool {return _storage._spaceAfter != nil}
  /// Clears the value of `spaceAfter`. Subsequent reads from it will return its default value.
  mutating func clearSpaceAfter() {_uniqueStorage()._spaceAfter = nil}

  var spaceAfterUndefined: Bool {
    get {return _storage._spaceAfterUndefined ?? false}
    set {_uniqueStorage()._spaceAfterUndefined = newValue}
  }
  /// Returns true if `spaceAfterUndefined` has been explicitly set.
  var hasSpaceAfterUndefined: Bool {return _storage._spaceAfterUndefined != nil}
  /// Clears the value of `spaceAfterUndefined`. Subsequent reads from it will return its default value.
  mutating func clearSpaceAfterUndefined() {_uniqueStorage()._spaceAfterUndefined = nil}

  var spaceBefore: TSS_SpecDoubleArchive {
    get {return _storage._spaceBefore ?? TSS_SpecDoubleArchive()}
    set {_uniqueStorage()._spaceBefore = newValue}
  }
  /// Returns true if `spaceBefore` has been explicitly set.
  var hasSpaceBefore: Bool {return _storage._spaceBefore != nil}
  /// Clears the value of `spaceBefore`. Subsequent reads from it will return its default value.
  mutating func clearSpaceBefore() {_uniqueStorage()._spaceBefore = nil}

  var spaceBeforeUndefined: Bool {
    get {return _storage._spaceBeforeUndefined ?? false}
    set {_uniqueStorage()._spaceBeforeUndefined = newValue}
  }
  /// Returns true if `spaceBeforeUndefined` has been explicitly set.
  var hasSpaceBeforeUndefined: Bool {return _storage._spaceBeforeUndefined != nil}
  /// Clears the value of `spaceBeforeUndefined`. Subsequent reads from it will return its default value.
  mutating func clearSpaceBeforeUndefined() {_uniqueStorage()._spaceBeforeUndefined = nil}

  var paragraphStroke: TSD_SpecStrokeArchive {
    get {return _storage._paragraphStroke ?? TSD_SpecStrokeArchive()}
    set {_uniqueStorage()._paragraphStroke = newValue}
  }
  /// Returns true if `paragraphStroke` has been explicitly set.
  var hasParagraphStroke: Bool {return _storage._paragraphStroke != nil}
  /// Clears the value of `paragraphStroke`. Subsequent reads from it will return its default value.
  mutating func clearParagraphStroke() {_uniqueStorage()._paragraphStroke = nil}

  var paragraphStrokeUndefined: Bool {
    get {return _storage._paragraphStrokeUndefined ?? false}
    set {_uniqueStorage()._paragraphStrokeUndefined = newValue}
  }
  /// Returns true if `paragraphStrokeUndefined` has been explicitly set.
  var hasParagraphStrokeUndefined: Bool {return _storage._paragraphStrokeUndefined != nil}
  /// Clears the value of `paragraphStrokeUndefined`. Subsequent reads from it will return its default value.
  mutating func clearParagraphStrokeUndefined() {_uniqueStorage()._paragraphStrokeUndefined = nil}

  var tabs: TSWP_SpecTabsArchive {
    get {return _storage._tabs ?? TSWP_SpecTabsArchive()}
    set {_uniqueStorage()._tabs = newValue}
  }
  /// Returns true if `tabs` has been explicitly set.
  var hasTabs: Bool {return _storage._tabs != nil}
  /// Clears the value of `tabs`. Subsequent reads from it will return its default value.
  mutating func clearTabs() {_uniqueStorage()._tabs = nil}

  var tabsUndefined: Bool {
    get {return _storage._tabsUndefined ?? false}
    set {_uniqueStorage()._tabsUndefined = newValue}
  }
  /// Returns true if `tabsUndefined` has been explicitly set.
  var hasTabsUndefined: Bool {return _storage._tabsUndefined != nil}
  /// Clears the value of `tabsUndefined`. Subsequent reads from it will return its default value.
  mutating func clearTabsUndefined() {_uniqueStorage()._tabsUndefined = nil}

  var widowControl: TSS_SpecIntegerArchive {
    get {return _storage._widowControl ?? TSS_SpecIntegerArchive()}
    set {_uniqueStorage()._widowControl = newValue}
  }
  /// Returns true if `widowControl` has been explicitly set.
  var hasWidowControl: Bool {return _storage._widowControl != nil}
  /// Clears the value of `widowControl`. Subsequent reads from it will return its default value.
  mutating func clearWidowControl() {_uniqueStorage()._widowControl = nil}

  var widowControlUndefined: Bool {
    get {return _storage._widowControlUndefined ?? false}
    set {_uniqueStorage()._widowControlUndefined = newValue}
  }
  /// Returns true if `widowControlUndefined` has been explicitly set.
  var hasWidowControlUndefined: Bool {return _storage._widowControlUndefined != nil}
  /// Clears the value of `widowControlUndefined`. Subsequent reads from it will return its default value.
  mutating func clearWidowControlUndefined() {_uniqueStorage()._widowControlUndefined = nil}

  var showInBookmarksList: TSS_SpecBoolArchive {
    get {return _storage._showInBookmarksList ?? TSS_SpecBoolArchive()}
    set {_uniqueStorage()._showInBookmarksList = newValue}
  }
  /// Returns true if `showInBookmarksList` has been explicitly set.
  var hasShowInBookmarksList: Bool {return _storage._showInBookmarksList != nil}
  /// Clears the value of `showInBookmarksList`. Subsequent reads from it will return its default value.
  mutating func clearShowInBookmarksList() {_uniqueStorage()._showInBookmarksList = nil}

  var showInBookmarksListUndefined: Bool {
    get {return _storage._showInBookmarksListUndefined ?? false}
    set {_uniqueStorage()._showInBookmarksListUndefined = newValue}
  }
  /// Returns true if `showInBookmarksListUndefined` has been explicitly set.
  var hasShowInBookmarksListUndefined: Bool {return _storage._showInBookmarksListUndefined != nil}
  /// Clears the value of `showInBookmarksListUndefined`. Subsequent reads from it will return its default value.
  mutating func clearShowInBookmarksListUndefined() {_uniqueStorage()._showInBookmarksListUndefined = nil}

  var showInTOCNavigator: TSS_SpecBoolArchive {
    get {return _storage._showInTOCNavigator ?? TSS_SpecBoolArchive()}
    set {_uniqueStorage()._showInTOCNavigator = newValue}
  }
  /// Returns true if `showInTOCNavigator` has been explicitly set.
  var hasShowInTOCNavigator: Bool {return _storage._showInTOCNavigator != nil}
  /// Clears the value of `showInTOCNavigator`. Subsequent reads from it will return its default value.
  mutating func clearShowInTOCNavigator() {_uniqueStorage()._showInTOCNavigator = nil}

  var showInTOCNavigatorUndefined: Bool {
    get {return _storage._showInTOCNavigatorUndefined ?? false}
    set {_uniqueStorage()._showInTOCNavigatorUndefined = newValue}
  }
  /// Returns true if `showInTOCNavigatorUndefined` has been explicitly set.
  var hasShowInTOCNavigatorUndefined: Bool {return _storage._showInTOCNavigatorUndefined != nil}
  /// Clears the value of `showInTOCNavigatorUndefined`. Subsequent reads from it will return its default value.
  mutating func clearShowInTOCNavigatorUndefined() {_uniqueStorage()._showInTOCNavigatorUndefined = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

struct TSWP_ParagraphStylePropertyChangeSetArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var `super`: TSWP_CharacterStylePropertyChangeSetArchive {
    get {return _storage._super ?? TSWP_CharacterStylePropertyChangeSetArchive()}
    set {_uniqueStorage()._super = newValue}
  }
  /// Returns true if ``super`` has been explicitly set.
  var hasSuper: Bool {return _storage._super != nil}
  /// Clears the value of ``super``. Subsequent reads from it will return its default value.
  mutating func clearSuper() {_uniqueStorage()._super = nil}

  var alignment: TSS_SpecIntegerArchive {
    get {return _storage._alignment ?? TSS_SpecIntegerArchive()}
    set {_uniqueStorage()._alignment = newValue}
  }
  /// Returns true if `alignment` has been explicitly set.
  var hasAlignment: Bool {return _storage._alignment != nil}
  /// Clears the value of `alignment`. Subsequent reads from it will return its default value.
  mutating func clearAlignment() {_uniqueStorage()._alignment = nil}

  var alignmentUndefined: Bool {
    get {return _storage._alignmentUndefined ?? false}
    set {_uniqueStorage()._alignmentUndefined = newValue}
  }
  /// Returns true if `alignmentUndefined` has been explicitly set.
  var hasAlignmentUndefined: Bool {return _storage._alignmentUndefined != nil}
  /// Clears the value of `alignmentUndefined`. Subsequent reads from it will return its default value.
  mutating func clearAlignmentUndefined() {_uniqueStorage()._alignmentUndefined = nil}

  var decimalTab: TSS_SpecStringArchive {
    get {return _storage._decimalTab ?? TSS_SpecStringArchive()}
    set {_uniqueStorage()._decimalTab = newValue}
  }
  /// Returns true if `decimalTab` has been explicitly set.
  var hasDecimalTab: Bool {return _storage._decimalTab != nil}
  /// Clears the value of `decimalTab`. Subsequent reads from it will return its default value.
  mutating func clearDecimalTab() {_uniqueStorage()._decimalTab = nil}

  var decimalTabUndefined: Bool {
    get {return _storage._decimalTabUndefined ?? false}
    set {_uniqueStorage()._decimalTabUndefined = newValue}
  }
  /// Returns true if `decimalTabUndefined` has been explicitly set.
  var hasDecimalTabUndefined: Bool {return _storage._decimalTabUndefined != nil}
  /// Clears the value of `decimalTabUndefined`. Subsequent reads from it will return its default value.
  mutating func clearDecimalTabUndefined() {_uniqueStorage()._decimalTabUndefined = nil}

  var defaultTabStops: TSS_SpecDoubleArchive {
    get {return _storage._defaultTabStops ?? TSS_SpecDoubleArchive()}
    set {_uniqueStorage()._defaultTabStops = newValue}
  }
  /// Returns true if `defaultTabStops` has been explicitly set.
  var hasDefaultTabStops: Bool {return _storage._defaultTabStops != nil}
  /// Clears the value of `defaultTabStops`. Subsequent reads from it will return its default value.
  mutating func clearDefaultTabStops() {_uniqueStorage()._defaultTabStops = nil}

  var defaultTabStopsUndefined: Bool {
    get {return _storage._defaultTabStopsUndefined ?? false}
    set {_uniqueStorage()._defaultTabStopsUndefined = newValue}
  }
  /// Returns true if `defaultTabStopsUndefined` has been explicitly set.
  var hasDefaultTabStopsUndefined: Bool {return _storage._defaultTabStopsUndefined != nil}
  /// Clears the value of `defaultTabStopsUndefined`. Subsequent reads from it will return its default value.
  mutating func clearDefaultTabStopsUndefined() {_uniqueStorage()._defaultTabStopsUndefined = nil}

  var paragraphFill: TSS_SpecColorArchive {
    get {return _storage._paragraphFill ?? TSS_SpecColorArchive()}
    set {_uniqueStorage()._paragraphFill = newValue}
  }
  /// Returns true if `paragraphFill` has been explicitly set.
  var hasParagraphFill: Bool {return _storage._paragraphFill != nil}
  /// Clears the value of `paragraphFill`. Subsequent reads from it will return its default value.
  mutating func clearParagraphFill() {_uniqueStorage()._paragraphFill = nil}

  var paragraphFillUndefined: Bool {
    get {return _storage._paragraphFillUndefined ?? false}
    set {_uniqueStorage()._paragraphFillUndefined = newValue}
  }
  /// Returns true if `paragraphFillUndefined` has been explicitly set.
  var hasParagraphFillUndefined: Bool {return _storage._paragraphFillUndefined != nil}
  /// Clears the value of `paragraphFillUndefined`. Subsequent reads from it will return its default value.
  mutating func clearParagraphFillUndefined() {_uniqueStorage()._paragraphFillUndefined = nil}

  var firstLineIndent: TSS_SpecDoubleArchive {
    get {return _storage._firstLineIndent ?? TSS_SpecDoubleArchive()}
    set {_uniqueStorage()._firstLineIndent = newValue}
  }
  /// Returns true if `firstLineIndent` has been explicitly set.
  var hasFirstLineIndent: Bool {return _storage._firstLineIndent != nil}
  /// Clears the value of `firstLineIndent`. Subsequent reads from it will return its default value.
  mutating func clearFirstLineIndent() {_uniqueStorage()._firstLineIndent = nil}

  var firstLineIndentUndefined: Bool {
    get {return _storage._firstLineIndentUndefined ?? false}
    set {_uniqueStorage()._firstLineIndentUndefined = newValue}
  }
  /// Returns true if `firstLineIndentUndefined` has been explicitly set.
  var hasFirstLineIndentUndefined: Bool {return _storage._firstLineIndentUndefined != nil}
  /// Clears the value of `firstLineIndentUndefined`. Subsequent reads from it will return its default value.
  mutating func clearFirstLineIndentUndefined() {_uniqueStorage()._firstLineIndentUndefined = nil}

  var followingParagraphStyle: TSWP_SpecParagraphStyleArchive {
    get {return _storage._followingParagraphStyle ?? TSWP_SpecParagraphStyleArchive()}
    set {_uniqueStorage()._followingParagraphStyle = newValue}
  }
  /// Returns true if `followingParagraphStyle` has been explicitly set.
  var hasFollowingParagraphStyle: Bool {return _storage._followingParagraphStyle != nil}
  /// Clears the value of `followingParagraphStyle`. Subsequent reads from it will return its default value.
  mutating func clearFollowingParagraphStyle() {_uniqueStorage()._followingParagraphStyle = nil}

  var followingParagraphStyleUndefined: Bool {
    get {return _storage._followingParagraphStyleUndefined ?? false}
    set {_uniqueStorage()._followingParagraphStyleUndefined = newValue}
  }
  /// Returns true if `followingParagraphStyleUndefined` has been explicitly set.
  var hasFollowingParagraphStyleUndefined: Bool {return _storage._followingParagraphStyleUndefined != nil}
  /// Clears the value of `followingParagraphStyleUndefined`. Subsequent reads from it will return its default value.
  mutating func clearFollowingParagraphStyleUndefined() {_uniqueStorage()._followingParagraphStyleUndefined = nil}

  var hyphenate: TSS_SpecBoolArchive {
    get {return _storage._hyphenate ?? TSS_SpecBoolArchive()}
    set {_uniqueStorage()._hyphenate = newValue}
  }
  /// Returns true if `hyphenate` has been explicitly set.
  var hasHyphenate: Bool {return _storage._hyphenate != nil}
  /// Clears the value of `hyphenate`. Subsequent reads from it will return its default value.
  mutating func clearHyphenate() {_uniqueStorage()._hyphenate = nil}

  var hyphenateUndefined: Bool {
    get {return _storage._hyphenateUndefined ?? false}
    set {_uniqueStorage()._hyphenateUndefined = newValue}
  }
  /// Returns true if `hyphenateUndefined` has been explicitly set.
  var hasHyphenateUndefined: Bool {return _storage._hyphenateUndefined != nil}
  /// Clears the value of `hyphenateUndefined`. Subsequent reads from it will return its default value.
  mutating func clearHyphenateUndefined() {_uniqueStorage()._hyphenateUndefined = nil}

  var initialListStyle: TSWP_SpecListStyleArchive {
    get {return _storage._initialListStyle ?? TSWP_SpecListStyleArchive()}
    set {_uniqueStorage()._initialListStyle = newValue}
  }
  /// Returns true if `initialListStyle` has been explicitly set.
  var hasInitialListStyle: Bool {return _storage._initialListStyle != nil}
  /// Clears the value of `initialListStyle`. Subsequent reads from it will return its default value.
  mutating func clearInitialListStyle() {_uniqueStorage()._initialListStyle = nil}

  var initialListStyleUndefined: Bool {
    get {return _storage._initialListStyleUndefined ?? false}
    set {_uniqueStorage()._initialListStyleUndefined = newValue}
  }
  /// Returns true if `initialListStyleUndefined` has been explicitly set.
  var hasInitialListStyleUndefined: Bool {return _storage._initialListStyleUndefined != nil}
  /// Clears the value of `initialListStyleUndefined`. Subsequent reads from it will return its default value.
  mutating func clearInitialListStyleUndefined() {_uniqueStorage()._initialListStyleUndefined = nil}

  var keepLinesTogether: TSS_SpecBoolArchive {
    get {return _storage._keepLinesTogether ?? TSS_SpecBoolArchive()}
    set {_uniqueStorage()._keepLinesTogether = newValue}
  }
  /// Returns true if `keepLinesTogether` has been explicitly set.
  var hasKeepLinesTogether: Bool {return _storage._keepLinesTogether != nil}
  /// Clears the value of `keepLinesTogether`. Subsequent reads from it will return its default value.
  mutating func clearKeepLinesTogether() {_uniqueStorage()._keepLinesTogether = nil}

  var keepLinesTogetherUndefined: Bool {
    get {return _storage._keepLinesTogetherUndefined ?? false}
    set {_uniqueStorage()._keepLinesTogetherUndefined = newValue}
  }
  /// Returns true if `keepLinesTogetherUndefined` has been explicitly set.
  var hasKeepLinesTogetherUndefined: Bool {return _storage._keepLinesTogetherUndefined != nil}
  /// Clears the value of `keepLinesTogetherUndefined`. Subsequent reads from it will return its default value.
  mutating func clearKeepLinesTogetherUndefined() {_uniqueStorage()._keepLinesTogetherUndefined = nil}

  var keepWithNext: TSS_SpecBoolArchive {
    get {return _storage._keepWithNext ?? TSS_SpecBoolArchive()}
    set {_uniqueStorage()._keepWithNext = newValue}
  }
  /// Returns true if `keepWithNext` has been explicitly set.
  var hasKeepWithNext: Bool {return _storage._keepWithNext != nil}
  /// Clears the value of `keepWithNext`. Subsequent reads from it will return its default value.
  mutating func clearKeepWithNext() {_uniqueStorage()._keepWithNext = nil}

  var keepWithNextUndefined: Bool {
    get {return _storage._keepWithNextUndefined ?? false}
    set {_uniqueStorage()._keepWithNextUndefined = newValue}
  }
  /// Returns true if `keepWithNextUndefined` has been explicitly set.
  var hasKeepWithNextUndefined: Bool {return _storage._keepWithNextUndefined != nil}
  /// Clears the value of `keepWithNextUndefined`. Subsequent reads from it will return its default value.
  mutating func clearKeepWithNextUndefined() {_uniqueStorage()._keepWithNextUndefined = nil}

  var leftIndent: TSS_SpecDoubleArchive {
    get {return _storage._leftIndent ?? TSS_SpecDoubleArchive()}
    set {_uniqueStorage()._leftIndent = newValue}
  }
  /// Returns true if `leftIndent` has been explicitly set.
  var hasLeftIndent: Bool {return _storage._leftIndent != nil}
  /// Clears the value of `leftIndent`. Subsequent reads from it will return its default value.
  mutating func clearLeftIndent() {_uniqueStorage()._leftIndent = nil}

  var leftIndentUndefined: Bool {
    get {return _storage._leftIndentUndefined ?? false}
    set {_uniqueStorage()._leftIndentUndefined = newValue}
  }
  /// Returns true if `leftIndentUndefined` has been explicitly set.
  var hasLeftIndentUndefined: Bool {return _storage._leftIndentUndefined != nil}
  /// Clears the value of `leftIndentUndefined`. Subsequent reads from it will return its default value.
  mutating func clearLeftIndentUndefined() {_uniqueStorage()._leftIndentUndefined = nil}

  var lineSpacing: TSWP_SpecLineSpacingArchive {
    get {return _storage._lineSpacing ?? TSWP_SpecLineSpacingArchive()}
    set {_uniqueStorage()._lineSpacing = newValue}
  }
  /// Returns true if `lineSpacing` has been explicitly set.
  var hasLineSpacing: Bool {return _storage._lineSpacing != nil}
  /// Clears the value of `lineSpacing`. Subsequent reads from it will return its default value.
  mutating func clearLineSpacing() {_uniqueStorage()._lineSpacing = nil}

  var lineSpacingUndefined: Bool {
    get {return _storage._lineSpacingUndefined ?? false}
    set {_uniqueStorage()._lineSpacingUndefined = newValue}
  }
  /// Returns true if `lineSpacingUndefined` has been explicitly set.
  var hasLineSpacingUndefined: Bool {return _storage._lineSpacingUndefined != nil}
  /// Clears the value of `lineSpacingUndefined`. Subsequent reads from it will return its default value.
  mutating func clearLineSpacingUndefined() {_uniqueStorage()._lineSpacingUndefined = nil}

  var outlineLevel: TSS_SpecIntegerArchive {
    get {return _storage._outlineLevel ?? TSS_SpecIntegerArchive()}
    set {_uniqueStorage()._outlineLevel = newValue}
  }
  /// Returns true if `outlineLevel` has been explicitly set.
  var hasOutlineLevel: Bool {return _storage._outlineLevel != nil}
  /// Clears the value of `outlineLevel`. Subsequent reads from it will return its default value.
  mutating func clearOutlineLevel() {_uniqueStorage()._outlineLevel = nil}

  var outlineLevelUndefined: Bool {
    get {return _storage._outlineLevelUndefined ?? false}
    set {_uniqueStorage()._outlineLevelUndefined = newValue}
  }
  /// Returns true if `outlineLevelUndefined` has been explicitly set.
  var hasOutlineLevelUndefined: Bool {return _storage._outlineLevelUndefined != nil}
  /// Clears the value of `outlineLevelUndefined`. Subsequent reads from it will return its default value.
  mutating func clearOutlineLevelUndefined() {_uniqueStorage()._outlineLevelUndefined = nil}

  var outlineStyleType: TSS_SpecIntegerArchive {
    get {return _storage._outlineStyleType ?? TSS_SpecIntegerArchive()}
    set {_uniqueStorage()._outlineStyleType = newValue}
  }
  /// Returns true if `outlineStyleType` has been explicitly set.
  var hasOutlineStyleType: Bool {return _storage._outlineStyleType != nil}
  /// Clears the value of `outlineStyleType`. Subsequent reads from it will return its default value.
  mutating func clearOutlineStyleType() {_uniqueStorage()._outlineStyleType = nil}

  var outlineStyleTypeUndefined: Bool {
    get {return _storage._outlineStyleTypeUndefined ?? false}
    set {_uniqueStorage()._outlineStyleTypeUndefined = newValue}
  }
  /// Returns true if `outlineStyleTypeUndefined` has been explicitly set.
  var hasOutlineStyleTypeUndefined: Bool {return _storage._outlineStyleTypeUndefined != nil}
  /// Clears the value of `outlineStyleTypeUndefined`. Subsequent reads from it will return its default value.
  mutating func clearOutlineStyleTypeUndefined() {_uniqueStorage()._outlineStyleTypeUndefined = nil}

  var pageBreakBefore: TSS_SpecBoolArchive {
    get {return _storage._pageBreakBefore ?? TSS_SpecBoolArchive()}
    set {_uniqueStorage()._pageBreakBefore = newValue}
  }
  /// Returns true if `pageBreakBefore` has been explicitly set.
  var hasPageBreakBefore: Bool {return _storage._pageBreakBefore != nil}
  /// Clears the value of `pageBreakBefore`. Subsequent reads from it will return its default value.
  mutating func clearPageBreakBefore() {_uniqueStorage()._pageBreakBefore = nil}

  var pageBreakBeforeUndefined: Bool {
    get {return _storage._pageBreakBeforeUndefined ?? false}
    set {_uniqueStorage()._pageBreakBeforeUndefined = newValue}
  }
  /// Returns true if `pageBreakBeforeUndefined` has been explicitly set.
  var hasPageBreakBeforeUndefined: Bool {return _storage._pageBreakBeforeUndefined != nil}
  /// Clears the value of `pageBreakBeforeUndefined`. Subsequent reads from it will return its default value.
  mutating func clearPageBreakBeforeUndefined() {_uniqueStorage()._pageBreakBeforeUndefined = nil}

  var paragraphBorders: TSS_SpecIntegerArchive {
    get {return _storage._paragraphBorders ?? TSS_SpecIntegerArchive()}
    set {_uniqueStorage()._paragraphBorders = newValue}
  }
  /// Returns true if `paragraphBorders` has been explicitly set.
  var hasParagraphBorders: Bool {return _storage._paragraphBorders != nil}
  /// Clears the value of `paragraphBorders`. Subsequent reads from it will return its default value.
  mutating func clearParagraphBorders() {_uniqueStorage()._paragraphBorders = nil}

  var paragraphBordersUndefined: Bool {
    get {return _storage._paragraphBordersUndefined ?? false}
    set {_uniqueStorage()._paragraphBordersUndefined = newValue}
  }
  /// Returns true if `paragraphBordersUndefined` has been explicitly set.
  var hasParagraphBordersUndefined: Bool {return _storage._paragraphBordersUndefined != nil}
  /// Clears the value of `paragraphBordersUndefined`. Subsequent reads from it will return its default value.
  mutating func clearParagraphBordersUndefined() {_uniqueStorage()._paragraphBordersUndefined = nil}

  var paragraphRuleOffset: TSWP_SpecRuleOffsetArchive {
    get {return _storage._paragraphRuleOffset ?? TSWP_SpecRuleOffsetArchive()}
    set {_uniqueStorage()._paragraphRuleOffset = newValue}
  }
  /// Returns true if `paragraphRuleOffset` has been explicitly set.
  var hasParagraphRuleOffset: Bool {return _storage._paragraphRuleOffset != nil}
  /// Clears the value of `paragraphRuleOffset`. Subsequent reads from it will return its default value.
  mutating func clearParagraphRuleOffset() {_uniqueStorage()._paragraphRuleOffset = nil}

  var paragraphRuleOffsetUndefined: Bool {
    get {return _storage._paragraphRuleOffsetUndefined ?? false}
    set {_uniqueStorage()._paragraphRuleOffsetUndefined = newValue}
  }
  /// Returns true if `paragraphRuleOffsetUndefined` has been explicitly set.
  var hasParagraphRuleOffsetUndefined: Bool {return _storage._paragraphRuleOffsetUndefined != nil}
  /// Clears the value of `paragraphRuleOffsetUndefined`. Subsequent reads from it will return its default value.
  mutating func clearParagraphRuleOffsetUndefined() {_uniqueStorage()._paragraphRuleOffsetUndefined = nil}

  var paragraphRuleWidth: TSS_SpecDoubleArchive {
    get {return _storage._paragraphRuleWidth ?? TSS_SpecDoubleArchive()}
    set {_uniqueStorage()._paragraphRuleWidth = newValue}
  }
  /// Returns true if `paragraphRuleWidth` has been explicitly set.
  var hasParagraphRuleWidth: Bool {return _storage._paragraphRuleWidth != nil}
  /// Clears the value of `paragraphRuleWidth`. Subsequent reads from it will return its default value.
  mutating func clearParagraphRuleWidth() {_uniqueStorage()._paragraphRuleWidth = nil}

  var paragraphRuleWidthUndefined: Bool {
    get {return _storage._paragraphRuleWidthUndefined ?? false}
    set {_uniqueStorage()._paragraphRuleWidthUndefined = newValue}
  }
  /// Returns true if `paragraphRuleWidthUndefined` has been explicitly set.
  var hasParagraphRuleWidthUndefined: Bool {return _storage._paragraphRuleWidthUndefined != nil}
  /// Clears the value of `paragraphRuleWidthUndefined`. Subsequent reads from it will return its default value.
  mutating func clearParagraphRuleWidthUndefined() {_uniqueStorage()._paragraphRuleWidthUndefined = nil}

  var rightIndent: TSS_SpecDoubleArchive {
    get {return _storage._rightIndent ?? TSS_SpecDoubleArchive()}
    set {_uniqueStorage()._rightIndent = newValue}
  }
  /// Returns true if `rightIndent` has been explicitly set.
  var hasRightIndent: Bool {return _storage._rightIndent != nil}
  /// Clears the value of `rightIndent`. Subsequent reads from it will return its default value.
  mutating func clearRightIndent() {_uniqueStorage()._rightIndent = nil}

  var rightIndentUndefined: Bool {
    get {return _storage._rightIndentUndefined ?? false}
    set {_uniqueStorage()._rightIndentUndefined = newValue}
  }
  /// Returns true if `rightIndentUndefined` has been explicitly set.
  var hasRightIndentUndefined: Bool {return _storage._rightIndentUndefined != nil}
  /// Clears the value of `rightIndentUndefined`. Subsequent reads from it will return its default value.
  mutating func clearRightIndentUndefined() {_uniqueStorage()._rightIndentUndefined = nil}

  var spaceAfter: TSS_SpecDoubleArchive {
    get {return _storage._spaceAfter ?? TSS_SpecDoubleArchive()}
    set {_uniqueStorage()._spaceAfter = newValue}
  }
  /// Returns true if `spaceAfter` has been explicitly set.
  var hasSpaceAfter: Bool {return _storage._spaceAfter != nil}
  /// Clears the value of `spaceAfter`. Subsequent reads from it will return its default value.
  mutating func clearSpaceAfter() {_uniqueStorage()._spaceAfter = nil}

  var spaceAfterUndefined: Bool {
    get {return _storage._spaceAfterUndefined ?? false}
    set {_uniqueStorage()._spaceAfterUndefined = newValue}
  }
  /// Returns true if `spaceAfterUndefined` has been explicitly set.
  var hasSpaceAfterUndefined: Bool {return _storage._spaceAfterUndefined != nil}
  /// Clears the value of `spaceAfterUndefined`. Subsequent reads from it will return its default value.
  mutating func clearSpaceAfterUndefined() {_uniqueStorage()._spaceAfterUndefined = nil}

  var spaceBefore: TSS_SpecDoubleArchive {
    get {return _storage._spaceBefore ?? TSS_SpecDoubleArchive()}
    set {_uniqueStorage()._spaceBefore = newValue}
  }
  /// Returns true if `spaceBefore` has been explicitly set.
  var hasSpaceBefore: Bool {return _storage._spaceBefore != nil}
  /// Clears the value of `spaceBefore`. Subsequent reads from it will return its default value.
  mutating func clearSpaceBefore() {_uniqueStorage()._spaceBefore = nil}

  var spaceBeforeUndefined: Bool {
    get {return _storage._spaceBeforeUndefined ?? false}
    set {_uniqueStorage()._spaceBeforeUndefined = newValue}
  }
  /// Returns true if `spaceBeforeUndefined` has been explicitly set.
  var hasSpaceBeforeUndefined: Bool {return _storage._spaceBeforeUndefined != nil}
  /// Clears the value of `spaceBeforeUndefined`. Subsequent reads from it will return its default value.
  mutating func clearSpaceBeforeUndefined() {_uniqueStorage()._spaceBeforeUndefined = nil}

  var paragraphStroke: TSD_SpecStrokeArchive {
    get {return _storage._paragraphStroke ?? TSD_SpecStrokeArchive()}
    set {_uniqueStorage()._paragraphStroke = newValue}
  }
  /// Returns true if `paragraphStroke` has been explicitly set.
  var hasParagraphStroke: Bool {return _storage._paragraphStroke != nil}
  /// Clears the value of `paragraphStroke`. Subsequent reads from it will return its default value.
  mutating func clearParagraphStroke() {_uniqueStorage()._paragraphStroke = nil}

  var paragraphStrokeUndefined: Bool {
    get {return _storage._paragraphStrokeUndefined ?? false}
    set {_uniqueStorage()._paragraphStrokeUndefined = newValue}
  }
  /// Returns true if `paragraphStrokeUndefined` has been explicitly set.
  var hasParagraphStrokeUndefined: Bool {return _storage._paragraphStrokeUndefined != nil}
  /// Clears the value of `paragraphStrokeUndefined`. Subsequent reads from it will return its default value.
  mutating func clearParagraphStrokeUndefined() {_uniqueStorage()._paragraphStrokeUndefined = nil}

  var tabs: TSWP_SpecTabsArchive {
    get {return _storage._tabs ?? TSWP_SpecTabsArchive()}
    set {_uniqueStorage()._tabs = newValue}
  }
  /// Returns true if `tabs` has been explicitly set.
  var hasTabs: Bool {return _storage._tabs != nil}
  /// Clears the value of `tabs`. Subsequent reads from it will return its default value.
  mutating func clearTabs() {_uniqueStorage()._tabs = nil}

  var tabsUndefined: Bool {
    get {return _storage._tabsUndefined ?? false}
    set {_uniqueStorage()._tabsUndefined = newValue}
  }
  /// Returns true if `tabsUndefined` has been explicitly set.
  var hasTabsUndefined: Bool {return _storage._tabsUndefined != nil}
  /// Clears the value of `tabsUndefined`. Subsequent reads from it will return its default value.
  mutating func clearTabsUndefined() {_uniqueStorage()._tabsUndefined = nil}

  var widowControl: TSS_SpecIntegerArchive {
    get {return _storage._widowControl ?? TSS_SpecIntegerArchive()}
    set {_uniqueStorage()._widowControl = newValue}
  }
  /// Returns true if `widowControl` has been explicitly set.
  var hasWidowControl: Bool {return _storage._widowControl != nil}
  /// Clears the value of `widowControl`. Subsequent reads from it will return its default value.
  mutating func clearWidowControl() {_uniqueStorage()._widowControl = nil}

  var widowControlUndefined: Bool {
    get {return _storage._widowControlUndefined ?? false}
    set {_uniqueStorage()._widowControlUndefined = newValue}
  }
  /// Returns true if `widowControlUndefined` has been explicitly set.
  var hasWidowControlUndefined: Bool {return _storage._widowControlUndefined != nil}
  /// Clears the value of `widowControlUndefined`. Subsequent reads from it will return its default value.
  mutating func clearWidowControlUndefined() {_uniqueStorage()._widowControlUndefined = nil}

  var showInBookmarksList: TSS_SpecBoolArchive {
    get {return _storage._showInBookmarksList ?? TSS_SpecBoolArchive()}
    set {_uniqueStorage()._showInBookmarksList = newValue}
  }
  /// Returns true if `showInBookmarksList` has been explicitly set.
  var hasShowInBookmarksList: Bool {return _storage._showInBookmarksList != nil}
  /// Clears the value of `showInBookmarksList`. Subsequent reads from it will return its default value.
  mutating func clearShowInBookmarksList() {_uniqueStorage()._showInBookmarksList = nil}

  var showInBookmarksListUndefined: Bool {
    get {return _storage._showInBookmarksListUndefined ?? false}
    set {_uniqueStorage()._showInBookmarksListUndefined = newValue}
  }
  /// Returns true if `showInBookmarksListUndefined` has been explicitly set.
  var hasShowInBookmarksListUndefined: Bool {return _storage._showInBookmarksListUndefined != nil}
  /// Clears the value of `showInBookmarksListUndefined`. Subsequent reads from it will return its default value.
  mutating func clearShowInBookmarksListUndefined() {_uniqueStorage()._showInBookmarksListUndefined = nil}

  var showInTOCNavigator: TSS_SpecBoolArchive {
    get {return _storage._showInTOCNavigator ?? TSS_SpecBoolArchive()}
    set {_uniqueStorage()._showInTOCNavigator = newValue}
  }
  /// Returns true if `showInTOCNavigator` has been explicitly set.
  var hasShowInTOCNavigator: Bool {return _storage._showInTOCNavigator != nil}
  /// Clears the value of `showInTOCNavigator`. Subsequent reads from it will return its default value.
  mutating func clearShowInTOCNavigator() {_uniqueStorage()._showInTOCNavigator = nil}

  var showInTOCNavigatorUndefined: Bool {
    get {return _storage._showInTOCNavigatorUndefined ?? false}
    set {_uniqueStorage()._showInTOCNavigatorUndefined = newValue}
  }
  /// Returns true if `showInTOCNavigatorUndefined` has been explicitly set.
  var hasShowInTOCNavigatorUndefined: Bool {return _storage._showInTOCNavigatorUndefined != nil}
  /// Clears the value of `showInTOCNavigatorUndefined`. Subsequent reads from it will return its default value.
  mutating func clearShowInTOCNavigatorUndefined() {_uniqueStorage()._showInTOCNavigatorUndefined = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

struct TSWP_ShapeStylePropertyChangeSetArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var `super`: TSD_BaseShapeStylePropertyChangeSetArchive {
    get {return _super ?? TSD_BaseShapeStylePropertyChangeSetArchive()}
    set {_super = newValue}
  }
  /// Returns true if ``super`` has been explicitly set.
  var hasSuper: Bool {return self._super != nil}
  /// Clears the value of ``super``. Subsequent reads from it will return its default value.
  mutating func clearSuper() {self._super = nil}

  var columns: TSWP_SpecColumnsArchive {
    get {return _columns ?? TSWP_SpecColumnsArchive()}
    set {_columns = newValue}
  }
  /// Returns true if `columns` has been explicitly set.
  var hasColumns: Bool {return self._columns != nil}
  /// Clears the value of `columns`. Subsequent reads from it will return its default value.
  mutating func clearColumns() {self._columns = nil}

  var columnsUndefined: Bool {
    get {return _columnsUndefined ?? false}
    set {_columnsUndefined = newValue}
  }
  /// Returns true if `columnsUndefined` has been explicitly set.
  var hasColumnsUndefined: Bool {return self._columnsUndefined != nil}
  /// Clears the value of `columnsUndefined`. Subsequent reads from it will return its default value.
  mutating func clearColumnsUndefined() {self._columnsUndefined = nil}

  var padding: TSWP_SpecPaddingArchive {
    get {return _padding ?? TSWP_SpecPaddingArchive()}
    set {_padding = newValue}
  }
  /// Returns true if `padding` has been explicitly set.
  var hasPadding: Bool {return self._padding != nil}
  /// Clears the value of `padding`. Subsequent reads from it will return its default value.
  mutating func clearPadding() {self._padding = nil}

  var paddingUndefined: Bool {
    get {return _paddingUndefined ?? false}
    set {_paddingUndefined = newValue}
  }
  /// Returns true if `paddingUndefined` has been explicitly set.
  var hasPaddingUndefined: Bool {return self._paddingUndefined != nil}
  /// Clears the value of `paddingUndefined`. Subsequent reads from it will return its default value.
  mutating func clearPaddingUndefined() {self._paddingUndefined = nil}

  var shrinkTextToFit: TSS_SpecBoolArchive {
    get {return _shrinkTextToFit ?? TSS_SpecBoolArchive()}
    set {_shrinkTextToFit = newValue}
  }
  /// Returns true if `shrinkTextToFit` has been explicitly set.
  var hasShrinkTextToFit: Bool {return self._shrinkTextToFit != nil}
  /// Clears the value of `shrinkTextToFit`. Subsequent reads from it will return its default value.
  mutating func clearShrinkTextToFit() {self._shrinkTextToFit = nil}

  var shrinkTextToFitUndefined: Bool {
    get {return _shrinkTextToFitUndefined ?? false}
    set {_shrinkTextToFitUndefined = newValue}
  }
  /// Returns true if `shrinkTextToFitUndefined` has been explicitly set.
  var hasShrinkTextToFitUndefined: Bool {return self._shrinkTextToFitUndefined != nil}
  /// Clears the value of `shrinkTextToFitUndefined`. Subsequent reads from it will return its default value.
  mutating func clearShrinkTextToFitUndefined() {self._shrinkTextToFitUndefined = nil}

  var verticalAlignment: TSS_SpecIntegerArchive {
    get {return _verticalAlignment ?? TSS_SpecIntegerArchive()}
    set {_verticalAlignment = newValue}
  }
  /// Returns true if `verticalAlignment` has been explicitly set.
  var hasVerticalAlignment: Bool {return self._verticalAlignment != nil}
  /// Clears the value of `verticalAlignment`. Subsequent reads from it will return its default value.
  mutating func clearVerticalAlignment() {self._verticalAlignment = nil}

  var verticalAlignmentUndefined: Bool {
    get {return _verticalAlignmentUndefined ?? false}
    set {_verticalAlignmentUndefined = newValue}
  }
  /// Returns true if `verticalAlignmentUndefined` has been explicitly set.
  var hasVerticalAlignmentUndefined: Bool {return self._verticalAlignmentUndefined != nil}
  /// Clears the value of `verticalAlignmentUndefined`. Subsequent reads from it will return its default value.
  mutating func clearVerticalAlignmentUndefined() {self._verticalAlignmentUndefined = nil}

  var verticalText: TSS_SpecBoolArchive {
    get {return _verticalText ?? TSS_SpecBoolArchive()}
    set {_verticalText = newValue}
  }
  /// Returns true if `verticalText` has been explicitly set.
  var hasVerticalText: Bool {return self._verticalText != nil}
  /// Clears the value of `verticalText`. Subsequent reads from it will return its default value.
  mutating func clearVerticalText() {self._verticalText = nil}

  var verticalTextUndefined: Bool {
    get {return _verticalTextUndefined ?? false}
    set {_verticalTextUndefined = newValue}
  }
  /// Returns true if `verticalTextUndefined` has been explicitly set.
  var hasVerticalTextUndefined: Bool {return self._verticalTextUndefined != nil}
  /// Clears the value of `verticalTextUndefined`. Subsequent reads from it will return its default value.
  mutating func clearVerticalTextUndefined() {self._verticalTextUndefined = nil}

  var defaultParagraphStyle: TSWP_SpecParagraphStyleArchive {
    get {return _defaultParagraphStyle ?? TSWP_SpecParagraphStyleArchive()}
    set {_defaultParagraphStyle = newValue}
  }
  /// Returns true if `defaultParagraphStyle` has been explicitly set.
  var hasDefaultParagraphStyle: Bool {return self._defaultParagraphStyle != nil}
  /// Clears the value of `defaultParagraphStyle`. Subsequent reads from it will return its default value.
  mutating func clearDefaultParagraphStyle() {self._defaultParagraphStyle = nil}

  var defaultParagraphStyleUndefined: Bool {
    get {return _defaultParagraphStyleUndefined ?? false}
    set {_defaultParagraphStyleUndefined = newValue}
  }
  /// Returns true if `defaultParagraphStyleUndefined` has been explicitly set.
  var hasDefaultParagraphStyleUndefined: Bool {return self._defaultParagraphStyleUndefined != nil}
  /// Clears the value of `defaultParagraphStyleUndefined`. Subsequent reads from it will return its default value.
  mutating func clearDefaultParagraphStyleUndefined() {self._defaultParagraphStyleUndefined = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _super: TSD_BaseShapeStylePropertyChangeSetArchive? = nil
  fileprivate var _columns: TSWP_SpecColumnsArchive? = nil
  fileprivate var _columnsUndefined: Bool? = nil
  fileprivate var _padding: TSWP_SpecPaddingArchive? = nil
  fileprivate var _paddingUndefined: Bool? = nil
  fileprivate var _shrinkTextToFit: TSS_SpecBoolArchive? = nil
  fileprivate var _shrinkTextToFitUndefined: Bool? = nil
  fileprivate var _verticalAlignment: TSS_SpecIntegerArchive? = nil
  fileprivate var _verticalAlignmentUndefined: Bool? = nil
  fileprivate var _verticalText: TSS_SpecBoolArchive? = nil
  fileprivate var _verticalTextUndefined: Bool? = nil
  fileprivate var _defaultParagraphStyle: TSWP_SpecParagraphStyleArchive? = nil
  fileprivate var _defaultParagraphStyleUndefined: Bool? = nil
}

struct TSWP_TOCEntryStylePropertyChangeSetArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var `super`: TSWP_ParagraphStylePropertyChangeSetArchive {
    get {return _super ?? TSWP_ParagraphStylePropertyChangeSetArchive()}
    set {_super = newValue}
  }
  /// Returns true if ``super`` has been explicitly set.
  var hasSuper: Bool {return self._super != nil}
  /// Clears the value of ``super``. Subsequent reads from it will return its default value.
  mutating func clearSuper() {self._super = nil}

  var tocShowPageNumber: TSS_SpecBoolArchive {
    get {return _tocShowPageNumber ?? TSS_SpecBoolArchive()}
    set {_tocShowPageNumber = newValue}
  }
  /// Returns true if `tocShowPageNumber` has been explicitly set.
  var hasTocShowPageNumber: Bool {return self._tocShowPageNumber != nil}
  /// Clears the value of `tocShowPageNumber`. Subsequent reads from it will return its default value.
  mutating func clearTocShowPageNumber() {self._tocShowPageNumber = nil}

  var tocShowPageNumberUndefined: Bool {
    get {return _tocShowPageNumberUndefined ?? false}
    set {_tocShowPageNumberUndefined = newValue}
  }
  /// Returns true if `tocShowPageNumberUndefined` has been explicitly set.
  var hasTocShowPageNumberUndefined: Bool {return self._tocShowPageNumberUndefined != nil}
  /// Clears the value of `tocShowPageNumberUndefined`. Subsequent reads from it will return its default value.
  mutating func clearTocShowPageNumberUndefined() {self._tocShowPageNumberUndefined = nil}

  var tocPageNumberStyle: TSWP_SpecCharacterStyleArchive {
    get {return _tocPageNumberStyle ?? TSWP_SpecCharacterStyleArchive()}
    set {_tocPageNumberStyle = newValue}
  }
  /// Returns true if `tocPageNumberStyle` has been explicitly set.
  var hasTocPageNumberStyle: Bool {return self._tocPageNumberStyle != nil}
  /// Clears the value of `tocPageNumberStyle`. Subsequent reads from it will return its default value.
  mutating func clearTocPageNumberStyle() {self._tocPageNumberStyle = nil}

  var tocPageNumberStyleUndefined: Bool {
    get {return _tocPageNumberStyleUndefined ?? false}
    set {_tocPageNumberStyleUndefined = newValue}
  }
  /// Returns true if `tocPageNumberStyleUndefined` has been explicitly set.
  var hasTocPageNumberStyleUndefined: Bool {return self._tocPageNumberStyleUndefined != nil}
  /// Clears the value of `tocPageNumberStyleUndefined`. Subsequent reads from it will return its default value.
  mutating func clearTocPageNumberStyleUndefined() {self._tocPageNumberStyleUndefined = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _super: TSWP_ParagraphStylePropertyChangeSetArchive? = nil
  fileprivate var _tocShowPageNumber: TSS_SpecBoolArchive? = nil
  fileprivate var _tocShowPageNumberUndefined: Bool? = nil
  fileprivate var _tocPageNumberStyle: TSWP_SpecCharacterStyleArchive? = nil
  fileprivate var _tocPageNumberStyleUndefined: Bool? = nil
}

struct TSWP_StyleDiffArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var style: TSP_Reference {
    get {return _style ?? TSP_Reference()}
    set {_style = newValue}
  }
  /// Returns true if `style` has been explicitly set.
  var hasStyle: Bool {return self._style != nil}
  /// Clears the value of `style`. Subsequent reads from it will return its default value.
  mutating func clearStyle() {self._style = nil}

  var characterChangeSet: TSWP_CharacterStylePropertyChangeSetArchive {
    get {return _characterChangeSet ?? TSWP_CharacterStylePropertyChangeSetArchive()}
    set {_characterChangeSet = newValue}
  }
  /// Returns true if `characterChangeSet` has been explicitly set.
  var hasCharacterChangeSet: Bool {return self._characterChangeSet != nil}
  /// Clears the value of `characterChangeSet`. Subsequent reads from it will return its default value.
  mutating func clearCharacterChangeSet() {self._characterChangeSet = nil}

  var paragraphChangeSet: TSWP_ParagraphStylePropertyChangeSetArchive {
    get {return _paragraphChangeSet ?? TSWP_ParagraphStylePropertyChangeSetArchive()}
    set {_paragraphChangeSet = newValue}
  }
  /// Returns true if `paragraphChangeSet` has been explicitly set.
  var hasParagraphChangeSet: Bool {return self._paragraphChangeSet != nil}
  /// Clears the value of `paragraphChangeSet`. Subsequent reads from it will return its default value.
  mutating func clearParagraphChangeSet() {self._paragraphChangeSet = nil}

  var shapeChangeSet: TSWP_ShapeStylePropertyChangeSetArchive {
    get {return _shapeChangeSet ?? TSWP_ShapeStylePropertyChangeSetArchive()}
    set {_shapeChangeSet = newValue}
  }
  /// Returns true if `shapeChangeSet` has been explicitly set.
  var hasShapeChangeSet: Bool {return self._shapeChangeSet != nil}
  /// Clears the value of `shapeChangeSet`. Subsequent reads from it will return its default value.
  mutating func clearShapeChangeSet() {self._shapeChangeSet = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _style: TSP_Reference? = nil
  fileprivate var _characterChangeSet: TSWP_CharacterStylePropertyChangeSetArchive? = nil
  fileprivate var _paragraphChangeSet: TSWP_ParagraphStylePropertyChangeSetArchive? = nil
  fileprivate var _shapeChangeSet: TSWP_ShapeStylePropertyChangeSetArchive? = nil
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "TSWP"

extension TSWP_SpecSetCharacterStyleArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecSetCharacterStyleArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "character_style"),
    2: .same(proto: "unset"),
  ]

  public var isInitialized: Bool {
    if self._unset == nil {return false}
    if let v = self._characterStyle, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._characterStyle)
      case 2: try decoder.decodeSingularBoolField(value: &self._unset)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._characterStyle {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if let v = self._unset {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecSetCharacterStyleArchive, rhs: TSWP_SpecSetCharacterStyleArchive) -> Bool {
    if lhs._characterStyle != rhs._characterStyle {return false}
    if lhs._unset != rhs._unset {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_SpecSetColumnsArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecSetColumnsArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "columns"),
    2: .same(proto: "unset"),
  ]

  public var isInitialized: Bool {
    if self._unset == nil {return false}
    if let v = self._columns, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._columns)
      case 2: try decoder.decodeSingularBoolField(value: &self._unset)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._columns {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if let v = self._unset {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecSetColumnsArchive, rhs: TSWP_SpecSetColumnsArchive) -> Bool {
    if lhs._columns != rhs._columns {return false}
    if lhs._unset != rhs._unset {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_SpecSetDropCapArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecSetDropCapArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "drop_cap"),
    2: .same(proto: "unset"),
  ]

  public var isInitialized: Bool {
    if self._unset == nil {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._dropCap)
      case 2: try decoder.decodeSingularBoolField(value: &self._unset)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._dropCap {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if let v = self._unset {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecSetDropCapArchive, rhs: TSWP_SpecSetDropCapArchive) -> Bool {
    if lhs._dropCap != rhs._dropCap {return false}
    if lhs._unset != rhs._unset {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_SpecSetFontFeaturesArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecSetFontFeaturesArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "font_features"),
    2: .standard(proto: "font_features_undefined"),
    3: .same(proto: "unset"),
  ]

  public var isInitialized: Bool {
    if self._unset == nil {return false}
    if !SwiftProtobuf.Internal.areAllInitialized(self.fontFeatures) {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeRepeatedMessageField(value: &self.fontFeatures)
      case 2: try decoder.decodeSingularBoolField(value: &self._fontFeaturesUndefined)
      case 3: try decoder.decodeSingularBoolField(value: &self._unset)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.fontFeatures.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.fontFeatures, fieldNumber: 1)
    }
    if let v = self._fontFeaturesUndefined {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 2)
    }
    if let v = self._unset {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecSetFontFeaturesArchive, rhs: TSWP_SpecSetFontFeaturesArchive) -> Bool {
    if lhs.fontFeatures != rhs.fontFeatures {return false}
    if lhs._fontFeaturesUndefined != rhs._fontFeaturesUndefined {return false}
    if lhs._unset != rhs._unset {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_SpecSetLineSpacingArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecSetLineSpacingArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "line_spacing"),
    2: .same(proto: "unset"),
  ]

  public var isInitialized: Bool {
    if self._unset == nil {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._lineSpacing)
      case 2: try decoder.decodeSingularBoolField(value: &self._unset)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._lineSpacing {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if let v = self._unset {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecSetLineSpacingArchive, rhs: TSWP_SpecSetLineSpacingArchive) -> Bool {
    if lhs._lineSpacing != rhs._lineSpacing {return false}
    if lhs._unset != rhs._unset {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_SpecSetListStyleArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecSetListStyleArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "list_style"),
    2: .same(proto: "unset"),
  ]

  public var isInitialized: Bool {
    if self._unset == nil {return false}
    if let v = self._listStyle, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._listStyle)
      case 2: try decoder.decodeSingularBoolField(value: &self._unset)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._listStyle {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if let v = self._unset {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecSetListStyleArchive, rhs: TSWP_SpecSetListStyleArchive) -> Bool {
    if lhs._listStyle != rhs._listStyle {return false}
    if lhs._unset != rhs._unset {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_SpecSetListStyleBoolArrayArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecSetListStyleBoolArrayArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "list_style_bool_array"),
    2: .standard(proto: "list_style_bool_array_undefined"),
    3: .same(proto: "unset"),
  ]

  public var isInitialized: Bool {
    if self._unset == nil {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeRepeatedBoolField(value: &self.listStyleBoolArray)
      case 2: try decoder.decodeSingularBoolField(value: &self._listStyleBoolArrayUndefined)
      case 3: try decoder.decodeSingularBoolField(value: &self._unset)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.listStyleBoolArray.isEmpty {
      try visitor.visitRepeatedBoolField(value: self.listStyleBoolArray, fieldNumber: 1)
    }
    if let v = self._listStyleBoolArrayUndefined {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 2)
    }
    if let v = self._unset {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecSetListStyleBoolArrayArchive, rhs: TSWP_SpecSetListStyleBoolArrayArchive) -> Bool {
    if lhs.listStyleBoolArray != rhs.listStyleBoolArray {return false}
    if lhs._listStyleBoolArrayUndefined != rhs._listStyleBoolArrayUndefined {return false}
    if lhs._unset != rhs._unset {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_SpecSetListStyleFloatArrayArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecSetListStyleFloatArrayArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "list_style_float_array"),
    2: .standard(proto: "list_style_float_array_undefined"),
    3: .same(proto: "unset"),
  ]

  public var isInitialized: Bool {
    if self._unset == nil {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeRepeatedFloatField(value: &self.listStyleFloatArray)
      case 2: try decoder.decodeSingularBoolField(value: &self._listStyleFloatArrayUndefined)
      case 3: try decoder.decodeSingularBoolField(value: &self._unset)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.listStyleFloatArray.isEmpty {
      try visitor.visitRepeatedFloatField(value: self.listStyleFloatArray, fieldNumber: 1)
    }
    if let v = self._listStyleFloatArrayUndefined {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 2)
    }
    if let v = self._unset {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecSetListStyleFloatArrayArchive, rhs: TSWP_SpecSetListStyleFloatArrayArchive) -> Bool {
    if lhs.listStyleFloatArray != rhs.listStyleFloatArray {return false}
    if lhs._listStyleFloatArrayUndefined != rhs._listStyleFloatArrayUndefined {return false}
    if lhs._unset != rhs._unset {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_SpecSetListStyleImageDataArrayArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecSetListStyleImageDataArrayArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "list_style_image_data_array"),
    2: .standard(proto: "list_style_image_data_array_undefined"),
    3: .same(proto: "unset"),
  ]

  public var isInitialized: Bool {
    if self._unset == nil {return false}
    if !SwiftProtobuf.Internal.areAllInitialized(self.listStyleImageDataArray) {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeRepeatedMessageField(value: &self.listStyleImageDataArray)
      case 2: try decoder.decodeSingularBoolField(value: &self._listStyleImageDataArrayUndefined)
      case 3: try decoder.decodeSingularBoolField(value: &self._unset)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.listStyleImageDataArray.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.listStyleImageDataArray, fieldNumber: 1)
    }
    if let v = self._listStyleImageDataArrayUndefined {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 2)
    }
    if let v = self._unset {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecSetListStyleImageDataArrayArchive, rhs: TSWP_SpecSetListStyleImageDataArrayArchive) -> Bool {
    if lhs.listStyleImageDataArray != rhs.listStyleImageDataArray {return false}
    if lhs._listStyleImageDataArrayUndefined != rhs._listStyleImageDataArrayUndefined {return false}
    if lhs._unset != rhs._unset {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_SpecSetListStyleListLabelGeometryArrayArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecSetListStyleListLabelGeometryArrayArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "list_style_list_label_geometry_array"),
    2: .standard(proto: "list_style_list_label_geometry_array_undefined"),
    3: .same(proto: "unset"),
  ]

  public var isInitialized: Bool {
    if self._unset == nil {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeRepeatedMessageField(value: &self.listStyleListLabelGeometryArray)
      case 2: try decoder.decodeSingularBoolField(value: &self._listStyleListLabelGeometryArrayUndefined)
      case 3: try decoder.decodeSingularBoolField(value: &self._unset)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.listStyleListLabelGeometryArray.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.listStyleListLabelGeometryArray, fieldNumber: 1)
    }
    if let v = self._listStyleListLabelGeometryArrayUndefined {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 2)
    }
    if let v = self._unset {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecSetListStyleListLabelGeometryArrayArchive, rhs: TSWP_SpecSetListStyleListLabelGeometryArrayArchive) -> Bool {
    if lhs.listStyleListLabelGeometryArray != rhs.listStyleListLabelGeometryArray {return false}
    if lhs._listStyleListLabelGeometryArrayUndefined != rhs._listStyleListLabelGeometryArrayUndefined {return false}
    if lhs._unset != rhs._unset {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_SpecSetListStyleListLabelTypeArrayArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecSetListStyleListLabelTypeArrayArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "list_style_list_label_type_array"),
    2: .standard(proto: "list_style_list_label_type_array_undefined"),
    3: .same(proto: "unset"),
  ]

  public var isInitialized: Bool {
    if self._unset == nil {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeRepeatedEnumField(value: &self.listStyleListLabelTypeArray)
      case 2: try decoder.decodeSingularBoolField(value: &self._listStyleListLabelTypeArrayUndefined)
      case 3: try decoder.decodeSingularBoolField(value: &self._unset)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.listStyleListLabelTypeArray.isEmpty {
      try visitor.visitRepeatedEnumField(value: self.listStyleListLabelTypeArray, fieldNumber: 1)
    }
    if let v = self._listStyleListLabelTypeArrayUndefined {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 2)
    }
    if let v = self._unset {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecSetListStyleListLabelTypeArrayArchive, rhs: TSWP_SpecSetListStyleListLabelTypeArrayArchive) -> Bool {
    if lhs.listStyleListLabelTypeArray != rhs.listStyleListLabelTypeArray {return false}
    if lhs._listStyleListLabelTypeArrayUndefined != rhs._listStyleListLabelTypeArrayUndefined {return false}
    if lhs._unset != rhs._unset {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_SpecSetListStyleListNumberTypeArrayArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecSetListStyleListNumberTypeArrayArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "list_style_list_number_type_array"),
    2: .standard(proto: "list_style_list_number_type_array_undefined"),
    3: .same(proto: "unset"),
  ]

  public var isInitialized: Bool {
    if self._unset == nil {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeRepeatedEnumField(value: &self.listStyleListNumberTypeArray)
      case 2: try decoder.decodeSingularBoolField(value: &self._listStyleListNumberTypeArrayUndefined)
      case 3: try decoder.decodeSingularBoolField(value: &self._unset)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.listStyleListNumberTypeArray.isEmpty {
      try visitor.visitRepeatedEnumField(value: self.listStyleListNumberTypeArray, fieldNumber: 1)
    }
    if let v = self._listStyleListNumberTypeArrayUndefined {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 2)
    }
    if let v = self._unset {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecSetListStyleListNumberTypeArrayArchive, rhs: TSWP_SpecSetListStyleListNumberTypeArrayArchive) -> Bool {
    if lhs.listStyleListNumberTypeArray != rhs.listStyleListNumberTypeArray {return false}
    if lhs._listStyleListNumberTypeArrayUndefined != rhs._listStyleListNumberTypeArrayUndefined {return false}
    if lhs._unset != rhs._unset {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_SpecSetListStyleStringArrayArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecSetListStyleStringArrayArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "list_style_string_array"),
    2: .standard(proto: "list_style_string_array_undefined"),
    3: .same(proto: "unset"),
  ]

  public var isInitialized: Bool {
    if self._unset == nil {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeRepeatedStringField(value: &self.listStyleStringArray)
      case 2: try decoder.decodeSingularBoolField(value: &self._listStyleStringArrayUndefined)
      case 3: try decoder.decodeSingularBoolField(value: &self._unset)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.listStyleStringArray.isEmpty {
      try visitor.visitRepeatedStringField(value: self.listStyleStringArray, fieldNumber: 1)
    }
    if let v = self._listStyleStringArrayUndefined {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 2)
    }
    if let v = self._unset {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecSetListStyleStringArrayArchive, rhs: TSWP_SpecSetListStyleStringArrayArchive) -> Bool {
    if lhs.listStyleStringArray != rhs.listStyleStringArray {return false}
    if lhs._listStyleStringArrayUndefined != rhs._listStyleStringArrayUndefined {return false}
    if lhs._unset != rhs._unset {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_SpecSetPaddingArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecSetPaddingArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "padding"),
    2: .same(proto: "unset"),
  ]

  public var isInitialized: Bool {
    if self._unset == nil {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._padding)
      case 2: try decoder.decodeSingularBoolField(value: &self._unset)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._padding {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if let v = self._unset {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecSetPaddingArchive, rhs: TSWP_SpecSetPaddingArchive) -> Bool {
    if lhs._padding != rhs._padding {return false}
    if lhs._unset != rhs._unset {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_SpecSetParagraphStyleArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecSetParagraphStyleArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "paragraph_style"),
    2: .same(proto: "unset"),
  ]

  public var isInitialized: Bool {
    if self._unset == nil {return false}
    if let v = self._paragraphStyle, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._paragraphStyle)
      case 2: try decoder.decodeSingularBoolField(value: &self._unset)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._paragraphStyle {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if let v = self._unset {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecSetParagraphStyleArchive, rhs: TSWP_SpecSetParagraphStyleArchive) -> Bool {
    if lhs._paragraphStyle != rhs._paragraphStyle {return false}
    if lhs._unset != rhs._unset {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_SpecSetRuleOffsetArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecSetRuleOffsetArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "rule_offset"),
    2: .same(proto: "unset"),
  ]

  public var isInitialized: Bool {
    if self._unset == nil {return false}
    if let v = self._ruleOffset, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._ruleOffset)
      case 2: try decoder.decodeSingularBoolField(value: &self._unset)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._ruleOffset {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if let v = self._unset {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecSetRuleOffsetArchive, rhs: TSWP_SpecSetRuleOffsetArchive) -> Bool {
    if lhs._ruleOffset != rhs._ruleOffset {return false}
    if lhs._unset != rhs._unset {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_SpecSetTabsArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecSetTabsArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "tabs"),
    2: .same(proto: "unset"),
  ]

  public var isInitialized: Bool {
    if self._unset == nil {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._tabs)
      case 2: try decoder.decodeSingularBoolField(value: &self._unset)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._tabs {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if let v = self._unset {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecSetTabsArchive, rhs: TSWP_SpecSetTabsArchive) -> Bool {
    if lhs._tabs != rhs._tabs {return false}
    if lhs._unset != rhs._unset {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_SpecCharacterStyleArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecCharacterStyleArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "spec_set_character_style"),
  ]

  public var isInitialized: Bool {
    if let v = self._specSetCharacterStyle, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._specSetCharacterStyle)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._specSetCharacterStyle {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecCharacterStyleArchive, rhs: TSWP_SpecCharacterStyleArchive) -> Bool {
    if lhs._specSetCharacterStyle != rhs._specSetCharacterStyle {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_SpecColumnsArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecColumnsArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "spec_set_columns"),
  ]

  public var isInitialized: Bool {
    if let v = self._specSetColumns, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._specSetColumns)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._specSetColumns {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecColumnsArchive, rhs: TSWP_SpecColumnsArchive) -> Bool {
    if lhs._specSetColumns != rhs._specSetColumns {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_SpecDropCapArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecDropCapArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "spec_set_drop_cap"),
  ]

  public var isInitialized: Bool {
    if let v = self._specSetDropCap, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._specSetDropCap)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._specSetDropCap {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecDropCapArchive, rhs: TSWP_SpecDropCapArchive) -> Bool {
    if lhs._specSetDropCap != rhs._specSetDropCap {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_SpecFontFeaturesArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecFontFeaturesArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "spec_set_font_features"),
  ]

  public var isInitialized: Bool {
    if let v = self._specSetFontFeatures, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._specSetFontFeatures)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._specSetFontFeatures {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecFontFeaturesArchive, rhs: TSWP_SpecFontFeaturesArchive) -> Bool {
    if lhs._specSetFontFeatures != rhs._specSetFontFeatures {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_SpecLineSpacingArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecLineSpacingArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "spec_set_line_spacing"),
  ]

  public var isInitialized: Bool {
    if let v = self._specSetLineSpacing, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._specSetLineSpacing)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._specSetLineSpacing {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecLineSpacingArchive, rhs: TSWP_SpecLineSpacingArchive) -> Bool {
    if lhs._specSetLineSpacing != rhs._specSetLineSpacing {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_SpecListStyleArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecListStyleArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "spec_set_list_style"),
  ]

  public var isInitialized: Bool {
    if let v = self._specSetListStyle, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._specSetListStyle)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._specSetListStyle {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecListStyleArchive, rhs: TSWP_SpecListStyleArchive) -> Bool {
    if lhs._specSetListStyle != rhs._specSetListStyle {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_SpecListStyleBoolArrayArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecListStyleBoolArrayArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "spec_set_list_style_bool_array"),
  ]

  public var isInitialized: Bool {
    if let v = self._specSetListStyleBoolArray, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._specSetListStyleBoolArray)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._specSetListStyleBoolArray {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecListStyleBoolArrayArchive, rhs: TSWP_SpecListStyleBoolArrayArchive) -> Bool {
    if lhs._specSetListStyleBoolArray != rhs._specSetListStyleBoolArray {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_SpecListStyleFloatArrayArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecListStyleFloatArrayArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "spec_set_list_style_float_array"),
  ]

  public var isInitialized: Bool {
    if let v = self._specSetListStyleFloatArray, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._specSetListStyleFloatArray)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._specSetListStyleFloatArray {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecListStyleFloatArrayArchive, rhs: TSWP_SpecListStyleFloatArrayArchive) -> Bool {
    if lhs._specSetListStyleFloatArray != rhs._specSetListStyleFloatArray {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_SpecListStyleImageDataArrayArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecListStyleImageDataArrayArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "spec_set_list_style_image_data_array"),
  ]

  public var isInitialized: Bool {
    if let v = self._specSetListStyleImageDataArray, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._specSetListStyleImageDataArray)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._specSetListStyleImageDataArray {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecListStyleImageDataArrayArchive, rhs: TSWP_SpecListStyleImageDataArrayArchive) -> Bool {
    if lhs._specSetListStyleImageDataArray != rhs._specSetListStyleImageDataArray {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_SpecListStyleListLabelGeometryArrayArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecListStyleListLabelGeometryArrayArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "spec_set_list_style_list_label_geometry_array"),
  ]

  public var isInitialized: Bool {
    if let v = self._specSetListStyleListLabelGeometryArray, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._specSetListStyleListLabelGeometryArray)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._specSetListStyleListLabelGeometryArray {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecListStyleListLabelGeometryArrayArchive, rhs: TSWP_SpecListStyleListLabelGeometryArrayArchive) -> Bool {
    if lhs._specSetListStyleListLabelGeometryArray != rhs._specSetListStyleListLabelGeometryArray {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_SpecListStyleListLabelTypeArrayArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecListStyleListLabelTypeArrayArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "spec_set_list_style_list_label_type_array"),
  ]

  public var isInitialized: Bool {
    if let v = self._specSetListStyleListLabelTypeArray, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._specSetListStyleListLabelTypeArray)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._specSetListStyleListLabelTypeArray {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecListStyleListLabelTypeArrayArchive, rhs: TSWP_SpecListStyleListLabelTypeArrayArchive) -> Bool {
    if lhs._specSetListStyleListLabelTypeArray != rhs._specSetListStyleListLabelTypeArray {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_SpecListStyleListNumberTypeArrayArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecListStyleListNumberTypeArrayArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "spec_set_list_style_list_number_type_array"),
  ]

  public var isInitialized: Bool {
    if let v = self._specSetListStyleListNumberTypeArray, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._specSetListStyleListNumberTypeArray)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._specSetListStyleListNumberTypeArray {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecListStyleListNumberTypeArrayArchive, rhs: TSWP_SpecListStyleListNumberTypeArrayArchive) -> Bool {
    if lhs._specSetListStyleListNumberTypeArray != rhs._specSetListStyleListNumberTypeArray {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_SpecListStyleStringArrayArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecListStyleStringArrayArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "spec_set_list_style_string_array"),
  ]

  public var isInitialized: Bool {
    if let v = self._specSetListStyleStringArray, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._specSetListStyleStringArray)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._specSetListStyleStringArray {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecListStyleStringArrayArchive, rhs: TSWP_SpecListStyleStringArrayArchive) -> Bool {
    if lhs._specSetListStyleStringArray != rhs._specSetListStyleStringArray {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_SpecPaddingArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecPaddingArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "spec_set_padding"),
  ]

  public var isInitialized: Bool {
    if let v = self._specSetPadding, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._specSetPadding)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._specSetPadding {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecPaddingArchive, rhs: TSWP_SpecPaddingArchive) -> Bool {
    if lhs._specSetPadding != rhs._specSetPadding {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_SpecParagraphStyleArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecParagraphStyleArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "spec_set_paragraph_style"),
  ]

  public var isInitialized: Bool {
    if let v = self._specSetParagraphStyle, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._specSetParagraphStyle)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._specSetParagraphStyle {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecParagraphStyleArchive, rhs: TSWP_SpecParagraphStyleArchive) -> Bool {
    if lhs._specSetParagraphStyle != rhs._specSetParagraphStyle {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_SpecRuleOffsetArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecRuleOffsetArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "spec_set_rule_offset"),
  ]

  public var isInitialized: Bool {
    if let v = self._specSetRuleOffset, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._specSetRuleOffset)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._specSetRuleOffset {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecRuleOffsetArchive, rhs: TSWP_SpecRuleOffsetArchive) -> Bool {
    if lhs._specSetRuleOffset != rhs._specSetRuleOffset {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_SpecTabsArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SpecTabsArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "spec_set_tabs"),
  ]

  public var isInitialized: Bool {
    if let v = self._specSetTabs, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._specSetTabs)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._specSetTabs {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_SpecTabsArchive, rhs: TSWP_SpecTabsArchive) -> Bool {
    if lhs._specSetTabs != rhs._specSetTabs {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_CharacterStylePropertyChangeSetArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".CharacterStylePropertyChangeSetArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "baseline_shift"),
    2: .standard(proto: "baseline_shift_undefined"),
    3: .same(proto: "capitalization"),
    4: .standard(proto: "capitalization_undefined"),
    5: .standard(proto: "compatibility_font_name"),
    6: .standard(proto: "compatibility_font_name_undefined"),
    7: .standard(proto: "emphasis_marks"),
    8: .standard(proto: "emphasis_marks_undefined"),
    9: .same(proto: "bold"),
    10: .standard(proto: "bold_undefined"),
    11: .same(proto: "italic"),
    12: .standard(proto: "italic_undefined"),
    13: .standard(proto: "font_features"),
    14: .standard(proto: "font_features_undefined"),
    15: .standard(proto: "font_name"),
    16: .standard(proto: "font_name_undefined"),
    17: .standard(proto: "font_size"),
    18: .standard(proto: "font_size_undefined"),
    19: .standard(proto: "font_size_delta"),
    20: .standard(proto: "font_size_delta_undefined"),
    21: .same(proto: "kerning"),
    22: .standard(proto: "kerning_undefined"),
    23: .same(proto: "language"),
    24: .standard(proto: "language_undefined"),
    25: .same(proto: "ligatures"),
    26: .standard(proto: "ligatures_undefined"),
    27: .standard(proto: "text_shadow"),
    28: .standard(proto: "text_shadow_undefined"),
    29: .standard(proto: "strikethru_color"),
    30: .standard(proto: "strikethru_color_undefined"),
    31: .same(proto: "strikethru"),
    32: .standard(proto: "strikethru_undefined"),
    33: .standard(proto: "strikethru_width"),
    34: .standard(proto: "strikethru_width_undefined"),
    35: .same(proto: "superscript"),
    36: .standard(proto: "superscript_undefined"),
    37: .standard(proto: "text_background"),
    38: .standard(proto: "text_background_undefined"),
    39: .same(proto: "tracking"),
    40: .standard(proto: "tracking_undefined"),
    41: .standard(proto: "underline_color"),
    42: .standard(proto: "underline_color_undefined"),
    43: .same(proto: "underline"),
    44: .standard(proto: "underline_undefined"),
    45: .standard(proto: "underline_width"),
    46: .standard(proto: "underline_width_undefined"),
    47: .standard(proto: "word_strikethru"),
    48: .standard(proto: "word_strikethru_undefined"),
    49: .standard(proto: "word_underline"),
    50: .standard(proto: "word_underline_undefined"),
    51: .standard(proto: "writing_direction"),
    52: .standard(proto: "writing_direction_undefined"),
    53: .standard(proto: "is_named_point_size"),
    54: .standard(proto: "is_named_point_size_undefined"),
    55: .standard(proto: "capitalization_uses_linguistics"),
    56: .standard(proto: "capitalization_uses_linguistics_undefined"),
    57: .standard(proto: "character_stroke"),
    58: .standard(proto: "character_stroke_undefined"),
    59: .standard(proto: "character_fill"),
    60: .standard(proto: "character_fill_undefined"),
    61: .standard(proto: "character_fill_should_fill_text_container"),
    62: .standard(proto: "character_fill_should_fill_text_container_undefined"),
  ]

  fileprivate class _StorageClass {
    var _baselineShift: TSS_SpecDoubleArchive? = nil
    var _baselineShiftUndefined: Bool? = nil
    var _capitalization: TSS_SpecIntegerArchive? = nil
    var _capitalizationUndefined: Bool? = nil
    var _compatibilityFontName: TSS_SpecStringArchive? = nil
    var _compatibilityFontNameUndefined: Bool? = nil
    var _emphasisMarks: TSS_SpecStringArchive? = nil
    var _emphasisMarksUndefined: Bool? = nil
    var _bold: TSS_SpecBoolArchive? = nil
    var _boldUndefined: Bool? = nil
    var _italic: TSS_SpecBoolArchive? = nil
    var _italicUndefined: Bool? = nil
    var _fontFeatures: TSWP_SpecFontFeaturesArchive? = nil
    var _fontFeaturesUndefined: Bool? = nil
    var _fontName: TSS_SpecStringArchive? = nil
    var _fontNameUndefined: Bool? = nil
    var _fontSize: TSS_SpecDoubleArchive? = nil
    var _fontSizeUndefined: Bool? = nil
    var _fontSizeDelta: TSS_SpecDoubleArchive? = nil
    var _fontSizeDeltaUndefined: Bool? = nil
    var _kerning: TSS_SpecDoubleArchive? = nil
    var _kerningUndefined: Bool? = nil
    var _language: TSS_SpecStringArchive? = nil
    var _languageUndefined: Bool? = nil
    var _ligatures: TSS_SpecIntegerArchive? = nil
    var _ligaturesUndefined: Bool? = nil
    var _textShadow: TSD_SpecShadowArchive? = nil
    var _textShadowUndefined: Bool? = nil
    var _strikethruColor: TSS_SpecColorArchive? = nil
    var _strikethruColorUndefined: Bool? = nil
    var _strikethru: TSS_SpecIntegerArchive? = nil
    var _strikethruUndefined: Bool? = nil
    var _strikethruWidth: TSS_SpecDoubleArchive? = nil
    var _strikethruWidthUndefined: Bool? = nil
    var _superscript: TSS_SpecIntegerArchive? = nil
    var _superscriptUndefined: Bool? = nil
    var _textBackground: TSS_SpecColorArchive? = nil
    var _textBackgroundUndefined: Bool? = nil
    var _tracking: TSS_SpecDoubleArchive? = nil
    var _trackingUndefined: Bool? = nil
    var _underlineColor: TSS_SpecColorArchive? = nil
    var _underlineColorUndefined: Bool? = nil
    var _underline: TSS_SpecIntegerArchive? = nil
    var _underlineUndefined: Bool? = nil
    var _underlineWidth: TSS_SpecDoubleArchive? = nil
    var _underlineWidthUndefined: Bool? = nil
    var _wordStrikethru: TSS_SpecBoolArchive? = nil
    var _wordStrikethruUndefined: Bool? = nil
    var _wordUnderline: TSS_SpecBoolArchive? = nil
    var _wordUnderlineUndefined: Bool? = nil
    var _writingDirection: TSS_SpecIntegerArchive? = nil
    var _writingDirectionUndefined: Bool? = nil
    var _isNamedPointSize: TSS_SpecBoolArchive? = nil
    var _isNamedPointSizeUndefined: Bool? = nil
    var _capitalizationUsesLinguistics: TSS_SpecBoolArchive? = nil
    var _capitalizationUsesLinguisticsUndefined: Bool? = nil
    var _characterStroke: TSD_SpecStrokeArchive? = nil
    var _characterStrokeUndefined: Bool? = nil
    var _characterFill: TSD_SpecFillArchive? = nil
    var _characterFillUndefined: Bool? = nil
    var _characterFillShouldFillTextContainer: TSS_SpecBoolArchive? = nil
    var _characterFillShouldFillTextContainerUndefined: Bool? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _baselineShift = source._baselineShift
      _baselineShiftUndefined = source._baselineShiftUndefined
      _capitalization = source._capitalization
      _capitalizationUndefined = source._capitalizationUndefined
      _compatibilityFontName = source._compatibilityFontName
      _compatibilityFontNameUndefined = source._compatibilityFontNameUndefined
      _emphasisMarks = source._emphasisMarks
      _emphasisMarksUndefined = source._emphasisMarksUndefined
      _bold = source._bold
      _boldUndefined = source._boldUndefined
      _italic = source._italic
      _italicUndefined = source._italicUndefined
      _fontFeatures = source._fontFeatures
      _fontFeaturesUndefined = source._fontFeaturesUndefined
      _fontName = source._fontName
      _fontNameUndefined = source._fontNameUndefined
      _fontSize = source._fontSize
      _fontSizeUndefined = source._fontSizeUndefined
      _fontSizeDelta = source._fontSizeDelta
      _fontSizeDeltaUndefined = source._fontSizeDeltaUndefined
      _kerning = source._kerning
      _kerningUndefined = source._kerningUndefined
      _language = source._language
      _languageUndefined = source._languageUndefined
      _ligatures = source._ligatures
      _ligaturesUndefined = source._ligaturesUndefined
      _textShadow = source._textShadow
      _textShadowUndefined = source._textShadowUndefined
      _strikethruColor = source._strikethruColor
      _strikethruColorUndefined = source._strikethruColorUndefined
      _strikethru = source._strikethru
      _strikethruUndefined = source._strikethruUndefined
      _strikethruWidth = source._strikethruWidth
      _strikethruWidthUndefined = source._strikethruWidthUndefined
      _superscript = source._superscript
      _superscriptUndefined = source._superscriptUndefined
      _textBackground = source._textBackground
      _textBackgroundUndefined = source._textBackgroundUndefined
      _tracking = source._tracking
      _trackingUndefined = source._trackingUndefined
      _underlineColor = source._underlineColor
      _underlineColorUndefined = source._underlineColorUndefined
      _underline = source._underline
      _underlineUndefined = source._underlineUndefined
      _underlineWidth = source._underlineWidth
      _underlineWidthUndefined = source._underlineWidthUndefined
      _wordStrikethru = source._wordStrikethru
      _wordStrikethruUndefined = source._wordStrikethruUndefined
      _wordUnderline = source._wordUnderline
      _wordUnderlineUndefined = source._wordUnderlineUndefined
      _writingDirection = source._writingDirection
      _writingDirectionUndefined = source._writingDirectionUndefined
      _isNamedPointSize = source._isNamedPointSize
      _isNamedPointSizeUndefined = source._isNamedPointSizeUndefined
      _capitalizationUsesLinguistics = source._capitalizationUsesLinguistics
      _capitalizationUsesLinguisticsUndefined = source._capitalizationUsesLinguisticsUndefined
      _characterStroke = source._characterStroke
      _characterStrokeUndefined = source._characterStrokeUndefined
      _characterFill = source._characterFill
      _characterFillUndefined = source._characterFillUndefined
      _characterFillShouldFillTextContainer = source._characterFillShouldFillTextContainer
      _characterFillShouldFillTextContainerUndefined = source._characterFillShouldFillTextContainerUndefined
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._baselineShift, !v.isInitialized {return false}
      if let v = _storage._capitalization, !v.isInitialized {return false}
      if let v = _storage._compatibilityFontName, !v.isInitialized {return false}
      if let v = _storage._emphasisMarks, !v.isInitialized {return false}
      if let v = _storage._bold, !v.isInitialized {return false}
      if let v = _storage._italic, !v.isInitialized {return false}
      if let v = _storage._fontFeatures, !v.isInitialized {return false}
      if let v = _storage._fontName, !v.isInitialized {return false}
      if let v = _storage._fontSize, !v.isInitialized {return false}
      if let v = _storage._fontSizeDelta, !v.isInitialized {return false}
      if let v = _storage._kerning, !v.isInitialized {return false}
      if let v = _storage._language, !v.isInitialized {return false}
      if let v = _storage._ligatures, !v.isInitialized {return false}
      if let v = _storage._textShadow, !v.isInitialized {return false}
      if let v = _storage._strikethruColor, !v.isInitialized {return false}
      if let v = _storage._strikethru, !v.isInitialized {return false}
      if let v = _storage._strikethruWidth, !v.isInitialized {return false}
      if let v = _storage._superscript, !v.isInitialized {return false}
      if let v = _storage._textBackground, !v.isInitialized {return false}
      if let v = _storage._tracking, !v.isInitialized {return false}
      if let v = _storage._underlineColor, !v.isInitialized {return false}
      if let v = _storage._underline, !v.isInitialized {return false}
      if let v = _storage._underlineWidth, !v.isInitialized {return false}
      if let v = _storage._wordStrikethru, !v.isInitialized {return false}
      if let v = _storage._wordUnderline, !v.isInitialized {return false}
      if let v = _storage._writingDirection, !v.isInitialized {return false}
      if let v = _storage._isNamedPointSize, !v.isInitialized {return false}
      if let v = _storage._capitalizationUsesLinguistics, !v.isInitialized {return false}
      if let v = _storage._characterStroke, !v.isInitialized {return false}
      if let v = _storage._characterFill, !v.isInitialized {return false}
      if let v = _storage._characterFillShouldFillTextContainer, !v.isInitialized {return false}
      return true
    }
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._baselineShift)
        case 2: try decoder.decodeSingularBoolField(value: &_storage._baselineShiftUndefined)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._capitalization)
        case 4: try decoder.decodeSingularBoolField(value: &_storage._capitalizationUndefined)
        case 5: try decoder.decodeSingularMessageField(value: &_storage._compatibilityFontName)
        case 6: try decoder.decodeSingularBoolField(value: &_storage._compatibilityFontNameUndefined)
        case 7: try decoder.decodeSingularMessageField(value: &_storage._emphasisMarks)
        case 8: try decoder.decodeSingularBoolField(value: &_storage._emphasisMarksUndefined)
        case 9: try decoder.decodeSingularMessageField(value: &_storage._bold)
        case 10: try decoder.decodeSingularBoolField(value: &_storage._boldUndefined)
        case 11: try decoder.decodeSingularMessageField(value: &_storage._italic)
        case 12: try decoder.decodeSingularBoolField(value: &_storage._italicUndefined)
        case 13: try decoder.decodeSingularMessageField(value: &_storage._fontFeatures)
        case 14: try decoder.decodeSingularBoolField(value: &_storage._fontFeaturesUndefined)
        case 15: try decoder.decodeSingularMessageField(value: &_storage._fontName)
        case 16: try decoder.decodeSingularBoolField(value: &_storage._fontNameUndefined)
        case 17: try decoder.decodeSingularMessageField(value: &_storage._fontSize)
        case 18: try decoder.decodeSingularBoolField(value: &_storage._fontSizeUndefined)
        case 19: try decoder.decodeSingularMessageField(value: &_storage._fontSizeDelta)
        case 20: try decoder.decodeSingularBoolField(value: &_storage._fontSizeDeltaUndefined)
        case 21: try decoder.decodeSingularMessageField(value: &_storage._kerning)
        case 22: try decoder.decodeSingularBoolField(value: &_storage._kerningUndefined)
        case 23: try decoder.decodeSingularMessageField(value: &_storage._language)
        case 24: try decoder.decodeSingularBoolField(value: &_storage._languageUndefined)
        case 25: try decoder.decodeSingularMessageField(value: &_storage._ligatures)
        case 26: try decoder.decodeSingularBoolField(value: &_storage._ligaturesUndefined)
        case 27: try decoder.decodeSingularMessageField(value: &_storage._textShadow)
        case 28: try decoder.decodeSingularBoolField(value: &_storage._textShadowUndefined)
        case 29: try decoder.decodeSingularMessageField(value: &_storage._strikethruColor)
        case 30: try decoder.decodeSingularBoolField(value: &_storage._strikethruColorUndefined)
        case 31: try decoder.decodeSingularMessageField(value: &_storage._strikethru)
        case 32: try decoder.decodeSingularBoolField(value: &_storage._strikethruUndefined)
        case 33: try decoder.decodeSingularMessageField(value: &_storage._strikethruWidth)
        case 34: try decoder.decodeSingularBoolField(value: &_storage._strikethruWidthUndefined)
        case 35: try decoder.decodeSingularMessageField(value: &_storage._superscript)
        case 36: try decoder.decodeSingularBoolField(value: &_storage._superscriptUndefined)
        case 37: try decoder.decodeSingularMessageField(value: &_storage._textBackground)
        case 38: try decoder.decodeSingularBoolField(value: &_storage._textBackgroundUndefined)
        case 39: try decoder.decodeSingularMessageField(value: &_storage._tracking)
        case 40: try decoder.decodeSingularBoolField(value: &_storage._trackingUndefined)
        case 41: try decoder.decodeSingularMessageField(value: &_storage._underlineColor)
        case 42: try decoder.decodeSingularBoolField(value: &_storage._underlineColorUndefined)
        case 43: try decoder.decodeSingularMessageField(value: &_storage._underline)
        case 44: try decoder.decodeSingularBoolField(value: &_storage._underlineUndefined)
        case 45: try decoder.decodeSingularMessageField(value: &_storage._underlineWidth)
        case 46: try decoder.decodeSingularBoolField(value: &_storage._underlineWidthUndefined)
        case 47: try decoder.decodeSingularMessageField(value: &_storage._wordStrikethru)
        case 48: try decoder.decodeSingularBoolField(value: &_storage._wordStrikethruUndefined)
        case 49: try decoder.decodeSingularMessageField(value: &_storage._wordUnderline)
        case 50: try decoder.decodeSingularBoolField(value: &_storage._wordUnderlineUndefined)
        case 51: try decoder.decodeSingularMessageField(value: &_storage._writingDirection)
        case 52: try decoder.decodeSingularBoolField(value: &_storage._writingDirectionUndefined)
        case 53: try decoder.decodeSingularMessageField(value: &_storage._isNamedPointSize)
        case 54: try decoder.decodeSingularBoolField(value: &_storage._isNamedPointSizeUndefined)
        case 55: try decoder.decodeSingularMessageField(value: &_storage._capitalizationUsesLinguistics)
        case 56: try decoder.decodeSingularBoolField(value: &_storage._capitalizationUsesLinguisticsUndefined)
        case 57: try decoder.decodeSingularMessageField(value: &_storage._characterStroke)
        case 58: try decoder.decodeSingularBoolField(value: &_storage._characterStrokeUndefined)
        case 59: try decoder.decodeSingularMessageField(value: &_storage._characterFill)
        case 60: try decoder.decodeSingularBoolField(value: &_storage._characterFillUndefined)
        case 61: try decoder.decodeSingularMessageField(value: &_storage._characterFillShouldFillTextContainer)
        case 62: try decoder.decodeSingularBoolField(value: &_storage._characterFillShouldFillTextContainerUndefined)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._baselineShift {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._baselineShiftUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 2)
      }
      if let v = _storage._capitalization {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if let v = _storage._capitalizationUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 4)
      }
      if let v = _storage._compatibilityFontName {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      }
      if let v = _storage._compatibilityFontNameUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 6)
      }
      if let v = _storage._emphasisMarks {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      }
      if let v = _storage._emphasisMarksUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 8)
      }
      if let v = _storage._bold {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 9)
      }
      if let v = _storage._boldUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 10)
      }
      if let v = _storage._italic {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 11)
      }
      if let v = _storage._italicUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 12)
      }
      if let v = _storage._fontFeatures {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 13)
      }
      if let v = _storage._fontFeaturesUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 14)
      }
      if let v = _storage._fontName {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 15)
      }
      if let v = _storage._fontNameUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 16)
      }
      if let v = _storage._fontSize {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 17)
      }
      if let v = _storage._fontSizeUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 18)
      }
      if let v = _storage._fontSizeDelta {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 19)
      }
      if let v = _storage._fontSizeDeltaUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 20)
      }
      if let v = _storage._kerning {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 21)
      }
      if let v = _storage._kerningUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 22)
      }
      if let v = _storage._language {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 23)
      }
      if let v = _storage._languageUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 24)
      }
      if let v = _storage._ligatures {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 25)
      }
      if let v = _storage._ligaturesUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 26)
      }
      if let v = _storage._textShadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 27)
      }
      if let v = _storage._textShadowUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 28)
      }
      if let v = _storage._strikethruColor {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 29)
      }
      if let v = _storage._strikethruColorUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 30)
      }
      if let v = _storage._strikethru {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 31)
      }
      if let v = _storage._strikethruUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 32)
      }
      if let v = _storage._strikethruWidth {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 33)
      }
      if let v = _storage._strikethruWidthUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 34)
      }
      if let v = _storage._superscript {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 35)
      }
      if let v = _storage._superscriptUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 36)
      }
      if let v = _storage._textBackground {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 37)
      }
      if let v = _storage._textBackgroundUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 38)
      }
      if let v = _storage._tracking {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 39)
      }
      if let v = _storage._trackingUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 40)
      }
      if let v = _storage._underlineColor {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 41)
      }
      if let v = _storage._underlineColorUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 42)
      }
      if let v = _storage._underline {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 43)
      }
      if let v = _storage._underlineUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 44)
      }
      if let v = _storage._underlineWidth {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 45)
      }
      if let v = _storage._underlineWidthUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 46)
      }
      if let v = _storage._wordStrikethru {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 47)
      }
      if let v = _storage._wordStrikethruUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 48)
      }
      if let v = _storage._wordUnderline {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 49)
      }
      if let v = _storage._wordUnderlineUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 50)
      }
      if let v = _storage._writingDirection {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 51)
      }
      if let v = _storage._writingDirectionUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 52)
      }
      if let v = _storage._isNamedPointSize {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 53)
      }
      if let v = _storage._isNamedPointSizeUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 54)
      }
      if let v = _storage._capitalizationUsesLinguistics {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 55)
      }
      if let v = _storage._capitalizationUsesLinguisticsUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 56)
      }
      if let v = _storage._characterStroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 57)
      }
      if let v = _storage._characterStrokeUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 58)
      }
      if let v = _storage._characterFill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 59)
      }
      if let v = _storage._characterFillUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 60)
      }
      if let v = _storage._characterFillShouldFillTextContainer {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 61)
      }
      if let v = _storage._characterFillShouldFillTextContainerUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 62)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_CharacterStylePropertyChangeSetArchive, rhs: TSWP_CharacterStylePropertyChangeSetArchive) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._baselineShift != rhs_storage._baselineShift {return false}
        if _storage._baselineShiftUndefined != rhs_storage._baselineShiftUndefined {return false}
        if _storage._capitalization != rhs_storage._capitalization {return false}
        if _storage._capitalizationUndefined != rhs_storage._capitalizationUndefined {return false}
        if _storage._compatibilityFontName != rhs_storage._compatibilityFontName {return false}
        if _storage._compatibilityFontNameUndefined != rhs_storage._compatibilityFontNameUndefined {return false}
        if _storage._emphasisMarks != rhs_storage._emphasisMarks {return false}
        if _storage._emphasisMarksUndefined != rhs_storage._emphasisMarksUndefined {return false}
        if _storage._bold != rhs_storage._bold {return false}
        if _storage._boldUndefined != rhs_storage._boldUndefined {return false}
        if _storage._italic != rhs_storage._italic {return false}
        if _storage._italicUndefined != rhs_storage._italicUndefined {return false}
        if _storage._fontFeatures != rhs_storage._fontFeatures {return false}
        if _storage._fontFeaturesUndefined != rhs_storage._fontFeaturesUndefined {return false}
        if _storage._fontName != rhs_storage._fontName {return false}
        if _storage._fontNameUndefined != rhs_storage._fontNameUndefined {return false}
        if _storage._fontSize != rhs_storage._fontSize {return false}
        if _storage._fontSizeUndefined != rhs_storage._fontSizeUndefined {return false}
        if _storage._fontSizeDelta != rhs_storage._fontSizeDelta {return false}
        if _storage._fontSizeDeltaUndefined != rhs_storage._fontSizeDeltaUndefined {return false}
        if _storage._kerning != rhs_storage._kerning {return false}
        if _storage._kerningUndefined != rhs_storage._kerningUndefined {return false}
        if _storage._language != rhs_storage._language {return false}
        if _storage._languageUndefined != rhs_storage._languageUndefined {return false}
        if _storage._ligatures != rhs_storage._ligatures {return false}
        if _storage._ligaturesUndefined != rhs_storage._ligaturesUndefined {return false}
        if _storage._textShadow != rhs_storage._textShadow {return false}
        if _storage._textShadowUndefined != rhs_storage._textShadowUndefined {return false}
        if _storage._strikethruColor != rhs_storage._strikethruColor {return false}
        if _storage._strikethruColorUndefined != rhs_storage._strikethruColorUndefined {return false}
        if _storage._strikethru != rhs_storage._strikethru {return false}
        if _storage._strikethruUndefined != rhs_storage._strikethruUndefined {return false}
        if _storage._strikethruWidth != rhs_storage._strikethruWidth {return false}
        if _storage._strikethruWidthUndefined != rhs_storage._strikethruWidthUndefined {return false}
        if _storage._superscript != rhs_storage._superscript {return false}
        if _storage._superscriptUndefined != rhs_storage._superscriptUndefined {return false}
        if _storage._textBackground != rhs_storage._textBackground {return false}
        if _storage._textBackgroundUndefined != rhs_storage._textBackgroundUndefined {return false}
        if _storage._tracking != rhs_storage._tracking {return false}
        if _storage._trackingUndefined != rhs_storage._trackingUndefined {return false}
        if _storage._underlineColor != rhs_storage._underlineColor {return false}
        if _storage._underlineColorUndefined != rhs_storage._underlineColorUndefined {return false}
        if _storage._underline != rhs_storage._underline {return false}
        if _storage._underlineUndefined != rhs_storage._underlineUndefined {return false}
        if _storage._underlineWidth != rhs_storage._underlineWidth {return false}
        if _storage._underlineWidthUndefined != rhs_storage._underlineWidthUndefined {return false}
        if _storage._wordStrikethru != rhs_storage._wordStrikethru {return false}
        if _storage._wordStrikethruUndefined != rhs_storage._wordStrikethruUndefined {return false}
        if _storage._wordUnderline != rhs_storage._wordUnderline {return false}
        if _storage._wordUnderlineUndefined != rhs_storage._wordUnderlineUndefined {return false}
        if _storage._writingDirection != rhs_storage._writingDirection {return false}
        if _storage._writingDirectionUndefined != rhs_storage._writingDirectionUndefined {return false}
        if _storage._isNamedPointSize != rhs_storage._isNamedPointSize {return false}
        if _storage._isNamedPointSizeUndefined != rhs_storage._isNamedPointSizeUndefined {return false}
        if _storage._capitalizationUsesLinguistics != rhs_storage._capitalizationUsesLinguistics {return false}
        if _storage._capitalizationUsesLinguisticsUndefined != rhs_storage._capitalizationUsesLinguisticsUndefined {return false}
        if _storage._characterStroke != rhs_storage._characterStroke {return false}
        if _storage._characterStrokeUndefined != rhs_storage._characterStrokeUndefined {return false}
        if _storage._characterFill != rhs_storage._characterFill {return false}
        if _storage._characterFillUndefined != rhs_storage._characterFillUndefined {return false}
        if _storage._characterFillShouldFillTextContainer != rhs_storage._characterFillShouldFillTextContainer {return false}
        if _storage._characterFillShouldFillTextContainerUndefined != rhs_storage._characterFillShouldFillTextContainerUndefined {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_ColumnStylePropertyChangeSetArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ColumnStylePropertyChangeSetArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "columns"),
    2: .standard(proto: "columns_undefined"),
    3: .same(proto: "continuous"),
    4: .standard(proto: "continuous_undefined"),
    5: .same(proto: "margins"),
    6: .standard(proto: "margins_undefined"),
    7: .standard(proto: "min_horizontal_inset"),
    8: .standard(proto: "min_horizontal_inset_undefined"),
    9: .same(proto: "padding"),
    10: .standard(proto: "padding_undefined"),
    11: .standard(proto: "shrink_to_fit"),
    12: .standard(proto: "shrink_to_fit_undefined"),
    13: .standard(proto: "vertical_alignment"),
    14: .standard(proto: "vertical_alignment_undefined"),
    15: .standard(proto: "vertical_text"),
    16: .standard(proto: "vertical_text_undefined"),
    17: .standard(proto: "writing_direction"),
    18: .standard(proto: "writing_direction_undefined"),
  ]

  fileprivate class _StorageClass {
    var _columns: TSWP_SpecColumnsArchive? = nil
    var _columnsUndefined: Bool? = nil
    var _continuous: TSS_SpecBoolArchive? = nil
    var _continuousUndefined: Bool? = nil
    var _margins: TSWP_SpecPaddingArchive? = nil
    var _marginsUndefined: Bool? = nil
    var _minHorizontalInset: TSS_SpecDoubleArchive? = nil
    var _minHorizontalInsetUndefined: Bool? = nil
    var _padding: TSWP_SpecPaddingArchive? = nil
    var _paddingUndefined: Bool? = nil
    var _shrinkToFit: TSS_SpecBoolArchive? = nil
    var _shrinkToFitUndefined: Bool? = nil
    var _verticalAlignment: TSS_SpecIntegerArchive? = nil
    var _verticalAlignmentUndefined: Bool? = nil
    var _verticalText: TSS_SpecBoolArchive? = nil
    var _verticalTextUndefined: Bool? = nil
    var _writingDirection: TSS_SpecIntegerArchive? = nil
    var _writingDirectionUndefined: Bool? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _columns = source._columns
      _columnsUndefined = source._columnsUndefined
      _continuous = source._continuous
      _continuousUndefined = source._continuousUndefined
      _margins = source._margins
      _marginsUndefined = source._marginsUndefined
      _minHorizontalInset = source._minHorizontalInset
      _minHorizontalInsetUndefined = source._minHorizontalInsetUndefined
      _padding = source._padding
      _paddingUndefined = source._paddingUndefined
      _shrinkToFit = source._shrinkToFit
      _shrinkToFitUndefined = source._shrinkToFitUndefined
      _verticalAlignment = source._verticalAlignment
      _verticalAlignmentUndefined = source._verticalAlignmentUndefined
      _verticalText = source._verticalText
      _verticalTextUndefined = source._verticalTextUndefined
      _writingDirection = source._writingDirection
      _writingDirectionUndefined = source._writingDirectionUndefined
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._columns, !v.isInitialized {return false}
      if let v = _storage._continuous, !v.isInitialized {return false}
      if let v = _storage._margins, !v.isInitialized {return false}
      if let v = _storage._minHorizontalInset, !v.isInitialized {return false}
      if let v = _storage._padding, !v.isInitialized {return false}
      if let v = _storage._shrinkToFit, !v.isInitialized {return false}
      if let v = _storage._verticalAlignment, !v.isInitialized {return false}
      if let v = _storage._verticalText, !v.isInitialized {return false}
      if let v = _storage._writingDirection, !v.isInitialized {return false}
      return true
    }
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._columns)
        case 2: try decoder.decodeSingularBoolField(value: &_storage._columnsUndefined)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._continuous)
        case 4: try decoder.decodeSingularBoolField(value: &_storage._continuousUndefined)
        case 5: try decoder.decodeSingularMessageField(value: &_storage._margins)
        case 6: try decoder.decodeSingularBoolField(value: &_storage._marginsUndefined)
        case 7: try decoder.decodeSingularMessageField(value: &_storage._minHorizontalInset)
        case 8: try decoder.decodeSingularBoolField(value: &_storage._minHorizontalInsetUndefined)
        case 9: try decoder.decodeSingularMessageField(value: &_storage._padding)
        case 10: try decoder.decodeSingularBoolField(value: &_storage._paddingUndefined)
        case 11: try decoder.decodeSingularMessageField(value: &_storage._shrinkToFit)
        case 12: try decoder.decodeSingularBoolField(value: &_storage._shrinkToFitUndefined)
        case 13: try decoder.decodeSingularMessageField(value: &_storage._verticalAlignment)
        case 14: try decoder.decodeSingularBoolField(value: &_storage._verticalAlignmentUndefined)
        case 15: try decoder.decodeSingularMessageField(value: &_storage._verticalText)
        case 16: try decoder.decodeSingularBoolField(value: &_storage._verticalTextUndefined)
        case 17: try decoder.decodeSingularMessageField(value: &_storage._writingDirection)
        case 18: try decoder.decodeSingularBoolField(value: &_storage._writingDirectionUndefined)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._columns {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._columnsUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 2)
      }
      if let v = _storage._continuous {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if let v = _storage._continuousUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 4)
      }
      if let v = _storage._margins {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      }
      if let v = _storage._marginsUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 6)
      }
      if let v = _storage._minHorizontalInset {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      }
      if let v = _storage._minHorizontalInsetUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 8)
      }
      if let v = _storage._padding {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 9)
      }
      if let v = _storage._paddingUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 10)
      }
      if let v = _storage._shrinkToFit {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 11)
      }
      if let v = _storage._shrinkToFitUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 12)
      }
      if let v = _storage._verticalAlignment {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 13)
      }
      if let v = _storage._verticalAlignmentUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 14)
      }
      if let v = _storage._verticalText {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 15)
      }
      if let v = _storage._verticalTextUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 16)
      }
      if let v = _storage._writingDirection {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 17)
      }
      if let v = _storage._writingDirectionUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 18)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_ColumnStylePropertyChangeSetArchive, rhs: TSWP_ColumnStylePropertyChangeSetArchive) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._columns != rhs_storage._columns {return false}
        if _storage._columnsUndefined != rhs_storage._columnsUndefined {return false}
        if _storage._continuous != rhs_storage._continuous {return false}
        if _storage._continuousUndefined != rhs_storage._continuousUndefined {return false}
        if _storage._margins != rhs_storage._margins {return false}
        if _storage._marginsUndefined != rhs_storage._marginsUndefined {return false}
        if _storage._minHorizontalInset != rhs_storage._minHorizontalInset {return false}
        if _storage._minHorizontalInsetUndefined != rhs_storage._minHorizontalInsetUndefined {return false}
        if _storage._padding != rhs_storage._padding {return false}
        if _storage._paddingUndefined != rhs_storage._paddingUndefined {return false}
        if _storage._shrinkToFit != rhs_storage._shrinkToFit {return false}
        if _storage._shrinkToFitUndefined != rhs_storage._shrinkToFitUndefined {return false}
        if _storage._verticalAlignment != rhs_storage._verticalAlignment {return false}
        if _storage._verticalAlignmentUndefined != rhs_storage._verticalAlignmentUndefined {return false}
        if _storage._verticalText != rhs_storage._verticalText {return false}
        if _storage._verticalTextUndefined != rhs_storage._verticalTextUndefined {return false}
        if _storage._writingDirection != rhs_storage._writingDirection {return false}
        if _storage._writingDirectionUndefined != rhs_storage._writingDirectionUndefined {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_DropCapSpecificStylePropertyChangeSetArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".DropCapSpecificStylePropertyChangeSetArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "drop_cap_model"),
    2: .standard(proto: "drop_cap_model_undefined"),
    3: .standard(proto: "drop_cap_shape_stroke"),
    4: .standard(proto: "drop_cap_shape_stroke_undefined"),
    5: .standard(proto: "drop_cap_shape_fill"),
    6: .standard(proto: "drop_cap_shape_fill_undefined"),
  ]

  public var isInitialized: Bool {
    if let v = self._dropCapModel, !v.isInitialized {return false}
    if let v = self._dropCapShapeStroke, !v.isInitialized {return false}
    if let v = self._dropCapShapeFill, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._dropCapModel)
      case 2: try decoder.decodeSingularBoolField(value: &self._dropCapModelUndefined)
      case 3: try decoder.decodeSingularMessageField(value: &self._dropCapShapeStroke)
      case 4: try decoder.decodeSingularBoolField(value: &self._dropCapShapeStrokeUndefined)
      case 5: try decoder.decodeSingularMessageField(value: &self._dropCapShapeFill)
      case 6: try decoder.decodeSingularBoolField(value: &self._dropCapShapeFillUndefined)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._dropCapModel {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if let v = self._dropCapModelUndefined {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 2)
    }
    if let v = self._dropCapShapeStroke {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
    }
    if let v = self._dropCapShapeStrokeUndefined {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 4)
    }
    if let v = self._dropCapShapeFill {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
    }
    if let v = self._dropCapShapeFillUndefined {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 6)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_DropCapSpecificStylePropertyChangeSetArchive, rhs: TSWP_DropCapSpecificStylePropertyChangeSetArchive) -> Bool {
    if lhs._dropCapModel != rhs._dropCapModel {return false}
    if lhs._dropCapModelUndefined != rhs._dropCapModelUndefined {return false}
    if lhs._dropCapShapeStroke != rhs._dropCapShapeStroke {return false}
    if lhs._dropCapShapeStrokeUndefined != rhs._dropCapShapeStrokeUndefined {return false}
    if lhs._dropCapShapeFill != rhs._dropCapShapeFill {return false}
    if lhs._dropCapShapeFillUndefined != rhs._dropCapShapeFillUndefined {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_DropCapStylePropertyChangeSetArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".DropCapStylePropertyChangeSetArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "super"),
    2: .standard(proto: "drop_cap_model"),
    3: .standard(proto: "drop_cap_model_undefined"),
    4: .standard(proto: "drop_cap_shape_stroke"),
    5: .standard(proto: "drop_cap_shape_stroke_undefined"),
    6: .standard(proto: "drop_cap_shape_fill"),
    7: .standard(proto: "drop_cap_shape_fill_undefined"),
  ]

  public var isInitialized: Bool {
    if self._super == nil {return false}
    if let v = self._super, !v.isInitialized {return false}
    if let v = self._dropCapModel, !v.isInitialized {return false}
    if let v = self._dropCapShapeStroke, !v.isInitialized {return false}
    if let v = self._dropCapShapeFill, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._super)
      case 2: try decoder.decodeSingularMessageField(value: &self._dropCapModel)
      case 3: try decoder.decodeSingularBoolField(value: &self._dropCapModelUndefined)
      case 4: try decoder.decodeSingularMessageField(value: &self._dropCapShapeStroke)
      case 5: try decoder.decodeSingularBoolField(value: &self._dropCapShapeStrokeUndefined)
      case 6: try decoder.decodeSingularMessageField(value: &self._dropCapShapeFill)
      case 7: try decoder.decodeSingularBoolField(value: &self._dropCapShapeFillUndefined)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._super {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if let v = self._dropCapModel {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    }
    if let v = self._dropCapModelUndefined {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 3)
    }
    if let v = self._dropCapShapeStroke {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
    }
    if let v = self._dropCapShapeStrokeUndefined {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 5)
    }
    if let v = self._dropCapShapeFill {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
    }
    if let v = self._dropCapShapeFillUndefined {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 7)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_DropCapStylePropertyChangeSetArchive, rhs: TSWP_DropCapStylePropertyChangeSetArchive) -> Bool {
    if lhs._super != rhs._super {return false}
    if lhs._dropCapModel != rhs._dropCapModel {return false}
    if lhs._dropCapModelUndefined != rhs._dropCapModelUndefined {return false}
    if lhs._dropCapShapeStroke != rhs._dropCapShapeStroke {return false}
    if lhs._dropCapShapeStrokeUndefined != rhs._dropCapShapeStrokeUndefined {return false}
    if lhs._dropCapShapeFill != rhs._dropCapShapeFill {return false}
    if lhs._dropCapShapeFillUndefined != rhs._dropCapShapeFillUndefined {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_ListStylePropertyChangeSetArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ListStylePropertyChangeSetArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "list_font_color"),
    2: .standard(proto: "list_font_color_undefined"),
    3: .standard(proto: "font_name"),
    4: .standard(proto: "font_name_undefined"),
    5: .standard(proto: "list_classic_text_indent_array"),
    6: .standard(proto: "list_classic_text_indent_array_undefined"),
    7: .standard(proto: "list_label_geometry_array"),
    8: .standard(proto: "list_label_geometry_array_undefined"),
    9: .standard(proto: "list_label_image_data_array"),
    10: .standard(proto: "list_label_image_data_array_undefined"),
    11: .standard(proto: "list_label_indent_array"),
    12: .standard(proto: "list_label_indent_array_undefined"),
    13: .standard(proto: "list_label_number_array"),
    14: .standard(proto: "list_label_number_array_undefined"),
    15: .standard(proto: "list_label_tiered_number_array"),
    16: .standard(proto: "list_label_tiered_number_array_undefined"),
    17: .standard(proto: "text_shadow"),
    18: .standard(proto: "text_shadow_undefined"),
    19: .standard(proto: "list_label_string_array"),
    20: .standard(proto: "list_label_string_array_undefined"),
    21: .standard(proto: "list_text_indent_array"),
    22: .standard(proto: "list_text_indent_array_undefined"),
    23: .standard(proto: "list_label_type_array"),
    24: .standard(proto: "list_label_type_array_undefined"),
    25: .standard(proto: "writing_direction"),
    26: .standard(proto: "writing_direction_undefined"),
  ]

  fileprivate class _StorageClass {
    var _listFontColor: TSS_SpecColorArchive? = nil
    var _listFontColorUndefined: Bool? = nil
    var _fontName: TSS_SpecStringArchive? = nil
    var _fontNameUndefined: Bool? = nil
    var _listClassicTextIndentArray: TSWP_SpecListStyleFloatArrayArchive? = nil
    var _listClassicTextIndentArrayUndefined: Bool? = nil
    var _listLabelGeometryArray: TSWP_SpecListStyleListLabelGeometryArrayArchive? = nil
    var _listLabelGeometryArrayUndefined: Bool? = nil
    var _listLabelImageDataArray: TSWP_SpecListStyleImageDataArrayArchive? = nil
    var _listLabelImageDataArrayUndefined: Bool? = nil
    var _listLabelIndentArray: TSWP_SpecListStyleFloatArrayArchive? = nil
    var _listLabelIndentArrayUndefined: Bool? = nil
    var _listLabelNumberArray: TSWP_SpecListStyleListNumberTypeArrayArchive? = nil
    var _listLabelNumberArrayUndefined: Bool? = nil
    var _listLabelTieredNumberArray: TSWP_SpecListStyleBoolArrayArchive? = nil
    var _listLabelTieredNumberArrayUndefined: Bool? = nil
    var _textShadow: TSD_SpecShadowArchive? = nil
    var _textShadowUndefined: Bool? = nil
    var _listLabelStringArray: TSWP_SpecListStyleStringArrayArchive? = nil
    var _listLabelStringArrayUndefined: Bool? = nil
    var _listTextIndentArray: TSWP_SpecListStyleFloatArrayArchive? = nil
    var _listTextIndentArrayUndefined: Bool? = nil
    var _listLabelTypeArray: TSWP_SpecListStyleListLabelTypeArrayArchive? = nil
    var _listLabelTypeArrayUndefined: Bool? = nil
    var _writingDirection: TSS_SpecIntegerArchive? = nil
    var _writingDirectionUndefined: Bool? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _listFontColor = source._listFontColor
      _listFontColorUndefined = source._listFontColorUndefined
      _fontName = source._fontName
      _fontNameUndefined = source._fontNameUndefined
      _listClassicTextIndentArray = source._listClassicTextIndentArray
      _listClassicTextIndentArrayUndefined = source._listClassicTextIndentArrayUndefined
      _listLabelGeometryArray = source._listLabelGeometryArray
      _listLabelGeometryArrayUndefined = source._listLabelGeometryArrayUndefined
      _listLabelImageDataArray = source._listLabelImageDataArray
      _listLabelImageDataArrayUndefined = source._listLabelImageDataArrayUndefined
      _listLabelIndentArray = source._listLabelIndentArray
      _listLabelIndentArrayUndefined = source._listLabelIndentArrayUndefined
      _listLabelNumberArray = source._listLabelNumberArray
      _listLabelNumberArrayUndefined = source._listLabelNumberArrayUndefined
      _listLabelTieredNumberArray = source._listLabelTieredNumberArray
      _listLabelTieredNumberArrayUndefined = source._listLabelTieredNumberArrayUndefined
      _textShadow = source._textShadow
      _textShadowUndefined = source._textShadowUndefined
      _listLabelStringArray = source._listLabelStringArray
      _listLabelStringArrayUndefined = source._listLabelStringArrayUndefined
      _listTextIndentArray = source._listTextIndentArray
      _listTextIndentArrayUndefined = source._listTextIndentArrayUndefined
      _listLabelTypeArray = source._listLabelTypeArray
      _listLabelTypeArrayUndefined = source._listLabelTypeArrayUndefined
      _writingDirection = source._writingDirection
      _writingDirectionUndefined = source._writingDirectionUndefined
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._listFontColor, !v.isInitialized {return false}
      if let v = _storage._fontName, !v.isInitialized {return false}
      if let v = _storage._listClassicTextIndentArray, !v.isInitialized {return false}
      if let v = _storage._listLabelGeometryArray, !v.isInitialized {return false}
      if let v = _storage._listLabelImageDataArray, !v.isInitialized {return false}
      if let v = _storage._listLabelIndentArray, !v.isInitialized {return false}
      if let v = _storage._listLabelNumberArray, !v.isInitialized {return false}
      if let v = _storage._listLabelTieredNumberArray, !v.isInitialized {return false}
      if let v = _storage._textShadow, !v.isInitialized {return false}
      if let v = _storage._listLabelStringArray, !v.isInitialized {return false}
      if let v = _storage._listTextIndentArray, !v.isInitialized {return false}
      if let v = _storage._listLabelTypeArray, !v.isInitialized {return false}
      if let v = _storage._writingDirection, !v.isInitialized {return false}
      return true
    }
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._listFontColor)
        case 2: try decoder.decodeSingularBoolField(value: &_storage._listFontColorUndefined)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._fontName)
        case 4: try decoder.decodeSingularBoolField(value: &_storage._fontNameUndefined)
        case 5: try decoder.decodeSingularMessageField(value: &_storage._listClassicTextIndentArray)
        case 6: try decoder.decodeSingularBoolField(value: &_storage._listClassicTextIndentArrayUndefined)
        case 7: try decoder.decodeSingularMessageField(value: &_storage._listLabelGeometryArray)
        case 8: try decoder.decodeSingularBoolField(value: &_storage._listLabelGeometryArrayUndefined)
        case 9: try decoder.decodeSingularMessageField(value: &_storage._listLabelImageDataArray)
        case 10: try decoder.decodeSingularBoolField(value: &_storage._listLabelImageDataArrayUndefined)
        case 11: try decoder.decodeSingularMessageField(value: &_storage._listLabelIndentArray)
        case 12: try decoder.decodeSingularBoolField(value: &_storage._listLabelIndentArrayUndefined)
        case 13: try decoder.decodeSingularMessageField(value: &_storage._listLabelNumberArray)
        case 14: try decoder.decodeSingularBoolField(value: &_storage._listLabelNumberArrayUndefined)
        case 15: try decoder.decodeSingularMessageField(value: &_storage._listLabelTieredNumberArray)
        case 16: try decoder.decodeSingularBoolField(value: &_storage._listLabelTieredNumberArrayUndefined)
        case 17: try decoder.decodeSingularMessageField(value: &_storage._textShadow)
        case 18: try decoder.decodeSingularBoolField(value: &_storage._textShadowUndefined)
        case 19: try decoder.decodeSingularMessageField(value: &_storage._listLabelStringArray)
        case 20: try decoder.decodeSingularBoolField(value: &_storage._listLabelStringArrayUndefined)
        case 21: try decoder.decodeSingularMessageField(value: &_storage._listTextIndentArray)
        case 22: try decoder.decodeSingularBoolField(value: &_storage._listTextIndentArrayUndefined)
        case 23: try decoder.decodeSingularMessageField(value: &_storage._listLabelTypeArray)
        case 24: try decoder.decodeSingularBoolField(value: &_storage._listLabelTypeArrayUndefined)
        case 25: try decoder.decodeSingularMessageField(value: &_storage._writingDirection)
        case 26: try decoder.decodeSingularBoolField(value: &_storage._writingDirectionUndefined)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._listFontColor {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._listFontColorUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 2)
      }
      if let v = _storage._fontName {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if let v = _storage._fontNameUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 4)
      }
      if let v = _storage._listClassicTextIndentArray {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      }
      if let v = _storage._listClassicTextIndentArrayUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 6)
      }
      if let v = _storage._listLabelGeometryArray {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      }
      if let v = _storage._listLabelGeometryArrayUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 8)
      }
      if let v = _storage._listLabelImageDataArray {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 9)
      }
      if let v = _storage._listLabelImageDataArrayUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 10)
      }
      if let v = _storage._listLabelIndentArray {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 11)
      }
      if let v = _storage._listLabelIndentArrayUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 12)
      }
      if let v = _storage._listLabelNumberArray {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 13)
      }
      if let v = _storage._listLabelNumberArrayUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 14)
      }
      if let v = _storage._listLabelTieredNumberArray {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 15)
      }
      if let v = _storage._listLabelTieredNumberArrayUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 16)
      }
      if let v = _storage._textShadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 17)
      }
      if let v = _storage._textShadowUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 18)
      }
      if let v = _storage._listLabelStringArray {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 19)
      }
      if let v = _storage._listLabelStringArrayUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 20)
      }
      if let v = _storage._listTextIndentArray {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 21)
      }
      if let v = _storage._listTextIndentArrayUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 22)
      }
      if let v = _storage._listLabelTypeArray {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 23)
      }
      if let v = _storage._listLabelTypeArrayUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 24)
      }
      if let v = _storage._writingDirection {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 25)
      }
      if let v = _storage._writingDirectionUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 26)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_ListStylePropertyChangeSetArchive, rhs: TSWP_ListStylePropertyChangeSetArchive) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._listFontColor != rhs_storage._listFontColor {return false}
        if _storage._listFontColorUndefined != rhs_storage._listFontColorUndefined {return false}
        if _storage._fontName != rhs_storage._fontName {return false}
        if _storage._fontNameUndefined != rhs_storage._fontNameUndefined {return false}
        if _storage._listClassicTextIndentArray != rhs_storage._listClassicTextIndentArray {return false}
        if _storage._listClassicTextIndentArrayUndefined != rhs_storage._listClassicTextIndentArrayUndefined {return false}
        if _storage._listLabelGeometryArray != rhs_storage._listLabelGeometryArray {return false}
        if _storage._listLabelGeometryArrayUndefined != rhs_storage._listLabelGeometryArrayUndefined {return false}
        if _storage._listLabelImageDataArray != rhs_storage._listLabelImageDataArray {return false}
        if _storage._listLabelImageDataArrayUndefined != rhs_storage._listLabelImageDataArrayUndefined {return false}
        if _storage._listLabelIndentArray != rhs_storage._listLabelIndentArray {return false}
        if _storage._listLabelIndentArrayUndefined != rhs_storage._listLabelIndentArrayUndefined {return false}
        if _storage._listLabelNumberArray != rhs_storage._listLabelNumberArray {return false}
        if _storage._listLabelNumberArrayUndefined != rhs_storage._listLabelNumberArrayUndefined {return false}
        if _storage._listLabelTieredNumberArray != rhs_storage._listLabelTieredNumberArray {return false}
        if _storage._listLabelTieredNumberArrayUndefined != rhs_storage._listLabelTieredNumberArrayUndefined {return false}
        if _storage._textShadow != rhs_storage._textShadow {return false}
        if _storage._textShadowUndefined != rhs_storage._textShadowUndefined {return false}
        if _storage._listLabelStringArray != rhs_storage._listLabelStringArray {return false}
        if _storage._listLabelStringArrayUndefined != rhs_storage._listLabelStringArrayUndefined {return false}
        if _storage._listTextIndentArray != rhs_storage._listTextIndentArray {return false}
        if _storage._listTextIndentArrayUndefined != rhs_storage._listTextIndentArrayUndefined {return false}
        if _storage._listLabelTypeArray != rhs_storage._listLabelTypeArray {return false}
        if _storage._listLabelTypeArrayUndefined != rhs_storage._listLabelTypeArrayUndefined {return false}
        if _storage._writingDirection != rhs_storage._writingDirection {return false}
        if _storage._writingDirectionUndefined != rhs_storage._writingDirectionUndefined {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_ParagraphSpecificStylePropertyChangeSetArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ParagraphSpecificStylePropertyChangeSetArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "alignment"),
    2: .standard(proto: "alignment_undefined"),
    3: .standard(proto: "decimal_tab"),
    4: .standard(proto: "decimal_tab_undefined"),
    5: .standard(proto: "default_tab_stops"),
    6: .standard(proto: "default_tab_stops_undefined"),
    7: .standard(proto: "paragraph_fill"),
    8: .standard(proto: "paragraph_fill_undefined"),
    9: .standard(proto: "first_line_indent"),
    10: .standard(proto: "first_line_indent_undefined"),
    11: .standard(proto: "following_paragraph_style"),
    12: .standard(proto: "following_paragraph_style_undefined"),
    13: .same(proto: "hyphenate"),
    14: .standard(proto: "hyphenate_undefined"),
    15: .standard(proto: "initial_list_style"),
    16: .standard(proto: "initial_list_style_undefined"),
    17: .standard(proto: "keep_lines_together"),
    18: .standard(proto: "keep_lines_together_undefined"),
    19: .standard(proto: "keep_with_next"),
    20: .standard(proto: "keep_with_next_undefined"),
    21: .standard(proto: "left_indent"),
    22: .standard(proto: "left_indent_undefined"),
    23: .standard(proto: "line_spacing"),
    24: .standard(proto: "line_spacing_undefined"),
    25: .standard(proto: "outline_level"),
    26: .standard(proto: "outline_level_undefined"),
    27: .standard(proto: "outline_style_type"),
    28: .standard(proto: "outline_style_type_undefined"),
    29: .standard(proto: "page_break_before"),
    30: .standard(proto: "page_break_before_undefined"),
    31: .standard(proto: "paragraph_borders"),
    32: .standard(proto: "paragraph_borders_undefined"),
    33: .standard(proto: "paragraph_rule_offset"),
    34: .standard(proto: "paragraph_rule_offset_undefined"),
    35: .standard(proto: "paragraph_rule_width"),
    36: .standard(proto: "paragraph_rule_width_undefined"),
    37: .standard(proto: "right_indent"),
    38: .standard(proto: "right_indent_undefined"),
    39: .standard(proto: "space_after"),
    40: .standard(proto: "space_after_undefined"),
    41: .standard(proto: "space_before"),
    42: .standard(proto: "space_before_undefined"),
    43: .standard(proto: "paragraph_stroke"),
    44: .standard(proto: "paragraph_stroke_undefined"),
    45: .same(proto: "tabs"),
    46: .standard(proto: "tabs_undefined"),
    47: .standard(proto: "widow_control"),
    48: .standard(proto: "widow_control_undefined"),
    49: .standard(proto: "show_in_bookmarks_list"),
    50: .standard(proto: "show_in_bookmarks_list_undefined"),
    51: .standard(proto: "show_in_t_o_c_navigator"),
    52: .standard(proto: "show_in_t_o_c_navigator_undefined"),
  ]

  fileprivate class _StorageClass {
    var _alignment: TSS_SpecIntegerArchive? = nil
    var _alignmentUndefined: Bool? = nil
    var _decimalTab: TSS_SpecStringArchive? = nil
    var _decimalTabUndefined: Bool? = nil
    var _defaultTabStops: TSS_SpecDoubleArchive? = nil
    var _defaultTabStopsUndefined: Bool? = nil
    var _paragraphFill: TSS_SpecColorArchive? = nil
    var _paragraphFillUndefined: Bool? = nil
    var _firstLineIndent: TSS_SpecDoubleArchive? = nil
    var _firstLineIndentUndefined: Bool? = nil
    var _followingParagraphStyle: TSWP_SpecParagraphStyleArchive? = nil
    var _followingParagraphStyleUndefined: Bool? = nil
    var _hyphenate: TSS_SpecBoolArchive? = nil
    var _hyphenateUndefined: Bool? = nil
    var _initialListStyle: TSWP_SpecListStyleArchive? = nil
    var _initialListStyleUndefined: Bool? = nil
    var _keepLinesTogether: TSS_SpecBoolArchive? = nil
    var _keepLinesTogetherUndefined: Bool? = nil
    var _keepWithNext: TSS_SpecBoolArchive? = nil
    var _keepWithNextUndefined: Bool? = nil
    var _leftIndent: TSS_SpecDoubleArchive? = nil
    var _leftIndentUndefined: Bool? = nil
    var _lineSpacing: TSWP_SpecLineSpacingArchive? = nil
    var _lineSpacingUndefined: Bool? = nil
    var _outlineLevel: TSS_SpecIntegerArchive? = nil
    var _outlineLevelUndefined: Bool? = nil
    var _outlineStyleType: TSS_SpecIntegerArchive? = nil
    var _outlineStyleTypeUndefined: Bool? = nil
    var _pageBreakBefore: TSS_SpecBoolArchive? = nil
    var _pageBreakBeforeUndefined: Bool? = nil
    var _paragraphBorders: TSS_SpecIntegerArchive? = nil
    var _paragraphBordersUndefined: Bool? = nil
    var _paragraphRuleOffset: TSWP_SpecRuleOffsetArchive? = nil
    var _paragraphRuleOffsetUndefined: Bool? = nil
    var _paragraphRuleWidth: TSS_SpecDoubleArchive? = nil
    var _paragraphRuleWidthUndefined: Bool? = nil
    var _rightIndent: TSS_SpecDoubleArchive? = nil
    var _rightIndentUndefined: Bool? = nil
    var _spaceAfter: TSS_SpecDoubleArchive? = nil
    var _spaceAfterUndefined: Bool? = nil
    var _spaceBefore: TSS_SpecDoubleArchive? = nil
    var _spaceBeforeUndefined: Bool? = nil
    var _paragraphStroke: TSD_SpecStrokeArchive? = nil
    var _paragraphStrokeUndefined: Bool? = nil
    var _tabs: TSWP_SpecTabsArchive? = nil
    var _tabsUndefined: Bool? = nil
    var _widowControl: TSS_SpecIntegerArchive? = nil
    var _widowControlUndefined: Bool? = nil
    var _showInBookmarksList: TSS_SpecBoolArchive? = nil
    var _showInBookmarksListUndefined: Bool? = nil
    var _showInTOCNavigator: TSS_SpecBoolArchive? = nil
    var _showInTOCNavigatorUndefined: Bool? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _alignment = source._alignment
      _alignmentUndefined = source._alignmentUndefined
      _decimalTab = source._decimalTab
      _decimalTabUndefined = source._decimalTabUndefined
      _defaultTabStops = source._defaultTabStops
      _defaultTabStopsUndefined = source._defaultTabStopsUndefined
      _paragraphFill = source._paragraphFill
      _paragraphFillUndefined = source._paragraphFillUndefined
      _firstLineIndent = source._firstLineIndent
      _firstLineIndentUndefined = source._firstLineIndentUndefined
      _followingParagraphStyle = source._followingParagraphStyle
      _followingParagraphStyleUndefined = source._followingParagraphStyleUndefined
      _hyphenate = source._hyphenate
      _hyphenateUndefined = source._hyphenateUndefined
      _initialListStyle = source._initialListStyle
      _initialListStyleUndefined = source._initialListStyleUndefined
      _keepLinesTogether = source._keepLinesTogether
      _keepLinesTogetherUndefined = source._keepLinesTogetherUndefined
      _keepWithNext = source._keepWithNext
      _keepWithNextUndefined = source._keepWithNextUndefined
      _leftIndent = source._leftIndent
      _leftIndentUndefined = source._leftIndentUndefined
      _lineSpacing = source._lineSpacing
      _lineSpacingUndefined = source._lineSpacingUndefined
      _outlineLevel = source._outlineLevel
      _outlineLevelUndefined = source._outlineLevelUndefined
      _outlineStyleType = source._outlineStyleType
      _outlineStyleTypeUndefined = source._outlineStyleTypeUndefined
      _pageBreakBefore = source._pageBreakBefore
      _pageBreakBeforeUndefined = source._pageBreakBeforeUndefined
      _paragraphBorders = source._paragraphBorders
      _paragraphBordersUndefined = source._paragraphBordersUndefined
      _paragraphRuleOffset = source._paragraphRuleOffset
      _paragraphRuleOffsetUndefined = source._paragraphRuleOffsetUndefined
      _paragraphRuleWidth = source._paragraphRuleWidth
      _paragraphRuleWidthUndefined = source._paragraphRuleWidthUndefined
      _rightIndent = source._rightIndent
      _rightIndentUndefined = source._rightIndentUndefined
      _spaceAfter = source._spaceAfter
      _spaceAfterUndefined = source._spaceAfterUndefined
      _spaceBefore = source._spaceBefore
      _spaceBeforeUndefined = source._spaceBeforeUndefined
      _paragraphStroke = source._paragraphStroke
      _paragraphStrokeUndefined = source._paragraphStrokeUndefined
      _tabs = source._tabs
      _tabsUndefined = source._tabsUndefined
      _widowControl = source._widowControl
      _widowControlUndefined = source._widowControlUndefined
      _showInBookmarksList = source._showInBookmarksList
      _showInBookmarksListUndefined = source._showInBookmarksListUndefined
      _showInTOCNavigator = source._showInTOCNavigator
      _showInTOCNavigatorUndefined = source._showInTOCNavigatorUndefined
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._alignment, !v.isInitialized {return false}
      if let v = _storage._decimalTab, !v.isInitialized {return false}
      if let v = _storage._defaultTabStops, !v.isInitialized {return false}
      if let v = _storage._paragraphFill, !v.isInitialized {return false}
      if let v = _storage._firstLineIndent, !v.isInitialized {return false}
      if let v = _storage._followingParagraphStyle, !v.isInitialized {return false}
      if let v = _storage._hyphenate, !v.isInitialized {return false}
      if let v = _storage._initialListStyle, !v.isInitialized {return false}
      if let v = _storage._keepLinesTogether, !v.isInitialized {return false}
      if let v = _storage._keepWithNext, !v.isInitialized {return false}
      if let v = _storage._leftIndent, !v.isInitialized {return false}
      if let v = _storage._lineSpacing, !v.isInitialized {return false}
      if let v = _storage._outlineLevel, !v.isInitialized {return false}
      if let v = _storage._outlineStyleType, !v.isInitialized {return false}
      if let v = _storage._pageBreakBefore, !v.isInitialized {return false}
      if let v = _storage._paragraphBorders, !v.isInitialized {return false}
      if let v = _storage._paragraphRuleOffset, !v.isInitialized {return false}
      if let v = _storage._paragraphRuleWidth, !v.isInitialized {return false}
      if let v = _storage._rightIndent, !v.isInitialized {return false}
      if let v = _storage._spaceAfter, !v.isInitialized {return false}
      if let v = _storage._spaceBefore, !v.isInitialized {return false}
      if let v = _storage._paragraphStroke, !v.isInitialized {return false}
      if let v = _storage._tabs, !v.isInitialized {return false}
      if let v = _storage._widowControl, !v.isInitialized {return false}
      if let v = _storage._showInBookmarksList, !v.isInitialized {return false}
      if let v = _storage._showInTOCNavigator, !v.isInitialized {return false}
      return true
    }
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._alignment)
        case 2: try decoder.decodeSingularBoolField(value: &_storage._alignmentUndefined)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._decimalTab)
        case 4: try decoder.decodeSingularBoolField(value: &_storage._decimalTabUndefined)
        case 5: try decoder.decodeSingularMessageField(value: &_storage._defaultTabStops)
        case 6: try decoder.decodeSingularBoolField(value: &_storage._defaultTabStopsUndefined)
        case 7: try decoder.decodeSingularMessageField(value: &_storage._paragraphFill)
        case 8: try decoder.decodeSingularBoolField(value: &_storage._paragraphFillUndefined)
        case 9: try decoder.decodeSingularMessageField(value: &_storage._firstLineIndent)
        case 10: try decoder.decodeSingularBoolField(value: &_storage._firstLineIndentUndefined)
        case 11: try decoder.decodeSingularMessageField(value: &_storage._followingParagraphStyle)
        case 12: try decoder.decodeSingularBoolField(value: &_storage._followingParagraphStyleUndefined)
        case 13: try decoder.decodeSingularMessageField(value: &_storage._hyphenate)
        case 14: try decoder.decodeSingularBoolField(value: &_storage._hyphenateUndefined)
        case 15: try decoder.decodeSingularMessageField(value: &_storage._initialListStyle)
        case 16: try decoder.decodeSingularBoolField(value: &_storage._initialListStyleUndefined)
        case 17: try decoder.decodeSingularMessageField(value: &_storage._keepLinesTogether)
        case 18: try decoder.decodeSingularBoolField(value: &_storage._keepLinesTogetherUndefined)
        case 19: try decoder.decodeSingularMessageField(value: &_storage._keepWithNext)
        case 20: try decoder.decodeSingularBoolField(value: &_storage._keepWithNextUndefined)
        case 21: try decoder.decodeSingularMessageField(value: &_storage._leftIndent)
        case 22: try decoder.decodeSingularBoolField(value: &_storage._leftIndentUndefined)
        case 23: try decoder.decodeSingularMessageField(value: &_storage._lineSpacing)
        case 24: try decoder.decodeSingularBoolField(value: &_storage._lineSpacingUndefined)
        case 25: try decoder.decodeSingularMessageField(value: &_storage._outlineLevel)
        case 26: try decoder.decodeSingularBoolField(value: &_storage._outlineLevelUndefined)
        case 27: try decoder.decodeSingularMessageField(value: &_storage._outlineStyleType)
        case 28: try decoder.decodeSingularBoolField(value: &_storage._outlineStyleTypeUndefined)
        case 29: try decoder.decodeSingularMessageField(value: &_storage._pageBreakBefore)
        case 30: try decoder.decodeSingularBoolField(value: &_storage._pageBreakBeforeUndefined)
        case 31: try decoder.decodeSingularMessageField(value: &_storage._paragraphBorders)
        case 32: try decoder.decodeSingularBoolField(value: &_storage._paragraphBordersUndefined)
        case 33: try decoder.decodeSingularMessageField(value: &_storage._paragraphRuleOffset)
        case 34: try decoder.decodeSingularBoolField(value: &_storage._paragraphRuleOffsetUndefined)
        case 35: try decoder.decodeSingularMessageField(value: &_storage._paragraphRuleWidth)
        case 36: try decoder.decodeSingularBoolField(value: &_storage._paragraphRuleWidthUndefined)
        case 37: try decoder.decodeSingularMessageField(value: &_storage._rightIndent)
        case 38: try decoder.decodeSingularBoolField(value: &_storage._rightIndentUndefined)
        case 39: try decoder.decodeSingularMessageField(value: &_storage._spaceAfter)
        case 40: try decoder.decodeSingularBoolField(value: &_storage._spaceAfterUndefined)
        case 41: try decoder.decodeSingularMessageField(value: &_storage._spaceBefore)
        case 42: try decoder.decodeSingularBoolField(value: &_storage._spaceBeforeUndefined)
        case 43: try decoder.decodeSingularMessageField(value: &_storage._paragraphStroke)
        case 44: try decoder.decodeSingularBoolField(value: &_storage._paragraphStrokeUndefined)
        case 45: try decoder.decodeSingularMessageField(value: &_storage._tabs)
        case 46: try decoder.decodeSingularBoolField(value: &_storage._tabsUndefined)
        case 47: try decoder.decodeSingularMessageField(value: &_storage._widowControl)
        case 48: try decoder.decodeSingularBoolField(value: &_storage._widowControlUndefined)
        case 49: try decoder.decodeSingularMessageField(value: &_storage._showInBookmarksList)
        case 50: try decoder.decodeSingularBoolField(value: &_storage._showInBookmarksListUndefined)
        case 51: try decoder.decodeSingularMessageField(value: &_storage._showInTOCNavigator)
        case 52: try decoder.decodeSingularBoolField(value: &_storage._showInTOCNavigatorUndefined)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._alignment {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._alignmentUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 2)
      }
      if let v = _storage._decimalTab {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if let v = _storage._decimalTabUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 4)
      }
      if let v = _storage._defaultTabStops {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      }
      if let v = _storage._defaultTabStopsUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 6)
      }
      if let v = _storage._paragraphFill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      }
      if let v = _storage._paragraphFillUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 8)
      }
      if let v = _storage._firstLineIndent {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 9)
      }
      if let v = _storage._firstLineIndentUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 10)
      }
      if let v = _storage._followingParagraphStyle {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 11)
      }
      if let v = _storage._followingParagraphStyleUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 12)
      }
      if let v = _storage._hyphenate {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 13)
      }
      if let v = _storage._hyphenateUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 14)
      }
      if let v = _storage._initialListStyle {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 15)
      }
      if let v = _storage._initialListStyleUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 16)
      }
      if let v = _storage._keepLinesTogether {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 17)
      }
      if let v = _storage._keepLinesTogetherUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 18)
      }
      if let v = _storage._keepWithNext {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 19)
      }
      if let v = _storage._keepWithNextUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 20)
      }
      if let v = _storage._leftIndent {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 21)
      }
      if let v = _storage._leftIndentUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 22)
      }
      if let v = _storage._lineSpacing {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 23)
      }
      if let v = _storage._lineSpacingUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 24)
      }
      if let v = _storage._outlineLevel {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 25)
      }
      if let v = _storage._outlineLevelUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 26)
      }
      if let v = _storage._outlineStyleType {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 27)
      }
      if let v = _storage._outlineStyleTypeUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 28)
      }
      if let v = _storage._pageBreakBefore {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 29)
      }
      if let v = _storage._pageBreakBeforeUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 30)
      }
      if let v = _storage._paragraphBorders {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 31)
      }
      if let v = _storage._paragraphBordersUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 32)
      }
      if let v = _storage._paragraphRuleOffset {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 33)
      }
      if let v = _storage._paragraphRuleOffsetUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 34)
      }
      if let v = _storage._paragraphRuleWidth {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 35)
      }
      if let v = _storage._paragraphRuleWidthUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 36)
      }
      if let v = _storage._rightIndent {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 37)
      }
      if let v = _storage._rightIndentUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 38)
      }
      if let v = _storage._spaceAfter {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 39)
      }
      if let v = _storage._spaceAfterUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 40)
      }
      if let v = _storage._spaceBefore {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 41)
      }
      if let v = _storage._spaceBeforeUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 42)
      }
      if let v = _storage._paragraphStroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 43)
      }
      if let v = _storage._paragraphStrokeUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 44)
      }
      if let v = _storage._tabs {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 45)
      }
      if let v = _storage._tabsUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 46)
      }
      if let v = _storage._widowControl {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 47)
      }
      if let v = _storage._widowControlUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 48)
      }
      if let v = _storage._showInBookmarksList {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 49)
      }
      if let v = _storage._showInBookmarksListUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 50)
      }
      if let v = _storage._showInTOCNavigator {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 51)
      }
      if let v = _storage._showInTOCNavigatorUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 52)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_ParagraphSpecificStylePropertyChangeSetArchive, rhs: TSWP_ParagraphSpecificStylePropertyChangeSetArchive) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._alignment != rhs_storage._alignment {return false}
        if _storage._alignmentUndefined != rhs_storage._alignmentUndefined {return false}
        if _storage._decimalTab != rhs_storage._decimalTab {return false}
        if _storage._decimalTabUndefined != rhs_storage._decimalTabUndefined {return false}
        if _storage._defaultTabStops != rhs_storage._defaultTabStops {return false}
        if _storage._defaultTabStopsUndefined != rhs_storage._defaultTabStopsUndefined {return false}
        if _storage._paragraphFill != rhs_storage._paragraphFill {return false}
        if _storage._paragraphFillUndefined != rhs_storage._paragraphFillUndefined {return false}
        if _storage._firstLineIndent != rhs_storage._firstLineIndent {return false}
        if _storage._firstLineIndentUndefined != rhs_storage._firstLineIndentUndefined {return false}
        if _storage._followingParagraphStyle != rhs_storage._followingParagraphStyle {return false}
        if _storage._followingParagraphStyleUndefined != rhs_storage._followingParagraphStyleUndefined {return false}
        if _storage._hyphenate != rhs_storage._hyphenate {return false}
        if _storage._hyphenateUndefined != rhs_storage._hyphenateUndefined {return false}
        if _storage._initialListStyle != rhs_storage._initialListStyle {return false}
        if _storage._initialListStyleUndefined != rhs_storage._initialListStyleUndefined {return false}
        if _storage._keepLinesTogether != rhs_storage._keepLinesTogether {return false}
        if _storage._keepLinesTogetherUndefined != rhs_storage._keepLinesTogetherUndefined {return false}
        if _storage._keepWithNext != rhs_storage._keepWithNext {return false}
        if _storage._keepWithNextUndefined != rhs_storage._keepWithNextUndefined {return false}
        if _storage._leftIndent != rhs_storage._leftIndent {return false}
        if _storage._leftIndentUndefined != rhs_storage._leftIndentUndefined {return false}
        if _storage._lineSpacing != rhs_storage._lineSpacing {return false}
        if _storage._lineSpacingUndefined != rhs_storage._lineSpacingUndefined {return false}
        if _storage._outlineLevel != rhs_storage._outlineLevel {return false}
        if _storage._outlineLevelUndefined != rhs_storage._outlineLevelUndefined {return false}
        if _storage._outlineStyleType != rhs_storage._outlineStyleType {return false}
        if _storage._outlineStyleTypeUndefined != rhs_storage._outlineStyleTypeUndefined {return false}
        if _storage._pageBreakBefore != rhs_storage._pageBreakBefore {return false}
        if _storage._pageBreakBeforeUndefined != rhs_storage._pageBreakBeforeUndefined {return false}
        if _storage._paragraphBorders != rhs_storage._paragraphBorders {return false}
        if _storage._paragraphBordersUndefined != rhs_storage._paragraphBordersUndefined {return false}
        if _storage._paragraphRuleOffset != rhs_storage._paragraphRuleOffset {return false}
        if _storage._paragraphRuleOffsetUndefined != rhs_storage._paragraphRuleOffsetUndefined {return false}
        if _storage._paragraphRuleWidth != rhs_storage._paragraphRuleWidth {return false}
        if _storage._paragraphRuleWidthUndefined != rhs_storage._paragraphRuleWidthUndefined {return false}
        if _storage._rightIndent != rhs_storage._rightIndent {return false}
        if _storage._rightIndentUndefined != rhs_storage._rightIndentUndefined {return false}
        if _storage._spaceAfter != rhs_storage._spaceAfter {return false}
        if _storage._spaceAfterUndefined != rhs_storage._spaceAfterUndefined {return false}
        if _storage._spaceBefore != rhs_storage._spaceBefore {return false}
        if _storage._spaceBeforeUndefined != rhs_storage._spaceBeforeUndefined {return false}
        if _storage._paragraphStroke != rhs_storage._paragraphStroke {return false}
        if _storage._paragraphStrokeUndefined != rhs_storage._paragraphStrokeUndefined {return false}
        if _storage._tabs != rhs_storage._tabs {return false}
        if _storage._tabsUndefined != rhs_storage._tabsUndefined {return false}
        if _storage._widowControl != rhs_storage._widowControl {return false}
        if _storage._widowControlUndefined != rhs_storage._widowControlUndefined {return false}
        if _storage._showInBookmarksList != rhs_storage._showInBookmarksList {return false}
        if _storage._showInBookmarksListUndefined != rhs_storage._showInBookmarksListUndefined {return false}
        if _storage._showInTOCNavigator != rhs_storage._showInTOCNavigator {return false}
        if _storage._showInTOCNavigatorUndefined != rhs_storage._showInTOCNavigatorUndefined {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_ParagraphStylePropertyChangeSetArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ParagraphStylePropertyChangeSetArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "super"),
    2: .same(proto: "alignment"),
    3: .standard(proto: "alignment_undefined"),
    4: .standard(proto: "decimal_tab"),
    5: .standard(proto: "decimal_tab_undefined"),
    6: .standard(proto: "default_tab_stops"),
    7: .standard(proto: "default_tab_stops_undefined"),
    8: .standard(proto: "paragraph_fill"),
    9: .standard(proto: "paragraph_fill_undefined"),
    10: .standard(proto: "first_line_indent"),
    11: .standard(proto: "first_line_indent_undefined"),
    12: .standard(proto: "following_paragraph_style"),
    13: .standard(proto: "following_paragraph_style_undefined"),
    14: .same(proto: "hyphenate"),
    15: .standard(proto: "hyphenate_undefined"),
    16: .standard(proto: "initial_list_style"),
    17: .standard(proto: "initial_list_style_undefined"),
    18: .standard(proto: "keep_lines_together"),
    19: .standard(proto: "keep_lines_together_undefined"),
    20: .standard(proto: "keep_with_next"),
    21: .standard(proto: "keep_with_next_undefined"),
    22: .standard(proto: "left_indent"),
    23: .standard(proto: "left_indent_undefined"),
    24: .standard(proto: "line_spacing"),
    25: .standard(proto: "line_spacing_undefined"),
    26: .standard(proto: "outline_level"),
    27: .standard(proto: "outline_level_undefined"),
    28: .standard(proto: "outline_style_type"),
    29: .standard(proto: "outline_style_type_undefined"),
    30: .standard(proto: "page_break_before"),
    31: .standard(proto: "page_break_before_undefined"),
    32: .standard(proto: "paragraph_borders"),
    33: .standard(proto: "paragraph_borders_undefined"),
    34: .standard(proto: "paragraph_rule_offset"),
    35: .standard(proto: "paragraph_rule_offset_undefined"),
    36: .standard(proto: "paragraph_rule_width"),
    37: .standard(proto: "paragraph_rule_width_undefined"),
    38: .standard(proto: "right_indent"),
    39: .standard(proto: "right_indent_undefined"),
    40: .standard(proto: "space_after"),
    41: .standard(proto: "space_after_undefined"),
    42: .standard(proto: "space_before"),
    43: .standard(proto: "space_before_undefined"),
    44: .standard(proto: "paragraph_stroke"),
    45: .standard(proto: "paragraph_stroke_undefined"),
    46: .same(proto: "tabs"),
    47: .standard(proto: "tabs_undefined"),
    48: .standard(proto: "widow_control"),
    49: .standard(proto: "widow_control_undefined"),
    50: .standard(proto: "show_in_bookmarks_list"),
    51: .standard(proto: "show_in_bookmarks_list_undefined"),
    52: .standard(proto: "show_in_t_o_c_navigator"),
    53: .standard(proto: "show_in_t_o_c_navigator_undefined"),
  ]

  fileprivate class _StorageClass {
    var _super: TSWP_CharacterStylePropertyChangeSetArchive? = nil
    var _alignment: TSS_SpecIntegerArchive? = nil
    var _alignmentUndefined: Bool? = nil
    var _decimalTab: TSS_SpecStringArchive? = nil
    var _decimalTabUndefined: Bool? = nil
    var _defaultTabStops: TSS_SpecDoubleArchive? = nil
    var _defaultTabStopsUndefined: Bool? = nil
    var _paragraphFill: TSS_SpecColorArchive? = nil
    var _paragraphFillUndefined: Bool? = nil
    var _firstLineIndent: TSS_SpecDoubleArchive? = nil
    var _firstLineIndentUndefined: Bool? = nil
    var _followingParagraphStyle: TSWP_SpecParagraphStyleArchive? = nil
    var _followingParagraphStyleUndefined: Bool? = nil
    var _hyphenate: TSS_SpecBoolArchive? = nil
    var _hyphenateUndefined: Bool? = nil
    var _initialListStyle: TSWP_SpecListStyleArchive? = nil
    var _initialListStyleUndefined: Bool? = nil
    var _keepLinesTogether: TSS_SpecBoolArchive? = nil
    var _keepLinesTogetherUndefined: Bool? = nil
    var _keepWithNext: TSS_SpecBoolArchive? = nil
    var _keepWithNextUndefined: Bool? = nil
    var _leftIndent: TSS_SpecDoubleArchive? = nil
    var _leftIndentUndefined: Bool? = nil
    var _lineSpacing: TSWP_SpecLineSpacingArchive? = nil
    var _lineSpacingUndefined: Bool? = nil
    var _outlineLevel: TSS_SpecIntegerArchive? = nil
    var _outlineLevelUndefined: Bool? = nil
    var _outlineStyleType: TSS_SpecIntegerArchive? = nil
    var _outlineStyleTypeUndefined: Bool? = nil
    var _pageBreakBefore: TSS_SpecBoolArchive? = nil
    var _pageBreakBeforeUndefined: Bool? = nil
    var _paragraphBorders: TSS_SpecIntegerArchive? = nil
    var _paragraphBordersUndefined: Bool? = nil
    var _paragraphRuleOffset: TSWP_SpecRuleOffsetArchive? = nil
    var _paragraphRuleOffsetUndefined: Bool? = nil
    var _paragraphRuleWidth: TSS_SpecDoubleArchive? = nil
    var _paragraphRuleWidthUndefined: Bool? = nil
    var _rightIndent: TSS_SpecDoubleArchive? = nil
    var _rightIndentUndefined: Bool? = nil
    var _spaceAfter: TSS_SpecDoubleArchive? = nil
    var _spaceAfterUndefined: Bool? = nil
    var _spaceBefore: TSS_SpecDoubleArchive? = nil
    var _spaceBeforeUndefined: Bool? = nil
    var _paragraphStroke: TSD_SpecStrokeArchive? = nil
    var _paragraphStrokeUndefined: Bool? = nil
    var _tabs: TSWP_SpecTabsArchive? = nil
    var _tabsUndefined: Bool? = nil
    var _widowControl: TSS_SpecIntegerArchive? = nil
    var _widowControlUndefined: Bool? = nil
    var _showInBookmarksList: TSS_SpecBoolArchive? = nil
    var _showInBookmarksListUndefined: Bool? = nil
    var _showInTOCNavigator: TSS_SpecBoolArchive? = nil
    var _showInTOCNavigatorUndefined: Bool? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _super = source._super
      _alignment = source._alignment
      _alignmentUndefined = source._alignmentUndefined
      _decimalTab = source._decimalTab
      _decimalTabUndefined = source._decimalTabUndefined
      _defaultTabStops = source._defaultTabStops
      _defaultTabStopsUndefined = source._defaultTabStopsUndefined
      _paragraphFill = source._paragraphFill
      _paragraphFillUndefined = source._paragraphFillUndefined
      _firstLineIndent = source._firstLineIndent
      _firstLineIndentUndefined = source._firstLineIndentUndefined
      _followingParagraphStyle = source._followingParagraphStyle
      _followingParagraphStyleUndefined = source._followingParagraphStyleUndefined
      _hyphenate = source._hyphenate
      _hyphenateUndefined = source._hyphenateUndefined
      _initialListStyle = source._initialListStyle
      _initialListStyleUndefined = source._initialListStyleUndefined
      _keepLinesTogether = source._keepLinesTogether
      _keepLinesTogetherUndefined = source._keepLinesTogetherUndefined
      _keepWithNext = source._keepWithNext
      _keepWithNextUndefined = source._keepWithNextUndefined
      _leftIndent = source._leftIndent
      _leftIndentUndefined = source._leftIndentUndefined
      _lineSpacing = source._lineSpacing
      _lineSpacingUndefined = source._lineSpacingUndefined
      _outlineLevel = source._outlineLevel
      _outlineLevelUndefined = source._outlineLevelUndefined
      _outlineStyleType = source._outlineStyleType
      _outlineStyleTypeUndefined = source._outlineStyleTypeUndefined
      _pageBreakBefore = source._pageBreakBefore
      _pageBreakBeforeUndefined = source._pageBreakBeforeUndefined
      _paragraphBorders = source._paragraphBorders
      _paragraphBordersUndefined = source._paragraphBordersUndefined
      _paragraphRuleOffset = source._paragraphRuleOffset
      _paragraphRuleOffsetUndefined = source._paragraphRuleOffsetUndefined
      _paragraphRuleWidth = source._paragraphRuleWidth
      _paragraphRuleWidthUndefined = source._paragraphRuleWidthUndefined
      _rightIndent = source._rightIndent
      _rightIndentUndefined = source._rightIndentUndefined
      _spaceAfter = source._spaceAfter
      _spaceAfterUndefined = source._spaceAfterUndefined
      _spaceBefore = source._spaceBefore
      _spaceBeforeUndefined = source._spaceBeforeUndefined
      _paragraphStroke = source._paragraphStroke
      _paragraphStrokeUndefined = source._paragraphStrokeUndefined
      _tabs = source._tabs
      _tabsUndefined = source._tabsUndefined
      _widowControl = source._widowControl
      _widowControlUndefined = source._widowControlUndefined
      _showInBookmarksList = source._showInBookmarksList
      _showInBookmarksListUndefined = source._showInBookmarksListUndefined
      _showInTOCNavigator = source._showInTOCNavigator
      _showInTOCNavigatorUndefined = source._showInTOCNavigatorUndefined
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._super == nil {return false}
      if let v = _storage._super, !v.isInitialized {return false}
      if let v = _storage._alignment, !v.isInitialized {return false}
      if let v = _storage._decimalTab, !v.isInitialized {return false}
      if let v = _storage._defaultTabStops, !v.isInitialized {return false}
      if let v = _storage._paragraphFill, !v.isInitialized {return false}
      if let v = _storage._firstLineIndent, !v.isInitialized {return false}
      if let v = _storage._followingParagraphStyle, !v.isInitialized {return false}
      if let v = _storage._hyphenate, !v.isInitialized {return false}
      if let v = _storage._initialListStyle, !v.isInitialized {return false}
      if let v = _storage._keepLinesTogether, !v.isInitialized {return false}
      if let v = _storage._keepWithNext, !v.isInitialized {return false}
      if let v = _storage._leftIndent, !v.isInitialized {return false}
      if let v = _storage._lineSpacing, !v.isInitialized {return false}
      if let v = _storage._outlineLevel, !v.isInitialized {return false}
      if let v = _storage._outlineStyleType, !v.isInitialized {return false}
      if let v = _storage._pageBreakBefore, !v.isInitialized {return false}
      if let v = _storage._paragraphBorders, !v.isInitialized {return false}
      if let v = _storage._paragraphRuleOffset, !v.isInitialized {return false}
      if let v = _storage._paragraphRuleWidth, !v.isInitialized {return false}
      if let v = _storage._rightIndent, !v.isInitialized {return false}
      if let v = _storage._spaceAfter, !v.isInitialized {return false}
      if let v = _storage._spaceBefore, !v.isInitialized {return false}
      if let v = _storage._paragraphStroke, !v.isInitialized {return false}
      if let v = _storage._tabs, !v.isInitialized {return false}
      if let v = _storage._widowControl, !v.isInitialized {return false}
      if let v = _storage._showInBookmarksList, !v.isInitialized {return false}
      if let v = _storage._showInTOCNavigator, !v.isInitialized {return false}
      return true
    }
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._super)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._alignment)
        case 3: try decoder.decodeSingularBoolField(value: &_storage._alignmentUndefined)
        case 4: try decoder.decodeSingularMessageField(value: &_storage._decimalTab)
        case 5: try decoder.decodeSingularBoolField(value: &_storage._decimalTabUndefined)
        case 6: try decoder.decodeSingularMessageField(value: &_storage._defaultTabStops)
        case 7: try decoder.decodeSingularBoolField(value: &_storage._defaultTabStopsUndefined)
        case 8: try decoder.decodeSingularMessageField(value: &_storage._paragraphFill)
        case 9: try decoder.decodeSingularBoolField(value: &_storage._paragraphFillUndefined)
        case 10: try decoder.decodeSingularMessageField(value: &_storage._firstLineIndent)
        case 11: try decoder.decodeSingularBoolField(value: &_storage._firstLineIndentUndefined)
        case 12: try decoder.decodeSingularMessageField(value: &_storage._followingParagraphStyle)
        case 13: try decoder.decodeSingularBoolField(value: &_storage._followingParagraphStyleUndefined)
        case 14: try decoder.decodeSingularMessageField(value: &_storage._hyphenate)
        case 15: try decoder.decodeSingularBoolField(value: &_storage._hyphenateUndefined)
        case 16: try decoder.decodeSingularMessageField(value: &_storage._initialListStyle)
        case 17: try decoder.decodeSingularBoolField(value: &_storage._initialListStyleUndefined)
        case 18: try decoder.decodeSingularMessageField(value: &_storage._keepLinesTogether)
        case 19: try decoder.decodeSingularBoolField(value: &_storage._keepLinesTogetherUndefined)
        case 20: try decoder.decodeSingularMessageField(value: &_storage._keepWithNext)
        case 21: try decoder.decodeSingularBoolField(value: &_storage._keepWithNextUndefined)
        case 22: try decoder.decodeSingularMessageField(value: &_storage._leftIndent)
        case 23: try decoder.decodeSingularBoolField(value: &_storage._leftIndentUndefined)
        case 24: try decoder.decodeSingularMessageField(value: &_storage._lineSpacing)
        case 25: try decoder.decodeSingularBoolField(value: &_storage._lineSpacingUndefined)
        case 26: try decoder.decodeSingularMessageField(value: &_storage._outlineLevel)
        case 27: try decoder.decodeSingularBoolField(value: &_storage._outlineLevelUndefined)
        case 28: try decoder.decodeSingularMessageField(value: &_storage._outlineStyleType)
        case 29: try decoder.decodeSingularBoolField(value: &_storage._outlineStyleTypeUndefined)
        case 30: try decoder.decodeSingularMessageField(value: &_storage._pageBreakBefore)
        case 31: try decoder.decodeSingularBoolField(value: &_storage._pageBreakBeforeUndefined)
        case 32: try decoder.decodeSingularMessageField(value: &_storage._paragraphBorders)
        case 33: try decoder.decodeSingularBoolField(value: &_storage._paragraphBordersUndefined)
        case 34: try decoder.decodeSingularMessageField(value: &_storage._paragraphRuleOffset)
        case 35: try decoder.decodeSingularBoolField(value: &_storage._paragraphRuleOffsetUndefined)
        case 36: try decoder.decodeSingularMessageField(value: &_storage._paragraphRuleWidth)
        case 37: try decoder.decodeSingularBoolField(value: &_storage._paragraphRuleWidthUndefined)
        case 38: try decoder.decodeSingularMessageField(value: &_storage._rightIndent)
        case 39: try decoder.decodeSingularBoolField(value: &_storage._rightIndentUndefined)
        case 40: try decoder.decodeSingularMessageField(value: &_storage._spaceAfter)
        case 41: try decoder.decodeSingularBoolField(value: &_storage._spaceAfterUndefined)
        case 42: try decoder.decodeSingularMessageField(value: &_storage._spaceBefore)
        case 43: try decoder.decodeSingularBoolField(value: &_storage._spaceBeforeUndefined)
        case 44: try decoder.decodeSingularMessageField(value: &_storage._paragraphStroke)
        case 45: try decoder.decodeSingularBoolField(value: &_storage._paragraphStrokeUndefined)
        case 46: try decoder.decodeSingularMessageField(value: &_storage._tabs)
        case 47: try decoder.decodeSingularBoolField(value: &_storage._tabsUndefined)
        case 48: try decoder.decodeSingularMessageField(value: &_storage._widowControl)
        case 49: try decoder.decodeSingularBoolField(value: &_storage._widowControlUndefined)
        case 50: try decoder.decodeSingularMessageField(value: &_storage._showInBookmarksList)
        case 51: try decoder.decodeSingularBoolField(value: &_storage._showInBookmarksListUndefined)
        case 52: try decoder.decodeSingularMessageField(value: &_storage._showInTOCNavigator)
        case 53: try decoder.decodeSingularBoolField(value: &_storage._showInTOCNavigatorUndefined)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._super {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._alignment {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._alignmentUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 3)
      }
      if let v = _storage._decimalTab {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
      if let v = _storage._decimalTabUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 5)
      }
      if let v = _storage._defaultTabStops {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
      }
      if let v = _storage._defaultTabStopsUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 7)
      }
      if let v = _storage._paragraphFill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
      }
      if let v = _storage._paragraphFillUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 9)
      }
      if let v = _storage._firstLineIndent {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 10)
      }
      if let v = _storage._firstLineIndentUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 11)
      }
      if let v = _storage._followingParagraphStyle {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 12)
      }
      if let v = _storage._followingParagraphStyleUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 13)
      }
      if let v = _storage._hyphenate {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 14)
      }
      if let v = _storage._hyphenateUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 15)
      }
      if let v = _storage._initialListStyle {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 16)
      }
      if let v = _storage._initialListStyleUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 17)
      }
      if let v = _storage._keepLinesTogether {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 18)
      }
      if let v = _storage._keepLinesTogetherUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 19)
      }
      if let v = _storage._keepWithNext {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 20)
      }
      if let v = _storage._keepWithNextUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 21)
      }
      if let v = _storage._leftIndent {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 22)
      }
      if let v = _storage._leftIndentUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 23)
      }
      if let v = _storage._lineSpacing {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 24)
      }
      if let v = _storage._lineSpacingUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 25)
      }
      if let v = _storage._outlineLevel {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 26)
      }
      if let v = _storage._outlineLevelUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 27)
      }
      if let v = _storage._outlineStyleType {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 28)
      }
      if let v = _storage._outlineStyleTypeUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 29)
      }
      if let v = _storage._pageBreakBefore {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 30)
      }
      if let v = _storage._pageBreakBeforeUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 31)
      }
      if let v = _storage._paragraphBorders {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 32)
      }
      if let v = _storage._paragraphBordersUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 33)
      }
      if let v = _storage._paragraphRuleOffset {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 34)
      }
      if let v = _storage._paragraphRuleOffsetUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 35)
      }
      if let v = _storage._paragraphRuleWidth {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 36)
      }
      if let v = _storage._paragraphRuleWidthUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 37)
      }
      if let v = _storage._rightIndent {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 38)
      }
      if let v = _storage._rightIndentUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 39)
      }
      if let v = _storage._spaceAfter {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 40)
      }
      if let v = _storage._spaceAfterUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 41)
      }
      if let v = _storage._spaceBefore {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 42)
      }
      if let v = _storage._spaceBeforeUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 43)
      }
      if let v = _storage._paragraphStroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 44)
      }
      if let v = _storage._paragraphStrokeUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 45)
      }
      if let v = _storage._tabs {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 46)
      }
      if let v = _storage._tabsUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 47)
      }
      if let v = _storage._widowControl {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 48)
      }
      if let v = _storage._widowControlUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 49)
      }
      if let v = _storage._showInBookmarksList {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 50)
      }
      if let v = _storage._showInBookmarksListUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 51)
      }
      if let v = _storage._showInTOCNavigator {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 52)
      }
      if let v = _storage._showInTOCNavigatorUndefined {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 53)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_ParagraphStylePropertyChangeSetArchive, rhs: TSWP_ParagraphStylePropertyChangeSetArchive) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._super != rhs_storage._super {return false}
        if _storage._alignment != rhs_storage._alignment {return false}
        if _storage._alignmentUndefined != rhs_storage._alignmentUndefined {return false}
        if _storage._decimalTab != rhs_storage._decimalTab {return false}
        if _storage._decimalTabUndefined != rhs_storage._decimalTabUndefined {return false}
        if _storage._defaultTabStops != rhs_storage._defaultTabStops {return false}
        if _storage._defaultTabStopsUndefined != rhs_storage._defaultTabStopsUndefined {return false}
        if _storage._paragraphFill != rhs_storage._paragraphFill {return false}
        if _storage._paragraphFillUndefined != rhs_storage._paragraphFillUndefined {return false}
        if _storage._firstLineIndent != rhs_storage._firstLineIndent {return false}
        if _storage._firstLineIndentUndefined != rhs_storage._firstLineIndentUndefined {return false}
        if _storage._followingParagraphStyle != rhs_storage._followingParagraphStyle {return false}
        if _storage._followingParagraphStyleUndefined != rhs_storage._followingParagraphStyleUndefined {return false}
        if _storage._hyphenate != rhs_storage._hyphenate {return false}
        if _storage._hyphenateUndefined != rhs_storage._hyphenateUndefined {return false}
        if _storage._initialListStyle != rhs_storage._initialListStyle {return false}
        if _storage._initialListStyleUndefined != rhs_storage._initialListStyleUndefined {return false}
        if _storage._keepLinesTogether != rhs_storage._keepLinesTogether {return false}
        if _storage._keepLinesTogetherUndefined != rhs_storage._keepLinesTogetherUndefined {return false}
        if _storage._keepWithNext != rhs_storage._keepWithNext {return false}
        if _storage._keepWithNextUndefined != rhs_storage._keepWithNextUndefined {return false}
        if _storage._leftIndent != rhs_storage._leftIndent {return false}
        if _storage._leftIndentUndefined != rhs_storage._leftIndentUndefined {return false}
        if _storage._lineSpacing != rhs_storage._lineSpacing {return false}
        if _storage._lineSpacingUndefined != rhs_storage._lineSpacingUndefined {return false}
        if _storage._outlineLevel != rhs_storage._outlineLevel {return false}
        if _storage._outlineLevelUndefined != rhs_storage._outlineLevelUndefined {return false}
        if _storage._outlineStyleType != rhs_storage._outlineStyleType {return false}
        if _storage._outlineStyleTypeUndefined != rhs_storage._outlineStyleTypeUndefined {return false}
        if _storage._pageBreakBefore != rhs_storage._pageBreakBefore {return false}
        if _storage._pageBreakBeforeUndefined != rhs_storage._pageBreakBeforeUndefined {return false}
        if _storage._paragraphBorders != rhs_storage._paragraphBorders {return false}
        if _storage._paragraphBordersUndefined != rhs_storage._paragraphBordersUndefined {return false}
        if _storage._paragraphRuleOffset != rhs_storage._paragraphRuleOffset {return false}
        if _storage._paragraphRuleOffsetUndefined != rhs_storage._paragraphRuleOffsetUndefined {return false}
        if _storage._paragraphRuleWidth != rhs_storage._paragraphRuleWidth {return false}
        if _storage._paragraphRuleWidthUndefined != rhs_storage._paragraphRuleWidthUndefined {return false}
        if _storage._rightIndent != rhs_storage._rightIndent {return false}
        if _storage._rightIndentUndefined != rhs_storage._rightIndentUndefined {return false}
        if _storage._spaceAfter != rhs_storage._spaceAfter {return false}
        if _storage._spaceAfterUndefined != rhs_storage._spaceAfterUndefined {return false}
        if _storage._spaceBefore != rhs_storage._spaceBefore {return false}
        if _storage._spaceBeforeUndefined != rhs_storage._spaceBeforeUndefined {return false}
        if _storage._paragraphStroke != rhs_storage._paragraphStroke {return false}
        if _storage._paragraphStrokeUndefined != rhs_storage._paragraphStrokeUndefined {return false}
        if _storage._tabs != rhs_storage._tabs {return false}
        if _storage._tabsUndefined != rhs_storage._tabsUndefined {return false}
        if _storage._widowControl != rhs_storage._widowControl {return false}
        if _storage._widowControlUndefined != rhs_storage._widowControlUndefined {return false}
        if _storage._showInBookmarksList != rhs_storage._showInBookmarksList {return false}
        if _storage._showInBookmarksListUndefined != rhs_storage._showInBookmarksListUndefined {return false}
        if _storage._showInTOCNavigator != rhs_storage._showInTOCNavigator {return false}
        if _storage._showInTOCNavigatorUndefined != rhs_storage._showInTOCNavigatorUndefined {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_ShapeStylePropertyChangeSetArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ShapeStylePropertyChangeSetArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "super"),
    2: .same(proto: "columns"),
    3: .standard(proto: "columns_undefined"),
    4: .same(proto: "padding"),
    5: .standard(proto: "padding_undefined"),
    6: .standard(proto: "shrink_text_to_fit"),
    7: .standard(proto: "shrink_text_to_fit_undefined"),
    8: .standard(proto: "vertical_alignment"),
    9: .standard(proto: "vertical_alignment_undefined"),
    10: .standard(proto: "vertical_text"),
    11: .standard(proto: "vertical_text_undefined"),
    12: .standard(proto: "default_paragraph_style"),
    13: .standard(proto: "default_paragraph_style_undefined"),
  ]

  public var isInitialized: Bool {
    if self._super == nil {return false}
    if let v = self._super, !v.isInitialized {return false}
    if let v = self._columns, !v.isInitialized {return false}
    if let v = self._padding, !v.isInitialized {return false}
    if let v = self._shrinkTextToFit, !v.isInitialized {return false}
    if let v = self._verticalAlignment, !v.isInitialized {return false}
    if let v = self._verticalText, !v.isInitialized {return false}
    if let v = self._defaultParagraphStyle, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._super)
      case 2: try decoder.decodeSingularMessageField(value: &self._columns)
      case 3: try decoder.decodeSingularBoolField(value: &self._columnsUndefined)
      case 4: try decoder.decodeSingularMessageField(value: &self._padding)
      case 5: try decoder.decodeSingularBoolField(value: &self._paddingUndefined)
      case 6: try decoder.decodeSingularMessageField(value: &self._shrinkTextToFit)
      case 7: try decoder.decodeSingularBoolField(value: &self._shrinkTextToFitUndefined)
      case 8: try decoder.decodeSingularMessageField(value: &self._verticalAlignment)
      case 9: try decoder.decodeSingularBoolField(value: &self._verticalAlignmentUndefined)
      case 10: try decoder.decodeSingularMessageField(value: &self._verticalText)
      case 11: try decoder.decodeSingularBoolField(value: &self._verticalTextUndefined)
      case 12: try decoder.decodeSingularMessageField(value: &self._defaultParagraphStyle)
      case 13: try decoder.decodeSingularBoolField(value: &self._defaultParagraphStyleUndefined)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._super {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if let v = self._columns {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    }
    if let v = self._columnsUndefined {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 3)
    }
    if let v = self._padding {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
    }
    if let v = self._paddingUndefined {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 5)
    }
    if let v = self._shrinkTextToFit {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
    }
    if let v = self._shrinkTextToFitUndefined {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 7)
    }
    if let v = self._verticalAlignment {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
    }
    if let v = self._verticalAlignmentUndefined {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 9)
    }
    if let v = self._verticalText {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 10)
    }
    if let v = self._verticalTextUndefined {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 11)
    }
    if let v = self._defaultParagraphStyle {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 12)
    }
    if let v = self._defaultParagraphStyleUndefined {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 13)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_ShapeStylePropertyChangeSetArchive, rhs: TSWP_ShapeStylePropertyChangeSetArchive) -> Bool {
    if lhs._super != rhs._super {return false}
    if lhs._columns != rhs._columns {return false}
    if lhs._columnsUndefined != rhs._columnsUndefined {return false}
    if lhs._padding != rhs._padding {return false}
    if lhs._paddingUndefined != rhs._paddingUndefined {return false}
    if lhs._shrinkTextToFit != rhs._shrinkTextToFit {return false}
    if lhs._shrinkTextToFitUndefined != rhs._shrinkTextToFitUndefined {return false}
    if lhs._verticalAlignment != rhs._verticalAlignment {return false}
    if lhs._verticalAlignmentUndefined != rhs._verticalAlignmentUndefined {return false}
    if lhs._verticalText != rhs._verticalText {return false}
    if lhs._verticalTextUndefined != rhs._verticalTextUndefined {return false}
    if lhs._defaultParagraphStyle != rhs._defaultParagraphStyle {return false}
    if lhs._defaultParagraphStyleUndefined != rhs._defaultParagraphStyleUndefined {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_TOCEntryStylePropertyChangeSetArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".TOCEntryStylePropertyChangeSetArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "super"),
    2: .standard(proto: "toc_show_page_number"),
    3: .standard(proto: "toc_show_page_number_undefined"),
    4: .standard(proto: "toc_page_number_style"),
    5: .standard(proto: "toc_page_number_style_undefined"),
  ]

  public var isInitialized: Bool {
    if self._super == nil {return false}
    if let v = self._super, !v.isInitialized {return false}
    if let v = self._tocShowPageNumber, !v.isInitialized {return false}
    if let v = self._tocPageNumberStyle, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._super)
      case 2: try decoder.decodeSingularMessageField(value: &self._tocShowPageNumber)
      case 3: try decoder.decodeSingularBoolField(value: &self._tocShowPageNumberUndefined)
      case 4: try decoder.decodeSingularMessageField(value: &self._tocPageNumberStyle)
      case 5: try decoder.decodeSingularBoolField(value: &self._tocPageNumberStyleUndefined)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._super {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if let v = self._tocShowPageNumber {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    }
    if let v = self._tocShowPageNumberUndefined {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 3)
    }
    if let v = self._tocPageNumberStyle {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
    }
    if let v = self._tocPageNumberStyleUndefined {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 5)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_TOCEntryStylePropertyChangeSetArchive, rhs: TSWP_TOCEntryStylePropertyChangeSetArchive) -> Bool {
    if lhs._super != rhs._super {return false}
    if lhs._tocShowPageNumber != rhs._tocShowPageNumber {return false}
    if lhs._tocShowPageNumberUndefined != rhs._tocShowPageNumberUndefined {return false}
    if lhs._tocPageNumberStyle != rhs._tocPageNumberStyle {return false}
    if lhs._tocPageNumberStyleUndefined != rhs._tocPageNumberStyleUndefined {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSWP_StyleDiffArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".StyleDiffArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "style"),
    2: .standard(proto: "character_change_set"),
    3: .standard(proto: "paragraph_change_set"),
    4: .standard(proto: "shape_change_set"),
  ]

  public var isInitialized: Bool {
    if let v = self._style, !v.isInitialized {return false}
    if let v = self._characterChangeSet, !v.isInitialized {return false}
    if let v = self._paragraphChangeSet, !v.isInitialized {return false}
    if let v = self._shapeChangeSet, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._style)
      case 2: try decoder.decodeSingularMessageField(value: &self._characterChangeSet)
      case 3: try decoder.decodeSingularMessageField(value: &self._paragraphChangeSet)
      case 4: try decoder.decodeSingularMessageField(value: &self._shapeChangeSet)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._style {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if let v = self._characterChangeSet {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    }
    if let v = self._paragraphChangeSet {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
    }
    if let v = self._shapeChangeSet {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSWP_StyleDiffArchive, rhs: TSWP_StyleDiffArchive) -> Bool {
    if lhs._style != rhs._style {return false}
    if lhs._characterChangeSet != rhs._characterChangeSet {return false}
    if lhs._paragraphChangeSet != rhs._paragraphChangeSet {return false}
    if lhs._shapeChangeSet != rhs._shapeChangeSet {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
