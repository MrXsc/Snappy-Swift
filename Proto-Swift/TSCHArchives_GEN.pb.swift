// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: TSCHArchives_GEN.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

struct TSCH_Generated_ChartStyleArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var tschchartinfodefault3Dchartopacity: Float {
    get {return _storage._tschchartinfodefault3Dchartopacity ?? 0}
    set {_uniqueStorage()._tschchartinfodefault3Dchartopacity = newValue}
  }
  /// Returns true if `tschchartinfodefault3Dchartopacity` has been explicitly set.
  var hasTschchartinfodefault3Dchartopacity: Bool {return _storage._tschchartinfodefault3Dchartopacity != nil}
  /// Clears the value of `tschchartinfodefault3Dchartopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefault3Dchartopacity() {_uniqueStorage()._tschchartinfodefault3Dchartopacity = nil}

  var tschchartinfoarea3Dlightingpackage: TSCH_Chart3DLightingPackageArchive {
    get {return _storage._tschchartinfoarea3Dlightingpackage ?? TSCH_Chart3DLightingPackageArchive()}
    set {_uniqueStorage()._tschchartinfoarea3Dlightingpackage = newValue}
  }
  /// Returns true if `tschchartinfoarea3Dlightingpackage` has been explicitly set.
  var hasTschchartinfoarea3Dlightingpackage: Bool {return _storage._tschchartinfoarea3Dlightingpackage != nil}
  /// Clears the value of `tschchartinfoarea3Dlightingpackage`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfoarea3Dlightingpackage() {_uniqueStorage()._tschchartinfoarea3Dlightingpackage = nil}

  var tschchartinfobar3Dlightingpackage: TSCH_Chart3DLightingPackageArchive {
    get {return _storage._tschchartinfobar3Dlightingpackage ?? TSCH_Chart3DLightingPackageArchive()}
    set {_uniqueStorage()._tschchartinfobar3Dlightingpackage = newValue}
  }
  /// Returns true if `tschchartinfobar3Dlightingpackage` has been explicitly set.
  var hasTschchartinfobar3Dlightingpackage: Bool {return _storage._tschchartinfobar3Dlightingpackage != nil}
  /// Clears the value of `tschchartinfobar3Dlightingpackage`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfobar3Dlightingpackage() {_uniqueStorage()._tschchartinfobar3Dlightingpackage = nil}

  var tschchartinfocolumn3Dlightingpackage: TSCH_Chart3DLightingPackageArchive {
    get {return _storage._tschchartinfocolumn3Dlightingpackage ?? TSCH_Chart3DLightingPackageArchive()}
    set {_uniqueStorage()._tschchartinfocolumn3Dlightingpackage = newValue}
  }
  /// Returns true if `tschchartinfocolumn3Dlightingpackage` has been explicitly set.
  var hasTschchartinfocolumn3Dlightingpackage: Bool {return _storage._tschchartinfocolumn3Dlightingpackage != nil}
  /// Clears the value of `tschchartinfocolumn3Dlightingpackage`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfocolumn3Dlightingpackage() {_uniqueStorage()._tschchartinfocolumn3Dlightingpackage = nil}

  var tschchartinfodefault3Dlightingpackage: TSCH_Chart3DLightingPackageArchive {
    get {return _storage._tschchartinfodefault3Dlightingpackage ?? TSCH_Chart3DLightingPackageArchive()}
    set {_uniqueStorage()._tschchartinfodefault3Dlightingpackage = newValue}
  }
  /// Returns true if `tschchartinfodefault3Dlightingpackage` has been explicitly set.
  var hasTschchartinfodefault3Dlightingpackage: Bool {return _storage._tschchartinfodefault3Dlightingpackage != nil}
  /// Clears the value of `tschchartinfodefault3Dlightingpackage`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefault3Dlightingpackage() {_uniqueStorage()._tschchartinfodefault3Dlightingpackage = nil}

  var tschchartinfoline3Dlightingpackage: TSCH_Chart3DLightingPackageArchive {
    get {return _storage._tschchartinfoline3Dlightingpackage ?? TSCH_Chart3DLightingPackageArchive()}
    set {_uniqueStorage()._tschchartinfoline3Dlightingpackage = newValue}
  }
  /// Returns true if `tschchartinfoline3Dlightingpackage` has been explicitly set.
  var hasTschchartinfoline3Dlightingpackage: Bool {return _storage._tschchartinfoline3Dlightingpackage != nil}
  /// Clears the value of `tschchartinfoline3Dlightingpackage`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfoline3Dlightingpackage() {_uniqueStorage()._tschchartinfoline3Dlightingpackage = nil}

  var tschchartinfopie3Dlightingpackage: TSCH_Chart3DLightingPackageArchive {
    get {return _storage._tschchartinfopie3Dlightingpackage ?? TSCH_Chart3DLightingPackageArchive()}
    set {_uniqueStorage()._tschchartinfopie3Dlightingpackage = newValue}
  }
  /// Returns true if `tschchartinfopie3Dlightingpackage` has been explicitly set.
  var hasTschchartinfopie3Dlightingpackage: Bool {return _storage._tschchartinfopie3Dlightingpackage != nil}
  /// Clears the value of `tschchartinfopie3Dlightingpackage`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfopie3Dlightingpackage() {_uniqueStorage()._tschchartinfopie3Dlightingpackage = nil}

  var tschchartinfodefaultbackgroundfill: TSD_FillArchive {
    get {return _storage._tschchartinfodefaultbackgroundfill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartinfodefaultbackgroundfill = newValue}
  }
  /// Returns true if `tschchartinfodefaultbackgroundfill` has been explicitly set.
  var hasTschchartinfodefaultbackgroundfill: Bool {return _storage._tschchartinfodefaultbackgroundfill != nil}
  /// Clears the value of `tschchartinfodefaultbackgroundfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultbackgroundfill() {_uniqueStorage()._tschchartinfodefaultbackgroundfill = nil}

  var tschchartinfodefaultbackgroundstroke: TSD_StrokeArchive {
    get {return _storage._tschchartinfodefaultbackgroundstroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartinfodefaultbackgroundstroke = newValue}
  }
  /// Returns true if `tschchartinfodefaultbackgroundstroke` has been explicitly set.
  var hasTschchartinfodefaultbackgroundstroke: Bool {return _storage._tschchartinfodefaultbackgroundstroke != nil}
  /// Clears the value of `tschchartinfodefaultbackgroundstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultbackgroundstroke() {_uniqueStorage()._tschchartinfodefaultbackgroundstroke = nil}

  var tschchartinfodefaultborderopacity: Float {
    get {return _storage._tschchartinfodefaultborderopacity ?? 0}
    set {_uniqueStorage()._tschchartinfodefaultborderopacity = newValue}
  }
  /// Returns true if `tschchartinfodefaultborderopacity` has been explicitly set.
  var hasTschchartinfodefaultborderopacity: Bool {return _storage._tschchartinfodefaultborderopacity != nil}
  /// Clears the value of `tschchartinfodefaultborderopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultborderopacity() {_uniqueStorage()._tschchartinfodefaultborderopacity = nil}

  var tschchartinfodefaultbordershadow: TSD_ShadowArchive {
    get {return _storage._tschchartinfodefaultbordershadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartinfodefaultbordershadow = newValue}
  }
  /// Returns true if `tschchartinfodefaultbordershadow` has been explicitly set.
  var hasTschchartinfodefaultbordershadow: Bool {return _storage._tschchartinfodefaultbordershadow != nil}
  /// Clears the value of `tschchartinfodefaultbordershadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultbordershadow() {_uniqueStorage()._tschchartinfodefaultbordershadow = nil}

  var tschchartinfodefaultborderstroke: TSD_StrokeArchive {
    get {return _storage._tschchartinfodefaultborderstroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartinfodefaultborderstroke = newValue}
  }
  /// Returns true if `tschchartinfodefaultborderstroke` has been explicitly set.
  var hasTschchartinfodefaultborderstroke: Bool {return _storage._tschchartinfodefaultborderstroke != nil}
  /// Clears the value of `tschchartinfodefaultborderstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultborderstroke() {_uniqueStorage()._tschchartinfodefaultborderstroke = nil}

  var tschchartinfodefaultcombinelayers: Bool {
    get {return _storage._tschchartinfodefaultcombinelayers ?? false}
    set {_uniqueStorage()._tschchartinfodefaultcombinelayers = newValue}
  }
  /// Returns true if `tschchartinfodefaultcombinelayers` has been explicitly set.
  var hasTschchartinfodefaultcombinelayers: Bool {return _storage._tschchartinfodefaultcombinelayers != nil}
  /// Clears the value of `tschchartinfodefaultcombinelayers`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultcombinelayers() {_uniqueStorage()._tschchartinfodefaultcombinelayers = nil}

  var tschchartinfodefaultdatasetnameparagraphstyleindex: Int32 {
    get {return _storage._tschchartinfodefaultdatasetnameparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartinfodefaultdatasetnameparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartinfodefaultdatasetnameparagraphstyleindex` has been explicitly set.
  var hasTschchartinfodefaultdatasetnameparagraphstyleindex: Bool {return _storage._tschchartinfodefaultdatasetnameparagraphstyleindex != nil}
  /// Clears the value of `tschchartinfodefaultdatasetnameparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultdatasetnameparagraphstyleindex() {_uniqueStorage()._tschchartinfodefaultdatasetnameparagraphstyleindex = nil}

  var tschchartinfodefaultgridbackgroundfill: TSD_FillArchive {
    get {return _storage._tschchartinfodefaultgridbackgroundfill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartinfodefaultgridbackgroundfill = newValue}
  }
  /// Returns true if `tschchartinfodefaultgridbackgroundfill` has been explicitly set.
  var hasTschchartinfodefaultgridbackgroundfill: Bool {return _storage._tschchartinfodefaultgridbackgroundfill != nil}
  /// Clears the value of `tschchartinfodefaultgridbackgroundfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultgridbackgroundfill() {_uniqueStorage()._tschchartinfodefaultgridbackgroundfill = nil}

  var tschchartinfodefaultgridbackgroundopacity: Float {
    get {return _storage._tschchartinfodefaultgridbackgroundopacity ?? 0}
    set {_uniqueStorage()._tschchartinfodefaultgridbackgroundopacity = newValue}
  }
  /// Returns true if `tschchartinfodefaultgridbackgroundopacity` has been explicitly set.
  var hasTschchartinfodefaultgridbackgroundopacity: Bool {return _storage._tschchartinfodefaultgridbackgroundopacity != nil}
  /// Clears the value of `tschchartinfodefaultgridbackgroundopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultgridbackgroundopacity() {_uniqueStorage()._tschchartinfodefaultgridbackgroundopacity = nil}

  var tschchartinfodefaultinterbargap: Float {
    get {return _storage._tschchartinfodefaultinterbargap ?? 0}
    set {_uniqueStorage()._tschchartinfodefaultinterbargap = newValue}
  }
  /// Returns true if `tschchartinfodefaultinterbargap` has been explicitly set.
  var hasTschchartinfodefaultinterbargap: Bool {return _storage._tschchartinfodefaultinterbargap != nil}
  /// Clears the value of `tschchartinfodefaultinterbargap`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultinterbargap() {_uniqueStorage()._tschchartinfodefaultinterbargap = nil}

  var tschchartinfodefaultintersetgap: Float {
    get {return _storage._tschchartinfodefaultintersetgap ?? 0}
    set {_uniqueStorage()._tschchartinfodefaultintersetgap = newValue}
  }
  /// Returns true if `tschchartinfodefaultintersetgap` has been explicitly set.
  var hasTschchartinfodefaultintersetgap: Bool {return _storage._tschchartinfodefaultintersetgap != nil}
  /// Clears the value of `tschchartinfodefaultintersetgap`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultintersetgap() {_uniqueStorage()._tschchartinfodefaultintersetgap = nil}

  var tschchartinfodefaultroundedcornerouterendonly: Bool {
    get {return _storage._tschchartinfodefaultroundedcornerouterendonly ?? false}
    set {_uniqueStorage()._tschchartinfodefaultroundedcornerouterendonly = newValue}
  }
  /// Returns true if `tschchartinfodefaultroundedcornerouterendonly` has been explicitly set.
  var hasTschchartinfodefaultroundedcornerouterendonly: Bool {return _storage._tschchartinfodefaultroundedcornerouterendonly != nil}
  /// Clears the value of `tschchartinfodefaultroundedcornerouterendonly`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultroundedcornerouterendonly() {_uniqueStorage()._tschchartinfodefaultroundedcornerouterendonly = nil}

  var tschchartinfodefaultroundedcornerradius: Float {
    get {return _storage._tschchartinfodefaultroundedcornerradius ?? 0}
    set {_uniqueStorage()._tschchartinfodefaultroundedcornerradius = newValue}
  }
  /// Returns true if `tschchartinfodefaultroundedcornerradius` has been explicitly set.
  var hasTschchartinfodefaultroundedcornerradius: Bool {return _storage._tschchartinfodefaultroundedcornerradius != nil}
  /// Clears the value of `tschchartinfodefaultroundedcornerradius`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultroundedcornerradius() {_uniqueStorage()._tschchartinfodefaultroundedcornerradius = nil}

  var tschchartinfodefaultshowborder: Bool {
    get {return _storage._tschchartinfodefaultshowborder ?? false}
    set {_uniqueStorage()._tschchartinfodefaultshowborder = newValue}
  }
  /// Returns true if `tschchartinfodefaultshowborder` has been explicitly set.
  var hasTschchartinfodefaultshowborder: Bool {return _storage._tschchartinfodefaultshowborder != nil}
  /// Clears the value of `tschchartinfodefaultshowborder`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultshowborder() {_uniqueStorage()._tschchartinfodefaultshowborder = nil}

  var tschchartinfodefaulttitlecolor: TSP_Color {
    get {return _storage._tschchartinfodefaulttitlecolor ?? TSP_Color()}
    set {_uniqueStorage()._tschchartinfodefaulttitlecolor = newValue}
  }
  /// Returns true if `tschchartinfodefaulttitlecolor` has been explicitly set.
  var hasTschchartinfodefaulttitlecolor: Bool {return _storage._tschchartinfodefaulttitlecolor != nil}
  /// Clears the value of `tschchartinfodefaulttitlecolor`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaulttitlecolor() {_uniqueStorage()._tschchartinfodefaulttitlecolor = nil}

  var tschchartinfodefaulttitleparagraphstyleindex: Int32 {
    get {return _storage._tschchartinfodefaulttitleparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartinfodefaulttitleparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartinfodefaulttitleparagraphstyleindex` has been explicitly set.
  var hasTschchartinfodefaulttitleparagraphstyleindex: Bool {return _storage._tschchartinfodefaulttitleparagraphstyleindex != nil}
  /// Clears the value of `tschchartinfodefaulttitleparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaulttitleparagraphstyleindex() {_uniqueStorage()._tschchartinfodefaulttitleparagraphstyleindex = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

struct TSCH_Generated_ChartNonStyleArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var tschchartinfodefault3Dbarshape: Int32 {
    get {return _storage._tschchartinfodefault3Dbarshape ?? 0}
    set {_uniqueStorage()._tschchartinfodefault3Dbarshape = newValue}
  }
  /// Returns true if `tschchartinfodefault3Dbarshape` has been explicitly set.
  var hasTschchartinfodefault3Dbarshape: Bool {return _storage._tschchartinfodefault3Dbarshape != nil}
  /// Clears the value of `tschchartinfodefault3Dbarshape`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefault3Dbarshape() {_uniqueStorage()._tschchartinfodefault3Dbarshape = nil}

  var tschchartinfodefault3Dbeveledges: Bool {
    get {return _storage._tschchartinfodefault3Dbeveledges ?? false}
    set {_uniqueStorage()._tschchartinfodefault3Dbeveledges = newValue}
  }
  /// Returns true if `tschchartinfodefault3Dbeveledges` has been explicitly set.
  var hasTschchartinfodefault3Dbeveledges: Bool {return _storage._tschchartinfodefault3Dbeveledges != nil}
  /// Clears the value of `tschchartinfodefault3Dbeveledges`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefault3Dbeveledges() {_uniqueStorage()._tschchartinfodefault3Dbeveledges = nil}

  var tschchartinfodefault3Dintersetdepthgap: Float {
    get {return _storage._tschchartinfodefault3Dintersetdepthgap ?? 0}
    set {_uniqueStorage()._tschchartinfodefault3Dintersetdepthgap = newValue}
  }
  /// Returns true if `tschchartinfodefault3Dintersetdepthgap` has been explicitly set.
  var hasTschchartinfodefault3Dintersetdepthgap: Bool {return _storage._tschchartinfodefault3Dintersetdepthgap != nil}
  /// Clears the value of `tschchartinfodefault3Dintersetdepthgap`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefault3Dintersetdepthgap() {_uniqueStorage()._tschchartinfodefault3Dintersetdepthgap = nil}

  var tschchartinfodefault3Drotation: TSCH_Chart3DVectorArchive {
    get {return _storage._tschchartinfodefault3Drotation ?? TSCH_Chart3DVectorArchive()}
    set {_uniqueStorage()._tschchartinfodefault3Drotation = newValue}
  }
  /// Returns true if `tschchartinfodefault3Drotation` has been explicitly set.
  var hasTschchartinfodefault3Drotation: Bool {return _storage._tschchartinfodefault3Drotation != nil}
  /// Clears the value of `tschchartinfodefault3Drotation`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefault3Drotation() {_uniqueStorage()._tschchartinfodefault3Drotation = nil}

  var tschchartinfoarea3Dscale: TSCH_Chart3DVectorArchive {
    get {return _storage._tschchartinfoarea3Dscale ?? TSCH_Chart3DVectorArchive()}
    set {_uniqueStorage()._tschchartinfoarea3Dscale = newValue}
  }
  /// Returns true if `tschchartinfoarea3Dscale` has been explicitly set.
  var hasTschchartinfoarea3Dscale: Bool {return _storage._tschchartinfoarea3Dscale != nil}
  /// Clears the value of `tschchartinfoarea3Dscale`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfoarea3Dscale() {_uniqueStorage()._tschchartinfoarea3Dscale = nil}

  var tschchartinfobar3Dscale: TSCH_Chart3DVectorArchive {
    get {return _storage._tschchartinfobar3Dscale ?? TSCH_Chart3DVectorArchive()}
    set {_uniqueStorage()._tschchartinfobar3Dscale = newValue}
  }
  /// Returns true if `tschchartinfobar3Dscale` has been explicitly set.
  var hasTschchartinfobar3Dscale: Bool {return _storage._tschchartinfobar3Dscale != nil}
  /// Clears the value of `tschchartinfobar3Dscale`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfobar3Dscale() {_uniqueStorage()._tschchartinfobar3Dscale = nil}

  var tschchartinfocolumn3Dscale: TSCH_Chart3DVectorArchive {
    get {return _storage._tschchartinfocolumn3Dscale ?? TSCH_Chart3DVectorArchive()}
    set {_uniqueStorage()._tschchartinfocolumn3Dscale = newValue}
  }
  /// Returns true if `tschchartinfocolumn3Dscale` has been explicitly set.
  var hasTschchartinfocolumn3Dscale: Bool {return _storage._tschchartinfocolumn3Dscale != nil}
  /// Clears the value of `tschchartinfocolumn3Dscale`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfocolumn3Dscale() {_uniqueStorage()._tschchartinfocolumn3Dscale = nil}

  var tschchartinfodefault3Dscale: TSCH_Chart3DVectorArchive {
    get {return _storage._tschchartinfodefault3Dscale ?? TSCH_Chart3DVectorArchive()}
    set {_uniqueStorage()._tschchartinfodefault3Dscale = newValue}
  }
  /// Returns true if `tschchartinfodefault3Dscale` has been explicitly set.
  var hasTschchartinfodefault3Dscale: Bool {return _storage._tschchartinfodefault3Dscale != nil}
  /// Clears the value of `tschchartinfodefault3Dscale`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefault3Dscale() {_uniqueStorage()._tschchartinfodefault3Dscale = nil}

  var tschchartinfoline3Dscale: TSCH_Chart3DVectorArchive {
    get {return _storage._tschchartinfoline3Dscale ?? TSCH_Chart3DVectorArchive()}
    set {_uniqueStorage()._tschchartinfoline3Dscale = newValue}
  }
  /// Returns true if `tschchartinfoline3Dscale` has been explicitly set.
  var hasTschchartinfoline3Dscale: Bool {return _storage._tschchartinfoline3Dscale != nil}
  /// Clears the value of `tschchartinfoline3Dscale`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfoline3Dscale() {_uniqueStorage()._tschchartinfoline3Dscale = nil}

  var tschchartinfopie3Dscale: TSCH_Chart3DVectorArchive {
    get {return _storage._tschchartinfopie3Dscale ?? TSCH_Chart3DVectorArchive()}
    set {_uniqueStorage()._tschchartinfopie3Dscale = newValue}
  }
  /// Returns true if `tschchartinfopie3Dscale` has been explicitly set.
  var hasTschchartinfopie3Dscale: Bool {return _storage._tschchartinfopie3Dscale != nil}
  /// Clears the value of `tschchartinfopie3Dscale`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfopie3Dscale() {_uniqueStorage()._tschchartinfopie3Dscale = nil}

  var tschchartinfodefault3Dviewport: TSCH_Chart3DVectorArchive {
    get {return _storage._tschchartinfodefault3Dviewport ?? TSCH_Chart3DVectorArchive()}
    set {_uniqueStorage()._tschchartinfodefault3Dviewport = newValue}
  }
  /// Returns true if `tschchartinfodefault3Dviewport` has been explicitly set.
  var hasTschchartinfodefault3Dviewport: Bool {return _storage._tschchartinfodefault3Dviewport != nil}
  /// Clears the value of `tschchartinfodefault3Dviewport`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefault3Dviewport() {_uniqueStorage()._tschchartinfodefault3Dviewport = nil}

  var tschchartinfoareacalloutlinetype: Int32 {
    get {return _storage._tschchartinfoareacalloutlinetype ?? 0}
    set {_uniqueStorage()._tschchartinfoareacalloutlinetype = newValue}
  }
  /// Returns true if `tschchartinfoareacalloutlinetype` has been explicitly set.
  var hasTschchartinfoareacalloutlinetype: Bool {return _storage._tschchartinfoareacalloutlinetype != nil}
  /// Clears the value of `tschchartinfoareacalloutlinetype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfoareacalloutlinetype() {_uniqueStorage()._tschchartinfoareacalloutlinetype = nil}

  var tschchartinfobarcalloutlinetype: Int32 {
    get {return _storage._tschchartinfobarcalloutlinetype ?? 0}
    set {_uniqueStorage()._tschchartinfobarcalloutlinetype = newValue}
  }
  /// Returns true if `tschchartinfobarcalloutlinetype` has been explicitly set.
  var hasTschchartinfobarcalloutlinetype: Bool {return _storage._tschchartinfobarcalloutlinetype != nil}
  /// Clears the value of `tschchartinfobarcalloutlinetype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfobarcalloutlinetype() {_uniqueStorage()._tschchartinfobarcalloutlinetype = nil}

  var tschchartinfobubblecalloutlinetype: Int32 {
    get {return _storage._tschchartinfobubblecalloutlinetype ?? 0}
    set {_uniqueStorage()._tschchartinfobubblecalloutlinetype = newValue}
  }
  /// Returns true if `tschchartinfobubblecalloutlinetype` has been explicitly set.
  var hasTschchartinfobubblecalloutlinetype: Bool {return _storage._tschchartinfobubblecalloutlinetype != nil}
  /// Clears the value of `tschchartinfobubblecalloutlinetype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfobubblecalloutlinetype() {_uniqueStorage()._tschchartinfobubblecalloutlinetype = nil}

  var tschchartinfodefaultcalloutlinetype: Int32 {
    get {return _storage._tschchartinfodefaultcalloutlinetype ?? 0}
    set {_uniqueStorage()._tschchartinfodefaultcalloutlinetype = newValue}
  }
  /// Returns true if `tschchartinfodefaultcalloutlinetype` has been explicitly set.
  var hasTschchartinfodefaultcalloutlinetype: Bool {return _storage._tschchartinfodefaultcalloutlinetype != nil}
  /// Clears the value of `tschchartinfodefaultcalloutlinetype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultcalloutlinetype() {_uniqueStorage()._tschchartinfodefaultcalloutlinetype = nil}

  var tschchartinfolinecalloutlinetype: Int32 {
    get {return _storage._tschchartinfolinecalloutlinetype ?? 0}
    set {_uniqueStorage()._tschchartinfolinecalloutlinetype = newValue}
  }
  /// Returns true if `tschchartinfolinecalloutlinetype` has been explicitly set.
  var hasTschchartinfolinecalloutlinetype: Bool {return _storage._tschchartinfolinecalloutlinetype != nil}
  /// Clears the value of `tschchartinfolinecalloutlinetype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfolinecalloutlinetype() {_uniqueStorage()._tschchartinfolinecalloutlinetype = nil}

  var tschchartinfopiecalloutlinetype: Int32 {
    get {return _storage._tschchartinfopiecalloutlinetype ?? 0}
    set {_uniqueStorage()._tschchartinfopiecalloutlinetype = newValue}
  }
  /// Returns true if `tschchartinfopiecalloutlinetype` has been explicitly set.
  var hasTschchartinfopiecalloutlinetype: Bool {return _storage._tschchartinfopiecalloutlinetype != nil}
  /// Clears the value of `tschchartinfopiecalloutlinetype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfopiecalloutlinetype() {_uniqueStorage()._tschchartinfopiecalloutlinetype = nil}

  var tschchartinfoscattercalloutlinetype: Int32 {
    get {return _storage._tschchartinfoscattercalloutlinetype ?? 0}
    set {_uniqueStorage()._tschchartinfoscattercalloutlinetype = newValue}
  }
  /// Returns true if `tschchartinfoscattercalloutlinetype` has been explicitly set.
  var hasTschchartinfoscattercalloutlinetype: Bool {return _storage._tschchartinfoscattercalloutlinetype != nil}
  /// Clears the value of `tschchartinfoscattercalloutlinetype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfoscattercalloutlinetype() {_uniqueStorage()._tschchartinfoscattercalloutlinetype = nil}

  var tschchartinfostackedareacalloutlinetype: Int32 {
    get {return _storage._tschchartinfostackedareacalloutlinetype ?? 0}
    set {_uniqueStorage()._tschchartinfostackedareacalloutlinetype = newValue}
  }
  /// Returns true if `tschchartinfostackedareacalloutlinetype` has been explicitly set.
  var hasTschchartinfostackedareacalloutlinetype: Bool {return _storage._tschchartinfostackedareacalloutlinetype != nil}
  /// Clears the value of `tschchartinfostackedareacalloutlinetype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfostackedareacalloutlinetype() {_uniqueStorage()._tschchartinfostackedareacalloutlinetype = nil}

  var tschchartinfostackedbarcalloutlinetype: Int32 {
    get {return _storage._tschchartinfostackedbarcalloutlinetype ?? 0}
    set {_uniqueStorage()._tschchartinfostackedbarcalloutlinetype = newValue}
  }
  /// Returns true if `tschchartinfostackedbarcalloutlinetype` has been explicitly set.
  var hasTschchartinfostackedbarcalloutlinetype: Bool {return _storage._tschchartinfostackedbarcalloutlinetype != nil}
  /// Clears the value of `tschchartinfostackedbarcalloutlinetype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfostackedbarcalloutlinetype() {_uniqueStorage()._tschchartinfostackedbarcalloutlinetype = nil}

  var tschchartinfodefaultdeprecatedroundedcornerouterendonly: Bool {
    get {return _storage._tschchartinfodefaultdeprecatedroundedcornerouterendonly ?? false}
    set {_uniqueStorage()._tschchartinfodefaultdeprecatedroundedcornerouterendonly = newValue}
  }
  /// Returns true if `tschchartinfodefaultdeprecatedroundedcornerouterendonly` has been explicitly set.
  var hasTschchartinfodefaultdeprecatedroundedcornerouterendonly: Bool {return _storage._tschchartinfodefaultdeprecatedroundedcornerouterendonly != nil}
  /// Clears the value of `tschchartinfodefaultdeprecatedroundedcornerouterendonly`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultdeprecatedroundedcornerouterendonly() {_uniqueStorage()._tschchartinfodefaultdeprecatedroundedcornerouterendonly = nil}

  var tschchartinfodefaultdeprecatedroundedcornerradius: Float {
    get {return _storage._tschchartinfodefaultdeprecatedroundedcornerradius ?? 0}
    set {_uniqueStorage()._tschchartinfodefaultdeprecatedroundedcornerradius = newValue}
  }
  /// Returns true if `tschchartinfodefaultdeprecatedroundedcornerradius` has been explicitly set.
  var hasTschchartinfodefaultdeprecatedroundedcornerradius: Bool {return _storage._tschchartinfodefaultdeprecatedroundedcornerradius != nil}
  /// Clears the value of `tschchartinfodefaultdeprecatedroundedcornerradius`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultdeprecatedroundedcornerradius() {_uniqueStorage()._tschchartinfodefaultdeprecatedroundedcornerradius = nil}

  var tschchartinfodefaultdatasetnamelocation: Int32 {
    get {return _storage._tschchartinfodefaultdatasetnamelocation ?? 0}
    set {_uniqueStorage()._tschchartinfodefaultdatasetnamelocation = newValue}
  }
  /// Returns true if `tschchartinfodefaultdatasetnamelocation` has been explicitly set.
  var hasTschchartinfodefaultdatasetnamelocation: Bool {return _storage._tschchartinfodefaultdatasetnamelocation != nil}
  /// Clears the value of `tschchartinfodefaultdatasetnamelocation`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultdatasetnamelocation() {_uniqueStorage()._tschchartinfodefaultdatasetnamelocation = nil}

  var tschchartinfodefaultdonutplacetitleatcenter: Bool {
    get {return _storage._tschchartinfodefaultdonutplacetitleatcenter ?? false}
    set {_uniqueStorage()._tschchartinfodefaultdonutplacetitleatcenter = newValue}
  }
  /// Returns true if `tschchartinfodefaultdonutplacetitleatcenter` has been explicitly set.
  var hasTschchartinfodefaultdonutplacetitleatcenter: Bool {return _storage._tschchartinfodefaultdonutplacetitleatcenter != nil}
  /// Clears the value of `tschchartinfodefaultdonutplacetitleatcenter`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultdonutplacetitleatcenter() {_uniqueStorage()._tschchartinfodefaultdonutplacetitleatcenter = nil}

  var tschchartinfodefaultinnerradius: Float {
    get {return _storage._tschchartinfodefaultinnerradius ?? 0}
    set {_uniqueStorage()._tschchartinfodefaultinnerradius = newValue}
  }
  /// Returns true if `tschchartinfodefaultinnerradius` has been explicitly set.
  var hasTschchartinfodefaultinnerradius: Bool {return _storage._tschchartinfodefaultinnerradius != nil}
  /// Clears the value of `tschchartinfodefaultinnerradius`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultinnerradius() {_uniqueStorage()._tschchartinfodefaultinnerradius = nil}

  var tschchartinfodefaultmultidatacontroltype: Int32 {
    get {return _storage._tschchartinfodefaultmultidatacontroltype ?? 0}
    set {_uniqueStorage()._tschchartinfodefaultmultidatacontroltype = newValue}
  }
  /// Returns true if `tschchartinfodefaultmultidatacontroltype` has been explicitly set.
  var hasTschchartinfodefaultmultidatacontroltype: Bool {return _storage._tschchartinfodefaultmultidatacontroltype != nil}
  /// Clears the value of `tschchartinfodefaultmultidatacontroltype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultmultidatacontroltype() {_uniqueStorage()._tschchartinfodefaultmultidatacontroltype = nil}

  var tschchartinfodefaultpiestartangle: Float {
    get {return _storage._tschchartinfodefaultpiestartangle ?? 0}
    set {_uniqueStorage()._tschchartinfodefaultpiestartangle = newValue}
  }
  /// Returns true if `tschchartinfodefaultpiestartangle` has been explicitly set.
  var hasTschchartinfodefaultpiestartangle: Bool {return _storage._tschchartinfodefaultpiestartangle != nil}
  /// Clears the value of `tschchartinfodefaultpiestartangle`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultpiestartangle() {_uniqueStorage()._tschchartinfodefaultpiestartangle = nil}

  var tschchartinfodefaultshowlegend: Bool {
    get {return _storage._tschchartinfodefaultshowlegend ?? false}
    set {_uniqueStorage()._tschchartinfodefaultshowlegend = newValue}
  }
  /// Returns true if `tschchartinfodefaultshowlegend` has been explicitly set.
  var hasTschchartinfodefaultshowlegend: Bool {return _storage._tschchartinfodefaultshowlegend != nil}
  /// Clears the value of `tschchartinfodefaultshowlegend`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultshowlegend() {_uniqueStorage()._tschchartinfodefaultshowlegend = nil}

  var tschchartinfodefaultshowtitle: Bool {
    get {return _storage._tschchartinfodefaultshowtitle ?? false}
    set {_uniqueStorage()._tschchartinfodefaultshowtitle = newValue}
  }
  /// Returns true if `tschchartinfodefaultshowtitle` has been explicitly set.
  var hasTschchartinfodefaultshowtitle: Bool {return _storage._tschchartinfodefaultshowtitle != nil}
  /// Clears the value of `tschchartinfodefaultshowtitle`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultshowtitle() {_uniqueStorage()._tschchartinfodefaultshowtitle = nil}

  var tschchartinfodefaultskiphiddendata: Bool {
    get {return _storage._tschchartinfodefaultskiphiddendata ?? false}
    set {_uniqueStorage()._tschchartinfodefaultskiphiddendata = newValue}
  }
  /// Returns true if `tschchartinfodefaultskiphiddendata` has been explicitly set.
  var hasTschchartinfodefaultskiphiddendata: Bool {return _storage._tschchartinfodefaultskiphiddendata != nil}
  /// Clears the value of `tschchartinfodefaultskiphiddendata`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultskiphiddendata() {_uniqueStorage()._tschchartinfodefaultskiphiddendata = nil}

  var tschchartinfodefaulttitle: String {
    get {return _storage._tschchartinfodefaulttitle ?? String()}
    set {_uniqueStorage()._tschchartinfodefaulttitle = newValue}
  }
  /// Returns true if `tschchartinfodefaulttitle` has been explicitly set.
  var hasTschchartinfodefaulttitle: Bool {return _storage._tschchartinfodefaulttitle != nil}
  /// Clears the value of `tschchartinfodefaulttitle`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaulttitle() {_uniqueStorage()._tschchartinfodefaulttitle = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

struct TSCH_Generated_LegendStyleArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var tschlegendmodeldefaultfill: TSD_FillArchive {
    get {return _tschlegendmodeldefaultfill ?? TSD_FillArchive()}
    set {_tschlegendmodeldefaultfill = newValue}
  }
  /// Returns true if `tschlegendmodeldefaultfill` has been explicitly set.
  var hasTschlegendmodeldefaultfill: Bool {return self._tschlegendmodeldefaultfill != nil}
  /// Clears the value of `tschlegendmodeldefaultfill`. Subsequent reads from it will return its default value.
  mutating func clearTschlegendmodeldefaultfill() {self._tschlegendmodeldefaultfill = nil}

  var tschlegendmodeldefaultlabelparagraphstyleindex: Int32 {
    get {return _tschlegendmodeldefaultlabelparagraphstyleindex ?? 0}
    set {_tschlegendmodeldefaultlabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschlegendmodeldefaultlabelparagraphstyleindex` has been explicitly set.
  var hasTschlegendmodeldefaultlabelparagraphstyleindex: Bool {return self._tschlegendmodeldefaultlabelparagraphstyleindex != nil}
  /// Clears the value of `tschlegendmodeldefaultlabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschlegendmodeldefaultlabelparagraphstyleindex() {self._tschlegendmodeldefaultlabelparagraphstyleindex = nil}

  var tschlegendmodeldefaultopacity: Float {
    get {return _tschlegendmodeldefaultopacity ?? 0}
    set {_tschlegendmodeldefaultopacity = newValue}
  }
  /// Returns true if `tschlegendmodeldefaultopacity` has been explicitly set.
  var hasTschlegendmodeldefaultopacity: Bool {return self._tschlegendmodeldefaultopacity != nil}
  /// Clears the value of `tschlegendmodeldefaultopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschlegendmodeldefaultopacity() {self._tschlegendmodeldefaultopacity = nil}

  var tschlegendmodeldefaultshadow: TSD_ShadowArchive {
    get {return _tschlegendmodeldefaultshadow ?? TSD_ShadowArchive()}
    set {_tschlegendmodeldefaultshadow = newValue}
  }
  /// Returns true if `tschlegendmodeldefaultshadow` has been explicitly set.
  var hasTschlegendmodeldefaultshadow: Bool {return self._tschlegendmodeldefaultshadow != nil}
  /// Clears the value of `tschlegendmodeldefaultshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschlegendmodeldefaultshadow() {self._tschlegendmodeldefaultshadow = nil}

  var tschlegendmodeldefaultstroke: TSD_StrokeArchive {
    get {return _tschlegendmodeldefaultstroke ?? TSD_StrokeArchive()}
    set {_tschlegendmodeldefaultstroke = newValue}
  }
  /// Returns true if `tschlegendmodeldefaultstroke` has been explicitly set.
  var hasTschlegendmodeldefaultstroke: Bool {return self._tschlegendmodeldefaultstroke != nil}
  /// Clears the value of `tschlegendmodeldefaultstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschlegendmodeldefaultstroke() {self._tschlegendmodeldefaultstroke = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _tschlegendmodeldefaultfill: TSD_FillArchive? = nil
  fileprivate var _tschlegendmodeldefaultlabelparagraphstyleindex: Int32? = nil
  fileprivate var _tschlegendmodeldefaultopacity: Float? = nil
  fileprivate var _tschlegendmodeldefaultshadow: TSD_ShadowArchive? = nil
  fileprivate var _tschlegendmodeldefaultstroke: TSD_StrokeArchive? = nil
}

struct TSCH_Generated_LegendNonStyleArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

struct TSCH_Generated_ChartAxisStyleArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var tschchartaxiscategory3Dgridlineopacity: Float {
    get {return _storage._tschchartaxiscategory3Dgridlineopacity ?? 0}
    set {_uniqueStorage()._tschchartaxiscategory3Dgridlineopacity = newValue}
  }
  /// Returns true if `tschchartaxiscategory3Dgridlineopacity` has been explicitly set.
  var hasTschchartaxiscategory3Dgridlineopacity: Bool {return _storage._tschchartaxiscategory3Dgridlineopacity != nil}
  /// Clears the value of `tschchartaxiscategory3Dgridlineopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategory3Dgridlineopacity() {_uniqueStorage()._tschchartaxiscategory3Dgridlineopacity = nil}

  var tschchartaxisvalue3Dgridlineopacity: Float {
    get {return _storage._tschchartaxisvalue3Dgridlineopacity ?? 0}
    set {_uniqueStorage()._tschchartaxisvalue3Dgridlineopacity = newValue}
  }
  /// Returns true if `tschchartaxisvalue3Dgridlineopacity` has been explicitly set.
  var hasTschchartaxisvalue3Dgridlineopacity: Bool {return _storage._tschchartaxisvalue3Dgridlineopacity != nil}
  /// Clears the value of `tschchartaxisvalue3Dgridlineopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvalue3Dgridlineopacity() {_uniqueStorage()._tschchartaxisvalue3Dgridlineopacity = nil}

  var tschchartaxiscategory3Dgridlinestroke: TSD_StrokeArchive {
    get {return _storage._tschchartaxiscategory3Dgridlinestroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartaxiscategory3Dgridlinestroke = newValue}
  }
  /// Returns true if `tschchartaxiscategory3Dgridlinestroke` has been explicitly set.
  var hasTschchartaxiscategory3Dgridlinestroke: Bool {return _storage._tschchartaxiscategory3Dgridlinestroke != nil}
  /// Clears the value of `tschchartaxiscategory3Dgridlinestroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategory3Dgridlinestroke() {_uniqueStorage()._tschchartaxiscategory3Dgridlinestroke = nil}

  var tschchartaxisvalue3Dgridlinestroke: TSD_StrokeArchive {
    get {return _storage._tschchartaxisvalue3Dgridlinestroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartaxisvalue3Dgridlinestroke = newValue}
  }
  /// Returns true if `tschchartaxisvalue3Dgridlinestroke` has been explicitly set.
  var hasTschchartaxisvalue3Dgridlinestroke: Bool {return _storage._tschchartaxisvalue3Dgridlinestroke != nil}
  /// Clears the value of `tschchartaxisvalue3Dgridlinestroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvalue3Dgridlinestroke() {_uniqueStorage()._tschchartaxisvalue3Dgridlinestroke = nil}

  var tschchartaxiscategoryhorizontalspacing: Int32 {
    get {return _storage._tschchartaxiscategoryhorizontalspacing ?? 0}
    set {_uniqueStorage()._tschchartaxiscategoryhorizontalspacing = newValue}
  }
  /// Returns true if `tschchartaxiscategoryhorizontalspacing` has been explicitly set.
  var hasTschchartaxiscategoryhorizontalspacing: Bool {return _storage._tschchartaxiscategoryhorizontalspacing != nil}
  /// Clears the value of `tschchartaxiscategoryhorizontalspacing`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategoryhorizontalspacing() {_uniqueStorage()._tschchartaxiscategoryhorizontalspacing = nil}

  var tschchartaxiscategorylabelparagraphstyleindex: Int32 {
    get {return _storage._tschchartaxiscategorylabelparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartaxiscategorylabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartaxiscategorylabelparagraphstyleindex` has been explicitly set.
  var hasTschchartaxiscategorylabelparagraphstyleindex: Bool {return _storage._tschchartaxiscategorylabelparagraphstyleindex != nil}
  /// Clears the value of `tschchartaxiscategorylabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategorylabelparagraphstyleindex() {_uniqueStorage()._tschchartaxiscategorylabelparagraphstyleindex = nil}

  var tschchartaxisdefaultlabelparagraphstyleindex: Int32 {
    get {return _storage._tschchartaxisdefaultlabelparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartaxisdefaultlabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartaxisdefaultlabelparagraphstyleindex` has been explicitly set.
  var hasTschchartaxisdefaultlabelparagraphstyleindex: Bool {return _storage._tschchartaxisdefaultlabelparagraphstyleindex != nil}
  /// Clears the value of `tschchartaxisdefaultlabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisdefaultlabelparagraphstyleindex() {_uniqueStorage()._tschchartaxisdefaultlabelparagraphstyleindex = nil}

  var tschchartaxisvaluelabelparagraphstyleindex: Int32 {
    get {return _storage._tschchartaxisvaluelabelparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartaxisvaluelabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartaxisvaluelabelparagraphstyleindex` has been explicitly set.
  var hasTschchartaxisvaluelabelparagraphstyleindex: Bool {return _storage._tschchartaxisvaluelabelparagraphstyleindex != nil}
  /// Clears the value of `tschchartaxisvaluelabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvaluelabelparagraphstyleindex() {_uniqueStorage()._tschchartaxisvaluelabelparagraphstyleindex = nil}

  var tschchartaxiscategorylabelsorientation: Float {
    get {return _storage._tschchartaxiscategorylabelsorientation ?? 0}
    set {_uniqueStorage()._tschchartaxiscategorylabelsorientation = newValue}
  }
  /// Returns true if `tschchartaxiscategorylabelsorientation` has been explicitly set.
  var hasTschchartaxiscategorylabelsorientation: Bool {return _storage._tschchartaxiscategorylabelsorientation != nil}
  /// Clears the value of `tschchartaxiscategorylabelsorientation`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategorylabelsorientation() {_uniqueStorage()._tschchartaxiscategorylabelsorientation = nil}

  var tschchartaxisdefaultlabelsorientation: Float {
    get {return _storage._tschchartaxisdefaultlabelsorientation ?? 0}
    set {_uniqueStorage()._tschchartaxisdefaultlabelsorientation = newValue}
  }
  /// Returns true if `tschchartaxisdefaultlabelsorientation` has been explicitly set.
  var hasTschchartaxisdefaultlabelsorientation: Bool {return _storage._tschchartaxisdefaultlabelsorientation != nil}
  /// Clears the value of `tschchartaxisdefaultlabelsorientation`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisdefaultlabelsorientation() {_uniqueStorage()._tschchartaxisdefaultlabelsorientation = nil}

  var tschchartaxisvaluelabelsorientation: Float {
    get {return _storage._tschchartaxisvaluelabelsorientation ?? 0}
    set {_uniqueStorage()._tschchartaxisvaluelabelsorientation = newValue}
  }
  /// Returns true if `tschchartaxisvaluelabelsorientation` has been explicitly set.
  var hasTschchartaxisvaluelabelsorientation: Bool {return _storage._tschchartaxisvaluelabelsorientation != nil}
  /// Clears the value of `tschchartaxisvaluelabelsorientation`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvaluelabelsorientation() {_uniqueStorage()._tschchartaxisvaluelabelsorientation = nil}

  var tschchartaxiscategorymajorgridlineopacity: Float {
    get {return _storage._tschchartaxiscategorymajorgridlineopacity ?? 0}
    set {_uniqueStorage()._tschchartaxiscategorymajorgridlineopacity = newValue}
  }
  /// Returns true if `tschchartaxiscategorymajorgridlineopacity` has been explicitly set.
  var hasTschchartaxiscategorymajorgridlineopacity: Bool {return _storage._tschchartaxiscategorymajorgridlineopacity != nil}
  /// Clears the value of `tschchartaxiscategorymajorgridlineopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategorymajorgridlineopacity() {_uniqueStorage()._tschchartaxiscategorymajorgridlineopacity = nil}

  var tschchartaxisvaluemajorgridlineopacity: Float {
    get {return _storage._tschchartaxisvaluemajorgridlineopacity ?? 0}
    set {_uniqueStorage()._tschchartaxisvaluemajorgridlineopacity = newValue}
  }
  /// Returns true if `tschchartaxisvaluemajorgridlineopacity` has been explicitly set.
  var hasTschchartaxisvaluemajorgridlineopacity: Bool {return _storage._tschchartaxisvaluemajorgridlineopacity != nil}
  /// Clears the value of `tschchartaxisvaluemajorgridlineopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvaluemajorgridlineopacity() {_uniqueStorage()._tschchartaxisvaluemajorgridlineopacity = nil}

  var tschchartaxiscategorymajorgridlineshadow: TSD_ShadowArchive {
    get {return _storage._tschchartaxiscategorymajorgridlineshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartaxiscategorymajorgridlineshadow = newValue}
  }
  /// Returns true if `tschchartaxiscategorymajorgridlineshadow` has been explicitly set.
  var hasTschchartaxiscategorymajorgridlineshadow: Bool {return _storage._tschchartaxiscategorymajorgridlineshadow != nil}
  /// Clears the value of `tschchartaxiscategorymajorgridlineshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategorymajorgridlineshadow() {_uniqueStorage()._tschchartaxiscategorymajorgridlineshadow = nil}

  var tschchartaxisvaluemajorgridlineshadow: TSD_ShadowArchive {
    get {return _storage._tschchartaxisvaluemajorgridlineshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartaxisvaluemajorgridlineshadow = newValue}
  }
  /// Returns true if `tschchartaxisvaluemajorgridlineshadow` has been explicitly set.
  var hasTschchartaxisvaluemajorgridlineshadow: Bool {return _storage._tschchartaxisvaluemajorgridlineshadow != nil}
  /// Clears the value of `tschchartaxisvaluemajorgridlineshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvaluemajorgridlineshadow() {_uniqueStorage()._tschchartaxisvaluemajorgridlineshadow = nil}

  var tschchartaxiscategorymajorgridlinestroke: TSD_StrokeArchive {
    get {return _storage._tschchartaxiscategorymajorgridlinestroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartaxiscategorymajorgridlinestroke = newValue}
  }
  /// Returns true if `tschchartaxiscategorymajorgridlinestroke` has been explicitly set.
  var hasTschchartaxiscategorymajorgridlinestroke: Bool {return _storage._tschchartaxiscategorymajorgridlinestroke != nil}
  /// Clears the value of `tschchartaxiscategorymajorgridlinestroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategorymajorgridlinestroke() {_uniqueStorage()._tschchartaxiscategorymajorgridlinestroke = nil}

  var tschchartaxisvaluemajorgridlinestroke: TSD_StrokeArchive {
    get {return _storage._tschchartaxisvaluemajorgridlinestroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartaxisvaluemajorgridlinestroke = newValue}
  }
  /// Returns true if `tschchartaxisvaluemajorgridlinestroke` has been explicitly set.
  var hasTschchartaxisvaluemajorgridlinestroke: Bool {return _storage._tschchartaxisvaluemajorgridlinestroke != nil}
  /// Clears the value of `tschchartaxisvaluemajorgridlinestroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvaluemajorgridlinestroke() {_uniqueStorage()._tschchartaxisvaluemajorgridlinestroke = nil}

  var tschchartaxiscategoryminorgridlineopacity: Float {
    get {return _storage._tschchartaxiscategoryminorgridlineopacity ?? 0}
    set {_uniqueStorage()._tschchartaxiscategoryminorgridlineopacity = newValue}
  }
  /// Returns true if `tschchartaxiscategoryminorgridlineopacity` has been explicitly set.
  var hasTschchartaxiscategoryminorgridlineopacity: Bool {return _storage._tschchartaxiscategoryminorgridlineopacity != nil}
  /// Clears the value of `tschchartaxiscategoryminorgridlineopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategoryminorgridlineopacity() {_uniqueStorage()._tschchartaxiscategoryminorgridlineopacity = nil}

  var tschchartaxisvalueminorgridlineopacity: Float {
    get {return _storage._tschchartaxisvalueminorgridlineopacity ?? 0}
    set {_uniqueStorage()._tschchartaxisvalueminorgridlineopacity = newValue}
  }
  /// Returns true if `tschchartaxisvalueminorgridlineopacity` has been explicitly set.
  var hasTschchartaxisvalueminorgridlineopacity: Bool {return _storage._tschchartaxisvalueminorgridlineopacity != nil}
  /// Clears the value of `tschchartaxisvalueminorgridlineopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvalueminorgridlineopacity() {_uniqueStorage()._tschchartaxisvalueminorgridlineopacity = nil}

  var tschchartaxiscategoryminorgridlineshadow: TSD_ShadowArchive {
    get {return _storage._tschchartaxiscategoryminorgridlineshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartaxiscategoryminorgridlineshadow = newValue}
  }
  /// Returns true if `tschchartaxiscategoryminorgridlineshadow` has been explicitly set.
  var hasTschchartaxiscategoryminorgridlineshadow: Bool {return _storage._tschchartaxiscategoryminorgridlineshadow != nil}
  /// Clears the value of `tschchartaxiscategoryminorgridlineshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategoryminorgridlineshadow() {_uniqueStorage()._tschchartaxiscategoryminorgridlineshadow = nil}

  var tschchartaxisvalueminorgridlineshadow: TSD_ShadowArchive {
    get {return _storage._tschchartaxisvalueminorgridlineshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartaxisvalueminorgridlineshadow = newValue}
  }
  /// Returns true if `tschchartaxisvalueminorgridlineshadow` has been explicitly set.
  var hasTschchartaxisvalueminorgridlineshadow: Bool {return _storage._tschchartaxisvalueminorgridlineshadow != nil}
  /// Clears the value of `tschchartaxisvalueminorgridlineshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvalueminorgridlineshadow() {_uniqueStorage()._tschchartaxisvalueminorgridlineshadow = nil}

  var tschchartaxiscategoryminorgridlinestroke: TSD_StrokeArchive {
    get {return _storage._tschchartaxiscategoryminorgridlinestroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartaxiscategoryminorgridlinestroke = newValue}
  }
  /// Returns true if `tschchartaxiscategoryminorgridlinestroke` has been explicitly set.
  var hasTschchartaxiscategoryminorgridlinestroke: Bool {return _storage._tschchartaxiscategoryminorgridlinestroke != nil}
  /// Clears the value of `tschchartaxiscategoryminorgridlinestroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategoryminorgridlinestroke() {_uniqueStorage()._tschchartaxiscategoryminorgridlinestroke = nil}

  var tschchartaxisvalueminorgridlinestroke: TSD_StrokeArchive {
    get {return _storage._tschchartaxisvalueminorgridlinestroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartaxisvalueminorgridlinestroke = newValue}
  }
  /// Returns true if `tschchartaxisvalueminorgridlinestroke` has been explicitly set.
  var hasTschchartaxisvalueminorgridlinestroke: Bool {return _storage._tschchartaxisvalueminorgridlinestroke != nil}
  /// Clears the value of `tschchartaxisvalueminorgridlinestroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvalueminorgridlinestroke() {_uniqueStorage()._tschchartaxisvalueminorgridlinestroke = nil}

  var tschchartaxiscategoryshowaxis: Bool {
    get {return _storage._tschchartaxiscategoryshowaxis ?? false}
    set {_uniqueStorage()._tschchartaxiscategoryshowaxis = newValue}
  }
  /// Returns true if `tschchartaxiscategoryshowaxis` has been explicitly set.
  var hasTschchartaxiscategoryshowaxis: Bool {return _storage._tschchartaxiscategoryshowaxis != nil}
  /// Clears the value of `tschchartaxiscategoryshowaxis`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategoryshowaxis() {_uniqueStorage()._tschchartaxiscategoryshowaxis = nil}

  var tschchartaxisvalueshowaxis: Bool {
    get {return _storage._tschchartaxisvalueshowaxis ?? false}
    set {_uniqueStorage()._tschchartaxisvalueshowaxis = newValue}
  }
  /// Returns true if `tschchartaxisvalueshowaxis` has been explicitly set.
  var hasTschchartaxisvalueshowaxis: Bool {return _storage._tschchartaxisvalueshowaxis != nil}
  /// Clears the value of `tschchartaxisvalueshowaxis`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvalueshowaxis() {_uniqueStorage()._tschchartaxisvalueshowaxis = nil}

  var tschchartaxiscategoryshowlastlabel: Bool {
    get {return _storage._tschchartaxiscategoryshowlastlabel ?? false}
    set {_uniqueStorage()._tschchartaxiscategoryshowlastlabel = newValue}
  }
  /// Returns true if `tschchartaxiscategoryshowlastlabel` has been explicitly set.
  var hasTschchartaxiscategoryshowlastlabel: Bool {return _storage._tschchartaxiscategoryshowlastlabel != nil}
  /// Clears the value of `tschchartaxiscategoryshowlastlabel`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategoryshowlastlabel() {_uniqueStorage()._tschchartaxiscategoryshowlastlabel = nil}

  var tschchartaxiscategoryshowmajorgridlines: Bool {
    get {return _storage._tschchartaxiscategoryshowmajorgridlines ?? false}
    set {_uniqueStorage()._tschchartaxiscategoryshowmajorgridlines = newValue}
  }
  /// Returns true if `tschchartaxiscategoryshowmajorgridlines` has been explicitly set.
  var hasTschchartaxiscategoryshowmajorgridlines: Bool {return _storage._tschchartaxiscategoryshowmajorgridlines != nil}
  /// Clears the value of `tschchartaxiscategoryshowmajorgridlines`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategoryshowmajorgridlines() {_uniqueStorage()._tschchartaxiscategoryshowmajorgridlines = nil}

  var tschchartaxisvalueshowmajorgridlines: Bool {
    get {return _storage._tschchartaxisvalueshowmajorgridlines ?? false}
    set {_uniqueStorage()._tschchartaxisvalueshowmajorgridlines = newValue}
  }
  /// Returns true if `tschchartaxisvalueshowmajorgridlines` has been explicitly set.
  var hasTschchartaxisvalueshowmajorgridlines: Bool {return _storage._tschchartaxisvalueshowmajorgridlines != nil}
  /// Clears the value of `tschchartaxisvalueshowmajorgridlines`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvalueshowmajorgridlines() {_uniqueStorage()._tschchartaxisvalueshowmajorgridlines = nil}

  var tschchartaxiscategoryshowmajortickmarks: Bool {
    get {return _storage._tschchartaxiscategoryshowmajortickmarks ?? false}
    set {_uniqueStorage()._tschchartaxiscategoryshowmajortickmarks = newValue}
  }
  /// Returns true if `tschchartaxiscategoryshowmajortickmarks` has been explicitly set.
  var hasTschchartaxiscategoryshowmajortickmarks: Bool {return _storage._tschchartaxiscategoryshowmajortickmarks != nil}
  /// Clears the value of `tschchartaxiscategoryshowmajortickmarks`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategoryshowmajortickmarks() {_uniqueStorage()._tschchartaxiscategoryshowmajortickmarks = nil}

  var tschchartaxisvalueshowmajortickmarks: Bool {
    get {return _storage._tschchartaxisvalueshowmajortickmarks ?? false}
    set {_uniqueStorage()._tschchartaxisvalueshowmajortickmarks = newValue}
  }
  /// Returns true if `tschchartaxisvalueshowmajortickmarks` has been explicitly set.
  var hasTschchartaxisvalueshowmajortickmarks: Bool {return _storage._tschchartaxisvalueshowmajortickmarks != nil}
  /// Clears the value of `tschchartaxisvalueshowmajortickmarks`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvalueshowmajortickmarks() {_uniqueStorage()._tschchartaxisvalueshowmajortickmarks = nil}

  var tschchartaxisvalueshowminimumlabel: Bool {
    get {return _storage._tschchartaxisvalueshowminimumlabel ?? false}
    set {_uniqueStorage()._tschchartaxisvalueshowminimumlabel = newValue}
  }
  /// Returns true if `tschchartaxisvalueshowminimumlabel` has been explicitly set.
  var hasTschchartaxisvalueshowminimumlabel: Bool {return _storage._tschchartaxisvalueshowminimumlabel != nil}
  /// Clears the value of `tschchartaxisvalueshowminimumlabel`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvalueshowminimumlabel() {_uniqueStorage()._tschchartaxisvalueshowminimumlabel = nil}

  var tschchartaxiscategoryshowminorgridlines: Bool {
    get {return _storage._tschchartaxiscategoryshowminorgridlines ?? false}
    set {_uniqueStorage()._tschchartaxiscategoryshowminorgridlines = newValue}
  }
  /// Returns true if `tschchartaxiscategoryshowminorgridlines` has been explicitly set.
  var hasTschchartaxiscategoryshowminorgridlines: Bool {return _storage._tschchartaxiscategoryshowminorgridlines != nil}
  /// Clears the value of `tschchartaxiscategoryshowminorgridlines`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategoryshowminorgridlines() {_uniqueStorage()._tschchartaxiscategoryshowminorgridlines = nil}

  var tschchartaxisvalueshowminorgridlines: Bool {
    get {return _storage._tschchartaxisvalueshowminorgridlines ?? false}
    set {_uniqueStorage()._tschchartaxisvalueshowminorgridlines = newValue}
  }
  /// Returns true if `tschchartaxisvalueshowminorgridlines` has been explicitly set.
  var hasTschchartaxisvalueshowminorgridlines: Bool {return _storage._tschchartaxisvalueshowminorgridlines != nil}
  /// Clears the value of `tschchartaxisvalueshowminorgridlines`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvalueshowminorgridlines() {_uniqueStorage()._tschchartaxisvalueshowminorgridlines = nil}

  var tschchartaxiscategoryshowminortickmarks: Bool {
    get {return _storage._tschchartaxiscategoryshowminortickmarks ?? false}
    set {_uniqueStorage()._tschchartaxiscategoryshowminortickmarks = newValue}
  }
  /// Returns true if `tschchartaxiscategoryshowminortickmarks` has been explicitly set.
  var hasTschchartaxiscategoryshowminortickmarks: Bool {return _storage._tschchartaxiscategoryshowminortickmarks != nil}
  /// Clears the value of `tschchartaxiscategoryshowminortickmarks`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategoryshowminortickmarks() {_uniqueStorage()._tschchartaxiscategoryshowminortickmarks = nil}

  var tschchartaxisvalueshowminortickmarks: Bool {
    get {return _storage._tschchartaxisvalueshowminortickmarks ?? false}
    set {_uniqueStorage()._tschchartaxisvalueshowminortickmarks = newValue}
  }
  /// Returns true if `tschchartaxisvalueshowminortickmarks` has been explicitly set.
  var hasTschchartaxisvalueshowminortickmarks: Bool {return _storage._tschchartaxisvalueshowminortickmarks != nil}
  /// Clears the value of `tschchartaxisvalueshowminortickmarks`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvalueshowminortickmarks() {_uniqueStorage()._tschchartaxisvalueshowminortickmarks = nil}

  var tschchartaxiscategorytickmarklocation: Int32 {
    get {return _storage._tschchartaxiscategorytickmarklocation ?? 0}
    set {_uniqueStorage()._tschchartaxiscategorytickmarklocation = newValue}
  }
  /// Returns true if `tschchartaxiscategorytickmarklocation` has been explicitly set.
  var hasTschchartaxiscategorytickmarklocation: Bool {return _storage._tschchartaxiscategorytickmarklocation != nil}
  /// Clears the value of `tschchartaxiscategorytickmarklocation`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategorytickmarklocation() {_uniqueStorage()._tschchartaxiscategorytickmarklocation = nil}

  var tschchartaxisvaluetickmarklocation: Int32 {
    get {return _storage._tschchartaxisvaluetickmarklocation ?? 0}
    set {_uniqueStorage()._tschchartaxisvaluetickmarklocation = newValue}
  }
  /// Returns true if `tschchartaxisvaluetickmarklocation` has been explicitly set.
  var hasTschchartaxisvaluetickmarklocation: Bool {return _storage._tschchartaxisvaluetickmarklocation != nil}
  /// Clears the value of `tschchartaxisvaluetickmarklocation`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvaluetickmarklocation() {_uniqueStorage()._tschchartaxisvaluetickmarklocation = nil}

  var tschchartaxiscategorytitleparagraphstyleindex: Int32 {
    get {return _storage._tschchartaxiscategorytitleparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartaxiscategorytitleparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartaxiscategorytitleparagraphstyleindex` has been explicitly set.
  var hasTschchartaxiscategorytitleparagraphstyleindex: Bool {return _storage._tschchartaxiscategorytitleparagraphstyleindex != nil}
  /// Clears the value of `tschchartaxiscategorytitleparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategorytitleparagraphstyleindex() {_uniqueStorage()._tschchartaxiscategorytitleparagraphstyleindex = nil}

  var tschchartaxisdefaulttitleparagraphstyleindex: Int32 {
    get {return _storage._tschchartaxisdefaulttitleparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartaxisdefaulttitleparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartaxisdefaulttitleparagraphstyleindex` has been explicitly set.
  var hasTschchartaxisdefaulttitleparagraphstyleindex: Bool {return _storage._tschchartaxisdefaulttitleparagraphstyleindex != nil}
  /// Clears the value of `tschchartaxisdefaulttitleparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisdefaulttitleparagraphstyleindex() {_uniqueStorage()._tschchartaxisdefaulttitleparagraphstyleindex = nil}

  var tschchartaxisvaluetitleparagraphstyleindex: Int32 {
    get {return _storage._tschchartaxisvaluetitleparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartaxisvaluetitleparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartaxisvaluetitleparagraphstyleindex` has been explicitly set.
  var hasTschchartaxisvaluetitleparagraphstyleindex: Bool {return _storage._tschchartaxisvaluetitleparagraphstyleindex != nil}
  /// Clears the value of `tschchartaxisvaluetitleparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvaluetitleparagraphstyleindex() {_uniqueStorage()._tschchartaxisvaluetitleparagraphstyleindex = nil}

  var tschchartaxiscategoryverticalspacing: Int32 {
    get {return _storage._tschchartaxiscategoryverticalspacing ?? 0}
    set {_uniqueStorage()._tschchartaxiscategoryverticalspacing = newValue}
  }
  /// Returns true if `tschchartaxiscategoryverticalspacing` has been explicitly set.
  var hasTschchartaxiscategoryverticalspacing: Bool {return _storage._tschchartaxiscategoryverticalspacing != nil}
  /// Clears the value of `tschchartaxiscategoryverticalspacing`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategoryverticalspacing() {_uniqueStorage()._tschchartaxiscategoryverticalspacing = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

struct TSCH_Generated_ChartAxisNonStyleArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var tschchartaxisdefault10Dateformat: TSK_FormatStructArchive {
    get {return _storage._tschchartaxisdefault10Dateformat ?? TSK_FormatStructArchive()}
    set {_uniqueStorage()._tschchartaxisdefault10Dateformat = newValue}
  }
  /// Returns true if `tschchartaxisdefault10Dateformat` has been explicitly set.
  var hasTschchartaxisdefault10Dateformat: Bool {return _storage._tschchartaxisdefault10Dateformat != nil}
  /// Clears the value of `tschchartaxisdefault10Dateformat`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisdefault10Dateformat() {_uniqueStorage()._tschchartaxisdefault10Dateformat = nil}

  var tschchartaxisdefault10Numberformat: TSK_FormatStructArchive {
    get {return _storage._tschchartaxisdefault10Numberformat ?? TSK_FormatStructArchive()}
    set {_uniqueStorage()._tschchartaxisdefault10Numberformat = newValue}
  }
  /// Returns true if `tschchartaxisdefault10Numberformat` has been explicitly set.
  var hasTschchartaxisdefault10Numberformat: Bool {return _storage._tschchartaxisdefault10Numberformat != nil}
  /// Clears the value of `tschchartaxisdefault10Numberformat`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisdefault10Numberformat() {_uniqueStorage()._tschchartaxisdefault10Numberformat = nil}

  var tschchartaxisdefault3Dlabelposition: Int32 {
    get {return _storage._tschchartaxisdefault3Dlabelposition ?? 0}
    set {_uniqueStorage()._tschchartaxisdefault3Dlabelposition = newValue}
  }
  /// Returns true if `tschchartaxisdefault3Dlabelposition` has been explicitly set.
  var hasTschchartaxisdefault3Dlabelposition: Bool {return _storage._tschchartaxisdefault3Dlabelposition != nil}
  /// Clears the value of `tschchartaxisdefault3Dlabelposition`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisdefault3Dlabelposition() {_uniqueStorage()._tschchartaxisdefault3Dlabelposition = nil}

  var tschchartaxisdefaultdateformat: TSK_FormatStructArchive {
    get {return _storage._tschchartaxisdefaultdateformat ?? TSK_FormatStructArchive()}
    set {_uniqueStorage()._tschchartaxisdefaultdateformat = newValue}
  }
  /// Returns true if `tschchartaxisdefaultdateformat` has been explicitly set.
  var hasTschchartaxisdefaultdateformat: Bool {return _storage._tschchartaxisdefaultdateformat != nil}
  /// Clears the value of `tschchartaxisdefaultdateformat`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisdefaultdateformat() {_uniqueStorage()._tschchartaxisdefaultdateformat = nil}

  var tschchartaxisdefaultdurationformat: TSK_FormatStructArchive {
    get {return _storage._tschchartaxisdefaultdurationformat ?? TSK_FormatStructArchive()}
    set {_uniqueStorage()._tschchartaxisdefaultdurationformat = newValue}
  }
  /// Returns true if `tschchartaxisdefaultdurationformat` has been explicitly set.
  var hasTschchartaxisdefaultdurationformat: Bool {return _storage._tschchartaxisdefaultdurationformat != nil}
  /// Clears the value of `tschchartaxisdefaultdurationformat`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisdefaultdurationformat() {_uniqueStorage()._tschchartaxisdefaultdurationformat = nil}

  var tschchartaxisdefaultnumberformat: TSK_FormatStructArchive {
    get {return _storage._tschchartaxisdefaultnumberformat ?? TSK_FormatStructArchive()}
    set {_uniqueStorage()._tschchartaxisdefaultnumberformat = newValue}
  }
  /// Returns true if `tschchartaxisdefaultnumberformat` has been explicitly set.
  var hasTschchartaxisdefaultnumberformat: Bool {return _storage._tschchartaxisdefaultnumberformat != nil}
  /// Clears the value of `tschchartaxisdefaultnumberformat`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisdefaultnumberformat() {_uniqueStorage()._tschchartaxisdefaultnumberformat = nil}

  var tschchartaxisdefaultnumberformattype: Int32 {
    get {return _storage._tschchartaxisdefaultnumberformattype ?? 0}
    set {_uniqueStorage()._tschchartaxisdefaultnumberformattype = newValue}
  }
  /// Returns true if `tschchartaxisdefaultnumberformattype` has been explicitly set.
  var hasTschchartaxisdefaultnumberformattype: Bool {return _storage._tschchartaxisdefaultnumberformattype != nil}
  /// Clears the value of `tschchartaxisdefaultnumberformattype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisdefaultnumberformattype() {_uniqueStorage()._tschchartaxisdefaultnumberformattype = nil}

  var tschchartaxisvaluenumberofdecades: Int32 {
    get {return _storage._tschchartaxisvaluenumberofdecades ?? 0}
    set {_uniqueStorage()._tschchartaxisvaluenumberofdecades = newValue}
  }
  /// Returns true if `tschchartaxisvaluenumberofdecades` has been explicitly set.
  var hasTschchartaxisvaluenumberofdecades: Bool {return _storage._tschchartaxisvaluenumberofdecades != nil}
  /// Clears the value of `tschchartaxisvaluenumberofdecades`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvaluenumberofdecades() {_uniqueStorage()._tschchartaxisvaluenumberofdecades = nil}

  var tschchartaxisvaluenumberofmajorgridlines: Int32 {
    get {return _storage._tschchartaxisvaluenumberofmajorgridlines ?? 0}
    set {_uniqueStorage()._tschchartaxisvaluenumberofmajorgridlines = newValue}
  }
  /// Returns true if `tschchartaxisvaluenumberofmajorgridlines` has been explicitly set.
  var hasTschchartaxisvaluenumberofmajorgridlines: Bool {return _storage._tschchartaxisvaluenumberofmajorgridlines != nil}
  /// Clears the value of `tschchartaxisvaluenumberofmajorgridlines`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvaluenumberofmajorgridlines() {_uniqueStorage()._tschchartaxisvaluenumberofmajorgridlines = nil}

  var tschchartaxisvaluenumberofminorgridlines: Int32 {
    get {return _storage._tschchartaxisvaluenumberofminorgridlines ?? 0}
    set {_uniqueStorage()._tschchartaxisvaluenumberofminorgridlines = newValue}
  }
  /// Returns true if `tschchartaxisvaluenumberofminorgridlines` has been explicitly set.
  var hasTschchartaxisvaluenumberofminorgridlines: Bool {return _storage._tschchartaxisvaluenumberofminorgridlines != nil}
  /// Clears the value of `tschchartaxisvaluenumberofminorgridlines`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvaluenumberofminorgridlines() {_uniqueStorage()._tschchartaxisvaluenumberofminorgridlines = nil}

  var tschchartaxiscategoryplottoedges: Bool {
    get {return _storage._tschchartaxiscategoryplottoedges ?? false}
    set {_uniqueStorage()._tschchartaxiscategoryplottoedges = newValue}
  }
  /// Returns true if `tschchartaxiscategoryplottoedges` has been explicitly set.
  var hasTschchartaxiscategoryplottoedges: Bool {return _storage._tschchartaxiscategoryplottoedges != nil}
  /// Clears the value of `tschchartaxiscategoryplottoedges`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategoryplottoedges() {_uniqueStorage()._tschchartaxiscategoryplottoedges = nil}

  var tschchartaxisvaluescale: Int32 {
    get {return _storage._tschchartaxisvaluescale ?? 0}
    set {_uniqueStorage()._tschchartaxisvaluescale = newValue}
  }
  /// Returns true if `tschchartaxisvaluescale` has been explicitly set.
  var hasTschchartaxisvaluescale: Bool {return _storage._tschchartaxisvaluescale != nil}
  /// Clears the value of `tschchartaxisvaluescale`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvaluescale() {_uniqueStorage()._tschchartaxisvaluescale = nil}

  var tschchartaxiscategoryshowlabels: Bool {
    get {return _storage._tschchartaxiscategoryshowlabels ?? false}
    set {_uniqueStorage()._tschchartaxiscategoryshowlabels = newValue}
  }
  /// Returns true if `tschchartaxiscategoryshowlabels` has been explicitly set.
  var hasTschchartaxiscategoryshowlabels: Bool {return _storage._tschchartaxiscategoryshowlabels != nil}
  /// Clears the value of `tschchartaxiscategoryshowlabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategoryshowlabels() {_uniqueStorage()._tschchartaxiscategoryshowlabels = nil}

  var tschchartaxisdefaultshowlabels: Bool {
    get {return _storage._tschchartaxisdefaultshowlabels ?? false}
    set {_uniqueStorage()._tschchartaxisdefaultshowlabels = newValue}
  }
  /// Returns true if `tschchartaxisdefaultshowlabels` has been explicitly set.
  var hasTschchartaxisdefaultshowlabels: Bool {return _storage._tschchartaxisdefaultshowlabels != nil}
  /// Clears the value of `tschchartaxisdefaultshowlabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisdefaultshowlabels() {_uniqueStorage()._tschchartaxisdefaultshowlabels = nil}

  var tschchartaxisvalueshowlabels: Bool {
    get {return _storage._tschchartaxisvalueshowlabels ?? false}
    set {_uniqueStorage()._tschchartaxisvalueshowlabels = newValue}
  }
  /// Returns true if `tschchartaxisvalueshowlabels` has been explicitly set.
  var hasTschchartaxisvalueshowlabels: Bool {return _storage._tschchartaxisvalueshowlabels != nil}
  /// Clears the value of `tschchartaxisvalueshowlabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvalueshowlabels() {_uniqueStorage()._tschchartaxisvalueshowlabels = nil}

  var tschchartaxiscategoryshowserieslabels: Bool {
    get {return _storage._tschchartaxiscategoryshowserieslabels ?? false}
    set {_uniqueStorage()._tschchartaxiscategoryshowserieslabels = newValue}
  }
  /// Returns true if `tschchartaxiscategoryshowserieslabels` has been explicitly set.
  var hasTschchartaxiscategoryshowserieslabels: Bool {return _storage._tschchartaxiscategoryshowserieslabels != nil}
  /// Clears the value of `tschchartaxiscategoryshowserieslabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategoryshowserieslabels() {_uniqueStorage()._tschchartaxiscategoryshowserieslabels = nil}

  var tschchartaxismultidatashowserieslabels: Bool {
    get {return _storage._tschchartaxismultidatashowserieslabels ?? false}
    set {_uniqueStorage()._tschchartaxismultidatashowserieslabels = newValue}
  }
  /// Returns true if `tschchartaxismultidatashowserieslabels` has been explicitly set.
  var hasTschchartaxismultidatashowserieslabels: Bool {return _storage._tschchartaxismultidatashowserieslabels != nil}
  /// Clears the value of `tschchartaxismultidatashowserieslabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxismultidatashowserieslabels() {_uniqueStorage()._tschchartaxismultidatashowserieslabels = nil}

  var tschchartaxiscategoryshowtitle: Bool {
    get {return _storage._tschchartaxiscategoryshowtitle ?? false}
    set {_uniqueStorage()._tschchartaxiscategoryshowtitle = newValue}
  }
  /// Returns true if `tschchartaxiscategoryshowtitle` has been explicitly set.
  var hasTschchartaxiscategoryshowtitle: Bool {return _storage._tschchartaxiscategoryshowtitle != nil}
  /// Clears the value of `tschchartaxiscategoryshowtitle`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategoryshowtitle() {_uniqueStorage()._tschchartaxiscategoryshowtitle = nil}

  var tschchartaxisvalueshowtitle: Bool {
    get {return _storage._tschchartaxisvalueshowtitle ?? false}
    set {_uniqueStorage()._tschchartaxisvalueshowtitle = newValue}
  }
  /// Returns true if `tschchartaxisvalueshowtitle` has been explicitly set.
  var hasTschchartaxisvalueshowtitle: Bool {return _storage._tschchartaxisvalueshowtitle != nil}
  /// Clears the value of `tschchartaxisvalueshowtitle`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvalueshowtitle() {_uniqueStorage()._tschchartaxisvalueshowtitle = nil}

  var tschchartaxiscategorytitle: String {
    get {return _storage._tschchartaxiscategorytitle ?? String()}
    set {_uniqueStorage()._tschchartaxiscategorytitle = newValue}
  }
  /// Returns true if `tschchartaxiscategorytitle` has been explicitly set.
  var hasTschchartaxiscategorytitle: Bool {return _storage._tschchartaxiscategorytitle != nil}
  /// Clears the value of `tschchartaxiscategorytitle`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategorytitle() {_uniqueStorage()._tschchartaxiscategorytitle = nil}

  var tschchartaxisvaluetitle: String {
    get {return _storage._tschchartaxisvaluetitle ?? String()}
    set {_uniqueStorage()._tschchartaxisvaluetitle = newValue}
  }
  /// Returns true if `tschchartaxisvaluetitle` has been explicitly set.
  var hasTschchartaxisvaluetitle: Bool {return _storage._tschchartaxisvaluetitle != nil}
  /// Clears the value of `tschchartaxisvaluetitle`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvaluetitle() {_uniqueStorage()._tschchartaxisvaluetitle = nil}

  var tschchartaxisdefaultusermax: TSCH_ChartsNSNumberDoubleArchive {
    get {return _storage._tschchartaxisdefaultusermax ?? TSCH_ChartsNSNumberDoubleArchive()}
    set {_uniqueStorage()._tschchartaxisdefaultusermax = newValue}
  }
  /// Returns true if `tschchartaxisdefaultusermax` has been explicitly set.
  var hasTschchartaxisdefaultusermax: Bool {return _storage._tschchartaxisdefaultusermax != nil}
  /// Clears the value of `tschchartaxisdefaultusermax`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisdefaultusermax() {_uniqueStorage()._tschchartaxisdefaultusermax = nil}

  var tschchartaxisdefaultusermin: TSCH_ChartsNSNumberDoubleArchive {
    get {return _storage._tschchartaxisdefaultusermin ?? TSCH_ChartsNSNumberDoubleArchive()}
    set {_uniqueStorage()._tschchartaxisdefaultusermin = newValue}
  }
  /// Returns true if `tschchartaxisdefaultusermin` has been explicitly set.
  var hasTschchartaxisdefaultusermin: Bool {return _storage._tschchartaxisdefaultusermin != nil}
  /// Clears the value of `tschchartaxisdefaultusermin`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisdefaultusermin() {_uniqueStorage()._tschchartaxisdefaultusermin = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

struct TSCH_Generated_ChartSeriesStyleArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var tschchartseriesdefaultcalloutlineendlineend: TSD_LineEndArchive {
    get {return _storage._tschchartseriesdefaultcalloutlineendlineend ?? TSD_LineEndArchive()}
    set {_uniqueStorage()._tschchartseriesdefaultcalloutlineendlineend = newValue}
  }
  /// Returns true if `tschchartseriesdefaultcalloutlineendlineend` has been explicitly set.
  var hasTschchartseriesdefaultcalloutlineendlineend: Bool {return _storage._tschchartseriesdefaultcalloutlineendlineend != nil}
  /// Clears the value of `tschchartseriesdefaultcalloutlineendlineend`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultcalloutlineendlineend() {_uniqueStorage()._tschchartseriesdefaultcalloutlineendlineend = nil}

  var tschchartseriesdefaultcalloutlinestartlineend: TSD_LineEndArchive {
    get {return _storage._tschchartseriesdefaultcalloutlinestartlineend ?? TSD_LineEndArchive()}
    set {_uniqueStorage()._tschchartseriesdefaultcalloutlinestartlineend = newValue}
  }
  /// Returns true if `tschchartseriesdefaultcalloutlinestartlineend` has been explicitly set.
  var hasTschchartseriesdefaultcalloutlinestartlineend: Bool {return _storage._tschchartseriesdefaultcalloutlinestartlineend != nil}
  /// Clears the value of `tschchartseriesdefaultcalloutlinestartlineend`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultcalloutlinestartlineend() {_uniqueStorage()._tschchartseriesdefaultcalloutlinestartlineend = nil}

  var tschchartseriesdefaultcalloutlinestrokestyle: TSD_StrokeArchive {
    get {return _storage._tschchartseriesdefaultcalloutlinestrokestyle ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriesdefaultcalloutlinestrokestyle = newValue}
  }
  /// Returns true if `tschchartseriesdefaultcalloutlinestrokestyle` has been explicitly set.
  var hasTschchartseriesdefaultcalloutlinestrokestyle: Bool {return _storage._tschchartseriesdefaultcalloutlinestrokestyle != nil}
  /// Clears the value of `tschchartseriesdefaultcalloutlinestrokestyle`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultcalloutlinestrokestyle() {_uniqueStorage()._tschchartseriesdefaultcalloutlinestrokestyle = nil}

  var tschchartseriesdefaulterrorbarlineend: TSD_LineEndArchive {
    get {return _storage._tschchartseriesdefaulterrorbarlineend ?? TSD_LineEndArchive()}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarlineend = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarlineend` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarlineend: Bool {return _storage._tschchartseriesdefaulterrorbarlineend != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarlineend`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarlineend() {_uniqueStorage()._tschchartseriesdefaulterrorbarlineend = nil}

  var tschchartseriesdefaulterrorbarlineendscatterx: TSD_LineEndArchive {
    get {return _storage._tschchartseriesdefaulterrorbarlineendscatterx ?? TSD_LineEndArchive()}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarlineendscatterx = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarlineendscatterx` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarlineendscatterx: Bool {return _storage._tschchartseriesdefaulterrorbarlineendscatterx != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarlineendscatterx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarlineendscatterx() {_uniqueStorage()._tschchartseriesdefaulterrorbarlineendscatterx = nil}

  var tschchartseriesdefaulterrorbarshadow: TSD_ShadowArchive {
    get {return _storage._tschchartseriesdefaulterrorbarshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarshadow = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarshadow` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarshadow: Bool {return _storage._tschchartseriesdefaulterrorbarshadow != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarshadow() {_uniqueStorage()._tschchartseriesdefaulterrorbarshadow = nil}

  var tschchartseriesdefaulterrorbarspacing: Int32 {
    get {return _storage._tschchartseriesdefaulterrorbarspacing ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarspacing = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarspacing` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarspacing: Bool {return _storage._tschchartseriesdefaulterrorbarspacing != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarspacing`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarspacing() {_uniqueStorage()._tschchartseriesdefaulterrorbarspacing = nil}

  var tschchartseriesdefaulterrorbarspacingscatterx: Int32 {
    get {return _storage._tschchartseriesdefaulterrorbarspacingscatterx ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarspacingscatterx = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarspacingscatterx` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarspacingscatterx: Bool {return _storage._tschchartseriesdefaulterrorbarspacingscatterx != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarspacingscatterx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarspacingscatterx() {_uniqueStorage()._tschchartseriesdefaulterrorbarspacingscatterx = nil}

  var tschchartseriesdefaulterrorbarstroke: TSD_StrokeArchive {
    get {return _storage._tschchartseriesdefaulterrorbarstroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarstroke = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarstroke` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarstroke: Bool {return _storage._tschchartseriesdefaulterrorbarstroke != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarstroke() {_uniqueStorage()._tschchartseriesdefaulterrorbarstroke = nil}

  var tschchartseriesdefaulterrorbarstrokescatterx: TSD_StrokeArchive {
    get {return _storage._tschchartseriesdefaulterrorbarstrokescatterx ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarstrokescatterx = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarstrokescatterx` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarstrokescatterx: Bool {return _storage._tschchartseriesdefaulterrorbarstrokescatterx != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarstrokescatterx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarstrokescatterx() {_uniqueStorage()._tschchartseriesdefaulterrorbarstrokescatterx = nil}

  var tschchartseries3Dareafill: TSD_FillArchive {
    get {return _storage._tschchartseries3Dareafill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseries3Dareafill = newValue}
  }
  /// Returns true if `tschchartseries3Dareafill` has been explicitly set.
  var hasTschchartseries3Dareafill: Bool {return _storage._tschchartseries3Dareafill != nil}
  /// Clears the value of `tschchartseries3Dareafill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseries3Dareafill() {_uniqueStorage()._tschchartseries3Dareafill = nil}

  var tschchartseries3Dbarfill: TSD_FillArchive {
    get {return _storage._tschchartseries3Dbarfill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseries3Dbarfill = newValue}
  }
  /// Returns true if `tschchartseries3Dbarfill` has been explicitly set.
  var hasTschchartseries3Dbarfill: Bool {return _storage._tschchartseries3Dbarfill != nil}
  /// Clears the value of `tschchartseries3Dbarfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseries3Dbarfill() {_uniqueStorage()._tschchartseries3Dbarfill = nil}

  var tschchartseries3Dcolumnfill: TSD_FillArchive {
    get {return _storage._tschchartseries3Dcolumnfill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseries3Dcolumnfill = newValue}
  }
  /// Returns true if `tschchartseries3Dcolumnfill` has been explicitly set.
  var hasTschchartseries3Dcolumnfill: Bool {return _storage._tschchartseries3Dcolumnfill != nil}
  /// Clears the value of `tschchartseries3Dcolumnfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseries3Dcolumnfill() {_uniqueStorage()._tschchartseries3Dcolumnfill = nil}

  var tschchartseries3Dlinefill: TSD_FillArchive {
    get {return _storage._tschchartseries3Dlinefill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseries3Dlinefill = newValue}
  }
  /// Returns true if `tschchartseries3Dlinefill` has been explicitly set.
  var hasTschchartseries3Dlinefill: Bool {return _storage._tschchartseries3Dlinefill != nil}
  /// Clears the value of `tschchartseries3Dlinefill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseries3Dlinefill() {_uniqueStorage()._tschchartseries3Dlinefill = nil}

  var tschchartseries3Dpiefill: TSD_FillArchive {
    get {return _storage._tschchartseries3Dpiefill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseries3Dpiefill = newValue}
  }
  /// Returns true if `tschchartseries3Dpiefill` has been explicitly set.
  var hasTschchartseries3Dpiefill: Bool {return _storage._tschchartseries3Dpiefill != nil}
  /// Clears the value of `tschchartseries3Dpiefill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseries3Dpiefill() {_uniqueStorage()._tschchartseries3Dpiefill = nil}

  var tschchartseriesareafill: TSD_FillArchive {
    get {return _storage._tschchartseriesareafill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseriesareafill = newValue}
  }
  /// Returns true if `tschchartseriesareafill` has been explicitly set.
  var hasTschchartseriesareafill: Bool {return _storage._tschchartseriesareafill != nil}
  /// Clears the value of `tschchartseriesareafill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesareafill() {_uniqueStorage()._tschchartseriesareafill = nil}

  var tschchartseriesbarfill: TSD_FillArchive {
    get {return _storage._tschchartseriesbarfill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseriesbarfill = newValue}
  }
  /// Returns true if `tschchartseriesbarfill` has been explicitly set.
  var hasTschchartseriesbarfill: Bool {return _storage._tschchartseriesbarfill != nil}
  /// Clears the value of `tschchartseriesbarfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbarfill() {_uniqueStorage()._tschchartseriesbarfill = nil}

  var tschchartseriescolumnfill: TSD_FillArchive {
    get {return _storage._tschchartseriescolumnfill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseriescolumnfill = newValue}
  }
  /// Returns true if `tschchartseriescolumnfill` has been explicitly set.
  var hasTschchartseriescolumnfill: Bool {return _storage._tschchartseriescolumnfill != nil}
  /// Clears the value of `tschchartseriescolumnfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriescolumnfill() {_uniqueStorage()._tschchartseriescolumnfill = nil}

  var tschchartseriesdefaultfill: TSD_FillArchive {
    get {return _storage._tschchartseriesdefaultfill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseriesdefaultfill = newValue}
  }
  /// Returns true if `tschchartseriesdefaultfill` has been explicitly set.
  var hasTschchartseriesdefaultfill: Bool {return _storage._tschchartseriesdefaultfill != nil}
  /// Clears the value of `tschchartseriesdefaultfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultfill() {_uniqueStorage()._tschchartseriesdefaultfill = nil}

  var tschchartseriesmixedareafill: TSD_FillArchive {
    get {return _storage._tschchartseriesmixedareafill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseriesmixedareafill = newValue}
  }
  /// Returns true if `tschchartseriesmixedareafill` has been explicitly set.
  var hasTschchartseriesmixedareafill: Bool {return _storage._tschchartseriesmixedareafill != nil}
  /// Clears the value of `tschchartseriesmixedareafill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedareafill() {_uniqueStorage()._tschchartseriesmixedareafill = nil}

  var tschchartseriesmixedcolumnfill: TSD_FillArchive {
    get {return _storage._tschchartseriesmixedcolumnfill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseriesmixedcolumnfill = newValue}
  }
  /// Returns true if `tschchartseriesmixedcolumnfill` has been explicitly set.
  var hasTschchartseriesmixedcolumnfill: Bool {return _storage._tschchartseriesmixedcolumnfill != nil}
  /// Clears the value of `tschchartseriesmixedcolumnfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedcolumnfill() {_uniqueStorage()._tschchartseriesmixedcolumnfill = nil}

  var tschchartseriespiefill: TSD_FillArchive {
    get {return _storage._tschchartseriespiefill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseriespiefill = newValue}
  }
  /// Returns true if `tschchartseriespiefill` has been explicitly set.
  var hasTschchartseriespiefill: Bool {return _storage._tschchartseriespiefill != nil}
  /// Clears the value of `tschchartseriespiefill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriespiefill() {_uniqueStorage()._tschchartseriespiefill = nil}

  var tschchartseriesarealabelparagraphstyleindex: Int32 {
    get {return _storage._tschchartseriesarealabelparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartseriesarealabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartseriesarealabelparagraphstyleindex` has been explicitly set.
  var hasTschchartseriesarealabelparagraphstyleindex: Bool {return _storage._tschchartseriesarealabelparagraphstyleindex != nil}
  /// Clears the value of `tschchartseriesarealabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesarealabelparagraphstyleindex() {_uniqueStorage()._tschchartseriesarealabelparagraphstyleindex = nil}

  var tschchartseriesbarlabelparagraphstyleindex: Int32 {
    get {return _storage._tschchartseriesbarlabelparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartseriesbarlabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartseriesbarlabelparagraphstyleindex` has been explicitly set.
  var hasTschchartseriesbarlabelparagraphstyleindex: Bool {return _storage._tschchartseriesbarlabelparagraphstyleindex != nil}
  /// Clears the value of `tschchartseriesbarlabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbarlabelparagraphstyleindex() {_uniqueStorage()._tschchartseriesbarlabelparagraphstyleindex = nil}

  var tschchartseriesdefaultlabelparagraphstyleindex: Int32 {
    get {return _storage._tschchartseriesdefaultlabelparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaultlabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartseriesdefaultlabelparagraphstyleindex` has been explicitly set.
  var hasTschchartseriesdefaultlabelparagraphstyleindex: Bool {return _storage._tschchartseriesdefaultlabelparagraphstyleindex != nil}
  /// Clears the value of `tschchartseriesdefaultlabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultlabelparagraphstyleindex() {_uniqueStorage()._tschchartseriesdefaultlabelparagraphstyleindex = nil}

  var tschchartseriesdonutlabelparagraphstyleindex: Int32 {
    get {return _storage._tschchartseriesdonutlabelparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartseriesdonutlabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartseriesdonutlabelparagraphstyleindex` has been explicitly set.
  var hasTschchartseriesdonutlabelparagraphstyleindex: Bool {return _storage._tschchartseriesdonutlabelparagraphstyleindex != nil}
  /// Clears the value of `tschchartseriesdonutlabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdonutlabelparagraphstyleindex() {_uniqueStorage()._tschchartseriesdonutlabelparagraphstyleindex = nil}

  var tschchartserieslinelabelparagraphstyleindex: Int32 {
    get {return _storage._tschchartserieslinelabelparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartserieslinelabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartserieslinelabelparagraphstyleindex` has been explicitly set.
  var hasTschchartserieslinelabelparagraphstyleindex: Bool {return _storage._tschchartserieslinelabelparagraphstyleindex != nil}
  /// Clears the value of `tschchartserieslinelabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieslinelabelparagraphstyleindex() {_uniqueStorage()._tschchartserieslinelabelparagraphstyleindex = nil}

  var tschchartseriesmixedlabelparagraphstyleindex: Int32 {
    get {return _storage._tschchartseriesmixedlabelparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartseriesmixedlabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartseriesmixedlabelparagraphstyleindex` has been explicitly set.
  var hasTschchartseriesmixedlabelparagraphstyleindex: Bool {return _storage._tschchartseriesmixedlabelparagraphstyleindex != nil}
  /// Clears the value of `tschchartseriesmixedlabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedlabelparagraphstyleindex() {_uniqueStorage()._tschchartseriesmixedlabelparagraphstyleindex = nil}

  var tschchartseriespielabelparagraphstyleindex: Int32 {
    get {return _storage._tschchartseriespielabelparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartseriespielabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartseriespielabelparagraphstyleindex` has been explicitly set.
  var hasTschchartseriespielabelparagraphstyleindex: Bool {return _storage._tschchartseriespielabelparagraphstyleindex != nil}
  /// Clears the value of `tschchartseriespielabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriespielabelparagraphstyleindex() {_uniqueStorage()._tschchartseriespielabelparagraphstyleindex = nil}

  var tschchartseriesdefaultopacity: Float {
    get {return _storage._tschchartseriesdefaultopacity ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaultopacity = newValue}
  }
  /// Returns true if `tschchartseriesdefaultopacity` has been explicitly set.
  var hasTschchartseriesdefaultopacity: Bool {return _storage._tschchartseriesdefaultopacity != nil}
  /// Clears the value of `tschchartseriesdefaultopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultopacity() {_uniqueStorage()._tschchartseriesdefaultopacity = nil}

  var tschchartseriesareaoutsidelabelparagraphstyleindex: Int32 {
    get {return _storage._tschchartseriesareaoutsidelabelparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartseriesareaoutsidelabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartseriesareaoutsidelabelparagraphstyleindex` has been explicitly set.
  var hasTschchartseriesareaoutsidelabelparagraphstyleindex: Bool {return _storage._tschchartseriesareaoutsidelabelparagraphstyleindex != nil}
  /// Clears the value of `tschchartseriesareaoutsidelabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesareaoutsidelabelparagraphstyleindex() {_uniqueStorage()._tschchartseriesareaoutsidelabelparagraphstyleindex = nil}

  var tschchartseriesbaroutsidelabelparagraphstyleindex: Int32 {
    get {return _storage._tschchartseriesbaroutsidelabelparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartseriesbaroutsidelabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartseriesbaroutsidelabelparagraphstyleindex` has been explicitly set.
  var hasTschchartseriesbaroutsidelabelparagraphstyleindex: Bool {return _storage._tschchartseriesbaroutsidelabelparagraphstyleindex != nil}
  /// Clears the value of `tschchartseriesbaroutsidelabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbaroutsidelabelparagraphstyleindex() {_uniqueStorage()._tschchartseriesbaroutsidelabelparagraphstyleindex = nil}

  var tschchartseriesdefaultoutsidelabelparagraphstyleindex: Int32 {
    get {return _storage._tschchartseriesdefaultoutsidelabelparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaultoutsidelabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartseriesdefaultoutsidelabelparagraphstyleindex` has been explicitly set.
  var hasTschchartseriesdefaultoutsidelabelparagraphstyleindex: Bool {return _storage._tschchartseriesdefaultoutsidelabelparagraphstyleindex != nil}
  /// Clears the value of `tschchartseriesdefaultoutsidelabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultoutsidelabelparagraphstyleindex() {_uniqueStorage()._tschchartseriesdefaultoutsidelabelparagraphstyleindex = nil}

  var tschchartseriesdonutoutsidelabelparagraphstyleindex: Int32 {
    get {return _storage._tschchartseriesdonutoutsidelabelparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartseriesdonutoutsidelabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartseriesdonutoutsidelabelparagraphstyleindex` has been explicitly set.
  var hasTschchartseriesdonutoutsidelabelparagraphstyleindex: Bool {return _storage._tschchartseriesdonutoutsidelabelparagraphstyleindex != nil}
  /// Clears the value of `tschchartseriesdonutoutsidelabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdonutoutsidelabelparagraphstyleindex() {_uniqueStorage()._tschchartseriesdonutoutsidelabelparagraphstyleindex = nil}

  var tschchartseriesmixedoutsidelabelparagraphstyleindex: Int32 {
    get {return _storage._tschchartseriesmixedoutsidelabelparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartseriesmixedoutsidelabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartseriesmixedoutsidelabelparagraphstyleindex` has been explicitly set.
  var hasTschchartseriesmixedoutsidelabelparagraphstyleindex: Bool {return _storage._tschchartseriesmixedoutsidelabelparagraphstyleindex != nil}
  /// Clears the value of `tschchartseriesmixedoutsidelabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedoutsidelabelparagraphstyleindex() {_uniqueStorage()._tschchartseriesmixedoutsidelabelparagraphstyleindex = nil}

  var tschchartseriespieoutsidelabelparagraphstyleindex: Int32 {
    get {return _storage._tschchartseriespieoutsidelabelparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartseriespieoutsidelabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartseriespieoutsidelabelparagraphstyleindex` has been explicitly set.
  var hasTschchartseriespieoutsidelabelparagraphstyleindex: Bool {return _storage._tschchartseriespieoutsidelabelparagraphstyleindex != nil}
  /// Clears the value of `tschchartseriespieoutsidelabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriespieoutsidelabelparagraphstyleindex() {_uniqueStorage()._tschchartseriespieoutsidelabelparagraphstyleindex = nil}

  var tschchartseries3Dareashadow: TSD_ShadowArchive {
    get {return _storage._tschchartseries3Dareashadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseries3Dareashadow = newValue}
  }
  /// Returns true if `tschchartseries3Dareashadow` has been explicitly set.
  var hasTschchartseries3Dareashadow: Bool {return _storage._tschchartseries3Dareashadow != nil}
  /// Clears the value of `tschchartseries3Dareashadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseries3Dareashadow() {_uniqueStorage()._tschchartseries3Dareashadow = nil}

  var tschchartseries3Dbarshadow: TSD_ShadowArchive {
    get {return _storage._tschchartseries3Dbarshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseries3Dbarshadow = newValue}
  }
  /// Returns true if `tschchartseries3Dbarshadow` has been explicitly set.
  var hasTschchartseries3Dbarshadow: Bool {return _storage._tschchartseries3Dbarshadow != nil}
  /// Clears the value of `tschchartseries3Dbarshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseries3Dbarshadow() {_uniqueStorage()._tschchartseries3Dbarshadow = nil}

  var tschchartseries3Dcolumnshadow: TSD_ShadowArchive {
    get {return _storage._tschchartseries3Dcolumnshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseries3Dcolumnshadow = newValue}
  }
  /// Returns true if `tschchartseries3Dcolumnshadow` has been explicitly set.
  var hasTschchartseries3Dcolumnshadow: Bool {return _storage._tschchartseries3Dcolumnshadow != nil}
  /// Clears the value of `tschchartseries3Dcolumnshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseries3Dcolumnshadow() {_uniqueStorage()._tschchartseries3Dcolumnshadow = nil}

  var tschchartseries3Dlineshadow: TSD_ShadowArchive {
    get {return _storage._tschchartseries3Dlineshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseries3Dlineshadow = newValue}
  }
  /// Returns true if `tschchartseries3Dlineshadow` has been explicitly set.
  var hasTschchartseries3Dlineshadow: Bool {return _storage._tschchartseries3Dlineshadow != nil}
  /// Clears the value of `tschchartseries3Dlineshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseries3Dlineshadow() {_uniqueStorage()._tschchartseries3Dlineshadow = nil}

  var tschchartseries3Dpieshadow: TSD_ShadowArchive {
    get {return _storage._tschchartseries3Dpieshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseries3Dpieshadow = newValue}
  }
  /// Returns true if `tschchartseries3Dpieshadow` has been explicitly set.
  var hasTschchartseries3Dpieshadow: Bool {return _storage._tschchartseries3Dpieshadow != nil}
  /// Clears the value of `tschchartseries3Dpieshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseries3Dpieshadow() {_uniqueStorage()._tschchartseries3Dpieshadow = nil}

  var tschchartseriesareashadow: TSD_ShadowArchive {
    get {return _storage._tschchartseriesareashadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseriesareashadow = newValue}
  }
  /// Returns true if `tschchartseriesareashadow` has been explicitly set.
  var hasTschchartseriesareashadow: Bool {return _storage._tschchartseriesareashadow != nil}
  /// Clears the value of `tschchartseriesareashadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesareashadow() {_uniqueStorage()._tschchartseriesareashadow = nil}

  var tschchartseriesbarshadow: TSD_ShadowArchive {
    get {return _storage._tschchartseriesbarshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseriesbarshadow = newValue}
  }
  /// Returns true if `tschchartseriesbarshadow` has been explicitly set.
  var hasTschchartseriesbarshadow: Bool {return _storage._tschchartseriesbarshadow != nil}
  /// Clears the value of `tschchartseriesbarshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbarshadow() {_uniqueStorage()._tschchartseriesbarshadow = nil}

  var tschchartseriesbubbleshadow: TSD_ShadowArchive {
    get {return _storage._tschchartseriesbubbleshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseriesbubbleshadow = newValue}
  }
  /// Returns true if `tschchartseriesbubbleshadow` has been explicitly set.
  var hasTschchartseriesbubbleshadow: Bool {return _storage._tschchartseriesbubbleshadow != nil}
  /// Clears the value of `tschchartseriesbubbleshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbubbleshadow() {_uniqueStorage()._tschchartseriesbubbleshadow = nil}

  var tschchartseriesdefaultshadow: TSD_ShadowArchive {
    get {return _storage._tschchartseriesdefaultshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseriesdefaultshadow = newValue}
  }
  /// Returns true if `tschchartseriesdefaultshadow` has been explicitly set.
  var hasTschchartseriesdefaultshadow: Bool {return _storage._tschchartseriesdefaultshadow != nil}
  /// Clears the value of `tschchartseriesdefaultshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultshadow() {_uniqueStorage()._tschchartseriesdefaultshadow = nil}

  var tschchartserieslineshadow: TSD_ShadowArchive {
    get {return _storage._tschchartserieslineshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartserieslineshadow = newValue}
  }
  /// Returns true if `tschchartserieslineshadow` has been explicitly set.
  var hasTschchartserieslineshadow: Bool {return _storage._tschchartserieslineshadow != nil}
  /// Clears the value of `tschchartserieslineshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieslineshadow() {_uniqueStorage()._tschchartserieslineshadow = nil}

  var tschchartseriesmixedareashadow: TSD_ShadowArchive {
    get {return _storage._tschchartseriesmixedareashadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseriesmixedareashadow = newValue}
  }
  /// Returns true if `tschchartseriesmixedareashadow` has been explicitly set.
  var hasTschchartseriesmixedareashadow: Bool {return _storage._tschchartseriesmixedareashadow != nil}
  /// Clears the value of `tschchartseriesmixedareashadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedareashadow() {_uniqueStorage()._tschchartseriesmixedareashadow = nil}

  var tschchartseriesmixedcolumnshadow: TSD_ShadowArchive {
    get {return _storage._tschchartseriesmixedcolumnshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseriesmixedcolumnshadow = newValue}
  }
  /// Returns true if `tschchartseriesmixedcolumnshadow` has been explicitly set.
  var hasTschchartseriesmixedcolumnshadow: Bool {return _storage._tschchartseriesmixedcolumnshadow != nil}
  /// Clears the value of `tschchartseriesmixedcolumnshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedcolumnshadow() {_uniqueStorage()._tschchartseriesmixedcolumnshadow = nil}

  var tschchartseriesmixedlineshadow: TSD_ShadowArchive {
    get {return _storage._tschchartseriesmixedlineshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseriesmixedlineshadow = newValue}
  }
  /// Returns true if `tschchartseriesmixedlineshadow` has been explicitly set.
  var hasTschchartseriesmixedlineshadow: Bool {return _storage._tschchartseriesmixedlineshadow != nil}
  /// Clears the value of `tschchartseriesmixedlineshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedlineshadow() {_uniqueStorage()._tschchartseriesmixedlineshadow = nil}

  var tschchartseriespieshadow: TSD_ShadowArchive {
    get {return _storage._tschchartseriespieshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseriespieshadow = newValue}
  }
  /// Returns true if `tschchartseriespieshadow` has been explicitly set.
  var hasTschchartseriespieshadow: Bool {return _storage._tschchartseriespieshadow != nil}
  /// Clears the value of `tschchartseriespieshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriespieshadow() {_uniqueStorage()._tschchartseriespieshadow = nil}

  var tschchartseriesscattershadow: TSD_ShadowArchive {
    get {return _storage._tschchartseriesscattershadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseriesscattershadow = newValue}
  }
  /// Returns true if `tschchartseriesscattershadow` has been explicitly set.
  var hasTschchartseriesscattershadow: Bool {return _storage._tschchartseriesscattershadow != nil}
  /// Clears the value of `tschchartseriesscattershadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesscattershadow() {_uniqueStorage()._tschchartseriesscattershadow = nil}

  var tschchartseriesareastroke: TSD_StrokeArchive {
    get {return _storage._tschchartseriesareastroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriesareastroke = newValue}
  }
  /// Returns true if `tschchartseriesareastroke` has been explicitly set.
  var hasTschchartseriesareastroke: Bool {return _storage._tschchartseriesareastroke != nil}
  /// Clears the value of `tschchartseriesareastroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesareastroke() {_uniqueStorage()._tschchartseriesareastroke = nil}

  var tschchartseriesbarstroke: TSD_StrokeArchive {
    get {return _storage._tschchartseriesbarstroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriesbarstroke = newValue}
  }
  /// Returns true if `tschchartseriesbarstroke` has been explicitly set.
  var hasTschchartseriesbarstroke: Bool {return _storage._tschchartseriesbarstroke != nil}
  /// Clears the value of `tschchartseriesbarstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbarstroke() {_uniqueStorage()._tschchartseriesbarstroke = nil}

  var tschchartseriesbubblestroke: TSD_StrokeArchive {
    get {return _storage._tschchartseriesbubblestroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriesbubblestroke = newValue}
  }
  /// Returns true if `tschchartseriesbubblestroke` has been explicitly set.
  var hasTschchartseriesbubblestroke: Bool {return _storage._tschchartseriesbubblestroke != nil}
  /// Clears the value of `tschchartseriesbubblestroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbubblestroke() {_uniqueStorage()._tschchartseriesbubblestroke = nil}

  var tschchartserieslinestroke: TSD_StrokeArchive {
    get {return _storage._tschchartserieslinestroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartserieslinestroke = newValue}
  }
  /// Returns true if `tschchartserieslinestroke` has been explicitly set.
  var hasTschchartserieslinestroke: Bool {return _storage._tschchartserieslinestroke != nil}
  /// Clears the value of `tschchartserieslinestroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieslinestroke() {_uniqueStorage()._tschchartserieslinestroke = nil}

  var tschchartseriesmixedareastroke: TSD_StrokeArchive {
    get {return _storage._tschchartseriesmixedareastroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriesmixedareastroke = newValue}
  }
  /// Returns true if `tschchartseriesmixedareastroke` has been explicitly set.
  var hasTschchartseriesmixedareastroke: Bool {return _storage._tschchartseriesmixedareastroke != nil}
  /// Clears the value of `tschchartseriesmixedareastroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedareastroke() {_uniqueStorage()._tschchartseriesmixedareastroke = nil}

  var tschchartseriesmixedcolumnstroke: TSD_StrokeArchive {
    get {return _storage._tschchartseriesmixedcolumnstroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriesmixedcolumnstroke = newValue}
  }
  /// Returns true if `tschchartseriesmixedcolumnstroke` has been explicitly set.
  var hasTschchartseriesmixedcolumnstroke: Bool {return _storage._tschchartseriesmixedcolumnstroke != nil}
  /// Clears the value of `tschchartseriesmixedcolumnstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedcolumnstroke() {_uniqueStorage()._tschchartseriesmixedcolumnstroke = nil}

  var tschchartseriesmixedlinestroke: TSD_StrokeArchive {
    get {return _storage._tschchartseriesmixedlinestroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriesmixedlinestroke = newValue}
  }
  /// Returns true if `tschchartseriesmixedlinestroke` has been explicitly set.
  var hasTschchartseriesmixedlinestroke: Bool {return _storage._tschchartseriesmixedlinestroke != nil}
  /// Clears the value of `tschchartseriesmixedlinestroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedlinestroke() {_uniqueStorage()._tschchartseriesmixedlinestroke = nil}

  var tschchartseriespiestroke: TSD_StrokeArchive {
    get {return _storage._tschchartseriespiestroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriespiestroke = newValue}
  }
  /// Returns true if `tschchartseriespiestroke` has been explicitly set.
  var hasTschchartseriespiestroke: Bool {return _storage._tschchartseriespiestroke != nil}
  /// Clears the value of `tschchartseriespiestroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriespiestroke() {_uniqueStorage()._tschchartseriespiestroke = nil}

  var tschchartseriesscatterstroke: TSD_StrokeArchive {
    get {return _storage._tschchartseriesscatterstroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriesscatterstroke = newValue}
  }
  /// Returns true if `tschchartseriesscatterstroke` has been explicitly set.
  var hasTschchartseriesscatterstroke: Bool {return _storage._tschchartseriesscatterstroke != nil}
  /// Clears the value of `tschchartseriesscatterstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesscatterstroke() {_uniqueStorage()._tschchartseriesscatterstroke = nil}

  var tschchartseriesareasymbolfill: TSD_FillArchive {
    get {return _storage._tschchartseriesareasymbolfill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseriesareasymbolfill = newValue}
  }
  /// Returns true if `tschchartseriesareasymbolfill` has been explicitly set.
  var hasTschchartseriesareasymbolfill: Bool {return _storage._tschchartseriesareasymbolfill != nil}
  /// Clears the value of `tschchartseriesareasymbolfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesareasymbolfill() {_uniqueStorage()._tschchartseriesareasymbolfill = nil}

  var tschchartseriesbubblesymbolfill: TSD_FillArchive {
    get {return _storage._tschchartseriesbubblesymbolfill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseriesbubblesymbolfill = newValue}
  }
  /// Returns true if `tschchartseriesbubblesymbolfill` has been explicitly set.
  var hasTschchartseriesbubblesymbolfill: Bool {return _storage._tschchartseriesbubblesymbolfill != nil}
  /// Clears the value of `tschchartseriesbubblesymbolfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbubblesymbolfill() {_uniqueStorage()._tschchartseriesbubblesymbolfill = nil}

  var tschchartserieslinesymbolfill: TSD_FillArchive {
    get {return _storage._tschchartserieslinesymbolfill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartserieslinesymbolfill = newValue}
  }
  /// Returns true if `tschchartserieslinesymbolfill` has been explicitly set.
  var hasTschchartserieslinesymbolfill: Bool {return _storage._tschchartserieslinesymbolfill != nil}
  /// Clears the value of `tschchartserieslinesymbolfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieslinesymbolfill() {_uniqueStorage()._tschchartserieslinesymbolfill = nil}

  var tschchartseriesmixedareasymbolfill: TSD_FillArchive {
    get {return _storage._tschchartseriesmixedareasymbolfill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseriesmixedareasymbolfill = newValue}
  }
  /// Returns true if `tschchartseriesmixedareasymbolfill` has been explicitly set.
  var hasTschchartseriesmixedareasymbolfill: Bool {return _storage._tschchartseriesmixedareasymbolfill != nil}
  /// Clears the value of `tschchartseriesmixedareasymbolfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedareasymbolfill() {_uniqueStorage()._tschchartseriesmixedareasymbolfill = nil}

  var tschchartseriesmixedlinesymbolfill: TSD_FillArchive {
    get {return _storage._tschchartseriesmixedlinesymbolfill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseriesmixedlinesymbolfill = newValue}
  }
  /// Returns true if `tschchartseriesmixedlinesymbolfill` has been explicitly set.
  var hasTschchartseriesmixedlinesymbolfill: Bool {return _storage._tschchartseriesmixedlinesymbolfill != nil}
  /// Clears the value of `tschchartseriesmixedlinesymbolfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedlinesymbolfill() {_uniqueStorage()._tschchartseriesmixedlinesymbolfill = nil}

  var tschchartseriesscattersymbolfill: TSD_FillArchive {
    get {return _storage._tschchartseriesscattersymbolfill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseriesscattersymbolfill = newValue}
  }
  /// Returns true if `tschchartseriesscattersymbolfill` has been explicitly set.
  var hasTschchartseriesscattersymbolfill: Bool {return _storage._tschchartseriesscattersymbolfill != nil}
  /// Clears the value of `tschchartseriesscattersymbolfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesscattersymbolfill() {_uniqueStorage()._tschchartseriesscattersymbolfill = nil}

  var tschchartseriesareasymbolfilluseseriesfill: Bool {
    get {return _storage._tschchartseriesareasymbolfilluseseriesfill ?? false}
    set {_uniqueStorage()._tschchartseriesareasymbolfilluseseriesfill = newValue}
  }
  /// Returns true if `tschchartseriesareasymbolfilluseseriesfill` has been explicitly set.
  var hasTschchartseriesareasymbolfilluseseriesfill: Bool {return _storage._tschchartseriesareasymbolfilluseseriesfill != nil}
  /// Clears the value of `tschchartseriesareasymbolfilluseseriesfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesareasymbolfilluseseriesfill() {_uniqueStorage()._tschchartseriesareasymbolfilluseseriesfill = nil}

  var tschchartserieslinesymbolfilluseseriesfill: Bool {
    get {return _storage._tschchartserieslinesymbolfilluseseriesfill ?? false}
    set {_uniqueStorage()._tschchartserieslinesymbolfilluseseriesfill = newValue}
  }
  /// Returns true if `tschchartserieslinesymbolfilluseseriesfill` has been explicitly set.
  var hasTschchartserieslinesymbolfilluseseriesfill: Bool {return _storage._tschchartserieslinesymbolfilluseseriesfill != nil}
  /// Clears the value of `tschchartserieslinesymbolfilluseseriesfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieslinesymbolfilluseseriesfill() {_uniqueStorage()._tschchartserieslinesymbolfilluseseriesfill = nil}

  var tschchartseriesmixedareasymbolfilluseseriesfill: Bool {
    get {return _storage._tschchartseriesmixedareasymbolfilluseseriesfill ?? false}
    set {_uniqueStorage()._tschchartseriesmixedareasymbolfilluseseriesfill = newValue}
  }
  /// Returns true if `tschchartseriesmixedareasymbolfilluseseriesfill` has been explicitly set.
  var hasTschchartseriesmixedareasymbolfilluseseriesfill: Bool {return _storage._tschchartseriesmixedareasymbolfilluseseriesfill != nil}
  /// Clears the value of `tschchartseriesmixedareasymbolfilluseseriesfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedareasymbolfilluseseriesfill() {_uniqueStorage()._tschchartseriesmixedareasymbolfilluseseriesfill = nil}

  var tschchartseriesmixedlinesymbolfilluseseriesfill: Bool {
    get {return _storage._tschchartseriesmixedlinesymbolfilluseseriesfill ?? false}
    set {_uniqueStorage()._tschchartseriesmixedlinesymbolfilluseseriesfill = newValue}
  }
  /// Returns true if `tschchartseriesmixedlinesymbolfilluseseriesfill` has been explicitly set.
  var hasTschchartseriesmixedlinesymbolfilluseseriesfill: Bool {return _storage._tschchartseriesmixedlinesymbolfilluseseriesfill != nil}
  /// Clears the value of `tschchartseriesmixedlinesymbolfilluseseriesfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedlinesymbolfilluseseriesfill() {_uniqueStorage()._tschchartseriesmixedlinesymbolfilluseseriesfill = nil}

  var tschchartseriesareasymbolfilluseseriesstroke: Bool {
    get {return _storage._tschchartseriesareasymbolfilluseseriesstroke ?? false}
    set {_uniqueStorage()._tschchartseriesareasymbolfilluseseriesstroke = newValue}
  }
  /// Returns true if `tschchartseriesareasymbolfilluseseriesstroke` has been explicitly set.
  var hasTschchartseriesareasymbolfilluseseriesstroke: Bool {return _storage._tschchartseriesareasymbolfilluseseriesstroke != nil}
  /// Clears the value of `tschchartseriesareasymbolfilluseseriesstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesareasymbolfilluseseriesstroke() {_uniqueStorage()._tschchartseriesareasymbolfilluseseriesstroke = nil}

  var tschchartseriesbubblesymbolfilluseseriesstroke: Bool {
    get {return _storage._tschchartseriesbubblesymbolfilluseseriesstroke ?? false}
    set {_uniqueStorage()._tschchartseriesbubblesymbolfilluseseriesstroke = newValue}
  }
  /// Returns true if `tschchartseriesbubblesymbolfilluseseriesstroke` has been explicitly set.
  var hasTschchartseriesbubblesymbolfilluseseriesstroke: Bool {return _storage._tschchartseriesbubblesymbolfilluseseriesstroke != nil}
  /// Clears the value of `tschchartseriesbubblesymbolfilluseseriesstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbubblesymbolfilluseseriesstroke() {_uniqueStorage()._tschchartseriesbubblesymbolfilluseseriesstroke = nil}

  var tschchartserieslinesymbolfilluseseriesstroke: Bool {
    get {return _storage._tschchartserieslinesymbolfilluseseriesstroke ?? false}
    set {_uniqueStorage()._tschchartserieslinesymbolfilluseseriesstroke = newValue}
  }
  /// Returns true if `tschchartserieslinesymbolfilluseseriesstroke` has been explicitly set.
  var hasTschchartserieslinesymbolfilluseseriesstroke: Bool {return _storage._tschchartserieslinesymbolfilluseseriesstroke != nil}
  /// Clears the value of `tschchartserieslinesymbolfilluseseriesstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieslinesymbolfilluseseriesstroke() {_uniqueStorage()._tschchartserieslinesymbolfilluseseriesstroke = nil}

  var tschchartseriesmixedareasymbolfilluseseriesstroke: Bool {
    get {return _storage._tschchartseriesmixedareasymbolfilluseseriesstroke ?? false}
    set {_uniqueStorage()._tschchartseriesmixedareasymbolfilluseseriesstroke = newValue}
  }
  /// Returns true if `tschchartseriesmixedareasymbolfilluseseriesstroke` has been explicitly set.
  var hasTschchartseriesmixedareasymbolfilluseseriesstroke: Bool {return _storage._tschchartseriesmixedareasymbolfilluseseriesstroke != nil}
  /// Clears the value of `tschchartseriesmixedareasymbolfilluseseriesstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedareasymbolfilluseseriesstroke() {_uniqueStorage()._tschchartseriesmixedareasymbolfilluseseriesstroke = nil}

  var tschchartseriesmixedlinesymbolfilluseseriesstroke: Bool {
    get {return _storage._tschchartseriesmixedlinesymbolfilluseseriesstroke ?? false}
    set {_uniqueStorage()._tschchartseriesmixedlinesymbolfilluseseriesstroke = newValue}
  }
  /// Returns true if `tschchartseriesmixedlinesymbolfilluseseriesstroke` has been explicitly set.
  var hasTschchartseriesmixedlinesymbolfilluseseriesstroke: Bool {return _storage._tschchartseriesmixedlinesymbolfilluseseriesstroke != nil}
  /// Clears the value of `tschchartseriesmixedlinesymbolfilluseseriesstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedlinesymbolfilluseseriesstroke() {_uniqueStorage()._tschchartseriesmixedlinesymbolfilluseseriesstroke = nil}

  var tschchartseriesscattersymbolfilluseseriesstroke: Bool {
    get {return _storage._tschchartseriesscattersymbolfilluseseriesstroke ?? false}
    set {_uniqueStorage()._tschchartseriesscattersymbolfilluseseriesstroke = newValue}
  }
  /// Returns true if `tschchartseriesscattersymbolfilluseseriesstroke` has been explicitly set.
  var hasTschchartseriesscattersymbolfilluseseriesstroke: Bool {return _storage._tschchartseriesscattersymbolfilluseseriesstroke != nil}
  /// Clears the value of `tschchartseriesscattersymbolfilluseseriesstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesscattersymbolfilluseseriesstroke() {_uniqueStorage()._tschchartseriesscattersymbolfilluseseriesstroke = nil}

  var tschchartseriesareasymbolsize: Float {
    get {return _storage._tschchartseriesareasymbolsize ?? 0}
    set {_uniqueStorage()._tschchartseriesareasymbolsize = newValue}
  }
  /// Returns true if `tschchartseriesareasymbolsize` has been explicitly set.
  var hasTschchartseriesareasymbolsize: Bool {return _storage._tschchartseriesareasymbolsize != nil}
  /// Clears the value of `tschchartseriesareasymbolsize`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesareasymbolsize() {_uniqueStorage()._tschchartseriesareasymbolsize = nil}

  var tschchartserieslinesymbolsize: Float {
    get {return _storage._tschchartserieslinesymbolsize ?? 0}
    set {_uniqueStorage()._tschchartserieslinesymbolsize = newValue}
  }
  /// Returns true if `tschchartserieslinesymbolsize` has been explicitly set.
  var hasTschchartserieslinesymbolsize: Bool {return _storage._tschchartserieslinesymbolsize != nil}
  /// Clears the value of `tschchartserieslinesymbolsize`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieslinesymbolsize() {_uniqueStorage()._tschchartserieslinesymbolsize = nil}

  var tschchartseriesmixedareasymbolsize: Float {
    get {return _storage._tschchartseriesmixedareasymbolsize ?? 0}
    set {_uniqueStorage()._tschchartseriesmixedareasymbolsize = newValue}
  }
  /// Returns true if `tschchartseriesmixedareasymbolsize` has been explicitly set.
  var hasTschchartseriesmixedareasymbolsize: Bool {return _storage._tschchartseriesmixedareasymbolsize != nil}
  /// Clears the value of `tschchartseriesmixedareasymbolsize`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedareasymbolsize() {_uniqueStorage()._tschchartseriesmixedareasymbolsize = nil}

  var tschchartseriesmixedlinesymbolsize: Float {
    get {return _storage._tschchartseriesmixedlinesymbolsize ?? 0}
    set {_uniqueStorage()._tschchartseriesmixedlinesymbolsize = newValue}
  }
  /// Returns true if `tschchartseriesmixedlinesymbolsize` has been explicitly set.
  var hasTschchartseriesmixedlinesymbolsize: Bool {return _storage._tschchartseriesmixedlinesymbolsize != nil}
  /// Clears the value of `tschchartseriesmixedlinesymbolsize`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedlinesymbolsize() {_uniqueStorage()._tschchartseriesmixedlinesymbolsize = nil}

  var tschchartseriesscattersymbolsize: Float {
    get {return _storage._tschchartseriesscattersymbolsize ?? 0}
    set {_uniqueStorage()._tschchartseriesscattersymbolsize = newValue}
  }
  /// Returns true if `tschchartseriesscattersymbolsize` has been explicitly set.
  var hasTschchartseriesscattersymbolsize: Bool {return _storage._tschchartseriesscattersymbolsize != nil}
  /// Clears the value of `tschchartseriesscattersymbolsize`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesscattersymbolsize() {_uniqueStorage()._tschchartseriesscattersymbolsize = nil}

  var tschchartseriesareasymbolstroke: TSD_StrokeArchive {
    get {return _storage._tschchartseriesareasymbolstroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriesareasymbolstroke = newValue}
  }
  /// Returns true if `tschchartseriesareasymbolstroke` has been explicitly set.
  var hasTschchartseriesareasymbolstroke: Bool {return _storage._tschchartseriesareasymbolstroke != nil}
  /// Clears the value of `tschchartseriesareasymbolstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesareasymbolstroke() {_uniqueStorage()._tschchartseriesareasymbolstroke = nil}

  var tschchartseriesbubblesymbolstroke: TSD_StrokeArchive {
    get {return _storage._tschchartseriesbubblesymbolstroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriesbubblesymbolstroke = newValue}
  }
  /// Returns true if `tschchartseriesbubblesymbolstroke` has been explicitly set.
  var hasTschchartseriesbubblesymbolstroke: Bool {return _storage._tschchartseriesbubblesymbolstroke != nil}
  /// Clears the value of `tschchartseriesbubblesymbolstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbubblesymbolstroke() {_uniqueStorage()._tschchartseriesbubblesymbolstroke = nil}

  var tschchartserieslinesymbolstroke: TSD_StrokeArchive {
    get {return _storage._tschchartserieslinesymbolstroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartserieslinesymbolstroke = newValue}
  }
  /// Returns true if `tschchartserieslinesymbolstroke` has been explicitly set.
  var hasTschchartserieslinesymbolstroke: Bool {return _storage._tschchartserieslinesymbolstroke != nil}
  /// Clears the value of `tschchartserieslinesymbolstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieslinesymbolstroke() {_uniqueStorage()._tschchartserieslinesymbolstroke = nil}

  var tschchartseriesmixedareasymbolstroke: TSD_StrokeArchive {
    get {return _storage._tschchartseriesmixedareasymbolstroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriesmixedareasymbolstroke = newValue}
  }
  /// Returns true if `tschchartseriesmixedareasymbolstroke` has been explicitly set.
  var hasTschchartseriesmixedareasymbolstroke: Bool {return _storage._tschchartseriesmixedareasymbolstroke != nil}
  /// Clears the value of `tschchartseriesmixedareasymbolstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedareasymbolstroke() {_uniqueStorage()._tschchartseriesmixedareasymbolstroke = nil}

  var tschchartseriesmixedlinesymbolstroke: TSD_StrokeArchive {
    get {return _storage._tschchartseriesmixedlinesymbolstroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriesmixedlinesymbolstroke = newValue}
  }
  /// Returns true if `tschchartseriesmixedlinesymbolstroke` has been explicitly set.
  var hasTschchartseriesmixedlinesymbolstroke: Bool {return _storage._tschchartseriesmixedlinesymbolstroke != nil}
  /// Clears the value of `tschchartseriesmixedlinesymbolstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedlinesymbolstroke() {_uniqueStorage()._tschchartseriesmixedlinesymbolstroke = nil}

  var tschchartseriesscattersymbolstroke: TSD_StrokeArchive {
    get {return _storage._tschchartseriesscattersymbolstroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriesscattersymbolstroke = newValue}
  }
  /// Returns true if `tschchartseriesscattersymbolstroke` has been explicitly set.
  var hasTschchartseriesscattersymbolstroke: Bool {return _storage._tschchartseriesscattersymbolstroke != nil}
  /// Clears the value of `tschchartseriesscattersymbolstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesscattersymbolstroke() {_uniqueStorage()._tschchartseriesscattersymbolstroke = nil}

  var tschchartseriesdefaulttrendlineshadow: TSD_ShadowArchive {
    get {return _storage._tschchartseriesdefaulttrendlineshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlineshadow = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlineshadow` has been explicitly set.
  var hasTschchartseriesdefaulttrendlineshadow: Bool {return _storage._tschchartseriesdefaulttrendlineshadow != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlineshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlineshadow() {_uniqueStorage()._tschchartseriesdefaulttrendlineshadow = nil}

  var tschchartseriesdefaulttrendlinestroke: TSD_StrokeArchive {
    get {return _storage._tschchartseriesdefaulttrendlinestroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlinestroke = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlinestroke` has been explicitly set.
  var hasTschchartseriesdefaulttrendlinestroke: Bool {return _storage._tschchartseriesdefaulttrendlinestroke != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlinestroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlinestroke() {_uniqueStorage()._tschchartseriesdefaulttrendlinestroke = nil}

  var tschchartseriesdefaulttrendlineequationopacity: Float {
    get {return _storage._tschchartseriesdefaulttrendlineequationopacity ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlineequationopacity = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlineequationopacity` has been explicitly set.
  var hasTschchartseriesdefaulttrendlineequationopacity: Bool {return _storage._tschchartseriesdefaulttrendlineequationopacity != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlineequationopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlineequationopacity() {_uniqueStorage()._tschchartseriesdefaulttrendlineequationopacity = nil}

  var tschchartseriesdefaulttrendlineequationparagraphstyleindex: Int32 {
    get {return _storage._tschchartseriesdefaulttrendlineequationparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlineequationparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlineequationparagraphstyleindex` has been explicitly set.
  var hasTschchartseriesdefaulttrendlineequationparagraphstyleindex: Bool {return _storage._tschchartseriesdefaulttrendlineequationparagraphstyleindex != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlineequationparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlineequationparagraphstyleindex() {_uniqueStorage()._tschchartseriesdefaulttrendlineequationparagraphstyleindex = nil}

  var tschchartseriesdefaulttrendlinersquaredopacity: Float {
    get {return _storage._tschchartseriesdefaulttrendlinersquaredopacity ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlinersquaredopacity = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlinersquaredopacity` has been explicitly set.
  var hasTschchartseriesdefaulttrendlinersquaredopacity: Bool {return _storage._tschchartseriesdefaulttrendlinersquaredopacity != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlinersquaredopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlinersquaredopacity() {_uniqueStorage()._tschchartseriesdefaulttrendlinersquaredopacity = nil}

  var tschchartseriesdefaulttrendlinersquaredparagraphstyleindex: Int32 {
    get {return _storage._tschchartseriesdefaulttrendlinersquaredparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlinersquaredparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlinersquaredparagraphstyleindex` has been explicitly set.
  var hasTschchartseriesdefaulttrendlinersquaredparagraphstyleindex: Bool {return _storage._tschchartseriesdefaulttrendlinersquaredparagraphstyleindex != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlinersquaredparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlinersquaredparagraphstyleindex() {_uniqueStorage()._tschchartseriesdefaulttrendlinersquaredparagraphstyleindex = nil}

  var tschchartseriesareavaluelabelposition: Int32 {
    get {return _storage._tschchartseriesareavaluelabelposition ?? 0}
    set {_uniqueStorage()._tschchartseriesareavaluelabelposition = newValue}
  }
  /// Returns true if `tschchartseriesareavaluelabelposition` has been explicitly set.
  var hasTschchartseriesareavaluelabelposition: Bool {return _storage._tschchartseriesareavaluelabelposition != nil}
  /// Clears the value of `tschchartseriesareavaluelabelposition`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesareavaluelabelposition() {_uniqueStorage()._tschchartseriesareavaluelabelposition = nil}

  var tschchartseriesbarvaluelabelposition: Int32 {
    get {return _storage._tschchartseriesbarvaluelabelposition ?? 0}
    set {_uniqueStorage()._tschchartseriesbarvaluelabelposition = newValue}
  }
  /// Returns true if `tschchartseriesbarvaluelabelposition` has been explicitly set.
  var hasTschchartseriesbarvaluelabelposition: Bool {return _storage._tschchartseriesbarvaluelabelposition != nil}
  /// Clears the value of `tschchartseriesbarvaluelabelposition`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbarvaluelabelposition() {_uniqueStorage()._tschchartseriesbarvaluelabelposition = nil}

  var tschchartseriesbubblevaluelabelposition: Int32 {
    get {return _storage._tschchartseriesbubblevaluelabelposition ?? 0}
    set {_uniqueStorage()._tschchartseriesbubblevaluelabelposition = newValue}
  }
  /// Returns true if `tschchartseriesbubblevaluelabelposition` has been explicitly set.
  var hasTschchartseriesbubblevaluelabelposition: Bool {return _storage._tschchartseriesbubblevaluelabelposition != nil}
  /// Clears the value of `tschchartseriesbubblevaluelabelposition`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbubblevaluelabelposition() {_uniqueStorage()._tschchartseriesbubblevaluelabelposition = nil}

  var tschchartseriesdefaultvaluelabelposition: Int32 {
    get {return _storage._tschchartseriesdefaultvaluelabelposition ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaultvaluelabelposition = newValue}
  }
  /// Returns true if `tschchartseriesdefaultvaluelabelposition` has been explicitly set.
  var hasTschchartseriesdefaultvaluelabelposition: Bool {return _storage._tschchartseriesdefaultvaluelabelposition != nil}
  /// Clears the value of `tschchartseriesdefaultvaluelabelposition`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultvaluelabelposition() {_uniqueStorage()._tschchartseriesdefaultvaluelabelposition = nil}

  var tschchartserieslinevaluelabelposition: Int32 {
    get {return _storage._tschchartserieslinevaluelabelposition ?? 0}
    set {_uniqueStorage()._tschchartserieslinevaluelabelposition = newValue}
  }
  /// Returns true if `tschchartserieslinevaluelabelposition` has been explicitly set.
  var hasTschchartserieslinevaluelabelposition: Bool {return _storage._tschchartserieslinevaluelabelposition != nil}
  /// Clears the value of `tschchartserieslinevaluelabelposition`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieslinevaluelabelposition() {_uniqueStorage()._tschchartserieslinevaluelabelposition = nil}

  var tschchartseriesmixedareavaluelabelposition: Int32 {
    get {return _storage._tschchartseriesmixedareavaluelabelposition ?? 0}
    set {_uniqueStorage()._tschchartseriesmixedareavaluelabelposition = newValue}
  }
  /// Returns true if `tschchartseriesmixedareavaluelabelposition` has been explicitly set.
  var hasTschchartseriesmixedareavaluelabelposition: Bool {return _storage._tschchartseriesmixedareavaluelabelposition != nil}
  /// Clears the value of `tschchartseriesmixedareavaluelabelposition`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedareavaluelabelposition() {_uniqueStorage()._tschchartseriesmixedareavaluelabelposition = nil}

  var tschchartseriesmixedcolumnvaluelabelposition: Int32 {
    get {return _storage._tschchartseriesmixedcolumnvaluelabelposition ?? 0}
    set {_uniqueStorage()._tschchartseriesmixedcolumnvaluelabelposition = newValue}
  }
  /// Returns true if `tschchartseriesmixedcolumnvaluelabelposition` has been explicitly set.
  var hasTschchartseriesmixedcolumnvaluelabelposition: Bool {return _storage._tschchartseriesmixedcolumnvaluelabelposition != nil}
  /// Clears the value of `tschchartseriesmixedcolumnvaluelabelposition`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedcolumnvaluelabelposition() {_uniqueStorage()._tschchartseriesmixedcolumnvaluelabelposition = nil}

  var tschchartseriesmixedlinevaluelabelposition: Int32 {
    get {return _storage._tschchartseriesmixedlinevaluelabelposition ?? 0}
    set {_uniqueStorage()._tschchartseriesmixedlinevaluelabelposition = newValue}
  }
  /// Returns true if `tschchartseriesmixedlinevaluelabelposition` has been explicitly set.
  var hasTschchartseriesmixedlinevaluelabelposition: Bool {return _storage._tschchartseriesmixedlinevaluelabelposition != nil}
  /// Clears the value of `tschchartseriesmixedlinevaluelabelposition`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedlinevaluelabelposition() {_uniqueStorage()._tschchartseriesmixedlinevaluelabelposition = nil}

  var tschchartseriesscattervaluelabelposition: Int32 {
    get {return _storage._tschchartseriesscattervaluelabelposition ?? 0}
    set {_uniqueStorage()._tschchartseriesscattervaluelabelposition = newValue}
  }
  /// Returns true if `tschchartseriesscattervaluelabelposition` has been explicitly set.
  var hasTschchartseriesscattervaluelabelposition: Bool {return _storage._tschchartseriesscattervaluelabelposition != nil}
  /// Clears the value of `tschchartseriesscattervaluelabelposition`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesscattervaluelabelposition() {_uniqueStorage()._tschchartseriesscattervaluelabelposition = nil}

  var tschchartseriesstackedareavaluelabelposition: Int32 {
    get {return _storage._tschchartseriesstackedareavaluelabelposition ?? 0}
    set {_uniqueStorage()._tschchartseriesstackedareavaluelabelposition = newValue}
  }
  /// Returns true if `tschchartseriesstackedareavaluelabelposition` has been explicitly set.
  var hasTschchartseriesstackedareavaluelabelposition: Bool {return _storage._tschchartseriesstackedareavaluelabelposition != nil}
  /// Clears the value of `tschchartseriesstackedareavaluelabelposition`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesstackedareavaluelabelposition() {_uniqueStorage()._tschchartseriesstackedareavaluelabelposition = nil}

  var tschchartseriesstackedbarvaluelabelposition: Int32 {
    get {return _storage._tschchartseriesstackedbarvaluelabelposition ?? 0}
    set {_uniqueStorage()._tschchartseriesstackedbarvaluelabelposition = newValue}
  }
  /// Returns true if `tschchartseriesstackedbarvaluelabelposition` has been explicitly set.
  var hasTschchartseriesstackedbarvaluelabelposition: Bool {return _storage._tschchartseriesstackedbarvaluelabelposition != nil}
  /// Clears the value of `tschchartseriesstackedbarvaluelabelposition`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesstackedbarvaluelabelposition() {_uniqueStorage()._tschchartseriesstackedbarvaluelabelposition = nil}

  var tschchartseriesdefaultvaluelabelspacing: Int32 {
    get {return _storage._tschchartseriesdefaultvaluelabelspacing ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaultvaluelabelspacing = newValue}
  }
  /// Returns true if `tschchartseriesdefaultvaluelabelspacing` has been explicitly set.
  var hasTschchartseriesdefaultvaluelabelspacing: Bool {return _storage._tschchartseriesdefaultvaluelabelspacing != nil}
  /// Clears the value of `tschchartseriesdefaultvaluelabelspacing`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultvaluelabelspacing() {_uniqueStorage()._tschchartseriesdefaultvaluelabelspacing = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

struct TSCH_Generated_ChartSeriesNonStyleArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var tschchartseriesdefault10Dateformat: TSK_FormatStructArchive {
    get {return _storage._tschchartseriesdefault10Dateformat ?? TSK_FormatStructArchive()}
    set {_uniqueStorage()._tschchartseriesdefault10Dateformat = newValue}
  }
  /// Returns true if `tschchartseriesdefault10Dateformat` has been explicitly set.
  var hasTschchartseriesdefault10Dateformat: Bool {return _storage._tschchartseriesdefault10Dateformat != nil}
  /// Clears the value of `tschchartseriesdefault10Dateformat`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefault10Dateformat() {_uniqueStorage()._tschchartseriesdefault10Dateformat = nil}

  var tschchartseriesdefault10Numberformat: TSK_FormatStructArchive {
    get {return _storage._tschchartseriesdefault10Numberformat ?? TSK_FormatStructArchive()}
    set {_uniqueStorage()._tschchartseriesdefault10Numberformat = newValue}
  }
  /// Returns true if `tschchartseriesdefault10Numberformat` has been explicitly set.
  var hasTschchartseriesdefault10Numberformat: Bool {return _storage._tschchartseriesdefault10Numberformat != nil}
  /// Clears the value of `tschchartseriesdefault10Numberformat`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefault10Numberformat() {_uniqueStorage()._tschchartseriesdefault10Numberformat = nil}

  var tschchartseriespie10Numberformat: TSK_FormatStructArchive {
    get {return _storage._tschchartseriespie10Numberformat ?? TSK_FormatStructArchive()}
    set {_uniqueStorage()._tschchartseriespie10Numberformat = newValue}
  }
  /// Returns true if `tschchartseriespie10Numberformat` has been explicitly set.
  var hasTschchartseriespie10Numberformat: Bool {return _storage._tschchartseriespie10Numberformat != nil}
  /// Clears the value of `tschchartseriespie10Numberformat`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriespie10Numberformat() {_uniqueStorage()._tschchartseriespie10Numberformat = nil}

  var tschchartseriespie23Labelexplosion: Float {
    get {return _storage._tschchartseriespie23Labelexplosion ?? 0}
    set {_uniqueStorage()._tschchartseriespie23Labelexplosion = newValue}
  }
  /// Returns true if `tschchartseriespie23Labelexplosion` has been explicitly set.
  var hasTschchartseriespie23Labelexplosion: Bool {return _storage._tschchartseriespie23Labelexplosion != nil}
  /// Clears the value of `tschchartseriespie23Labelexplosion`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriespie23Labelexplosion() {_uniqueStorage()._tschchartseriespie23Labelexplosion = nil}

  var tschchartseriesbubbleadjustmentscale: Float {
    get {return _storage._tschchartseriesbubbleadjustmentscale ?? 0}
    set {_uniqueStorage()._tschchartseriesbubbleadjustmentscale = newValue}
  }
  /// Returns true if `tschchartseriesbubbleadjustmentscale` has been explicitly set.
  var hasTschchartseriesbubbleadjustmentscale: Bool {return _storage._tschchartseriesbubbleadjustmentscale != nil}
  /// Clears the value of `tschchartseriesbubbleadjustmentscale`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbubbleadjustmentscale() {_uniqueStorage()._tschchartseriesbubbleadjustmentscale = nil}

  var tschchartseriesdefaultdateformat: TSK_FormatStructArchive {
    get {return _storage._tschchartseriesdefaultdateformat ?? TSK_FormatStructArchive()}
    set {_uniqueStorage()._tschchartseriesdefaultdateformat = newValue}
  }
  /// Returns true if `tschchartseriesdefaultdateformat` has been explicitly set.
  var hasTschchartseriesdefaultdateformat: Bool {return _storage._tschchartseriesdefaultdateformat != nil}
  /// Clears the value of `tschchartseriesdefaultdateformat`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultdateformat() {_uniqueStorage()._tschchartseriesdefaultdateformat = nil}

  var tschchartseriesdefaultdurationformat: TSK_FormatStructArchive {
    get {return _storage._tschchartseriesdefaultdurationformat ?? TSK_FormatStructArchive()}
    set {_uniqueStorage()._tschchartseriesdefaultdurationformat = newValue}
  }
  /// Returns true if `tschchartseriesdefaultdurationformat` has been explicitly set.
  var hasTschchartseriesdefaultdurationformat: Bool {return _storage._tschchartseriesdefaultdurationformat != nil}
  /// Clears the value of `tschchartseriesdefaultdurationformat`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultdurationformat() {_uniqueStorage()._tschchartseriesdefaultdurationformat = nil}

  var tschchartseriesareaenablecalloutline: Int32 {
    get {return _storage._tschchartseriesareaenablecalloutline ?? 0}
    set {_uniqueStorage()._tschchartseriesareaenablecalloutline = newValue}
  }
  /// Returns true if `tschchartseriesareaenablecalloutline` has been explicitly set.
  var hasTschchartseriesareaenablecalloutline: Bool {return _storage._tschchartseriesareaenablecalloutline != nil}
  /// Clears the value of `tschchartseriesareaenablecalloutline`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesareaenablecalloutline() {_uniqueStorage()._tschchartseriesareaenablecalloutline = nil}

  var tschchartseriesbarenablecalloutline: Int32 {
    get {return _storage._tschchartseriesbarenablecalloutline ?? 0}
    set {_uniqueStorage()._tschchartseriesbarenablecalloutline = newValue}
  }
  /// Returns true if `tschchartseriesbarenablecalloutline` has been explicitly set.
  var hasTschchartseriesbarenablecalloutline: Bool {return _storage._tschchartseriesbarenablecalloutline != nil}
  /// Clears the value of `tschchartseriesbarenablecalloutline`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbarenablecalloutline() {_uniqueStorage()._tschchartseriesbarenablecalloutline = nil}

  var tschchartseriesbubbleenablecalloutline: Int32 {
    get {return _storage._tschchartseriesbubbleenablecalloutline ?? 0}
    set {_uniqueStorage()._tschchartseriesbubbleenablecalloutline = newValue}
  }
  /// Returns true if `tschchartseriesbubbleenablecalloutline` has been explicitly set.
  var hasTschchartseriesbubbleenablecalloutline: Bool {return _storage._tschchartseriesbubbleenablecalloutline != nil}
  /// Clears the value of `tschchartseriesbubbleenablecalloutline`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbubbleenablecalloutline() {_uniqueStorage()._tschchartseriesbubbleenablecalloutline = nil}

  var tschchartseriesdefaultenablecalloutline: Int32 {
    get {return _storage._tschchartseriesdefaultenablecalloutline ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaultenablecalloutline = newValue}
  }
  /// Returns true if `tschchartseriesdefaultenablecalloutline` has been explicitly set.
  var hasTschchartseriesdefaultenablecalloutline: Bool {return _storage._tschchartseriesdefaultenablecalloutline != nil}
  /// Clears the value of `tschchartseriesdefaultenablecalloutline`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultenablecalloutline() {_uniqueStorage()._tschchartseriesdefaultenablecalloutline = nil}

  var tschchartserieslineenablecalloutline: Int32 {
    get {return _storage._tschchartserieslineenablecalloutline ?? 0}
    set {_uniqueStorage()._tschchartserieslineenablecalloutline = newValue}
  }
  /// Returns true if `tschchartserieslineenablecalloutline` has been explicitly set.
  var hasTschchartserieslineenablecalloutline: Bool {return _storage._tschchartserieslineenablecalloutline != nil}
  /// Clears the value of `tschchartserieslineenablecalloutline`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieslineenablecalloutline() {_uniqueStorage()._tschchartserieslineenablecalloutline = nil}

  var tschchartseriespieenablecalloutline: Int32 {
    get {return _storage._tschchartseriespieenablecalloutline ?? 0}
    set {_uniqueStorage()._tschchartseriespieenablecalloutline = newValue}
  }
  /// Returns true if `tschchartseriespieenablecalloutline` has been explicitly set.
  var hasTschchartseriespieenablecalloutline: Bool {return _storage._tschchartseriespieenablecalloutline != nil}
  /// Clears the value of `tschchartseriespieenablecalloutline`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriespieenablecalloutline() {_uniqueStorage()._tschchartseriespieenablecalloutline = nil}

  var tschchartseriesscatterenablecalloutline: Int32 {
    get {return _storage._tschchartseriesscatterenablecalloutline ?? 0}
    set {_uniqueStorage()._tschchartseriesscatterenablecalloutline = newValue}
  }
  /// Returns true if `tschchartseriesscatterenablecalloutline` has been explicitly set.
  var hasTschchartseriesscatterenablecalloutline: Bool {return _storage._tschchartseriesscatterenablecalloutline != nil}
  /// Clears the value of `tschchartseriesscatterenablecalloutline`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesscatterenablecalloutline() {_uniqueStorage()._tschchartseriesscatterenablecalloutline = nil}

  var tschchartseriesstackedareaenablecalloutline: Int32 {
    get {return _storage._tschchartseriesstackedareaenablecalloutline ?? 0}
    set {_uniqueStorage()._tschchartseriesstackedareaenablecalloutline = newValue}
  }
  /// Returns true if `tschchartseriesstackedareaenablecalloutline` has been explicitly set.
  var hasTschchartseriesstackedareaenablecalloutline: Bool {return _storage._tschchartseriesstackedareaenablecalloutline != nil}
  /// Clears the value of `tschchartseriesstackedareaenablecalloutline`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesstackedareaenablecalloutline() {_uniqueStorage()._tschchartseriesstackedareaenablecalloutline = nil}

  var tschchartseriesstackedbarenablecalloutline: Int32 {
    get {return _storage._tschchartseriesstackedbarenablecalloutline ?? 0}
    set {_uniqueStorage()._tschchartseriesstackedbarenablecalloutline = newValue}
  }
  /// Returns true if `tschchartseriesstackedbarenablecalloutline` has been explicitly set.
  var hasTschchartseriesstackedbarenablecalloutline: Bool {return _storage._tschchartseriesstackedbarenablecalloutline != nil}
  /// Clears the value of `tschchartseriesstackedbarenablecalloutline`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesstackedbarenablecalloutline() {_uniqueStorage()._tschchartseriesstackedbarenablecalloutline = nil}

  var tschchartseriesdefaulterrorbarcustomnegativedata: TSCH_ChartsNSArrayOfNSNumberDoubleArchive {
    get {return _storage._tschchartseriesdefaulterrorbarcustomnegativedata ?? TSCH_ChartsNSArrayOfNSNumberDoubleArchive()}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarcustomnegativedata = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarcustomnegativedata` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarcustomnegativedata: Bool {return _storage._tschchartseriesdefaulterrorbarcustomnegativedata != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarcustomnegativedata`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarcustomnegativedata() {_uniqueStorage()._tschchartseriesdefaulterrorbarcustomnegativedata = nil}

  var tschchartseriesdefaulterrorbarcustomnegativedatascatterx: TSCH_ChartsNSArrayOfNSNumberDoubleArchive {
    get {return _storage._tschchartseriesdefaulterrorbarcustomnegativedatascatterx ?? TSCH_ChartsNSArrayOfNSNumberDoubleArchive()}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarcustomnegativedatascatterx = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarcustomnegativedatascatterx` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarcustomnegativedatascatterx: Bool {return _storage._tschchartseriesdefaulterrorbarcustomnegativedatascatterx != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarcustomnegativedatascatterx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarcustomnegativedatascatterx() {_uniqueStorage()._tschchartseriesdefaulterrorbarcustomnegativedatascatterx = nil}

  var tschchartseriesdefaulterrorbarcustompositivedata: TSCH_ChartsNSArrayOfNSNumberDoubleArchive {
    get {return _storage._tschchartseriesdefaulterrorbarcustompositivedata ?? TSCH_ChartsNSArrayOfNSNumberDoubleArchive()}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarcustompositivedata = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarcustompositivedata` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarcustompositivedata: Bool {return _storage._tschchartseriesdefaulterrorbarcustompositivedata != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarcustompositivedata`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarcustompositivedata() {_uniqueStorage()._tschchartseriesdefaulterrorbarcustompositivedata = nil}

  var tschchartseriesdefaulterrorbarcustompositivedatascatterx: TSCH_ChartsNSArrayOfNSNumberDoubleArchive {
    get {return _storage._tschchartseriesdefaulterrorbarcustompositivedatascatterx ?? TSCH_ChartsNSArrayOfNSNumberDoubleArchive()}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarcustompositivedatascatterx = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarcustompositivedatascatterx` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarcustompositivedatascatterx: Bool {return _storage._tschchartseriesdefaulterrorbarcustompositivedatascatterx != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarcustompositivedatascatterx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarcustompositivedatascatterx() {_uniqueStorage()._tschchartseriesdefaulterrorbarcustompositivedatascatterx = nil}

  var tschchartseriesdefaulterrorbarfixedvalue: Float {
    get {return _storage._tschchartseriesdefaulterrorbarfixedvalue ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarfixedvalue = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarfixedvalue` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarfixedvalue: Bool {return _storage._tschchartseriesdefaulterrorbarfixedvalue != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarfixedvalue`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarfixedvalue() {_uniqueStorage()._tschchartseriesdefaulterrorbarfixedvalue = nil}

  var tschchartseriesdefaulterrorbarfixedvaluescatterx: Float {
    get {return _storage._tschchartseriesdefaulterrorbarfixedvaluescatterx ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarfixedvaluescatterx = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarfixedvaluescatterx` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarfixedvaluescatterx: Bool {return _storage._tschchartseriesdefaulterrorbarfixedvaluescatterx != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarfixedvaluescatterx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarfixedvaluescatterx() {_uniqueStorage()._tschchartseriesdefaulterrorbarfixedvaluescatterx = nil}

  var tschchartseriesdefaulterrorbarpercentvalue: Float {
    get {return _storage._tschchartseriesdefaulterrorbarpercentvalue ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarpercentvalue = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarpercentvalue` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarpercentvalue: Bool {return _storage._tschchartseriesdefaulterrorbarpercentvalue != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarpercentvalue`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarpercentvalue() {_uniqueStorage()._tschchartseriesdefaulterrorbarpercentvalue = nil}

  var tschchartseriesdefaulterrorbarpercentvaluescatterx: Float {
    get {return _storage._tschchartseriesdefaulterrorbarpercentvaluescatterx ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarpercentvaluescatterx = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarpercentvaluescatterx` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarpercentvaluescatterx: Bool {return _storage._tschchartseriesdefaulterrorbarpercentvaluescatterx != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarpercentvaluescatterx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarpercentvaluescatterx() {_uniqueStorage()._tschchartseriesdefaulterrorbarpercentvaluescatterx = nil}

  var tschchartseriesdefaulterrorbarsetting: Int32 {
    get {return _storage._tschchartseriesdefaulterrorbarsetting ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarsetting = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarsetting` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarsetting: Bool {return _storage._tschchartseriesdefaulterrorbarsetting != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarsetting`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarsetting() {_uniqueStorage()._tschchartseriesdefaulterrorbarsetting = nil}

  var tschchartseriesdefaulterrorbarsettingscatterx: Int32 {
    get {return _storage._tschchartseriesdefaulterrorbarsettingscatterx ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarsettingscatterx = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarsettingscatterx` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarsettingscatterx: Bool {return _storage._tschchartseriesdefaulterrorbarsettingscatterx != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarsettingscatterx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarsettingscatterx() {_uniqueStorage()._tschchartseriesdefaulterrorbarsettingscatterx = nil}

  var tschchartseriesdefaulterrorbarstddevvalue: Float {
    get {return _storage._tschchartseriesdefaulterrorbarstddevvalue ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarstddevvalue = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarstddevvalue` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarstddevvalue: Bool {return _storage._tschchartseriesdefaulterrorbarstddevvalue != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarstddevvalue`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarstddevvalue() {_uniqueStorage()._tschchartseriesdefaulterrorbarstddevvalue = nil}

  var tschchartseriesdefaulterrorbarstddevvaluescatterx: Float {
    get {return _storage._tschchartseriesdefaulterrorbarstddevvaluescatterx ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarstddevvaluescatterx = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarstddevvaluescatterx` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarstddevvaluescatterx: Bool {return _storage._tschchartseriesdefaulterrorbarstddevvaluescatterx != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarstddevvaluescatterx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarstddevvaluescatterx() {_uniqueStorage()._tschchartseriesdefaulterrorbarstddevvaluescatterx = nil}

  var tschchartseriesdefaulterrorbartype: Int32 {
    get {return _storage._tschchartseriesdefaulterrorbartype ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbartype = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbartype` has been explicitly set.
  var hasTschchartseriesdefaulterrorbartype: Bool {return _storage._tschchartseriesdefaulterrorbartype != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbartype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbartype() {_uniqueStorage()._tschchartseriesdefaulterrorbartype = nil}

  var tschchartseriesdefaulterrorbartypescatterx: Int32 {
    get {return _storage._tschchartseriesdefaulterrorbartypescatterx ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbartypescatterx = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbartypescatterx` has been explicitly set.
  var hasTschchartseriesdefaulterrorbartypescatterx: Bool {return _storage._tschchartseriesdefaulterrorbartypescatterx != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbartypescatterx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbartypescatterx() {_uniqueStorage()._tschchartseriesdefaulterrorbartypescatterx = nil}

  var tschchartseriespielabelexplosion: Float {
    get {return _storage._tschchartseriespielabelexplosion ?? 0}
    set {_uniqueStorage()._tschchartseriespielabelexplosion = newValue}
  }
  /// Returns true if `tschchartseriespielabelexplosion` has been explicitly set.
  var hasTschchartseriespielabelexplosion: Bool {return _storage._tschchartseriespielabelexplosion != nil}
  /// Clears the value of `tschchartseriespielabelexplosion`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriespielabelexplosion() {_uniqueStorage()._tschchartseriespielabelexplosion = nil}

  var tschchartseriesbubblelinetype: Int32 {
    get {return _storage._tschchartseriesbubblelinetype ?? 0}
    set {_uniqueStorage()._tschchartseriesbubblelinetype = newValue}
  }
  /// Returns true if `tschchartseriesbubblelinetype` has been explicitly set.
  var hasTschchartseriesbubblelinetype: Bool {return _storage._tschchartseriesbubblelinetype != nil}
  /// Clears the value of `tschchartseriesbubblelinetype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbubblelinetype() {_uniqueStorage()._tschchartseriesbubblelinetype = nil}

  var tschchartserieslinelinetype: Int32 {
    get {return _storage._tschchartserieslinelinetype ?? 0}
    set {_uniqueStorage()._tschchartserieslinelinetype = newValue}
  }
  /// Returns true if `tschchartserieslinelinetype` has been explicitly set.
  var hasTschchartserieslinelinetype: Bool {return _storage._tschchartserieslinelinetype != nil}
  /// Clears the value of `tschchartserieslinelinetype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieslinelinetype() {_uniqueStorage()._tschchartserieslinelinetype = nil}

  var tschchartseriesmixedlinelinetype: Int32 {
    get {return _storage._tschchartseriesmixedlinelinetype ?? 0}
    set {_uniqueStorage()._tschchartseriesmixedlinelinetype = newValue}
  }
  /// Returns true if `tschchartseriesmixedlinelinetype` has been explicitly set.
  var hasTschchartseriesmixedlinelinetype: Bool {return _storage._tschchartseriesmixedlinelinetype != nil}
  /// Clears the value of `tschchartseriesmixedlinelinetype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedlinelinetype() {_uniqueStorage()._tschchartseriesmixedlinelinetype = nil}

  var tschchartseriesscatterlinetype: Int32 {
    get {return _storage._tschchartseriesscatterlinetype ?? 0}
    set {_uniqueStorage()._tschchartseriesscatterlinetype = newValue}
  }
  /// Returns true if `tschchartseriesscatterlinetype` has been explicitly set.
  var hasTschchartseriesscatterlinetype: Bool {return _storage._tschchartseriesscatterlinetype != nil}
  /// Clears the value of `tschchartseriesscatterlinetype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesscatterlinetype() {_uniqueStorage()._tschchartseriesscatterlinetype = nil}

  var tschchartseriesdefaultnumberformat: TSK_FormatStructArchive {
    get {return _storage._tschchartseriesdefaultnumberformat ?? TSK_FormatStructArchive()}
    set {_uniqueStorage()._tschchartseriesdefaultnumberformat = newValue}
  }
  /// Returns true if `tschchartseriesdefaultnumberformat` has been explicitly set.
  var hasTschchartseriesdefaultnumberformat: Bool {return _storage._tschchartseriesdefaultnumberformat != nil}
  /// Clears the value of `tschchartseriesdefaultnumberformat`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultnumberformat() {_uniqueStorage()._tschchartseriesdefaultnumberformat = nil}

  var tschchartseriespienumberformat: TSK_FormatStructArchive {
    get {return _storage._tschchartseriespienumberformat ?? TSK_FormatStructArchive()}
    set {_uniqueStorage()._tschchartseriespienumberformat = newValue}
  }
  /// Returns true if `tschchartseriespienumberformat` has been explicitly set.
  var hasTschchartseriespienumberformat: Bool {return _storage._tschchartseriespienumberformat != nil}
  /// Clears the value of `tschchartseriespienumberformat`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriespienumberformat() {_uniqueStorage()._tschchartseriespienumberformat = nil}

  var tschchartseriesdefaultnumberformattype: Int32 {
    get {return _storage._tschchartseriesdefaultnumberformattype ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaultnumberformattype = newValue}
  }
  /// Returns true if `tschchartseriesdefaultnumberformattype` has been explicitly set.
  var hasTschchartseriesdefaultnumberformattype: Bool {return _storage._tschchartseriesdefaultnumberformattype != nil}
  /// Clears the value of `tschchartseriesdefaultnumberformattype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultnumberformattype() {_uniqueStorage()._tschchartseriesdefaultnumberformattype = nil}

  var tschchartseriespienumberformattype: Int32 {
    get {return _storage._tschchartseriespienumberformattype ?? 0}
    set {_uniqueStorage()._tschchartseriespienumberformattype = newValue}
  }
  /// Returns true if `tschchartseriespienumberformattype` has been explicitly set.
  var hasTschchartseriespienumberformattype: Bool {return _storage._tschchartseriespienumberformattype != nil}
  /// Clears the value of `tschchartseriespienumberformattype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriespienumberformattype() {_uniqueStorage()._tschchartseriespienumberformattype = nil}

  var tschchartseriesstackedpercentnumberformat: TSK_FormatStructArchive {
    get {return _storage._tschchartseriesstackedpercentnumberformat ?? TSK_FormatStructArchive()}
    set {_uniqueStorage()._tschchartseriesstackedpercentnumberformat = newValue}
  }
  /// Returns true if `tschchartseriesstackedpercentnumberformat` has been explicitly set.
  var hasTschchartseriesstackedpercentnumberformat: Bool {return _storage._tschchartseriesstackedpercentnumberformat != nil}
  /// Clears the value of `tschchartseriesstackedpercentnumberformat`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesstackedpercentnumberformat() {_uniqueStorage()._tschchartseriesstackedpercentnumberformat = nil}

  var tschchartseriesdefaultseriestype: Int32 {
    get {return _storage._tschchartseriesdefaultseriestype ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaultseriestype = newValue}
  }
  /// Returns true if `tschchartseriesdefaultseriestype` has been explicitly set.
  var hasTschchartseriesdefaultseriestype: Bool {return _storage._tschchartseriesdefaultseriestype != nil}
  /// Clears the value of `tschchartseriesdefaultseriestype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultseriestype() {_uniqueStorage()._tschchartseriesdefaultseriestype = nil}

  var tschchartseriesdefaultshowerrorbar: Bool {
    get {return _storage._tschchartseriesdefaultshowerrorbar ?? false}
    set {_uniqueStorage()._tschchartseriesdefaultshowerrorbar = newValue}
  }
  /// Returns true if `tschchartseriesdefaultshowerrorbar` has been explicitly set.
  var hasTschchartseriesdefaultshowerrorbar: Bool {return _storage._tschchartseriesdefaultshowerrorbar != nil}
  /// Clears the value of `tschchartseriesdefaultshowerrorbar`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultshowerrorbar() {_uniqueStorage()._tschchartseriesdefaultshowerrorbar = nil}

  var tschchartseriesdefaultshowerrorbarscatterx: Bool {
    get {return _storage._tschchartseriesdefaultshowerrorbarscatterx ?? false}
    set {_uniqueStorage()._tschchartseriesdefaultshowerrorbarscatterx = newValue}
  }
  /// Returns true if `tschchartseriesdefaultshowerrorbarscatterx` has been explicitly set.
  var hasTschchartseriesdefaultshowerrorbarscatterx: Bool {return _storage._tschchartseriesdefaultshowerrorbarscatterx != nil}
  /// Clears the value of `tschchartseriesdefaultshowerrorbarscatterx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultshowerrorbarscatterx() {_uniqueStorage()._tschchartseriesdefaultshowerrorbarscatterx = nil}

  var tschchartseriesbubbleshowlabelsinfront: Bool {
    get {return _storage._tschchartseriesbubbleshowlabelsinfront ?? false}
    set {_uniqueStorage()._tschchartseriesbubbleshowlabelsinfront = newValue}
  }
  /// Returns true if `tschchartseriesbubbleshowlabelsinfront` has been explicitly set.
  var hasTschchartseriesbubbleshowlabelsinfront: Bool {return _storage._tschchartseriesbubbleshowlabelsinfront != nil}
  /// Clears the value of `tschchartseriesbubbleshowlabelsinfront`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbubbleshowlabelsinfront() {_uniqueStorage()._tschchartseriesbubbleshowlabelsinfront = nil}

  var tschchartseriesdefaultshowlabelsinfront: Bool {
    get {return _storage._tschchartseriesdefaultshowlabelsinfront ?? false}
    set {_uniqueStorage()._tschchartseriesdefaultshowlabelsinfront = newValue}
  }
  /// Returns true if `tschchartseriesdefaultshowlabelsinfront` has been explicitly set.
  var hasTschchartseriesdefaultshowlabelsinfront: Bool {return _storage._tschchartseriesdefaultshowlabelsinfront != nil}
  /// Clears the value of `tschchartseriesdefaultshowlabelsinfront`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultshowlabelsinfront() {_uniqueStorage()._tschchartseriesdefaultshowlabelsinfront = nil}

  var tschchartseriesscattershowline: Bool {
    get {return _storage._tschchartseriesscattershowline ?? false}
    set {_uniqueStorage()._tschchartseriesscattershowline = newValue}
  }
  /// Returns true if `tschchartseriesscattershowline` has been explicitly set.
  var hasTschchartseriesscattershowline: Bool {return _storage._tschchartseriesscattershowline != nil}
  /// Clears the value of `tschchartseriesscattershowline`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesscattershowline() {_uniqueStorage()._tschchartseriesscattershowline = nil}

  var tschchartseriesbubbleshownegativedata: Bool {
    get {return _storage._tschchartseriesbubbleshownegativedata ?? false}
    set {_uniqueStorage()._tschchartseriesbubbleshownegativedata = newValue}
  }
  /// Returns true if `tschchartseriesbubbleshownegativedata` has been explicitly set.
  var hasTschchartseriesbubbleshownegativedata: Bool {return _storage._tschchartseriesbubbleshownegativedata != nil}
  /// Clears the value of `tschchartseriesbubbleshownegativedata`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbubbleshownegativedata() {_uniqueStorage()._tschchartseriesbubbleshownegativedata = nil}

  var tschchartseriesbubbleshowserieslabels: Bool {
    get {return _storage._tschchartseriesbubbleshowserieslabels ?? false}
    set {_uniqueStorage()._tschchartseriesbubbleshowserieslabels = newValue}
  }
  /// Returns true if `tschchartseriesbubbleshowserieslabels` has been explicitly set.
  var hasTschchartseriesbubbleshowserieslabels: Bool {return _storage._tschchartseriesbubbleshowserieslabels != nil}
  /// Clears the value of `tschchartseriesbubbleshowserieslabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbubbleshowserieslabels() {_uniqueStorage()._tschchartseriesbubbleshowserieslabels = nil}

  var tschchartseriespieshowserieslabels: Bool {
    get {return _storage._tschchartseriespieshowserieslabels ?? false}
    set {_uniqueStorage()._tschchartseriespieshowserieslabels = newValue}
  }
  /// Returns true if `tschchartseriespieshowserieslabels` has been explicitly set.
  var hasTschchartseriespieshowserieslabels: Bool {return _storage._tschchartseriespieshowserieslabels != nil}
  /// Clears the value of `tschchartseriespieshowserieslabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriespieshowserieslabels() {_uniqueStorage()._tschchartseriespieshowserieslabels = nil}

  var tschchartseriesscattershowserieslabels: Bool {
    get {return _storage._tschchartseriesscattershowserieslabels ?? false}
    set {_uniqueStorage()._tschchartseriesscattershowserieslabels = newValue}
  }
  /// Returns true if `tschchartseriesscattershowserieslabels` has been explicitly set.
  var hasTschchartseriesscattershowserieslabels: Bool {return _storage._tschchartseriesscattershowserieslabels != nil}
  /// Clears the value of `tschchartseriesscattershowserieslabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesscattershowserieslabels() {_uniqueStorage()._tschchartseriesscattershowserieslabels = nil}

  var tschchartseriesareashowsymbol: Bool {
    get {return _storage._tschchartseriesareashowsymbol ?? false}
    set {_uniqueStorage()._tschchartseriesareashowsymbol = newValue}
  }
  /// Returns true if `tschchartseriesareashowsymbol` has been explicitly set.
  var hasTschchartseriesareashowsymbol: Bool {return _storage._tschchartseriesareashowsymbol != nil}
  /// Clears the value of `tschchartseriesareashowsymbol`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesareashowsymbol() {_uniqueStorage()._tschchartseriesareashowsymbol = nil}

  var tschchartserieslineshowsymbol: Bool {
    get {return _storage._tschchartserieslineshowsymbol ?? false}
    set {_uniqueStorage()._tschchartserieslineshowsymbol = newValue}
  }
  /// Returns true if `tschchartserieslineshowsymbol` has been explicitly set.
  var hasTschchartserieslineshowsymbol: Bool {return _storage._tschchartserieslineshowsymbol != nil}
  /// Clears the value of `tschchartserieslineshowsymbol`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieslineshowsymbol() {_uniqueStorage()._tschchartserieslineshowsymbol = nil}

  var tschchartseriesmixedareashowsymbol: Bool {
    get {return _storage._tschchartseriesmixedareashowsymbol ?? false}
    set {_uniqueStorage()._tschchartseriesmixedareashowsymbol = newValue}
  }
  /// Returns true if `tschchartseriesmixedareashowsymbol` has been explicitly set.
  var hasTschchartseriesmixedareashowsymbol: Bool {return _storage._tschchartseriesmixedareashowsymbol != nil}
  /// Clears the value of `tschchartseriesmixedareashowsymbol`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedareashowsymbol() {_uniqueStorage()._tschchartseriesmixedareashowsymbol = nil}

  var tschchartseriesmixedlineshowsymbol: Bool {
    get {return _storage._tschchartseriesmixedlineshowsymbol ?? false}
    set {_uniqueStorage()._tschchartseriesmixedlineshowsymbol = newValue}
  }
  /// Returns true if `tschchartseriesmixedlineshowsymbol` has been explicitly set.
  var hasTschchartseriesmixedlineshowsymbol: Bool {return _storage._tschchartseriesmixedlineshowsymbol != nil}
  /// Clears the value of `tschchartseriesmixedlineshowsymbol`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedlineshowsymbol() {_uniqueStorage()._tschchartseriesmixedlineshowsymbol = nil}

  var tschchartseriesscattershowsymbol: Bool {
    get {return _storage._tschchartseriesscattershowsymbol ?? false}
    set {_uniqueStorage()._tschchartseriesscattershowsymbol = newValue}
  }
  /// Returns true if `tschchartseriesscattershowsymbol` has been explicitly set.
  var hasTschchartseriesscattershowsymbol: Bool {return _storage._tschchartseriesscattershowsymbol != nil}
  /// Clears the value of `tschchartseriesscattershowsymbol`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesscattershowsymbol() {_uniqueStorage()._tschchartseriesscattershowsymbol = nil}

  var tschchartseriesdefaultshowtrendline: Bool {
    get {return _storage._tschchartseriesdefaultshowtrendline ?? false}
    set {_uniqueStorage()._tschchartseriesdefaultshowtrendline = newValue}
  }
  /// Returns true if `tschchartseriesdefaultshowtrendline` has been explicitly set.
  var hasTschchartseriesdefaultshowtrendline: Bool {return _storage._tschchartseriesdefaultshowtrendline != nil}
  /// Clears the value of `tschchartseriesdefaultshowtrendline`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultshowtrendline() {_uniqueStorage()._tschchartseriesdefaultshowtrendline = nil}

  var tschchartseriesareashowvaluelabels: Bool {
    get {return _storage._tschchartseriesareashowvaluelabels ?? false}
    set {_uniqueStorage()._tschchartseriesareashowvaluelabels = newValue}
  }
  /// Returns true if `tschchartseriesareashowvaluelabels` has been explicitly set.
  var hasTschchartseriesareashowvaluelabels: Bool {return _storage._tschchartseriesareashowvaluelabels != nil}
  /// Clears the value of `tschchartseriesareashowvaluelabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesareashowvaluelabels() {_uniqueStorage()._tschchartseriesareashowvaluelabels = nil}

  var tschchartseriesbarshowvaluelabels: Bool {
    get {return _storage._tschchartseriesbarshowvaluelabels ?? false}
    set {_uniqueStorage()._tschchartseriesbarshowvaluelabels = newValue}
  }
  /// Returns true if `tschchartseriesbarshowvaluelabels` has been explicitly set.
  var hasTschchartseriesbarshowvaluelabels: Bool {return _storage._tschchartseriesbarshowvaluelabels != nil}
  /// Clears the value of `tschchartseriesbarshowvaluelabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbarshowvaluelabels() {_uniqueStorage()._tschchartseriesbarshowvaluelabels = nil}

  var tschchartseriesbubbleshowvaluelabels: Bool {
    get {return _storage._tschchartseriesbubbleshowvaluelabels ?? false}
    set {_uniqueStorage()._tschchartseriesbubbleshowvaluelabels = newValue}
  }
  /// Returns true if `tschchartseriesbubbleshowvaluelabels` has been explicitly set.
  var hasTschchartseriesbubbleshowvaluelabels: Bool {return _storage._tschchartseriesbubbleshowvaluelabels != nil}
  /// Clears the value of `tschchartseriesbubbleshowvaluelabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbubbleshowvaluelabels() {_uniqueStorage()._tschchartseriesbubbleshowvaluelabels = nil}

  var tschchartseriesdefaultshowvaluelabels: Bool {
    get {return _storage._tschchartseriesdefaultshowvaluelabels ?? false}
    set {_uniqueStorage()._tschchartseriesdefaultshowvaluelabels = newValue}
  }
  /// Returns true if `tschchartseriesdefaultshowvaluelabels` has been explicitly set.
  var hasTschchartseriesdefaultshowvaluelabels: Bool {return _storage._tschchartseriesdefaultshowvaluelabels != nil}
  /// Clears the value of `tschchartseriesdefaultshowvaluelabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultshowvaluelabels() {_uniqueStorage()._tschchartseriesdefaultshowvaluelabels = nil}

  var tschchartserieslineshowvaluelabels: Bool {
    get {return _storage._tschchartserieslineshowvaluelabels ?? false}
    set {_uniqueStorage()._tschchartserieslineshowvaluelabels = newValue}
  }
  /// Returns true if `tschchartserieslineshowvaluelabels` has been explicitly set.
  var hasTschchartserieslineshowvaluelabels: Bool {return _storage._tschchartserieslineshowvaluelabels != nil}
  /// Clears the value of `tschchartserieslineshowvaluelabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieslineshowvaluelabels() {_uniqueStorage()._tschchartserieslineshowvaluelabels = nil}

  var tschchartseriesmixedshowvaluelabels: Bool {
    get {return _storage._tschchartseriesmixedshowvaluelabels ?? false}
    set {_uniqueStorage()._tschchartseriesmixedshowvaluelabels = newValue}
  }
  /// Returns true if `tschchartseriesmixedshowvaluelabels` has been explicitly set.
  var hasTschchartseriesmixedshowvaluelabels: Bool {return _storage._tschchartseriesmixedshowvaluelabels != nil}
  /// Clears the value of `tschchartseriesmixedshowvaluelabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedshowvaluelabels() {_uniqueStorage()._tschchartseriesmixedshowvaluelabels = nil}

  var tschchartseriespieshowvaluelabels: Bool {
    get {return _storage._tschchartseriespieshowvaluelabels ?? false}
    set {_uniqueStorage()._tschchartseriespieshowvaluelabels = newValue}
  }
  /// Returns true if `tschchartseriespieshowvaluelabels` has been explicitly set.
  var hasTschchartseriespieshowvaluelabels: Bool {return _storage._tschchartseriespieshowvaluelabels != nil}
  /// Clears the value of `tschchartseriespieshowvaluelabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriespieshowvaluelabels() {_uniqueStorage()._tschchartseriespieshowvaluelabels = nil}

  var tschchartseriesscattershowvaluelabels: Bool {
    get {return _storage._tschchartseriesscattershowvaluelabels ?? false}
    set {_uniqueStorage()._tschchartseriesscattershowvaluelabels = newValue}
  }
  /// Returns true if `tschchartseriesscattershowvaluelabels` has been explicitly set.
  var hasTschchartseriesscattershowvaluelabels: Bool {return _storage._tschchartseriesscattershowvaluelabels != nil}
  /// Clears the value of `tschchartseriesscattershowvaluelabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesscattershowvaluelabels() {_uniqueStorage()._tschchartseriesscattershowvaluelabels = nil}

  var tschchartseriesbubblesizedimension: Int32 {
    get {return _storage._tschchartseriesbubblesizedimension ?? 0}
    set {_uniqueStorage()._tschchartseriesbubblesizedimension = newValue}
  }
  /// Returns true if `tschchartseriesbubblesizedimension` has been explicitly set.
  var hasTschchartseriesbubblesizedimension: Bool {return _storage._tschchartseriesbubblesizedimension != nil}
  /// Clears the value of `tschchartseriesbubblesizedimension`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbubblesizedimension() {_uniqueStorage()._tschchartseriesbubblesizedimension = nil}

  var tschchartseriesareastacklabels: Bool {
    get {return _storage._tschchartseriesareastacklabels ?? false}
    set {_uniqueStorage()._tschchartseriesareastacklabels = newValue}
  }
  /// Returns true if `tschchartseriesareastacklabels` has been explicitly set.
  var hasTschchartseriesareastacklabels: Bool {return _storage._tschchartseriesareastacklabels != nil}
  /// Clears the value of `tschchartseriesareastacklabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesareastacklabels() {_uniqueStorage()._tschchartseriesareastacklabels = nil}

  var tschchartseriesbarstacklabels: Bool {
    get {return _storage._tschchartseriesbarstacklabels ?? false}
    set {_uniqueStorage()._tschchartseriesbarstacklabels = newValue}
  }
  /// Returns true if `tschchartseriesbarstacklabels` has been explicitly set.
  var hasTschchartseriesbarstacklabels: Bool {return _storage._tschchartseriesbarstacklabels != nil}
  /// Clears the value of `tschchartseriesbarstacklabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbarstacklabels() {_uniqueStorage()._tschchartseriesbarstacklabels = nil}

  var tschchartseriesbubblestacklabels: Bool {
    get {return _storage._tschchartseriesbubblestacklabels ?? false}
    set {_uniqueStorage()._tschchartseriesbubblestacklabels = newValue}
  }
  /// Returns true if `tschchartseriesbubblestacklabels` has been explicitly set.
  var hasTschchartseriesbubblestacklabels: Bool {return _storage._tschchartseriesbubblestacklabels != nil}
  /// Clears the value of `tschchartseriesbubblestacklabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbubblestacklabels() {_uniqueStorage()._tschchartseriesbubblestacklabels = nil}

  var tschchartseriesdefaultstacklabels: Bool {
    get {return _storage._tschchartseriesdefaultstacklabels ?? false}
    set {_uniqueStorage()._tschchartseriesdefaultstacklabels = newValue}
  }
  /// Returns true if `tschchartseriesdefaultstacklabels` has been explicitly set.
  var hasTschchartseriesdefaultstacklabels: Bool {return _storage._tschchartseriesdefaultstacklabels != nil}
  /// Clears the value of `tschchartseriesdefaultstacklabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultstacklabels() {_uniqueStorage()._tschchartseriesdefaultstacklabels = nil}

  var tschchartserieslinestacklabels: Bool {
    get {return _storage._tschchartserieslinestacklabels ?? false}
    set {_uniqueStorage()._tschchartserieslinestacklabels = newValue}
  }
  /// Returns true if `tschchartserieslinestacklabels` has been explicitly set.
  var hasTschchartserieslinestacklabels: Bool {return _storage._tschchartserieslinestacklabels != nil}
  /// Clears the value of `tschchartserieslinestacklabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieslinestacklabels() {_uniqueStorage()._tschchartserieslinestacklabels = nil}

  var tschchartseriespiestacklabels: Bool {
    get {return _storage._tschchartseriespiestacklabels ?? false}
    set {_uniqueStorage()._tschchartseriespiestacklabels = newValue}
  }
  /// Returns true if `tschchartseriespiestacklabels` has been explicitly set.
  var hasTschchartseriespiestacklabels: Bool {return _storage._tschchartseriespiestacklabels != nil}
  /// Clears the value of `tschchartseriespiestacklabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriespiestacklabels() {_uniqueStorage()._tschchartseriespiestacklabels = nil}

  var tschchartseriesscatterstacklabels: Bool {
    get {return _storage._tschchartseriesscatterstacklabels ?? false}
    set {_uniqueStorage()._tschchartseriesscatterstacklabels = newValue}
  }
  /// Returns true if `tschchartseriesscatterstacklabels` has been explicitly set.
  var hasTschchartseriesscatterstacklabels: Bool {return _storage._tschchartseriesscatterstacklabels != nil}
  /// Clears the value of `tschchartseriesscatterstacklabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesscatterstacklabels() {_uniqueStorage()._tschchartseriesscatterstacklabels = nil}

  var tschchartseriesstackedareastacklabels: Bool {
    get {return _storage._tschchartseriesstackedareastacklabels ?? false}
    set {_uniqueStorage()._tschchartseriesstackedareastacklabels = newValue}
  }
  /// Returns true if `tschchartseriesstackedareastacklabels` has been explicitly set.
  var hasTschchartseriesstackedareastacklabels: Bool {return _storage._tschchartseriesstackedareastacklabels != nil}
  /// Clears the value of `tschchartseriesstackedareastacklabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesstackedareastacklabels() {_uniqueStorage()._tschchartseriesstackedareastacklabels = nil}

  var tschchartseriesstackedbarstacklabels: Bool {
    get {return _storage._tschchartseriesstackedbarstacklabels ?? false}
    set {_uniqueStorage()._tschchartseriesstackedbarstacklabels = newValue}
  }
  /// Returns true if `tschchartseriesstackedbarstacklabels` has been explicitly set.
  var hasTschchartseriesstackedbarstacklabels: Bool {return _storage._tschchartseriesstackedbarstacklabels != nil}
  /// Clears the value of `tschchartseriesstackedbarstacklabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesstackedbarstacklabels() {_uniqueStorage()._tschchartseriesstackedbarstacklabels = nil}

  var tschchartseriesareasymboltype: Int32 {
    get {return _storage._tschchartseriesareasymboltype ?? 0}
    set {_uniqueStorage()._tschchartseriesareasymboltype = newValue}
  }
  /// Returns true if `tschchartseriesareasymboltype` has been explicitly set.
  var hasTschchartseriesareasymboltype: Bool {return _storage._tschchartseriesareasymboltype != nil}
  /// Clears the value of `tschchartseriesareasymboltype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesareasymboltype() {_uniqueStorage()._tschchartseriesareasymboltype = nil}

  var tschchartserieslinesymboltype: Int32 {
    get {return _storage._tschchartserieslinesymboltype ?? 0}
    set {_uniqueStorage()._tschchartserieslinesymboltype = newValue}
  }
  /// Returns true if `tschchartserieslinesymboltype` has been explicitly set.
  var hasTschchartserieslinesymboltype: Bool {return _storage._tschchartserieslinesymboltype != nil}
  /// Clears the value of `tschchartserieslinesymboltype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieslinesymboltype() {_uniqueStorage()._tschchartserieslinesymboltype = nil}

  var tschchartseriesmixedareasymboltype: Int32 {
    get {return _storage._tschchartseriesmixedareasymboltype ?? 0}
    set {_uniqueStorage()._tschchartseriesmixedareasymboltype = newValue}
  }
  /// Returns true if `tschchartseriesmixedareasymboltype` has been explicitly set.
  var hasTschchartseriesmixedareasymboltype: Bool {return _storage._tschchartseriesmixedareasymboltype != nil}
  /// Clears the value of `tschchartseriesmixedareasymboltype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedareasymboltype() {_uniqueStorage()._tschchartseriesmixedareasymboltype = nil}

  var tschchartseriesmixedlinesymboltype: Int32 {
    get {return _storage._tschchartseriesmixedlinesymboltype ?? 0}
    set {_uniqueStorage()._tschchartseriesmixedlinesymboltype = newValue}
  }
  /// Returns true if `tschchartseriesmixedlinesymboltype` has been explicitly set.
  var hasTschchartseriesmixedlinesymboltype: Bool {return _storage._tschchartseriesmixedlinesymboltype != nil}
  /// Clears the value of `tschchartseriesmixedlinesymboltype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedlinesymboltype() {_uniqueStorage()._tschchartseriesmixedlinesymboltype = nil}

  var tschchartseriesscattersymboltype: Int32 {
    get {return _storage._tschchartseriesscattersymboltype ?? 0}
    set {_uniqueStorage()._tschchartseriesscattersymboltype = newValue}
  }
  /// Returns true if `tschchartseriesscattersymboltype` has been explicitly set.
  var hasTschchartseriesscattersymboltype: Bool {return _storage._tschchartseriesscattersymboltype != nil}
  /// Clears the value of `tschchartseriesscattersymboltype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesscattersymboltype() {_uniqueStorage()._tschchartseriesscattersymboltype = nil}

  var tschchartseriesdefaulttrendlineequationoffsetx: Float {
    get {return _storage._tschchartseriesdefaulttrendlineequationoffsetx ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlineequationoffsetx = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlineequationoffsetx` has been explicitly set.
  var hasTschchartseriesdefaulttrendlineequationoffsetx: Bool {return _storage._tschchartseriesdefaulttrendlineequationoffsetx != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlineequationoffsetx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlineequationoffsetx() {_uniqueStorage()._tschchartseriesdefaulttrendlineequationoffsetx = nil}

  var tschchartseriesdefaulttrendlineequationoffsety: Float {
    get {return _storage._tschchartseriesdefaulttrendlineequationoffsety ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlineequationoffsety = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlineequationoffsety` has been explicitly set.
  var hasTschchartseriesdefaulttrendlineequationoffsety: Bool {return _storage._tschchartseriesdefaulttrendlineequationoffsety != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlineequationoffsety`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlineequationoffsety() {_uniqueStorage()._tschchartseriesdefaulttrendlineequationoffsety = nil}

  var tschchartseriesdefaulttrendlinelabelstring: String {
    get {return _storage._tschchartseriesdefaulttrendlinelabelstring ?? String()}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlinelabelstring = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlinelabelstring` has been explicitly set.
  var hasTschchartseriesdefaulttrendlinelabelstring: Bool {return _storage._tschchartseriesdefaulttrendlinelabelstring != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlinelabelstring`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlinelabelstring() {_uniqueStorage()._tschchartseriesdefaulttrendlinelabelstring = nil}

  var tschchartseriesdefaulttrendlineorder: Int32 {
    get {return _storage._tschchartseriesdefaulttrendlineorder ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlineorder = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlineorder` has been explicitly set.
  var hasTschchartseriesdefaulttrendlineorder: Bool {return _storage._tschchartseriesdefaulttrendlineorder != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlineorder`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlineorder() {_uniqueStorage()._tschchartseriesdefaulttrendlineorder = nil}

  var tschchartseriesdefaulttrendlineperiod: Int32 {
    get {return _storage._tschchartseriesdefaulttrendlineperiod ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlineperiod = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlineperiod` has been explicitly set.
  var hasTschchartseriesdefaulttrendlineperiod: Bool {return _storage._tschchartseriesdefaulttrendlineperiod != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlineperiod`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlineperiod() {_uniqueStorage()._tschchartseriesdefaulttrendlineperiod = nil}

  var tschchartseriesdefaulttrendlinersquaredoffsetx: Float {
    get {return _storage._tschchartseriesdefaulttrendlinersquaredoffsetx ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlinersquaredoffsetx = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlinersquaredoffsetx` has been explicitly set.
  var hasTschchartseriesdefaulttrendlinersquaredoffsetx: Bool {return _storage._tschchartseriesdefaulttrendlinersquaredoffsetx != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlinersquaredoffsetx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlinersquaredoffsetx() {_uniqueStorage()._tschchartseriesdefaulttrendlinersquaredoffsetx = nil}

  var tschchartseriesdefaulttrendlinersquaredoffsety: Float {
    get {return _storage._tschchartseriesdefaulttrendlinersquaredoffsety ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlinersquaredoffsety = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlinersquaredoffsety` has been explicitly set.
  var hasTschchartseriesdefaulttrendlinersquaredoffsety: Bool {return _storage._tschchartseriesdefaulttrendlinersquaredoffsety != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlinersquaredoffsety`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlinersquaredoffsety() {_uniqueStorage()._tschchartseriesdefaulttrendlinersquaredoffsety = nil}

  var tschchartseriesdefaulttrendlineshowequation: Bool {
    get {return _storage._tschchartseriesdefaulttrendlineshowequation ?? false}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlineshowequation = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlineshowequation` has been explicitly set.
  var hasTschchartseriesdefaulttrendlineshowequation: Bool {return _storage._tschchartseriesdefaulttrendlineshowequation != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlineshowequation`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlineshowequation() {_uniqueStorage()._tschchartseriesdefaulttrendlineshowequation = nil}

  var tschchartseriesdefaulttrendlineshowlabel: Bool {
    get {return _storage._tschchartseriesdefaulttrendlineshowlabel ?? false}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlineshowlabel = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlineshowlabel` has been explicitly set.
  var hasTschchartseriesdefaulttrendlineshowlabel: Bool {return _storage._tschchartseriesdefaulttrendlineshowlabel != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlineshowlabel`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlineshowlabel() {_uniqueStorage()._tschchartseriesdefaulttrendlineshowlabel = nil}

  var tschchartseriesdefaulttrendlineshowr2Value: Bool {
    get {return _storage._tschchartseriesdefaulttrendlineshowr2Value ?? false}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlineshowr2Value = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlineshowr2Value` has been explicitly set.
  var hasTschchartseriesdefaulttrendlineshowr2Value: Bool {return _storage._tschchartseriesdefaulttrendlineshowr2Value != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlineshowr2Value`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlineshowr2Value() {_uniqueStorage()._tschchartseriesdefaulttrendlineshowr2Value = nil}

  var tschchartseriesdefaulttrendlinetype: Int32 {
    get {return _storage._tschchartseriesdefaulttrendlinetype ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlinetype = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlinetype` has been explicitly set.
  var hasTschchartseriesdefaulttrendlinetype: Bool {return _storage._tschchartseriesdefaulttrendlinetype != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlinetype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlinetype() {_uniqueStorage()._tschchartseriesdefaulttrendlinetype = nil}

  var tschchartseriesbubblevaluelabelsaxis: Int32 {
    get {return _storage._tschchartseriesbubblevaluelabelsaxis ?? 0}
    set {_uniqueStorage()._tschchartseriesbubblevaluelabelsaxis = newValue}
  }
  /// Returns true if `tschchartseriesbubblevaluelabelsaxis` has been explicitly set.
  var hasTschchartseriesbubblevaluelabelsaxis: Bool {return _storage._tschchartseriesbubblevaluelabelsaxis != nil}
  /// Clears the value of `tschchartseriesbubblevaluelabelsaxis`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbubblevaluelabelsaxis() {_uniqueStorage()._tschchartseriesbubblevaluelabelsaxis = nil}

  var tschchartseriesscattervaluelabelsaxis: Int32 {
    get {return _storage._tschchartseriesscattervaluelabelsaxis ?? 0}
    set {_uniqueStorage()._tschchartseriesscattervaluelabelsaxis = newValue}
  }
  /// Returns true if `tschchartseriesscattervaluelabelsaxis` has been explicitly set.
  var hasTschchartseriesscattervaluelabelsaxis: Bool {return _storage._tschchartseriesscattervaluelabelsaxis != nil}
  /// Clears the value of `tschchartseriesscattervaluelabelsaxis`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesscattervaluelabelsaxis() {_uniqueStorage()._tschchartseriesscattervaluelabelsaxis = nil}

  var tschchartseriespiewedgeexplosion: Float {
    get {return _storage._tschchartseriespiewedgeexplosion ?? 0}
    set {_uniqueStorage()._tschchartseriespiewedgeexplosion = newValue}
  }
  /// Returns true if `tschchartseriespiewedgeexplosion` has been explicitly set.
  var hasTschchartseriespiewedgeexplosion: Bool {return _storage._tschchartseriespiewedgeexplosion != nil}
  /// Clears the value of `tschchartseriespiewedgeexplosion`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriespiewedgeexplosion() {_uniqueStorage()._tschchartseriespiewedgeexplosion = nil}

  var tschchartseriesdefaultyaxisordinal: Int32 {
    get {return _storage._tschchartseriesdefaultyaxisordinal ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaultyaxisordinal = newValue}
  }
  /// Returns true if `tschchartseriesdefaultyaxisordinal` has been explicitly set.
  var hasTschchartseriesdefaultyaxisordinal: Bool {return _storage._tschchartseriesdefaultyaxisordinal != nil}
  /// Clears the value of `tschchartseriesdefaultyaxisordinal`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultyaxisordinal() {_uniqueStorage()._tschchartseriesdefaultyaxisordinal = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

struct TSCH_Generated_ReferenceLineStyleArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var tschreferencelinedefaultlabelparagraphstyleindex: Int32 {
    get {return _tschreferencelinedefaultlabelparagraphstyleindex ?? 0}
    set {_tschreferencelinedefaultlabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschreferencelinedefaultlabelparagraphstyleindex` has been explicitly set.
  var hasTschreferencelinedefaultlabelparagraphstyleindex: Bool {return self._tschreferencelinedefaultlabelparagraphstyleindex != nil}
  /// Clears the value of `tschreferencelinedefaultlabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschreferencelinedefaultlabelparagraphstyleindex() {self._tschreferencelinedefaultlabelparagraphstyleindex = nil}

  var tschreferencelinedefaultshadow: TSD_ShadowArchive {
    get {return _tschreferencelinedefaultshadow ?? TSD_ShadowArchive()}
    set {_tschreferencelinedefaultshadow = newValue}
  }
  /// Returns true if `tschreferencelinedefaultshadow` has been explicitly set.
  var hasTschreferencelinedefaultshadow: Bool {return self._tschreferencelinedefaultshadow != nil}
  /// Clears the value of `tschreferencelinedefaultshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschreferencelinedefaultshadow() {self._tschreferencelinedefaultshadow = nil}

  var tschreferencelinedefaultstroke: TSD_StrokeArchive {
    get {return _tschreferencelinedefaultstroke ?? TSD_StrokeArchive()}
    set {_tschreferencelinedefaultstroke = newValue}
  }
  /// Returns true if `tschreferencelinedefaultstroke` has been explicitly set.
  var hasTschreferencelinedefaultstroke: Bool {return self._tschreferencelinedefaultstroke != nil}
  /// Clears the value of `tschreferencelinedefaultstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschreferencelinedefaultstroke() {self._tschreferencelinedefaultstroke = nil}

  var tschreferencelinedefaultvaluelabelparagraphstyleindex: Int32 {
    get {return _tschreferencelinedefaultvaluelabelparagraphstyleindex ?? 0}
    set {_tschreferencelinedefaultvaluelabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschreferencelinedefaultvaluelabelparagraphstyleindex` has been explicitly set.
  var hasTschreferencelinedefaultvaluelabelparagraphstyleindex: Bool {return self._tschreferencelinedefaultvaluelabelparagraphstyleindex != nil}
  /// Clears the value of `tschreferencelinedefaultvaluelabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschreferencelinedefaultvaluelabelparagraphstyleindex() {self._tschreferencelinedefaultvaluelabelparagraphstyleindex = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _tschreferencelinedefaultlabelparagraphstyleindex: Int32? = nil
  fileprivate var _tschreferencelinedefaultshadow: TSD_ShadowArchive? = nil
  fileprivate var _tschreferencelinedefaultstroke: TSD_StrokeArchive? = nil
  fileprivate var _tschreferencelinedefaultvaluelabelparagraphstyleindex: Int32? = nil
}

struct TSCH_Generated_ReferenceLineNonStyleArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var tschreferencelinedefaultcustomvalue: TSCH_ChartsNSNumberDoubleArchive {
    get {return _tschreferencelinedefaultcustomvalue ?? TSCH_ChartsNSNumberDoubleArchive()}
    set {_tschreferencelinedefaultcustomvalue = newValue}
  }
  /// Returns true if `tschreferencelinedefaultcustomvalue` has been explicitly set.
  var hasTschreferencelinedefaultcustomvalue: Bool {return self._tschreferencelinedefaultcustomvalue != nil}
  /// Clears the value of `tschreferencelinedefaultcustomvalue`. Subsequent reads from it will return its default value.
  mutating func clearTschreferencelinedefaultcustomvalue() {self._tschreferencelinedefaultcustomvalue = nil}

  var tschreferencelinedefaultlabel: String {
    get {return _tschreferencelinedefaultlabel ?? String()}
    set {_tschreferencelinedefaultlabel = newValue}
  }
  /// Returns true if `tschreferencelinedefaultlabel` has been explicitly set.
  var hasTschreferencelinedefaultlabel: Bool {return self._tschreferencelinedefaultlabel != nil}
  /// Clears the value of `tschreferencelinedefaultlabel`. Subsequent reads from it will return its default value.
  mutating func clearTschreferencelinedefaultlabel() {self._tschreferencelinedefaultlabel = nil}

  var tschreferencelinedefaultshowlabel: Bool {
    get {return _tschreferencelinedefaultshowlabel ?? false}
    set {_tschreferencelinedefaultshowlabel = newValue}
  }
  /// Returns true if `tschreferencelinedefaultshowlabel` has been explicitly set.
  var hasTschreferencelinedefaultshowlabel: Bool {return self._tschreferencelinedefaultshowlabel != nil}
  /// Clears the value of `tschreferencelinedefaultshowlabel`. Subsequent reads from it will return its default value.
  mutating func clearTschreferencelinedefaultshowlabel() {self._tschreferencelinedefaultshowlabel = nil}

  var tschreferencelinedefaultshowline: Bool {
    get {return _tschreferencelinedefaultshowline ?? false}
    set {_tschreferencelinedefaultshowline = newValue}
  }
  /// Returns true if `tschreferencelinedefaultshowline` has been explicitly set.
  var hasTschreferencelinedefaultshowline: Bool {return self._tschreferencelinedefaultshowline != nil}
  /// Clears the value of `tschreferencelinedefaultshowline`. Subsequent reads from it will return its default value.
  mutating func clearTschreferencelinedefaultshowline() {self._tschreferencelinedefaultshowline = nil}

  var tschreferencelinedefaultshowvaluelabel: Bool {
    get {return _tschreferencelinedefaultshowvaluelabel ?? false}
    set {_tschreferencelinedefaultshowvaluelabel = newValue}
  }
  /// Returns true if `tschreferencelinedefaultshowvaluelabel` has been explicitly set.
  var hasTschreferencelinedefaultshowvaluelabel: Bool {return self._tschreferencelinedefaultshowvaluelabel != nil}
  /// Clears the value of `tschreferencelinedefaultshowvaluelabel`. Subsequent reads from it will return its default value.
  mutating func clearTschreferencelinedefaultshowvaluelabel() {self._tschreferencelinedefaultshowvaluelabel = nil}

  var tschreferencelinedefaulttype: Int32 {
    get {return _tschreferencelinedefaulttype ?? 0}
    set {_tschreferencelinedefaulttype = newValue}
  }
  /// Returns true if `tschreferencelinedefaulttype` has been explicitly set.
  var hasTschreferencelinedefaulttype: Bool {return self._tschreferencelinedefaulttype != nil}
  /// Clears the value of `tschreferencelinedefaulttype`. Subsequent reads from it will return its default value.
  mutating func clearTschreferencelinedefaulttype() {self._tschreferencelinedefaulttype = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _tschreferencelinedefaultcustomvalue: TSCH_ChartsNSNumberDoubleArchive? = nil
  fileprivate var _tschreferencelinedefaultlabel: String? = nil
  fileprivate var _tschreferencelinedefaultshowlabel: Bool? = nil
  fileprivate var _tschreferencelinedefaultshowline: Bool? = nil
  fileprivate var _tschreferencelinedefaultshowvaluelabel: Bool? = nil
  fileprivate var _tschreferencelinedefaulttype: Int32? = nil
}

struct TSCH_Generated_ChartGenericPropertyMapArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var tschchartinfo3Dbarshape: Int32 {
    get {return _storage._tschchartinfo3Dbarshape ?? 0}
    set {_uniqueStorage()._tschchartinfo3Dbarshape = newValue}
  }
  /// Returns true if `tschchartinfo3Dbarshape` has been explicitly set.
  var hasTschchartinfo3Dbarshape: Bool {return _storage._tschchartinfo3Dbarshape != nil}
  /// Clears the value of `tschchartinfo3Dbarshape`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfo3Dbarshape() {_uniqueStorage()._tschchartinfo3Dbarshape = nil}

  var tschchartinfo3Dbeveledges: Bool {
    get {return _storage._tschchartinfo3Dbeveledges ?? false}
    set {_uniqueStorage()._tschchartinfo3Dbeveledges = newValue}
  }
  /// Returns true if `tschchartinfo3Dbeveledges` has been explicitly set.
  var hasTschchartinfo3Dbeveledges: Bool {return _storage._tschchartinfo3Dbeveledges != nil}
  /// Clears the value of `tschchartinfo3Dbeveledges`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfo3Dbeveledges() {_uniqueStorage()._tschchartinfo3Dbeveledges = nil}

  var tschchartinfo3Dchartopacity: Float {
    get {return _storage._tschchartinfo3Dchartopacity ?? 0}
    set {_uniqueStorage()._tschchartinfo3Dchartopacity = newValue}
  }
  /// Returns true if `tschchartinfo3Dchartopacity` has been explicitly set.
  var hasTschchartinfo3Dchartopacity: Bool {return _storage._tschchartinfo3Dchartopacity != nil}
  /// Clears the value of `tschchartinfo3Dchartopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfo3Dchartopacity() {_uniqueStorage()._tschchartinfo3Dchartopacity = nil}

  var tschchartinfo3Dintersetdepthgap: Float {
    get {return _storage._tschchartinfo3Dintersetdepthgap ?? 0}
    set {_uniqueStorage()._tschchartinfo3Dintersetdepthgap = newValue}
  }
  /// Returns true if `tschchartinfo3Dintersetdepthgap` has been explicitly set.
  var hasTschchartinfo3Dintersetdepthgap: Bool {return _storage._tschchartinfo3Dintersetdepthgap != nil}
  /// Clears the value of `tschchartinfo3Dintersetdepthgap`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfo3Dintersetdepthgap() {_uniqueStorage()._tschchartinfo3Dintersetdepthgap = nil}

  var tschchartinfo3Dlightingpackage: TSCH_Chart3DLightingPackageArchive {
    get {return _storage._tschchartinfo3Dlightingpackage ?? TSCH_Chart3DLightingPackageArchive()}
    set {_uniqueStorage()._tschchartinfo3Dlightingpackage = newValue}
  }
  /// Returns true if `tschchartinfo3Dlightingpackage` has been explicitly set.
  var hasTschchartinfo3Dlightingpackage: Bool {return _storage._tschchartinfo3Dlightingpackage != nil}
  /// Clears the value of `tschchartinfo3Dlightingpackage`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfo3Dlightingpackage() {_uniqueStorage()._tschchartinfo3Dlightingpackage = nil}

  var tschchartinfo3Drotation: TSCH_Chart3DVectorArchive {
    get {return _storage._tschchartinfo3Drotation ?? TSCH_Chart3DVectorArchive()}
    set {_uniqueStorage()._tschchartinfo3Drotation = newValue}
  }
  /// Returns true if `tschchartinfo3Drotation` has been explicitly set.
  var hasTschchartinfo3Drotation: Bool {return _storage._tschchartinfo3Drotation != nil}
  /// Clears the value of `tschchartinfo3Drotation`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfo3Drotation() {_uniqueStorage()._tschchartinfo3Drotation = nil}

  var tschchartinfo3Dscale: TSCH_Chart3DVectorArchive {
    get {return _storage._tschchartinfo3Dscale ?? TSCH_Chart3DVectorArchive()}
    set {_uniqueStorage()._tschchartinfo3Dscale = newValue}
  }
  /// Returns true if `tschchartinfo3Dscale` has been explicitly set.
  var hasTschchartinfo3Dscale: Bool {return _storage._tschchartinfo3Dscale != nil}
  /// Clears the value of `tschchartinfo3Dscale`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfo3Dscale() {_uniqueStorage()._tschchartinfo3Dscale = nil}

  var tschchartinfo3Dviewport: TSCH_Chart3DVectorArchive {
    get {return _storage._tschchartinfo3Dviewport ?? TSCH_Chart3DVectorArchive()}
    set {_uniqueStorage()._tschchartinfo3Dviewport = newValue}
  }
  /// Returns true if `tschchartinfo3Dviewport` has been explicitly set.
  var hasTschchartinfo3Dviewport: Bool {return _storage._tschchartinfo3Dviewport != nil}
  /// Clears the value of `tschchartinfo3Dviewport`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfo3Dviewport() {_uniqueStorage()._tschchartinfo3Dviewport = nil}

  var tschchartinfobackgroundfill: TSD_FillArchive {
    get {return _storage._tschchartinfobackgroundfill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartinfobackgroundfill = newValue}
  }
  /// Returns true if `tschchartinfobackgroundfill` has been explicitly set.
  var hasTschchartinfobackgroundfill: Bool {return _storage._tschchartinfobackgroundfill != nil}
  /// Clears the value of `tschchartinfobackgroundfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfobackgroundfill() {_uniqueStorage()._tschchartinfobackgroundfill = nil}

  var tschchartinfobackgroundstroke: TSD_StrokeArchive {
    get {return _storage._tschchartinfobackgroundstroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartinfobackgroundstroke = newValue}
  }
  /// Returns true if `tschchartinfobackgroundstroke` has been explicitly set.
  var hasTschchartinfobackgroundstroke: Bool {return _storage._tschchartinfobackgroundstroke != nil}
  /// Clears the value of `tschchartinfobackgroundstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfobackgroundstroke() {_uniqueStorage()._tschchartinfobackgroundstroke = nil}

  var tschchartinfoborderopacity: Float {
    get {return _storage._tschchartinfoborderopacity ?? 0}
    set {_uniqueStorage()._tschchartinfoborderopacity = newValue}
  }
  /// Returns true if `tschchartinfoborderopacity` has been explicitly set.
  var hasTschchartinfoborderopacity: Bool {return _storage._tschchartinfoborderopacity != nil}
  /// Clears the value of `tschchartinfoborderopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfoborderopacity() {_uniqueStorage()._tschchartinfoborderopacity = nil}

  var tschchartinfobordershadow: TSD_ShadowArchive {
    get {return _storage._tschchartinfobordershadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartinfobordershadow = newValue}
  }
  /// Returns true if `tschchartinfobordershadow` has been explicitly set.
  var hasTschchartinfobordershadow: Bool {return _storage._tschchartinfobordershadow != nil}
  /// Clears the value of `tschchartinfobordershadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfobordershadow() {_uniqueStorage()._tschchartinfobordershadow = nil}

  var tschchartinfoborderstroke: TSD_StrokeArchive {
    get {return _storage._tschchartinfoborderstroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartinfoborderstroke = newValue}
  }
  /// Returns true if `tschchartinfoborderstroke` has been explicitly set.
  var hasTschchartinfoborderstroke: Bool {return _storage._tschchartinfoborderstroke != nil}
  /// Clears the value of `tschchartinfoborderstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfoborderstroke() {_uniqueStorage()._tschchartinfoborderstroke = nil}

  var tschchartinfocalloutlinetype: Int32 {
    get {return _storage._tschchartinfocalloutlinetype ?? 0}
    set {_uniqueStorage()._tschchartinfocalloutlinetype = newValue}
  }
  /// Returns true if `tschchartinfocalloutlinetype` has been explicitly set.
  var hasTschchartinfocalloutlinetype: Bool {return _storage._tschchartinfocalloutlinetype != nil}
  /// Clears the value of `tschchartinfocalloutlinetype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfocalloutlinetype() {_uniqueStorage()._tschchartinfocalloutlinetype = nil}

  var tschchartinfocombinelayers: Bool {
    get {return _storage._tschchartinfocombinelayers ?? false}
    set {_uniqueStorage()._tschchartinfocombinelayers = newValue}
  }
  /// Returns true if `tschchartinfocombinelayers` has been explicitly set.
  var hasTschchartinfocombinelayers: Bool {return _storage._tschchartinfocombinelayers != nil}
  /// Clears the value of `tschchartinfocombinelayers`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfocombinelayers() {_uniqueStorage()._tschchartinfocombinelayers = nil}

  var tschchartinfodeprecatedroundedcornerouterendonly: Bool {
    get {return _storage._tschchartinfodeprecatedroundedcornerouterendonly ?? false}
    set {_uniqueStorage()._tschchartinfodeprecatedroundedcornerouterendonly = newValue}
  }
  /// Returns true if `tschchartinfodeprecatedroundedcornerouterendonly` has been explicitly set.
  var hasTschchartinfodeprecatedroundedcornerouterendonly: Bool {return _storage._tschchartinfodeprecatedroundedcornerouterendonly != nil}
  /// Clears the value of `tschchartinfodeprecatedroundedcornerouterendonly`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodeprecatedroundedcornerouterendonly() {_uniqueStorage()._tschchartinfodeprecatedroundedcornerouterendonly = nil}

  var tschchartinfodeprecatedroundedcornerradius: Float {
    get {return _storage._tschchartinfodeprecatedroundedcornerradius ?? 0}
    set {_uniqueStorage()._tschchartinfodeprecatedroundedcornerradius = newValue}
  }
  /// Returns true if `tschchartinfodeprecatedroundedcornerradius` has been explicitly set.
  var hasTschchartinfodeprecatedroundedcornerradius: Bool {return _storage._tschchartinfodeprecatedroundedcornerradius != nil}
  /// Clears the value of `tschchartinfodeprecatedroundedcornerradius`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodeprecatedroundedcornerradius() {_uniqueStorage()._tschchartinfodeprecatedroundedcornerradius = nil}

  var tschchartinfodatasetnamelocation: Int32 {
    get {return _storage._tschchartinfodatasetnamelocation ?? 0}
    set {_uniqueStorage()._tschchartinfodatasetnamelocation = newValue}
  }
  /// Returns true if `tschchartinfodatasetnamelocation` has been explicitly set.
  var hasTschchartinfodatasetnamelocation: Bool {return _storage._tschchartinfodatasetnamelocation != nil}
  /// Clears the value of `tschchartinfodatasetnamelocation`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodatasetnamelocation() {_uniqueStorage()._tschchartinfodatasetnamelocation = nil}

  var tschchartinfodatasetnameparagraphstyleindex: Int32 {
    get {return _storage._tschchartinfodatasetnameparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartinfodatasetnameparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartinfodatasetnameparagraphstyleindex` has been explicitly set.
  var hasTschchartinfodatasetnameparagraphstyleindex: Bool {return _storage._tschchartinfodatasetnameparagraphstyleindex != nil}
  /// Clears the value of `tschchartinfodatasetnameparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodatasetnameparagraphstyleindex() {_uniqueStorage()._tschchartinfodatasetnameparagraphstyleindex = nil}

  var tschchartinfodonutplacetitleatcenter: Bool {
    get {return _storage._tschchartinfodonutplacetitleatcenter ?? false}
    set {_uniqueStorage()._tschchartinfodonutplacetitleatcenter = newValue}
  }
  /// Returns true if `tschchartinfodonutplacetitleatcenter` has been explicitly set.
  var hasTschchartinfodonutplacetitleatcenter: Bool {return _storage._tschchartinfodonutplacetitleatcenter != nil}
  /// Clears the value of `tschchartinfodonutplacetitleatcenter`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodonutplacetitleatcenter() {_uniqueStorage()._tschchartinfodonutplacetitleatcenter = nil}

  var tschchartinfogridbackgroundfill: TSD_FillArchive {
    get {return _storage._tschchartinfogridbackgroundfill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartinfogridbackgroundfill = newValue}
  }
  /// Returns true if `tschchartinfogridbackgroundfill` has been explicitly set.
  var hasTschchartinfogridbackgroundfill: Bool {return _storage._tschchartinfogridbackgroundfill != nil}
  /// Clears the value of `tschchartinfogridbackgroundfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfogridbackgroundfill() {_uniqueStorage()._tschchartinfogridbackgroundfill = nil}

  var tschchartinfogridbackgroundopacity: Float {
    get {return _storage._tschchartinfogridbackgroundopacity ?? 0}
    set {_uniqueStorage()._tschchartinfogridbackgroundopacity = newValue}
  }
  /// Returns true if `tschchartinfogridbackgroundopacity` has been explicitly set.
  var hasTschchartinfogridbackgroundopacity: Bool {return _storage._tschchartinfogridbackgroundopacity != nil}
  /// Clears the value of `tschchartinfogridbackgroundopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfogridbackgroundopacity() {_uniqueStorage()._tschchartinfogridbackgroundopacity = nil}

  var tschchartinfoinnerradius: Float {
    get {return _storage._tschchartinfoinnerradius ?? 0}
    set {_uniqueStorage()._tschchartinfoinnerradius = newValue}
  }
  /// Returns true if `tschchartinfoinnerradius` has been explicitly set.
  var hasTschchartinfoinnerradius: Bool {return _storage._tschchartinfoinnerradius != nil}
  /// Clears the value of `tschchartinfoinnerradius`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfoinnerradius() {_uniqueStorage()._tschchartinfoinnerradius = nil}

  var tschchartinfointerbargap: Float {
    get {return _storage._tschchartinfointerbargap ?? 0}
    set {_uniqueStorage()._tschchartinfointerbargap = newValue}
  }
  /// Returns true if `tschchartinfointerbargap` has been explicitly set.
  var hasTschchartinfointerbargap: Bool {return _storage._tschchartinfointerbargap != nil}
  /// Clears the value of `tschchartinfointerbargap`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfointerbargap() {_uniqueStorage()._tschchartinfointerbargap = nil}

  var tschchartinfointersetgap: Float {
    get {return _storage._tschchartinfointersetgap ?? 0}
    set {_uniqueStorage()._tschchartinfointersetgap = newValue}
  }
  /// Returns true if `tschchartinfointersetgap` has been explicitly set.
  var hasTschchartinfointersetgap: Bool {return _storage._tschchartinfointersetgap != nil}
  /// Clears the value of `tschchartinfointersetgap`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfointersetgap() {_uniqueStorage()._tschchartinfointersetgap = nil}

  var tschchartinfomultidatacontroltype: Int32 {
    get {return _storage._tschchartinfomultidatacontroltype ?? 0}
    set {_uniqueStorage()._tschchartinfomultidatacontroltype = newValue}
  }
  /// Returns true if `tschchartinfomultidatacontroltype` has been explicitly set.
  var hasTschchartinfomultidatacontroltype: Bool {return _storage._tschchartinfomultidatacontroltype != nil}
  /// Clears the value of `tschchartinfomultidatacontroltype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfomultidatacontroltype() {_uniqueStorage()._tschchartinfomultidatacontroltype = nil}

  var tschchartinfopiestartangle: Float {
    get {return _storage._tschchartinfopiestartangle ?? 0}
    set {_uniqueStorage()._tschchartinfopiestartangle = newValue}
  }
  /// Returns true if `tschchartinfopiestartangle` has been explicitly set.
  var hasTschchartinfopiestartangle: Bool {return _storage._tschchartinfopiestartangle != nil}
  /// Clears the value of `tschchartinfopiestartangle`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfopiestartangle() {_uniqueStorage()._tschchartinfopiestartangle = nil}

  var tschchartinforoundedcornerouterendonly: Bool {
    get {return _storage._tschchartinforoundedcornerouterendonly ?? false}
    set {_uniqueStorage()._tschchartinforoundedcornerouterendonly = newValue}
  }
  /// Returns true if `tschchartinforoundedcornerouterendonly` has been explicitly set.
  var hasTschchartinforoundedcornerouterendonly: Bool {return _storage._tschchartinforoundedcornerouterendonly != nil}
  /// Clears the value of `tschchartinforoundedcornerouterendonly`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinforoundedcornerouterendonly() {_uniqueStorage()._tschchartinforoundedcornerouterendonly = nil}

  var tschchartinforoundedcornerradius: Float {
    get {return _storage._tschchartinforoundedcornerradius ?? 0}
    set {_uniqueStorage()._tschchartinforoundedcornerradius = newValue}
  }
  /// Returns true if `tschchartinforoundedcornerradius` has been explicitly set.
  var hasTschchartinforoundedcornerradius: Bool {return _storage._tschchartinforoundedcornerradius != nil}
  /// Clears the value of `tschchartinforoundedcornerradius`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinforoundedcornerradius() {_uniqueStorage()._tschchartinforoundedcornerradius = nil}

  var tschchartinfoshowborder: Bool {
    get {return _storage._tschchartinfoshowborder ?? false}
    set {_uniqueStorage()._tschchartinfoshowborder = newValue}
  }
  /// Returns true if `tschchartinfoshowborder` has been explicitly set.
  var hasTschchartinfoshowborder: Bool {return _storage._tschchartinfoshowborder != nil}
  /// Clears the value of `tschchartinfoshowborder`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfoshowborder() {_uniqueStorage()._tschchartinfoshowborder = nil}

  var tschchartinfoshowlegend: Bool {
    get {return _storage._tschchartinfoshowlegend ?? false}
    set {_uniqueStorage()._tschchartinfoshowlegend = newValue}
  }
  /// Returns true if `tschchartinfoshowlegend` has been explicitly set.
  var hasTschchartinfoshowlegend: Bool {return _storage._tschchartinfoshowlegend != nil}
  /// Clears the value of `tschchartinfoshowlegend`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfoshowlegend() {_uniqueStorage()._tschchartinfoshowlegend = nil}

  var tschchartinfoshowtitle: Bool {
    get {return _storage._tschchartinfoshowtitle ?? false}
    set {_uniqueStorage()._tschchartinfoshowtitle = newValue}
  }
  /// Returns true if `tschchartinfoshowtitle` has been explicitly set.
  var hasTschchartinfoshowtitle: Bool {return _storage._tschchartinfoshowtitle != nil}
  /// Clears the value of `tschchartinfoshowtitle`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfoshowtitle() {_uniqueStorage()._tschchartinfoshowtitle = nil}

  var tschchartinfoskiphiddendata: Bool {
    get {return _storage._tschchartinfoskiphiddendata ?? false}
    set {_uniqueStorage()._tschchartinfoskiphiddendata = newValue}
  }
  /// Returns true if `tschchartinfoskiphiddendata` has been explicitly set.
  var hasTschchartinfoskiphiddendata: Bool {return _storage._tschchartinfoskiphiddendata != nil}
  /// Clears the value of `tschchartinfoskiphiddendata`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfoskiphiddendata() {_uniqueStorage()._tschchartinfoskiphiddendata = nil}

  var tschchartinfotitlecolor: TSP_Color {
    get {return _storage._tschchartinfotitlecolor ?? TSP_Color()}
    set {_uniqueStorage()._tschchartinfotitlecolor = newValue}
  }
  /// Returns true if `tschchartinfotitlecolor` has been explicitly set.
  var hasTschchartinfotitlecolor: Bool {return _storage._tschchartinfotitlecolor != nil}
  /// Clears the value of `tschchartinfotitlecolor`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfotitlecolor() {_uniqueStorage()._tschchartinfotitlecolor = nil}

  var tschchartinfotitle: String {
    get {return _storage._tschchartinfotitle ?? String()}
    set {_uniqueStorage()._tschchartinfotitle = newValue}
  }
  /// Returns true if `tschchartinfotitle` has been explicitly set.
  var hasTschchartinfotitle: Bool {return _storage._tschchartinfotitle != nil}
  /// Clears the value of `tschchartinfotitle`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfotitle() {_uniqueStorage()._tschchartinfotitle = nil}

  var tschchartinfotitleparagraphstyleindex: Int32 {
    get {return _storage._tschchartinfotitleparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartinfotitleparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartinfotitleparagraphstyleindex` has been explicitly set.
  var hasTschchartinfotitleparagraphstyleindex: Bool {return _storage._tschchartinfotitleparagraphstyleindex != nil}
  /// Clears the value of `tschchartinfotitleparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfotitleparagraphstyleindex() {_uniqueStorage()._tschchartinfotitleparagraphstyleindex = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

struct TSCH_Generated_LegendGenericPropertyMapArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var tschlegendmodelfill: TSD_FillArchive {
    get {return _tschlegendmodelfill ?? TSD_FillArchive()}
    set {_tschlegendmodelfill = newValue}
  }
  /// Returns true if `tschlegendmodelfill` has been explicitly set.
  var hasTschlegendmodelfill: Bool {return self._tschlegendmodelfill != nil}
  /// Clears the value of `tschlegendmodelfill`. Subsequent reads from it will return its default value.
  mutating func clearTschlegendmodelfill() {self._tschlegendmodelfill = nil}

  var tschlegendmodellabelparagraphstyleindex: Int32 {
    get {return _tschlegendmodellabelparagraphstyleindex ?? 0}
    set {_tschlegendmodellabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschlegendmodellabelparagraphstyleindex` has been explicitly set.
  var hasTschlegendmodellabelparagraphstyleindex: Bool {return self._tschlegendmodellabelparagraphstyleindex != nil}
  /// Clears the value of `tschlegendmodellabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschlegendmodellabelparagraphstyleindex() {self._tschlegendmodellabelparagraphstyleindex = nil}

  var tschlegendmodelopacity: Float {
    get {return _tschlegendmodelopacity ?? 0}
    set {_tschlegendmodelopacity = newValue}
  }
  /// Returns true if `tschlegendmodelopacity` has been explicitly set.
  var hasTschlegendmodelopacity: Bool {return self._tschlegendmodelopacity != nil}
  /// Clears the value of `tschlegendmodelopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschlegendmodelopacity() {self._tschlegendmodelopacity = nil}

  var tschlegendmodelshadow: TSD_ShadowArchive {
    get {return _tschlegendmodelshadow ?? TSD_ShadowArchive()}
    set {_tschlegendmodelshadow = newValue}
  }
  /// Returns true if `tschlegendmodelshadow` has been explicitly set.
  var hasTschlegendmodelshadow: Bool {return self._tschlegendmodelshadow != nil}
  /// Clears the value of `tschlegendmodelshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschlegendmodelshadow() {self._tschlegendmodelshadow = nil}

  var tschlegendmodelstroke: TSD_StrokeArchive {
    get {return _tschlegendmodelstroke ?? TSD_StrokeArchive()}
    set {_tschlegendmodelstroke = newValue}
  }
  /// Returns true if `tschlegendmodelstroke` has been explicitly set.
  var hasTschlegendmodelstroke: Bool {return self._tschlegendmodelstroke != nil}
  /// Clears the value of `tschlegendmodelstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschlegendmodelstroke() {self._tschlegendmodelstroke = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _tschlegendmodelfill: TSD_FillArchive? = nil
  fileprivate var _tschlegendmodellabelparagraphstyleindex: Int32? = nil
  fileprivate var _tschlegendmodelopacity: Float? = nil
  fileprivate var _tschlegendmodelshadow: TSD_ShadowArchive? = nil
  fileprivate var _tschlegendmodelstroke: TSD_StrokeArchive? = nil
}

struct TSCH_Generated_ChartAxisGenericPropertyMapArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var tschchartaxis10Dateformat: TSK_FormatStructArchive {
    get {return _storage._tschchartaxis10Dateformat ?? TSK_FormatStructArchive()}
    set {_uniqueStorage()._tschchartaxis10Dateformat = newValue}
  }
  /// Returns true if `tschchartaxis10Dateformat` has been explicitly set.
  var hasTschchartaxis10Dateformat: Bool {return _storage._tschchartaxis10Dateformat != nil}
  /// Clears the value of `tschchartaxis10Dateformat`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxis10Dateformat() {_uniqueStorage()._tschchartaxis10Dateformat = nil}

  var tschchartaxis10Numberformat: TSK_FormatStructArchive {
    get {return _storage._tschchartaxis10Numberformat ?? TSK_FormatStructArchive()}
    set {_uniqueStorage()._tschchartaxis10Numberformat = newValue}
  }
  /// Returns true if `tschchartaxis10Numberformat` has been explicitly set.
  var hasTschchartaxis10Numberformat: Bool {return _storage._tschchartaxis10Numberformat != nil}
  /// Clears the value of `tschchartaxis10Numberformat`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxis10Numberformat() {_uniqueStorage()._tschchartaxis10Numberformat = nil}

  var tschchartaxis3Dgridlineopacity: Float {
    get {return _storage._tschchartaxis3Dgridlineopacity ?? 0}
    set {_uniqueStorage()._tschchartaxis3Dgridlineopacity = newValue}
  }
  /// Returns true if `tschchartaxis3Dgridlineopacity` has been explicitly set.
  var hasTschchartaxis3Dgridlineopacity: Bool {return _storage._tschchartaxis3Dgridlineopacity != nil}
  /// Clears the value of `tschchartaxis3Dgridlineopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxis3Dgridlineopacity() {_uniqueStorage()._tschchartaxis3Dgridlineopacity = nil}

  var tschchartaxis3Dgridlinestroke: TSD_StrokeArchive {
    get {return _storage._tschchartaxis3Dgridlinestroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartaxis3Dgridlinestroke = newValue}
  }
  /// Returns true if `tschchartaxis3Dgridlinestroke` has been explicitly set.
  var hasTschchartaxis3Dgridlinestroke: Bool {return _storage._tschchartaxis3Dgridlinestroke != nil}
  /// Clears the value of `tschchartaxis3Dgridlinestroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxis3Dgridlinestroke() {_uniqueStorage()._tschchartaxis3Dgridlinestroke = nil}

  var tschchartaxis3Dlabelposition: Int32 {
    get {return _storage._tschchartaxis3Dlabelposition ?? 0}
    set {_uniqueStorage()._tschchartaxis3Dlabelposition = newValue}
  }
  /// Returns true if `tschchartaxis3Dlabelposition` has been explicitly set.
  var hasTschchartaxis3Dlabelposition: Bool {return _storage._tschchartaxis3Dlabelposition != nil}
  /// Clears the value of `tschchartaxis3Dlabelposition`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxis3Dlabelposition() {_uniqueStorage()._tschchartaxis3Dlabelposition = nil}

  var tschchartaxisdateformat: TSK_FormatStructArchive {
    get {return _storage._tschchartaxisdateformat ?? TSK_FormatStructArchive()}
    set {_uniqueStorage()._tschchartaxisdateformat = newValue}
  }
  /// Returns true if `tschchartaxisdateformat` has been explicitly set.
  var hasTschchartaxisdateformat: Bool {return _storage._tschchartaxisdateformat != nil}
  /// Clears the value of `tschchartaxisdateformat`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisdateformat() {_uniqueStorage()._tschchartaxisdateformat = nil}

  var tschchartaxisdurationformat: TSK_FormatStructArchive {
    get {return _storage._tschchartaxisdurationformat ?? TSK_FormatStructArchive()}
    set {_uniqueStorage()._tschchartaxisdurationformat = newValue}
  }
  /// Returns true if `tschchartaxisdurationformat` has been explicitly set.
  var hasTschchartaxisdurationformat: Bool {return _storage._tschchartaxisdurationformat != nil}
  /// Clears the value of `tschchartaxisdurationformat`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisdurationformat() {_uniqueStorage()._tschchartaxisdurationformat = nil}

  var tschchartaxishorizontalspacing: Int32 {
    get {return _storage._tschchartaxishorizontalspacing ?? 0}
    set {_uniqueStorage()._tschchartaxishorizontalspacing = newValue}
  }
  /// Returns true if `tschchartaxishorizontalspacing` has been explicitly set.
  var hasTschchartaxishorizontalspacing: Bool {return _storage._tschchartaxishorizontalspacing != nil}
  /// Clears the value of `tschchartaxishorizontalspacing`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxishorizontalspacing() {_uniqueStorage()._tschchartaxishorizontalspacing = nil}

  var tschchartaxislabelparagraphstyleindex: Int32 {
    get {return _storage._tschchartaxislabelparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartaxislabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartaxislabelparagraphstyleindex` has been explicitly set.
  var hasTschchartaxislabelparagraphstyleindex: Bool {return _storage._tschchartaxislabelparagraphstyleindex != nil}
  /// Clears the value of `tschchartaxislabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxislabelparagraphstyleindex() {_uniqueStorage()._tschchartaxislabelparagraphstyleindex = nil}

  var tschchartaxislabelsorientation: Float {
    get {return _storage._tschchartaxislabelsorientation ?? 0}
    set {_uniqueStorage()._tschchartaxislabelsorientation = newValue}
  }
  /// Returns true if `tschchartaxislabelsorientation` has been explicitly set.
  var hasTschchartaxislabelsorientation: Bool {return _storage._tschchartaxislabelsorientation != nil}
  /// Clears the value of `tschchartaxislabelsorientation`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxislabelsorientation() {_uniqueStorage()._tschchartaxislabelsorientation = nil}

  var tschchartaxismajorgridlineopacity: Float {
    get {return _storage._tschchartaxismajorgridlineopacity ?? 0}
    set {_uniqueStorage()._tschchartaxismajorgridlineopacity = newValue}
  }
  /// Returns true if `tschchartaxismajorgridlineopacity` has been explicitly set.
  var hasTschchartaxismajorgridlineopacity: Bool {return _storage._tschchartaxismajorgridlineopacity != nil}
  /// Clears the value of `tschchartaxismajorgridlineopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxismajorgridlineopacity() {_uniqueStorage()._tschchartaxismajorgridlineopacity = nil}

  var tschchartaxismajorgridlineshadow: TSD_ShadowArchive {
    get {return _storage._tschchartaxismajorgridlineshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartaxismajorgridlineshadow = newValue}
  }
  /// Returns true if `tschchartaxismajorgridlineshadow` has been explicitly set.
  var hasTschchartaxismajorgridlineshadow: Bool {return _storage._tschchartaxismajorgridlineshadow != nil}
  /// Clears the value of `tschchartaxismajorgridlineshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxismajorgridlineshadow() {_uniqueStorage()._tschchartaxismajorgridlineshadow = nil}

  var tschchartaxismajorgridlinestroke: TSD_StrokeArchive {
    get {return _storage._tschchartaxismajorgridlinestroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartaxismajorgridlinestroke = newValue}
  }
  /// Returns true if `tschchartaxismajorgridlinestroke` has been explicitly set.
  var hasTschchartaxismajorgridlinestroke: Bool {return _storage._tschchartaxismajorgridlinestroke != nil}
  /// Clears the value of `tschchartaxismajorgridlinestroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxismajorgridlinestroke() {_uniqueStorage()._tschchartaxismajorgridlinestroke = nil}

  var tschchartaxisminorgridlineopacity: Float {
    get {return _storage._tschchartaxisminorgridlineopacity ?? 0}
    set {_uniqueStorage()._tschchartaxisminorgridlineopacity = newValue}
  }
  /// Returns true if `tschchartaxisminorgridlineopacity` has been explicitly set.
  var hasTschchartaxisminorgridlineopacity: Bool {return _storage._tschchartaxisminorgridlineopacity != nil}
  /// Clears the value of `tschchartaxisminorgridlineopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisminorgridlineopacity() {_uniqueStorage()._tschchartaxisminorgridlineopacity = nil}

  var tschchartaxisminorgridlineshadow: TSD_ShadowArchive {
    get {return _storage._tschchartaxisminorgridlineshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartaxisminorgridlineshadow = newValue}
  }
  /// Returns true if `tschchartaxisminorgridlineshadow` has been explicitly set.
  var hasTschchartaxisminorgridlineshadow: Bool {return _storage._tschchartaxisminorgridlineshadow != nil}
  /// Clears the value of `tschchartaxisminorgridlineshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisminorgridlineshadow() {_uniqueStorage()._tschchartaxisminorgridlineshadow = nil}

  var tschchartaxisminorgridlinestroke: TSD_StrokeArchive {
    get {return _storage._tschchartaxisminorgridlinestroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartaxisminorgridlinestroke = newValue}
  }
  /// Returns true if `tschchartaxisminorgridlinestroke` has been explicitly set.
  var hasTschchartaxisminorgridlinestroke: Bool {return _storage._tschchartaxisminorgridlinestroke != nil}
  /// Clears the value of `tschchartaxisminorgridlinestroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisminorgridlinestroke() {_uniqueStorage()._tschchartaxisminorgridlinestroke = nil}

  var tschchartaxisnumberformat: TSK_FormatStructArchive {
    get {return _storage._tschchartaxisnumberformat ?? TSK_FormatStructArchive()}
    set {_uniqueStorage()._tschchartaxisnumberformat = newValue}
  }
  /// Returns true if `tschchartaxisnumberformat` has been explicitly set.
  var hasTschchartaxisnumberformat: Bool {return _storage._tschchartaxisnumberformat != nil}
  /// Clears the value of `tschchartaxisnumberformat`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisnumberformat() {_uniqueStorage()._tschchartaxisnumberformat = nil}

  var tschchartaxisnumberformattype: Int32 {
    get {return _storage._tschchartaxisnumberformattype ?? 0}
    set {_uniqueStorage()._tschchartaxisnumberformattype = newValue}
  }
  /// Returns true if `tschchartaxisnumberformattype` has been explicitly set.
  var hasTschchartaxisnumberformattype: Bool {return _storage._tschchartaxisnumberformattype != nil}
  /// Clears the value of `tschchartaxisnumberformattype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisnumberformattype() {_uniqueStorage()._tschchartaxisnumberformattype = nil}

  var tschchartaxisnumberofdecades: Int32 {
    get {return _storage._tschchartaxisnumberofdecades ?? 0}
    set {_uniqueStorage()._tschchartaxisnumberofdecades = newValue}
  }
  /// Returns true if `tschchartaxisnumberofdecades` has been explicitly set.
  var hasTschchartaxisnumberofdecades: Bool {return _storage._tschchartaxisnumberofdecades != nil}
  /// Clears the value of `tschchartaxisnumberofdecades`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisnumberofdecades() {_uniqueStorage()._tschchartaxisnumberofdecades = nil}

  var tschchartaxisnumberofmajorgridlines: Int32 {
    get {return _storage._tschchartaxisnumberofmajorgridlines ?? 0}
    set {_uniqueStorage()._tschchartaxisnumberofmajorgridlines = newValue}
  }
  /// Returns true if `tschchartaxisnumberofmajorgridlines` has been explicitly set.
  var hasTschchartaxisnumberofmajorgridlines: Bool {return _storage._tschchartaxisnumberofmajorgridlines != nil}
  /// Clears the value of `tschchartaxisnumberofmajorgridlines`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisnumberofmajorgridlines() {_uniqueStorage()._tschchartaxisnumberofmajorgridlines = nil}

  var tschchartaxisnumberofminorgridlines: Int32 {
    get {return _storage._tschchartaxisnumberofminorgridlines ?? 0}
    set {_uniqueStorage()._tschchartaxisnumberofminorgridlines = newValue}
  }
  /// Returns true if `tschchartaxisnumberofminorgridlines` has been explicitly set.
  var hasTschchartaxisnumberofminorgridlines: Bool {return _storage._tschchartaxisnumberofminorgridlines != nil}
  /// Clears the value of `tschchartaxisnumberofminorgridlines`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisnumberofminorgridlines() {_uniqueStorage()._tschchartaxisnumberofminorgridlines = nil}

  var tschchartaxisplottoedges: Bool {
    get {return _storage._tschchartaxisplottoedges ?? false}
    set {_uniqueStorage()._tschchartaxisplottoedges = newValue}
  }
  /// Returns true if `tschchartaxisplottoedges` has been explicitly set.
  var hasTschchartaxisplottoedges: Bool {return _storage._tschchartaxisplottoedges != nil}
  /// Clears the value of `tschchartaxisplottoedges`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisplottoedges() {_uniqueStorage()._tschchartaxisplottoedges = nil}

  var tschchartaxisscale: Int32 {
    get {return _storage._tschchartaxisscale ?? 0}
    set {_uniqueStorage()._tschchartaxisscale = newValue}
  }
  /// Returns true if `tschchartaxisscale` has been explicitly set.
  var hasTschchartaxisscale: Bool {return _storage._tschchartaxisscale != nil}
  /// Clears the value of `tschchartaxisscale`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisscale() {_uniqueStorage()._tschchartaxisscale = nil}

  var tschchartaxisshowaxis: Bool {
    get {return _storage._tschchartaxisshowaxis ?? false}
    set {_uniqueStorage()._tschchartaxisshowaxis = newValue}
  }
  /// Returns true if `tschchartaxisshowaxis` has been explicitly set.
  var hasTschchartaxisshowaxis: Bool {return _storage._tschchartaxisshowaxis != nil}
  /// Clears the value of `tschchartaxisshowaxis`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisshowaxis() {_uniqueStorage()._tschchartaxisshowaxis = nil}

  var tschchartaxisshowlabels: Bool {
    get {return _storage._tschchartaxisshowlabels ?? false}
    set {_uniqueStorage()._tschchartaxisshowlabels = newValue}
  }
  /// Returns true if `tschchartaxisshowlabels` has been explicitly set.
  var hasTschchartaxisshowlabels: Bool {return _storage._tschchartaxisshowlabels != nil}
  /// Clears the value of `tschchartaxisshowlabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisshowlabels() {_uniqueStorage()._tschchartaxisshowlabels = nil}

  var tschchartaxisshowlastlabel: Bool {
    get {return _storage._tschchartaxisshowlastlabel ?? false}
    set {_uniqueStorage()._tschchartaxisshowlastlabel = newValue}
  }
  /// Returns true if `tschchartaxisshowlastlabel` has been explicitly set.
  var hasTschchartaxisshowlastlabel: Bool {return _storage._tschchartaxisshowlastlabel != nil}
  /// Clears the value of `tschchartaxisshowlastlabel`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisshowlastlabel() {_uniqueStorage()._tschchartaxisshowlastlabel = nil}

  var tschchartaxisshowmajorgridlines: Bool {
    get {return _storage._tschchartaxisshowmajorgridlines ?? false}
    set {_uniqueStorage()._tschchartaxisshowmajorgridlines = newValue}
  }
  /// Returns true if `tschchartaxisshowmajorgridlines` has been explicitly set.
  var hasTschchartaxisshowmajorgridlines: Bool {return _storage._tschchartaxisshowmajorgridlines != nil}
  /// Clears the value of `tschchartaxisshowmajorgridlines`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisshowmajorgridlines() {_uniqueStorage()._tschchartaxisshowmajorgridlines = nil}

  var tschchartaxisshowmajortickmarks: Bool {
    get {return _storage._tschchartaxisshowmajortickmarks ?? false}
    set {_uniqueStorage()._tschchartaxisshowmajortickmarks = newValue}
  }
  /// Returns true if `tschchartaxisshowmajortickmarks` has been explicitly set.
  var hasTschchartaxisshowmajortickmarks: Bool {return _storage._tschchartaxisshowmajortickmarks != nil}
  /// Clears the value of `tschchartaxisshowmajortickmarks`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisshowmajortickmarks() {_uniqueStorage()._tschchartaxisshowmajortickmarks = nil}

  var tschchartaxisshowminimumlabel: Bool {
    get {return _storage._tschchartaxisshowminimumlabel ?? false}
    set {_uniqueStorage()._tschchartaxisshowminimumlabel = newValue}
  }
  /// Returns true if `tschchartaxisshowminimumlabel` has been explicitly set.
  var hasTschchartaxisshowminimumlabel: Bool {return _storage._tschchartaxisshowminimumlabel != nil}
  /// Clears the value of `tschchartaxisshowminimumlabel`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisshowminimumlabel() {_uniqueStorage()._tschchartaxisshowminimumlabel = nil}

  var tschchartaxisshowminorgridlines: Bool {
    get {return _storage._tschchartaxisshowminorgridlines ?? false}
    set {_uniqueStorage()._tschchartaxisshowminorgridlines = newValue}
  }
  /// Returns true if `tschchartaxisshowminorgridlines` has been explicitly set.
  var hasTschchartaxisshowminorgridlines: Bool {return _storage._tschchartaxisshowminorgridlines != nil}
  /// Clears the value of `tschchartaxisshowminorgridlines`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisshowminorgridlines() {_uniqueStorage()._tschchartaxisshowminorgridlines = nil}

  var tschchartaxisshowminortickmarks: Bool {
    get {return _storage._tschchartaxisshowminortickmarks ?? false}
    set {_uniqueStorage()._tschchartaxisshowminortickmarks = newValue}
  }
  /// Returns true if `tschchartaxisshowminortickmarks` has been explicitly set.
  var hasTschchartaxisshowminortickmarks: Bool {return _storage._tschchartaxisshowminortickmarks != nil}
  /// Clears the value of `tschchartaxisshowminortickmarks`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisshowminortickmarks() {_uniqueStorage()._tschchartaxisshowminortickmarks = nil}

  var tschchartaxisshowserieslabels: Bool {
    get {return _storage._tschchartaxisshowserieslabels ?? false}
    set {_uniqueStorage()._tschchartaxisshowserieslabels = newValue}
  }
  /// Returns true if `tschchartaxisshowserieslabels` has been explicitly set.
  var hasTschchartaxisshowserieslabels: Bool {return _storage._tschchartaxisshowserieslabels != nil}
  /// Clears the value of `tschchartaxisshowserieslabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisshowserieslabels() {_uniqueStorage()._tschchartaxisshowserieslabels = nil}

  var tschchartaxisshowtitle: Bool {
    get {return _storage._tschchartaxisshowtitle ?? false}
    set {_uniqueStorage()._tschchartaxisshowtitle = newValue}
  }
  /// Returns true if `tschchartaxisshowtitle` has been explicitly set.
  var hasTschchartaxisshowtitle: Bool {return _storage._tschchartaxisshowtitle != nil}
  /// Clears the value of `tschchartaxisshowtitle`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisshowtitle() {_uniqueStorage()._tschchartaxisshowtitle = nil}

  var tschchartaxistickmarklocation: Int32 {
    get {return _storage._tschchartaxistickmarklocation ?? 0}
    set {_uniqueStorage()._tschchartaxistickmarklocation = newValue}
  }
  /// Returns true if `tschchartaxistickmarklocation` has been explicitly set.
  var hasTschchartaxistickmarklocation: Bool {return _storage._tschchartaxistickmarklocation != nil}
  /// Clears the value of `tschchartaxistickmarklocation`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxistickmarklocation() {_uniqueStorage()._tschchartaxistickmarklocation = nil}

  var tschchartaxistitle: String {
    get {return _storage._tschchartaxistitle ?? String()}
    set {_uniqueStorage()._tschchartaxistitle = newValue}
  }
  /// Returns true if `tschchartaxistitle` has been explicitly set.
  var hasTschchartaxistitle: Bool {return _storage._tschchartaxistitle != nil}
  /// Clears the value of `tschchartaxistitle`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxistitle() {_uniqueStorage()._tschchartaxistitle = nil}

  var tschchartaxistitleparagraphstyleindex: Int32 {
    get {return _storage._tschchartaxistitleparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartaxistitleparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartaxistitleparagraphstyleindex` has been explicitly set.
  var hasTschchartaxistitleparagraphstyleindex: Bool {return _storage._tschchartaxistitleparagraphstyleindex != nil}
  /// Clears the value of `tschchartaxistitleparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxistitleparagraphstyleindex() {_uniqueStorage()._tschchartaxistitleparagraphstyleindex = nil}

  var tschchartaxisusermax: TSCH_ChartsNSNumberDoubleArchive {
    get {return _storage._tschchartaxisusermax ?? TSCH_ChartsNSNumberDoubleArchive()}
    set {_uniqueStorage()._tschchartaxisusermax = newValue}
  }
  /// Returns true if `tschchartaxisusermax` has been explicitly set.
  var hasTschchartaxisusermax: Bool {return _storage._tschchartaxisusermax != nil}
  /// Clears the value of `tschchartaxisusermax`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisusermax() {_uniqueStorage()._tschchartaxisusermax = nil}

  var tschchartaxisusermin: TSCH_ChartsNSNumberDoubleArchive {
    get {return _storage._tschchartaxisusermin ?? TSCH_ChartsNSNumberDoubleArchive()}
    set {_uniqueStorage()._tschchartaxisusermin = newValue}
  }
  /// Returns true if `tschchartaxisusermin` has been explicitly set.
  var hasTschchartaxisusermin: Bool {return _storage._tschchartaxisusermin != nil}
  /// Clears the value of `tschchartaxisusermin`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisusermin() {_uniqueStorage()._tschchartaxisusermin = nil}

  var tschchartaxisverticalspacing: Int32 {
    get {return _storage._tschchartaxisverticalspacing ?? 0}
    set {_uniqueStorage()._tschchartaxisverticalspacing = newValue}
  }
  /// Returns true if `tschchartaxisverticalspacing` has been explicitly set.
  var hasTschchartaxisverticalspacing: Bool {return _storage._tschchartaxisverticalspacing != nil}
  /// Clears the value of `tschchartaxisverticalspacing`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisverticalspacing() {_uniqueStorage()._tschchartaxisverticalspacing = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

struct TSCH_Generated_ChartSeriesGenericPropertyMapArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var tschchartseries10Dateformat: TSK_FormatStructArchive {
    get {return _storage._tschchartseries10Dateformat ?? TSK_FormatStructArchive()}
    set {_uniqueStorage()._tschchartseries10Dateformat = newValue}
  }
  /// Returns true if `tschchartseries10Dateformat` has been explicitly set.
  var hasTschchartseries10Dateformat: Bool {return _storage._tschchartseries10Dateformat != nil}
  /// Clears the value of `tschchartseries10Dateformat`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseries10Dateformat() {_uniqueStorage()._tschchartseries10Dateformat = nil}

  var tschchartseries10Numberformat: TSK_FormatStructArchive {
    get {return _storage._tschchartseries10Numberformat ?? TSK_FormatStructArchive()}
    set {_uniqueStorage()._tschchartseries10Numberformat = newValue}
  }
  /// Returns true if `tschchartseries10Numberformat` has been explicitly set.
  var hasTschchartseries10Numberformat: Bool {return _storage._tschchartseries10Numberformat != nil}
  /// Clears the value of `tschchartseries10Numberformat`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseries10Numberformat() {_uniqueStorage()._tschchartseries10Numberformat = nil}

  var tschchartseries23Labelexplosion: Float {
    get {return _storage._tschchartseries23Labelexplosion ?? 0}
    set {_uniqueStorage()._tschchartseries23Labelexplosion = newValue}
  }
  /// Returns true if `tschchartseries23Labelexplosion` has been explicitly set.
  var hasTschchartseries23Labelexplosion: Bool {return _storage._tschchartseries23Labelexplosion != nil}
  /// Clears the value of `tschchartseries23Labelexplosion`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseries23Labelexplosion() {_uniqueStorage()._tschchartseries23Labelexplosion = nil}

  var tschchartseriesadjustmentscale: Float {
    get {return _storage._tschchartseriesadjustmentscale ?? 0}
    set {_uniqueStorage()._tschchartseriesadjustmentscale = newValue}
  }
  /// Returns true if `tschchartseriesadjustmentscale` has been explicitly set.
  var hasTschchartseriesadjustmentscale: Bool {return _storage._tschchartseriesadjustmentscale != nil}
  /// Clears the value of `tschchartseriesadjustmentscale`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesadjustmentscale() {_uniqueStorage()._tschchartseriesadjustmentscale = nil}

  var tschchartseriescalloutlineendlineend: TSD_LineEndArchive {
    get {return _storage._tschchartseriescalloutlineendlineend ?? TSD_LineEndArchive()}
    set {_uniqueStorage()._tschchartseriescalloutlineendlineend = newValue}
  }
  /// Returns true if `tschchartseriescalloutlineendlineend` has been explicitly set.
  var hasTschchartseriescalloutlineendlineend: Bool {return _storage._tschchartseriescalloutlineendlineend != nil}
  /// Clears the value of `tschchartseriescalloutlineendlineend`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriescalloutlineendlineend() {_uniqueStorage()._tschchartseriescalloutlineendlineend = nil}

  var tschchartseriescalloutlinestartlineend: TSD_LineEndArchive {
    get {return _storage._tschchartseriescalloutlinestartlineend ?? TSD_LineEndArchive()}
    set {_uniqueStorage()._tschchartseriescalloutlinestartlineend = newValue}
  }
  /// Returns true if `tschchartseriescalloutlinestartlineend` has been explicitly set.
  var hasTschchartseriescalloutlinestartlineend: Bool {return _storage._tschchartseriescalloutlinestartlineend != nil}
  /// Clears the value of `tschchartseriescalloutlinestartlineend`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriescalloutlinestartlineend() {_uniqueStorage()._tschchartseriescalloutlinestartlineend = nil}

  var tschchartseriescalloutlinestrokestyle: TSD_StrokeArchive {
    get {return _storage._tschchartseriescalloutlinestrokestyle ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriescalloutlinestrokestyle = newValue}
  }
  /// Returns true if `tschchartseriescalloutlinestrokestyle` has been explicitly set.
  var hasTschchartseriescalloutlinestrokestyle: Bool {return _storage._tschchartseriescalloutlinestrokestyle != nil}
  /// Clears the value of `tschchartseriescalloutlinestrokestyle`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriescalloutlinestrokestyle() {_uniqueStorage()._tschchartseriescalloutlinestrokestyle = nil}

  var tschchartseriesdateformat: TSK_FormatStructArchive {
    get {return _storage._tschchartseriesdateformat ?? TSK_FormatStructArchive()}
    set {_uniqueStorage()._tschchartseriesdateformat = newValue}
  }
  /// Returns true if `tschchartseriesdateformat` has been explicitly set.
  var hasTschchartseriesdateformat: Bool {return _storage._tschchartseriesdateformat != nil}
  /// Clears the value of `tschchartseriesdateformat`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdateformat() {_uniqueStorage()._tschchartseriesdateformat = nil}

  var tschchartseriesdurationformat: TSK_FormatStructArchive {
    get {return _storage._tschchartseriesdurationformat ?? TSK_FormatStructArchive()}
    set {_uniqueStorage()._tschchartseriesdurationformat = newValue}
  }
  /// Returns true if `tschchartseriesdurationformat` has been explicitly set.
  var hasTschchartseriesdurationformat: Bool {return _storage._tschchartseriesdurationformat != nil}
  /// Clears the value of `tschchartseriesdurationformat`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdurationformat() {_uniqueStorage()._tschchartseriesdurationformat = nil}

  var tschchartseriesenablecalloutline: Int32 {
    get {return _storage._tschchartseriesenablecalloutline ?? 0}
    set {_uniqueStorage()._tschchartseriesenablecalloutline = newValue}
  }
  /// Returns true if `tschchartseriesenablecalloutline` has been explicitly set.
  var hasTschchartseriesenablecalloutline: Bool {return _storage._tschchartseriesenablecalloutline != nil}
  /// Clears the value of `tschchartseriesenablecalloutline`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesenablecalloutline() {_uniqueStorage()._tschchartseriesenablecalloutline = nil}

  var tschchartserieserrorbarcustomnegativedata: TSCH_ChartsNSArrayOfNSNumberDoubleArchive {
    get {return _storage._tschchartserieserrorbarcustomnegativedata ?? TSCH_ChartsNSArrayOfNSNumberDoubleArchive()}
    set {_uniqueStorage()._tschchartserieserrorbarcustomnegativedata = newValue}
  }
  /// Returns true if `tschchartserieserrorbarcustomnegativedata` has been explicitly set.
  var hasTschchartserieserrorbarcustomnegativedata: Bool {return _storage._tschchartserieserrorbarcustomnegativedata != nil}
  /// Clears the value of `tschchartserieserrorbarcustomnegativedata`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieserrorbarcustomnegativedata() {_uniqueStorage()._tschchartserieserrorbarcustomnegativedata = nil}

  var tschchartserieserrorbarcustomnegativedatascatterx: TSCH_ChartsNSArrayOfNSNumberDoubleArchive {
    get {return _storage._tschchartserieserrorbarcustomnegativedatascatterx ?? TSCH_ChartsNSArrayOfNSNumberDoubleArchive()}
    set {_uniqueStorage()._tschchartserieserrorbarcustomnegativedatascatterx = newValue}
  }
  /// Returns true if `tschchartserieserrorbarcustomnegativedatascatterx` has been explicitly set.
  var hasTschchartserieserrorbarcustomnegativedatascatterx: Bool {return _storage._tschchartserieserrorbarcustomnegativedatascatterx != nil}
  /// Clears the value of `tschchartserieserrorbarcustomnegativedatascatterx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieserrorbarcustomnegativedatascatterx() {_uniqueStorage()._tschchartserieserrorbarcustomnegativedatascatterx = nil}

  var tschchartserieserrorbarcustompositivedata: TSCH_ChartsNSArrayOfNSNumberDoubleArchive {
    get {return _storage._tschchartserieserrorbarcustompositivedata ?? TSCH_ChartsNSArrayOfNSNumberDoubleArchive()}
    set {_uniqueStorage()._tschchartserieserrorbarcustompositivedata = newValue}
  }
  /// Returns true if `tschchartserieserrorbarcustompositivedata` has been explicitly set.
  var hasTschchartserieserrorbarcustompositivedata: Bool {return _storage._tschchartserieserrorbarcustompositivedata != nil}
  /// Clears the value of `tschchartserieserrorbarcustompositivedata`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieserrorbarcustompositivedata() {_uniqueStorage()._tschchartserieserrorbarcustompositivedata = nil}

  var tschchartserieserrorbarcustompositivedatascatterx: TSCH_ChartsNSArrayOfNSNumberDoubleArchive {
    get {return _storage._tschchartserieserrorbarcustompositivedatascatterx ?? TSCH_ChartsNSArrayOfNSNumberDoubleArchive()}
    set {_uniqueStorage()._tschchartserieserrorbarcustompositivedatascatterx = newValue}
  }
  /// Returns true if `tschchartserieserrorbarcustompositivedatascatterx` has been explicitly set.
  var hasTschchartserieserrorbarcustompositivedatascatterx: Bool {return _storage._tschchartserieserrorbarcustompositivedatascatterx != nil}
  /// Clears the value of `tschchartserieserrorbarcustompositivedatascatterx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieserrorbarcustompositivedatascatterx() {_uniqueStorage()._tschchartserieserrorbarcustompositivedatascatterx = nil}

  var tschchartserieserrorbarfixedvalue: Float {
    get {return _storage._tschchartserieserrorbarfixedvalue ?? 0}
    set {_uniqueStorage()._tschchartserieserrorbarfixedvalue = newValue}
  }
  /// Returns true if `tschchartserieserrorbarfixedvalue` has been explicitly set.
  var hasTschchartserieserrorbarfixedvalue: Bool {return _storage._tschchartserieserrorbarfixedvalue != nil}
  /// Clears the value of `tschchartserieserrorbarfixedvalue`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieserrorbarfixedvalue() {_uniqueStorage()._tschchartserieserrorbarfixedvalue = nil}

  var tschchartserieserrorbarfixedvaluescatterx: Float {
    get {return _storage._tschchartserieserrorbarfixedvaluescatterx ?? 0}
    set {_uniqueStorage()._tschchartserieserrorbarfixedvaluescatterx = newValue}
  }
  /// Returns true if `tschchartserieserrorbarfixedvaluescatterx` has been explicitly set.
  var hasTschchartserieserrorbarfixedvaluescatterx: Bool {return _storage._tschchartserieserrorbarfixedvaluescatterx != nil}
  /// Clears the value of `tschchartserieserrorbarfixedvaluescatterx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieserrorbarfixedvaluescatterx() {_uniqueStorage()._tschchartserieserrorbarfixedvaluescatterx = nil}

  var tschchartserieserrorbarlineend: TSD_LineEndArchive {
    get {return _storage._tschchartserieserrorbarlineend ?? TSD_LineEndArchive()}
    set {_uniqueStorage()._tschchartserieserrorbarlineend = newValue}
  }
  /// Returns true if `tschchartserieserrorbarlineend` has been explicitly set.
  var hasTschchartserieserrorbarlineend: Bool {return _storage._tschchartserieserrorbarlineend != nil}
  /// Clears the value of `tschchartserieserrorbarlineend`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieserrorbarlineend() {_uniqueStorage()._tschchartserieserrorbarlineend = nil}

  var tschchartserieserrorbarlineendscatterx: TSD_LineEndArchive {
    get {return _storage._tschchartserieserrorbarlineendscatterx ?? TSD_LineEndArchive()}
    set {_uniqueStorage()._tschchartserieserrorbarlineendscatterx = newValue}
  }
  /// Returns true if `tschchartserieserrorbarlineendscatterx` has been explicitly set.
  var hasTschchartserieserrorbarlineendscatterx: Bool {return _storage._tschchartserieserrorbarlineendscatterx != nil}
  /// Clears the value of `tschchartserieserrorbarlineendscatterx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieserrorbarlineendscatterx() {_uniqueStorage()._tschchartserieserrorbarlineendscatterx = nil}

  var tschchartserieserrorbarpercentvalue: Float {
    get {return _storage._tschchartserieserrorbarpercentvalue ?? 0}
    set {_uniqueStorage()._tschchartserieserrorbarpercentvalue = newValue}
  }
  /// Returns true if `tschchartserieserrorbarpercentvalue` has been explicitly set.
  var hasTschchartserieserrorbarpercentvalue: Bool {return _storage._tschchartserieserrorbarpercentvalue != nil}
  /// Clears the value of `tschchartserieserrorbarpercentvalue`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieserrorbarpercentvalue() {_uniqueStorage()._tschchartserieserrorbarpercentvalue = nil}

  var tschchartserieserrorbarpercentvaluescatterx: Float {
    get {return _storage._tschchartserieserrorbarpercentvaluescatterx ?? 0}
    set {_uniqueStorage()._tschchartserieserrorbarpercentvaluescatterx = newValue}
  }
  /// Returns true if `tschchartserieserrorbarpercentvaluescatterx` has been explicitly set.
  var hasTschchartserieserrorbarpercentvaluescatterx: Bool {return _storage._tschchartserieserrorbarpercentvaluescatterx != nil}
  /// Clears the value of `tschchartserieserrorbarpercentvaluescatterx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieserrorbarpercentvaluescatterx() {_uniqueStorage()._tschchartserieserrorbarpercentvaluescatterx = nil}

  var tschchartserieserrorbarsetting: Int32 {
    get {return _storage._tschchartserieserrorbarsetting ?? 0}
    set {_uniqueStorage()._tschchartserieserrorbarsetting = newValue}
  }
  /// Returns true if `tschchartserieserrorbarsetting` has been explicitly set.
  var hasTschchartserieserrorbarsetting: Bool {return _storage._tschchartserieserrorbarsetting != nil}
  /// Clears the value of `tschchartserieserrorbarsetting`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieserrorbarsetting() {_uniqueStorage()._tschchartserieserrorbarsetting = nil}

  var tschchartserieserrorbarsettingscatterx: Int32 {
    get {return _storage._tschchartserieserrorbarsettingscatterx ?? 0}
    set {_uniqueStorage()._tschchartserieserrorbarsettingscatterx = newValue}
  }
  /// Returns true if `tschchartserieserrorbarsettingscatterx` has been explicitly set.
  var hasTschchartserieserrorbarsettingscatterx: Bool {return _storage._tschchartserieserrorbarsettingscatterx != nil}
  /// Clears the value of `tschchartserieserrorbarsettingscatterx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieserrorbarsettingscatterx() {_uniqueStorage()._tschchartserieserrorbarsettingscatterx = nil}

  var tschchartserieserrorbarshadow: TSD_ShadowArchive {
    get {return _storage._tschchartserieserrorbarshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartserieserrorbarshadow = newValue}
  }
  /// Returns true if `tschchartserieserrorbarshadow` has been explicitly set.
  var hasTschchartserieserrorbarshadow: Bool {return _storage._tschchartserieserrorbarshadow != nil}
  /// Clears the value of `tschchartserieserrorbarshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieserrorbarshadow() {_uniqueStorage()._tschchartserieserrorbarshadow = nil}

  var tschchartserieserrorbarspacing: Int32 {
    get {return _storage._tschchartserieserrorbarspacing ?? 0}
    set {_uniqueStorage()._tschchartserieserrorbarspacing = newValue}
  }
  /// Returns true if `tschchartserieserrorbarspacing` has been explicitly set.
  var hasTschchartserieserrorbarspacing: Bool {return _storage._tschchartserieserrorbarspacing != nil}
  /// Clears the value of `tschchartserieserrorbarspacing`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieserrorbarspacing() {_uniqueStorage()._tschchartserieserrorbarspacing = nil}

  var tschchartserieserrorbarspacingscatterx: Int32 {
    get {return _storage._tschchartserieserrorbarspacingscatterx ?? 0}
    set {_uniqueStorage()._tschchartserieserrorbarspacingscatterx = newValue}
  }
  /// Returns true if `tschchartserieserrorbarspacingscatterx` has been explicitly set.
  var hasTschchartserieserrorbarspacingscatterx: Bool {return _storage._tschchartserieserrorbarspacingscatterx != nil}
  /// Clears the value of `tschchartserieserrorbarspacingscatterx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieserrorbarspacingscatterx() {_uniqueStorage()._tschchartserieserrorbarspacingscatterx = nil}

  var tschchartserieserrorbarstddevvalue: Float {
    get {return _storage._tschchartserieserrorbarstddevvalue ?? 0}
    set {_uniqueStorage()._tschchartserieserrorbarstddevvalue = newValue}
  }
  /// Returns true if `tschchartserieserrorbarstddevvalue` has been explicitly set.
  var hasTschchartserieserrorbarstddevvalue: Bool {return _storage._tschchartserieserrorbarstddevvalue != nil}
  /// Clears the value of `tschchartserieserrorbarstddevvalue`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieserrorbarstddevvalue() {_uniqueStorage()._tschchartserieserrorbarstddevvalue = nil}

  var tschchartserieserrorbarstddevvaluescatterx: Float {
    get {return _storage._tschchartserieserrorbarstddevvaluescatterx ?? 0}
    set {_uniqueStorage()._tschchartserieserrorbarstddevvaluescatterx = newValue}
  }
  /// Returns true if `tschchartserieserrorbarstddevvaluescatterx` has been explicitly set.
  var hasTschchartserieserrorbarstddevvaluescatterx: Bool {return _storage._tschchartserieserrorbarstddevvaluescatterx != nil}
  /// Clears the value of `tschchartserieserrorbarstddevvaluescatterx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieserrorbarstddevvaluescatterx() {_uniqueStorage()._tschchartserieserrorbarstddevvaluescatterx = nil}

  var tschchartserieserrorbarstroke: TSD_StrokeArchive {
    get {return _storage._tschchartserieserrorbarstroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartserieserrorbarstroke = newValue}
  }
  /// Returns true if `tschchartserieserrorbarstroke` has been explicitly set.
  var hasTschchartserieserrorbarstroke: Bool {return _storage._tschchartserieserrorbarstroke != nil}
  /// Clears the value of `tschchartserieserrorbarstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieserrorbarstroke() {_uniqueStorage()._tschchartserieserrorbarstroke = nil}

  var tschchartserieserrorbarstrokescatterx: TSD_StrokeArchive {
    get {return _storage._tschchartserieserrorbarstrokescatterx ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartserieserrorbarstrokescatterx = newValue}
  }
  /// Returns true if `tschchartserieserrorbarstrokescatterx` has been explicitly set.
  var hasTschchartserieserrorbarstrokescatterx: Bool {return _storage._tschchartserieserrorbarstrokescatterx != nil}
  /// Clears the value of `tschchartserieserrorbarstrokescatterx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieserrorbarstrokescatterx() {_uniqueStorage()._tschchartserieserrorbarstrokescatterx = nil}

  var tschchartserieserrorbartype: Int32 {
    get {return _storage._tschchartserieserrorbartype ?? 0}
    set {_uniqueStorage()._tschchartserieserrorbartype = newValue}
  }
  /// Returns true if `tschchartserieserrorbartype` has been explicitly set.
  var hasTschchartserieserrorbartype: Bool {return _storage._tschchartserieserrorbartype != nil}
  /// Clears the value of `tschchartserieserrorbartype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieserrorbartype() {_uniqueStorage()._tschchartserieserrorbartype = nil}

  var tschchartserieserrorbartypescatterx: Int32 {
    get {return _storage._tschchartserieserrorbartypescatterx ?? 0}
    set {_uniqueStorage()._tschchartserieserrorbartypescatterx = newValue}
  }
  /// Returns true if `tschchartserieserrorbartypescatterx` has been explicitly set.
  var hasTschchartserieserrorbartypescatterx: Bool {return _storage._tschchartserieserrorbartypescatterx != nil}
  /// Clears the value of `tschchartserieserrorbartypescatterx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieserrorbartypescatterx() {_uniqueStorage()._tschchartserieserrorbartypescatterx = nil}

  var tschchartseriesfill: TSD_FillArchive {
    get {return _storage._tschchartseriesfill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseriesfill = newValue}
  }
  /// Returns true if `tschchartseriesfill` has been explicitly set.
  var hasTschchartseriesfill: Bool {return _storage._tschchartseriesfill != nil}
  /// Clears the value of `tschchartseriesfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesfill() {_uniqueStorage()._tschchartseriesfill = nil}

  var tschchartserieslabelexplosion: Float {
    get {return _storage._tschchartserieslabelexplosion ?? 0}
    set {_uniqueStorage()._tschchartserieslabelexplosion = newValue}
  }
  /// Returns true if `tschchartserieslabelexplosion` has been explicitly set.
  var hasTschchartserieslabelexplosion: Bool {return _storage._tschchartserieslabelexplosion != nil}
  /// Clears the value of `tschchartserieslabelexplosion`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieslabelexplosion() {_uniqueStorage()._tschchartserieslabelexplosion = nil}

  var tschchartserieslabelparagraphstyleindex: Int32 {
    get {return _storage._tschchartserieslabelparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartserieslabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartserieslabelparagraphstyleindex` has been explicitly set.
  var hasTschchartserieslabelparagraphstyleindex: Bool {return _storage._tschchartserieslabelparagraphstyleindex != nil}
  /// Clears the value of `tschchartserieslabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieslabelparagraphstyleindex() {_uniqueStorage()._tschchartserieslabelparagraphstyleindex = nil}

  var tschchartserieslinetype: Int32 {
    get {return _storage._tschchartserieslinetype ?? 0}
    set {_uniqueStorage()._tschchartserieslinetype = newValue}
  }
  /// Returns true if `tschchartserieslinetype` has been explicitly set.
  var hasTschchartserieslinetype: Bool {return _storage._tschchartserieslinetype != nil}
  /// Clears the value of `tschchartserieslinetype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieslinetype() {_uniqueStorage()._tschchartserieslinetype = nil}

  var tschchartseriesnumberformat: TSK_FormatStructArchive {
    get {return _storage._tschchartseriesnumberformat ?? TSK_FormatStructArchive()}
    set {_uniqueStorage()._tschchartseriesnumberformat = newValue}
  }
  /// Returns true if `tschchartseriesnumberformat` has been explicitly set.
  var hasTschchartseriesnumberformat: Bool {return _storage._tschchartseriesnumberformat != nil}
  /// Clears the value of `tschchartseriesnumberformat`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesnumberformat() {_uniqueStorage()._tschchartseriesnumberformat = nil}

  var tschchartseriesnumberformattype: Int32 {
    get {return _storage._tschchartseriesnumberformattype ?? 0}
    set {_uniqueStorage()._tschchartseriesnumberformattype = newValue}
  }
  /// Returns true if `tschchartseriesnumberformattype` has been explicitly set.
  var hasTschchartseriesnumberformattype: Bool {return _storage._tschchartseriesnumberformattype != nil}
  /// Clears the value of `tschchartseriesnumberformattype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesnumberformattype() {_uniqueStorage()._tschchartseriesnumberformattype = nil}

  var tschchartseriesopacity: Float {
    get {return _storage._tschchartseriesopacity ?? 0}
    set {_uniqueStorage()._tschchartseriesopacity = newValue}
  }
  /// Returns true if `tschchartseriesopacity` has been explicitly set.
  var hasTschchartseriesopacity: Bool {return _storage._tschchartseriesopacity != nil}
  /// Clears the value of `tschchartseriesopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesopacity() {_uniqueStorage()._tschchartseriesopacity = nil}

  var tschchartseriesoutsidelabelparagraphstyleindex: Int32 {
    get {return _storage._tschchartseriesoutsidelabelparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartseriesoutsidelabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartseriesoutsidelabelparagraphstyleindex` has been explicitly set.
  var hasTschchartseriesoutsidelabelparagraphstyleindex: Bool {return _storage._tschchartseriesoutsidelabelparagraphstyleindex != nil}
  /// Clears the value of `tschchartseriesoutsidelabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesoutsidelabelparagraphstyleindex() {_uniqueStorage()._tschchartseriesoutsidelabelparagraphstyleindex = nil}

  var tschchartseriespercentnumberformat: TSK_FormatStructArchive {
    get {return _storage._tschchartseriespercentnumberformat ?? TSK_FormatStructArchive()}
    set {_uniqueStorage()._tschchartseriespercentnumberformat = newValue}
  }
  /// Returns true if `tschchartseriespercentnumberformat` has been explicitly set.
  var hasTschchartseriespercentnumberformat: Bool {return _storage._tschchartseriespercentnumberformat != nil}
  /// Clears the value of `tschchartseriespercentnumberformat`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriespercentnumberformat() {_uniqueStorage()._tschchartseriespercentnumberformat = nil}

  var tschchartseriesseriestype: Int32 {
    get {return _storage._tschchartseriesseriestype ?? 0}
    set {_uniqueStorage()._tschchartseriesseriestype = newValue}
  }
  /// Returns true if `tschchartseriesseriestype` has been explicitly set.
  var hasTschchartseriesseriestype: Bool {return _storage._tschchartseriesseriestype != nil}
  /// Clears the value of `tschchartseriesseriestype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesseriestype() {_uniqueStorage()._tschchartseriesseriestype = nil}

  var tschchartseriesshadow: TSD_ShadowArchive {
    get {return _storage._tschchartseriesshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseriesshadow = newValue}
  }
  /// Returns true if `tschchartseriesshadow` has been explicitly set.
  var hasTschchartseriesshadow: Bool {return _storage._tschchartseriesshadow != nil}
  /// Clears the value of `tschchartseriesshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesshadow() {_uniqueStorage()._tschchartseriesshadow = nil}

  var tschchartseriesshowerrorbar: Bool {
    get {return _storage._tschchartseriesshowerrorbar ?? false}
    set {_uniqueStorage()._tschchartseriesshowerrorbar = newValue}
  }
  /// Returns true if `tschchartseriesshowerrorbar` has been explicitly set.
  var hasTschchartseriesshowerrorbar: Bool {return _storage._tschchartseriesshowerrorbar != nil}
  /// Clears the value of `tschchartseriesshowerrorbar`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesshowerrorbar() {_uniqueStorage()._tschchartseriesshowerrorbar = nil}

  var tschchartseriesshowerrorbarscatterx: Bool {
    get {return _storage._tschchartseriesshowerrorbarscatterx ?? false}
    set {_uniqueStorage()._tschchartseriesshowerrorbarscatterx = newValue}
  }
  /// Returns true if `tschchartseriesshowerrorbarscatterx` has been explicitly set.
  var hasTschchartseriesshowerrorbarscatterx: Bool {return _storage._tschchartseriesshowerrorbarscatterx != nil}
  /// Clears the value of `tschchartseriesshowerrorbarscatterx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesshowerrorbarscatterx() {_uniqueStorage()._tschchartseriesshowerrorbarscatterx = nil}

  var tschchartseriesshowlabelsinfront: Bool {
    get {return _storage._tschchartseriesshowlabelsinfront ?? false}
    set {_uniqueStorage()._tschchartseriesshowlabelsinfront = newValue}
  }
  /// Returns true if `tschchartseriesshowlabelsinfront` has been explicitly set.
  var hasTschchartseriesshowlabelsinfront: Bool {return _storage._tschchartseriesshowlabelsinfront != nil}
  /// Clears the value of `tschchartseriesshowlabelsinfront`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesshowlabelsinfront() {_uniqueStorage()._tschchartseriesshowlabelsinfront = nil}

  var tschchartseriesshowline: Bool {
    get {return _storage._tschchartseriesshowline ?? false}
    set {_uniqueStorage()._tschchartseriesshowline = newValue}
  }
  /// Returns true if `tschchartseriesshowline` has been explicitly set.
  var hasTschchartseriesshowline: Bool {return _storage._tschchartseriesshowline != nil}
  /// Clears the value of `tschchartseriesshowline`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesshowline() {_uniqueStorage()._tschchartseriesshowline = nil}

  var tschchartseriesshownegativedata: Bool {
    get {return _storage._tschchartseriesshownegativedata ?? false}
    set {_uniqueStorage()._tschchartseriesshownegativedata = newValue}
  }
  /// Returns true if `tschchartseriesshownegativedata` has been explicitly set.
  var hasTschchartseriesshownegativedata: Bool {return _storage._tschchartseriesshownegativedata != nil}
  /// Clears the value of `tschchartseriesshownegativedata`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesshownegativedata() {_uniqueStorage()._tschchartseriesshownegativedata = nil}

  var tschchartseriesshowserieslabels: Bool {
    get {return _storage._tschchartseriesshowserieslabels ?? false}
    set {_uniqueStorage()._tschchartseriesshowserieslabels = newValue}
  }
  /// Returns true if `tschchartseriesshowserieslabels` has been explicitly set.
  var hasTschchartseriesshowserieslabels: Bool {return _storage._tschchartseriesshowserieslabels != nil}
  /// Clears the value of `tschchartseriesshowserieslabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesshowserieslabels() {_uniqueStorage()._tschchartseriesshowserieslabels = nil}

  var tschchartseriesshowsymbol: Bool {
    get {return _storage._tschchartseriesshowsymbol ?? false}
    set {_uniqueStorage()._tschchartseriesshowsymbol = newValue}
  }
  /// Returns true if `tschchartseriesshowsymbol` has been explicitly set.
  var hasTschchartseriesshowsymbol: Bool {return _storage._tschchartseriesshowsymbol != nil}
  /// Clears the value of `tschchartseriesshowsymbol`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesshowsymbol() {_uniqueStorage()._tschchartseriesshowsymbol = nil}

  var tschchartseriesshowtrendline: Bool {
    get {return _storage._tschchartseriesshowtrendline ?? false}
    set {_uniqueStorage()._tschchartseriesshowtrendline = newValue}
  }
  /// Returns true if `tschchartseriesshowtrendline` has been explicitly set.
  var hasTschchartseriesshowtrendline: Bool {return _storage._tschchartseriesshowtrendline != nil}
  /// Clears the value of `tschchartseriesshowtrendline`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesshowtrendline() {_uniqueStorage()._tschchartseriesshowtrendline = nil}

  var tschchartseriesshowvaluelabels: Bool {
    get {return _storage._tschchartseriesshowvaluelabels ?? false}
    set {_uniqueStorage()._tschchartseriesshowvaluelabels = newValue}
  }
  /// Returns true if `tschchartseriesshowvaluelabels` has been explicitly set.
  var hasTschchartseriesshowvaluelabels: Bool {return _storage._tschchartseriesshowvaluelabels != nil}
  /// Clears the value of `tschchartseriesshowvaluelabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesshowvaluelabels() {_uniqueStorage()._tschchartseriesshowvaluelabels = nil}

  var tschchartseriessizedimension: Int32 {
    get {return _storage._tschchartseriessizedimension ?? 0}
    set {_uniqueStorage()._tschchartseriessizedimension = newValue}
  }
  /// Returns true if `tschchartseriessizedimension` has been explicitly set.
  var hasTschchartseriessizedimension: Bool {return _storage._tschchartseriessizedimension != nil}
  /// Clears the value of `tschchartseriessizedimension`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriessizedimension() {_uniqueStorage()._tschchartseriessizedimension = nil}

  var tschchartseriesstacklabels: Bool {
    get {return _storage._tschchartseriesstacklabels ?? false}
    set {_uniqueStorage()._tschchartseriesstacklabels = newValue}
  }
  /// Returns true if `tschchartseriesstacklabels` has been explicitly set.
  var hasTschchartseriesstacklabels: Bool {return _storage._tschchartseriesstacklabels != nil}
  /// Clears the value of `tschchartseriesstacklabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesstacklabels() {_uniqueStorage()._tschchartseriesstacklabels = nil}

  var tschchartseriesstroke: TSD_StrokeArchive {
    get {return _storage._tschchartseriesstroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriesstroke = newValue}
  }
  /// Returns true if `tschchartseriesstroke` has been explicitly set.
  var hasTschchartseriesstroke: Bool {return _storage._tschchartseriesstroke != nil}
  /// Clears the value of `tschchartseriesstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesstroke() {_uniqueStorage()._tschchartseriesstroke = nil}

  var tschchartseriessymbolfill: TSD_FillArchive {
    get {return _storage._tschchartseriessymbolfill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseriessymbolfill = newValue}
  }
  /// Returns true if `tschchartseriessymbolfill` has been explicitly set.
  var hasTschchartseriessymbolfill: Bool {return _storage._tschchartseriessymbolfill != nil}
  /// Clears the value of `tschchartseriessymbolfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriessymbolfill() {_uniqueStorage()._tschchartseriessymbolfill = nil}

  var tschchartseriessymbolfilluseseriesfill: Bool {
    get {return _storage._tschchartseriessymbolfilluseseriesfill ?? false}
    set {_uniqueStorage()._tschchartseriessymbolfilluseseriesfill = newValue}
  }
  /// Returns true if `tschchartseriessymbolfilluseseriesfill` has been explicitly set.
  var hasTschchartseriessymbolfilluseseriesfill: Bool {return _storage._tschchartseriessymbolfilluseseriesfill != nil}
  /// Clears the value of `tschchartseriessymbolfilluseseriesfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriessymbolfilluseseriesfill() {_uniqueStorage()._tschchartseriessymbolfilluseseriesfill = nil}

  var tschchartseriessymbolfilluseseriesstroke: Bool {
    get {return _storage._tschchartseriessymbolfilluseseriesstroke ?? false}
    set {_uniqueStorage()._tschchartseriessymbolfilluseseriesstroke = newValue}
  }
  /// Returns true if `tschchartseriessymbolfilluseseriesstroke` has been explicitly set.
  var hasTschchartseriessymbolfilluseseriesstroke: Bool {return _storage._tschchartseriessymbolfilluseseriesstroke != nil}
  /// Clears the value of `tschchartseriessymbolfilluseseriesstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriessymbolfilluseseriesstroke() {_uniqueStorage()._tschchartseriessymbolfilluseseriesstroke = nil}

  var tschchartseriessymbolsize: Float {
    get {return _storage._tschchartseriessymbolsize ?? 0}
    set {_uniqueStorage()._tschchartseriessymbolsize = newValue}
  }
  /// Returns true if `tschchartseriessymbolsize` has been explicitly set.
  var hasTschchartseriessymbolsize: Bool {return _storage._tschchartseriessymbolsize != nil}
  /// Clears the value of `tschchartseriessymbolsize`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriessymbolsize() {_uniqueStorage()._tschchartseriessymbolsize = nil}

  var tschchartseriessymbolstroke: TSD_StrokeArchive {
    get {return _storage._tschchartseriessymbolstroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriessymbolstroke = newValue}
  }
  /// Returns true if `tschchartseriessymbolstroke` has been explicitly set.
  var hasTschchartseriessymbolstroke: Bool {return _storage._tschchartseriessymbolstroke != nil}
  /// Clears the value of `tschchartseriessymbolstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriessymbolstroke() {_uniqueStorage()._tschchartseriessymbolstroke = nil}

  var tschchartseriessymboltype: Int32 {
    get {return _storage._tschchartseriessymboltype ?? 0}
    set {_uniqueStorage()._tschchartseriessymboltype = newValue}
  }
  /// Returns true if `tschchartseriessymboltype` has been explicitly set.
  var hasTschchartseriessymboltype: Bool {return _storage._tschchartseriessymboltype != nil}
  /// Clears the value of `tschchartseriessymboltype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriessymboltype() {_uniqueStorage()._tschchartseriessymboltype = nil}

  var tschchartseriestrendlineequationoffsetx: Float {
    get {return _storage._tschchartseriestrendlineequationoffsetx ?? 0}
    set {_uniqueStorage()._tschchartseriestrendlineequationoffsetx = newValue}
  }
  /// Returns true if `tschchartseriestrendlineequationoffsetx` has been explicitly set.
  var hasTschchartseriestrendlineequationoffsetx: Bool {return _storage._tschchartseriestrendlineequationoffsetx != nil}
  /// Clears the value of `tschchartseriestrendlineequationoffsetx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriestrendlineequationoffsetx() {_uniqueStorage()._tschchartseriestrendlineequationoffsetx = nil}

  var tschchartseriestrendlineequationoffsety: Float {
    get {return _storage._tschchartseriestrendlineequationoffsety ?? 0}
    set {_uniqueStorage()._tschchartseriestrendlineequationoffsety = newValue}
  }
  /// Returns true if `tschchartseriestrendlineequationoffsety` has been explicitly set.
  var hasTschchartseriestrendlineequationoffsety: Bool {return _storage._tschchartseriestrendlineequationoffsety != nil}
  /// Clears the value of `tschchartseriestrendlineequationoffsety`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriestrendlineequationoffsety() {_uniqueStorage()._tschchartseriestrendlineequationoffsety = nil}

  var tschchartseriestrendlinelabelstring: String {
    get {return _storage._tschchartseriestrendlinelabelstring ?? String()}
    set {_uniqueStorage()._tschchartseriestrendlinelabelstring = newValue}
  }
  /// Returns true if `tschchartseriestrendlinelabelstring` has been explicitly set.
  var hasTschchartseriestrendlinelabelstring: Bool {return _storage._tschchartseriestrendlinelabelstring != nil}
  /// Clears the value of `tschchartseriestrendlinelabelstring`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriestrendlinelabelstring() {_uniqueStorage()._tschchartseriestrendlinelabelstring = nil}

  var tschchartseriestrendlineorder: Int32 {
    get {return _storage._tschchartseriestrendlineorder ?? 0}
    set {_uniqueStorage()._tschchartseriestrendlineorder = newValue}
  }
  /// Returns true if `tschchartseriestrendlineorder` has been explicitly set.
  var hasTschchartseriestrendlineorder: Bool {return _storage._tschchartseriestrendlineorder != nil}
  /// Clears the value of `tschchartseriestrendlineorder`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriestrendlineorder() {_uniqueStorage()._tschchartseriestrendlineorder = nil}

  var tschchartseriestrendlineperiod: Int32 {
    get {return _storage._tschchartseriestrendlineperiod ?? 0}
    set {_uniqueStorage()._tschchartseriestrendlineperiod = newValue}
  }
  /// Returns true if `tschchartseriestrendlineperiod` has been explicitly set.
  var hasTschchartseriestrendlineperiod: Bool {return _storage._tschchartseriestrendlineperiod != nil}
  /// Clears the value of `tschchartseriestrendlineperiod`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriestrendlineperiod() {_uniqueStorage()._tschchartseriestrendlineperiod = nil}

  var tschchartseriestrendlinersquaredoffsetx: Float {
    get {return _storage._tschchartseriestrendlinersquaredoffsetx ?? 0}
    set {_uniqueStorage()._tschchartseriestrendlinersquaredoffsetx = newValue}
  }
  /// Returns true if `tschchartseriestrendlinersquaredoffsetx` has been explicitly set.
  var hasTschchartseriestrendlinersquaredoffsetx: Bool {return _storage._tschchartseriestrendlinersquaredoffsetx != nil}
  /// Clears the value of `tschchartseriestrendlinersquaredoffsetx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriestrendlinersquaredoffsetx() {_uniqueStorage()._tschchartseriestrendlinersquaredoffsetx = nil}

  var tschchartseriestrendlinersquaredoffsety: Float {
    get {return _storage._tschchartseriestrendlinersquaredoffsety ?? 0}
    set {_uniqueStorage()._tschchartseriestrendlinersquaredoffsety = newValue}
  }
  /// Returns true if `tschchartseriestrendlinersquaredoffsety` has been explicitly set.
  var hasTschchartseriestrendlinersquaredoffsety: Bool {return _storage._tschchartseriestrendlinersquaredoffsety != nil}
  /// Clears the value of `tschchartseriestrendlinersquaredoffsety`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriestrendlinersquaredoffsety() {_uniqueStorage()._tschchartseriestrendlinersquaredoffsety = nil}

  var tschchartseriestrendlineshadow: TSD_ShadowArchive {
    get {return _storage._tschchartseriestrendlineshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseriestrendlineshadow = newValue}
  }
  /// Returns true if `tschchartseriestrendlineshadow` has been explicitly set.
  var hasTschchartseriestrendlineshadow: Bool {return _storage._tschchartseriestrendlineshadow != nil}
  /// Clears the value of `tschchartseriestrendlineshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriestrendlineshadow() {_uniqueStorage()._tschchartseriestrendlineshadow = nil}

  var tschchartseriestrendlineshowequation: Bool {
    get {return _storage._tschchartseriestrendlineshowequation ?? false}
    set {_uniqueStorage()._tschchartseriestrendlineshowequation = newValue}
  }
  /// Returns true if `tschchartseriestrendlineshowequation` has been explicitly set.
  var hasTschchartseriestrendlineshowequation: Bool {return _storage._tschchartseriestrendlineshowequation != nil}
  /// Clears the value of `tschchartseriestrendlineshowequation`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriestrendlineshowequation() {_uniqueStorage()._tschchartseriestrendlineshowequation = nil}

  var tschchartseriestrendlineshowlabel: Bool {
    get {return _storage._tschchartseriestrendlineshowlabel ?? false}
    set {_uniqueStorage()._tschchartseriestrendlineshowlabel = newValue}
  }
  /// Returns true if `tschchartseriestrendlineshowlabel` has been explicitly set.
  var hasTschchartseriestrendlineshowlabel: Bool {return _storage._tschchartseriestrendlineshowlabel != nil}
  /// Clears the value of `tschchartseriestrendlineshowlabel`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriestrendlineshowlabel() {_uniqueStorage()._tschchartseriestrendlineshowlabel = nil}

  var tschchartseriestrendlineshowr2Value: Bool {
    get {return _storage._tschchartseriestrendlineshowr2Value ?? false}
    set {_uniqueStorage()._tschchartseriestrendlineshowr2Value = newValue}
  }
  /// Returns true if `tschchartseriestrendlineshowr2Value` has been explicitly set.
  var hasTschchartseriestrendlineshowr2Value: Bool {return _storage._tschchartseriestrendlineshowr2Value != nil}
  /// Clears the value of `tschchartseriestrendlineshowr2Value`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriestrendlineshowr2Value() {_uniqueStorage()._tschchartseriestrendlineshowr2Value = nil}

  var tschchartseriestrendlinestroke: TSD_StrokeArchive {
    get {return _storage._tschchartseriestrendlinestroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriestrendlinestroke = newValue}
  }
  /// Returns true if `tschchartseriestrendlinestroke` has been explicitly set.
  var hasTschchartseriestrendlinestroke: Bool {return _storage._tschchartseriestrendlinestroke != nil}
  /// Clears the value of `tschchartseriestrendlinestroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriestrendlinestroke() {_uniqueStorage()._tschchartseriestrendlinestroke = nil}

  var tschchartseriestrendlinetype: Int32 {
    get {return _storage._tschchartseriestrendlinetype ?? 0}
    set {_uniqueStorage()._tschchartseriestrendlinetype = newValue}
  }
  /// Returns true if `tschchartseriestrendlinetype` has been explicitly set.
  var hasTschchartseriestrendlinetype: Bool {return _storage._tschchartseriestrendlinetype != nil}
  /// Clears the value of `tschchartseriestrendlinetype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriestrendlinetype() {_uniqueStorage()._tschchartseriestrendlinetype = nil}

  var tschchartseriestrendlineequationopacity: Float {
    get {return _storage._tschchartseriestrendlineequationopacity ?? 0}
    set {_uniqueStorage()._tschchartseriestrendlineequationopacity = newValue}
  }
  /// Returns true if `tschchartseriestrendlineequationopacity` has been explicitly set.
  var hasTschchartseriestrendlineequationopacity: Bool {return _storage._tschchartseriestrendlineequationopacity != nil}
  /// Clears the value of `tschchartseriestrendlineequationopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriestrendlineequationopacity() {_uniqueStorage()._tschchartseriestrendlineequationopacity = nil}

  var tschchartseriestrendlineequationparagraphstyleindex: Int32 {
    get {return _storage._tschchartseriestrendlineequationparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartseriestrendlineequationparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartseriestrendlineequationparagraphstyleindex` has been explicitly set.
  var hasTschchartseriestrendlineequationparagraphstyleindex: Bool {return _storage._tschchartseriestrendlineequationparagraphstyleindex != nil}
  /// Clears the value of `tschchartseriestrendlineequationparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriestrendlineequationparagraphstyleindex() {_uniqueStorage()._tschchartseriestrendlineequationparagraphstyleindex = nil}

  var tschchartseriestrendlinersquaredopacity: Float {
    get {return _storage._tschchartseriestrendlinersquaredopacity ?? 0}
    set {_uniqueStorage()._tschchartseriestrendlinersquaredopacity = newValue}
  }
  /// Returns true if `tschchartseriestrendlinersquaredopacity` has been explicitly set.
  var hasTschchartseriestrendlinersquaredopacity: Bool {return _storage._tschchartseriestrendlinersquaredopacity != nil}
  /// Clears the value of `tschchartseriestrendlinersquaredopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriestrendlinersquaredopacity() {_uniqueStorage()._tschchartseriestrendlinersquaredopacity = nil}

  var tschchartseriestrendlinersquaredparagraphstyleindex: Int32 {
    get {return _storage._tschchartseriestrendlinersquaredparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartseriestrendlinersquaredparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartseriestrendlinersquaredparagraphstyleindex` has been explicitly set.
  var hasTschchartseriestrendlinersquaredparagraphstyleindex: Bool {return _storage._tschchartseriestrendlinersquaredparagraphstyleindex != nil}
  /// Clears the value of `tschchartseriestrendlinersquaredparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriestrendlinersquaredparagraphstyleindex() {_uniqueStorage()._tschchartseriestrendlinersquaredparagraphstyleindex = nil}

  var tschchartseriesvaluelabelposition: Int32 {
    get {return _storage._tschchartseriesvaluelabelposition ?? 0}
    set {_uniqueStorage()._tschchartseriesvaluelabelposition = newValue}
  }
  /// Returns true if `tschchartseriesvaluelabelposition` has been explicitly set.
  var hasTschchartseriesvaluelabelposition: Bool {return _storage._tschchartseriesvaluelabelposition != nil}
  /// Clears the value of `tschchartseriesvaluelabelposition`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesvaluelabelposition() {_uniqueStorage()._tschchartseriesvaluelabelposition = nil}

  var tschchartseriesvaluelabelspacing: Int32 {
    get {return _storage._tschchartseriesvaluelabelspacing ?? 0}
    set {_uniqueStorage()._tschchartseriesvaluelabelspacing = newValue}
  }
  /// Returns true if `tschchartseriesvaluelabelspacing` has been explicitly set.
  var hasTschchartseriesvaluelabelspacing: Bool {return _storage._tschchartseriesvaluelabelspacing != nil}
  /// Clears the value of `tschchartseriesvaluelabelspacing`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesvaluelabelspacing() {_uniqueStorage()._tschchartseriesvaluelabelspacing = nil}

  var tschchartseriesvaluelabelsaxis: Int32 {
    get {return _storage._tschchartseriesvaluelabelsaxis ?? 0}
    set {_uniqueStorage()._tschchartseriesvaluelabelsaxis = newValue}
  }
  /// Returns true if `tschchartseriesvaluelabelsaxis` has been explicitly set.
  var hasTschchartseriesvaluelabelsaxis: Bool {return _storage._tschchartseriesvaluelabelsaxis != nil}
  /// Clears the value of `tschchartseriesvaluelabelsaxis`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesvaluelabelsaxis() {_uniqueStorage()._tschchartseriesvaluelabelsaxis = nil}

  var tschchartserieswedgeexplosion: Float {
    get {return _storage._tschchartserieswedgeexplosion ?? 0}
    set {_uniqueStorage()._tschchartserieswedgeexplosion = newValue}
  }
  /// Returns true if `tschchartserieswedgeexplosion` has been explicitly set.
  var hasTschchartserieswedgeexplosion: Bool {return _storage._tschchartserieswedgeexplosion != nil}
  /// Clears the value of `tschchartserieswedgeexplosion`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieswedgeexplosion() {_uniqueStorage()._tschchartserieswedgeexplosion = nil}

  var tschchartseriesyaxisordinal: Int32 {
    get {return _storage._tschchartseriesyaxisordinal ?? 0}
    set {_uniqueStorage()._tschchartseriesyaxisordinal = newValue}
  }
  /// Returns true if `tschchartseriesyaxisordinal` has been explicitly set.
  var hasTschchartseriesyaxisordinal: Bool {return _storage._tschchartseriesyaxisordinal != nil}
  /// Clears the value of `tschchartseriesyaxisordinal`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesyaxisordinal() {_uniqueStorage()._tschchartseriesyaxisordinal = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

struct TSCH_Generated_ReferenceLineGenericPropertyMapArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var tschreferencelinecustomvalue: TSCH_ChartsNSNumberDoubleArchive {
    get {return _tschreferencelinecustomvalue ?? TSCH_ChartsNSNumberDoubleArchive()}
    set {_tschreferencelinecustomvalue = newValue}
  }
  /// Returns true if `tschreferencelinecustomvalue` has been explicitly set.
  var hasTschreferencelinecustomvalue: Bool {return self._tschreferencelinecustomvalue != nil}
  /// Clears the value of `tschreferencelinecustomvalue`. Subsequent reads from it will return its default value.
  mutating func clearTschreferencelinecustomvalue() {self._tschreferencelinecustomvalue = nil}

  var tschreferencelinelabel: String {
    get {return _tschreferencelinelabel ?? String()}
    set {_tschreferencelinelabel = newValue}
  }
  /// Returns true if `tschreferencelinelabel` has been explicitly set.
  var hasTschreferencelinelabel: Bool {return self._tschreferencelinelabel != nil}
  /// Clears the value of `tschreferencelinelabel`. Subsequent reads from it will return its default value.
  mutating func clearTschreferencelinelabel() {self._tschreferencelinelabel = nil}

  var tschreferencelinelabelparagraphstyleindex: Int32 {
    get {return _tschreferencelinelabelparagraphstyleindex ?? 0}
    set {_tschreferencelinelabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschreferencelinelabelparagraphstyleindex` has been explicitly set.
  var hasTschreferencelinelabelparagraphstyleindex: Bool {return self._tschreferencelinelabelparagraphstyleindex != nil}
  /// Clears the value of `tschreferencelinelabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschreferencelinelabelparagraphstyleindex() {self._tschreferencelinelabelparagraphstyleindex = nil}

  var tschreferencelineshadow: TSD_ShadowArchive {
    get {return _tschreferencelineshadow ?? TSD_ShadowArchive()}
    set {_tschreferencelineshadow = newValue}
  }
  /// Returns true if `tschreferencelineshadow` has been explicitly set.
  var hasTschreferencelineshadow: Bool {return self._tschreferencelineshadow != nil}
  /// Clears the value of `tschreferencelineshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschreferencelineshadow() {self._tschreferencelineshadow = nil}

  var tschreferencelineshowlabel: Bool {
    get {return _tschreferencelineshowlabel ?? false}
    set {_tschreferencelineshowlabel = newValue}
  }
  /// Returns true if `tschreferencelineshowlabel` has been explicitly set.
  var hasTschreferencelineshowlabel: Bool {return self._tschreferencelineshowlabel != nil}
  /// Clears the value of `tschreferencelineshowlabel`. Subsequent reads from it will return its default value.
  mutating func clearTschreferencelineshowlabel() {self._tschreferencelineshowlabel = nil}

  var tschreferencelineshowline: Bool {
    get {return _tschreferencelineshowline ?? false}
    set {_tschreferencelineshowline = newValue}
  }
  /// Returns true if `tschreferencelineshowline` has been explicitly set.
  var hasTschreferencelineshowline: Bool {return self._tschreferencelineshowline != nil}
  /// Clears the value of `tschreferencelineshowline`. Subsequent reads from it will return its default value.
  mutating func clearTschreferencelineshowline() {self._tschreferencelineshowline = nil}

  var tschreferencelineshowvaluelabel: Bool {
    get {return _tschreferencelineshowvaluelabel ?? false}
    set {_tschreferencelineshowvaluelabel = newValue}
  }
  /// Returns true if `tschreferencelineshowvaluelabel` has been explicitly set.
  var hasTschreferencelineshowvaluelabel: Bool {return self._tschreferencelineshowvaluelabel != nil}
  /// Clears the value of `tschreferencelineshowvaluelabel`. Subsequent reads from it will return its default value.
  mutating func clearTschreferencelineshowvaluelabel() {self._tschreferencelineshowvaluelabel = nil}

  var tschreferencelinestroke: TSD_StrokeArchive {
    get {return _tschreferencelinestroke ?? TSD_StrokeArchive()}
    set {_tschreferencelinestroke = newValue}
  }
  /// Returns true if `tschreferencelinestroke` has been explicitly set.
  var hasTschreferencelinestroke: Bool {return self._tschreferencelinestroke != nil}
  /// Clears the value of `tschreferencelinestroke`. Subsequent reads from it will return its default value.
  mutating func clearTschreferencelinestroke() {self._tschreferencelinestroke = nil}

  var tschreferencelinetype: Int32 {
    get {return _tschreferencelinetype ?? 0}
    set {_tschreferencelinetype = newValue}
  }
  /// Returns true if `tschreferencelinetype` has been explicitly set.
  var hasTschreferencelinetype: Bool {return self._tschreferencelinetype != nil}
  /// Clears the value of `tschreferencelinetype`. Subsequent reads from it will return its default value.
  mutating func clearTschreferencelinetype() {self._tschreferencelinetype = nil}

  var tschreferencelinevaluelabelparagraphstyleindex: Int32 {
    get {return _tschreferencelinevaluelabelparagraphstyleindex ?? 0}
    set {_tschreferencelinevaluelabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschreferencelinevaluelabelparagraphstyleindex` has been explicitly set.
  var hasTschreferencelinevaluelabelparagraphstyleindex: Bool {return self._tschreferencelinevaluelabelparagraphstyleindex != nil}
  /// Clears the value of `tschreferencelinevaluelabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschreferencelinevaluelabelparagraphstyleindex() {self._tschreferencelinevaluelabelparagraphstyleindex = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _tschreferencelinecustomvalue: TSCH_ChartsNSNumberDoubleArchive? = nil
  fileprivate var _tschreferencelinelabel: String? = nil
  fileprivate var _tschreferencelinelabelparagraphstyleindex: Int32? = nil
  fileprivate var _tschreferencelineshadow: TSD_ShadowArchive? = nil
  fileprivate var _tschreferencelineshowlabel: Bool? = nil
  fileprivate var _tschreferencelineshowline: Bool? = nil
  fileprivate var _tschreferencelineshowvaluelabel: Bool? = nil
  fileprivate var _tschreferencelinestroke: TSD_StrokeArchive? = nil
  fileprivate var _tschreferencelinetype: Int32? = nil
  fileprivate var _tschreferencelinevaluelabelparagraphstyleindex: Int32? = nil
}

// MARK: - Extension support defined in TSCHArchives_GEN.proto.

// MARK: - Extension Properties

// Swift Extensions on the exteneded Messages to add easy access to the declared
// extension fields. The names are based on the extension field name from the proto
// declaration. To avoid naming collisions, the names are prefixed with the name of
// the scope where the extend directive occurs.

extension TSCH_ChartAxisNonStyleArchive {

  var TSCH_Generated_ChartAxisNonStyleArchive_current: TSCH_Generated_ChartAxisNonStyleArchive {
    get {return getExtensionValue(ext: TSCH_Generated_ChartAxisNonStyleArchive.Extensions.current) ?? TSCH_Generated_ChartAxisNonStyleArchive()}
    set {setExtensionValue(ext: TSCH_Generated_ChartAxisNonStyleArchive.Extensions.current, value: newValue)}
  }
  /// Returns true if extension `TSCH_Generated_ChartAxisNonStyleArchive.Extensions.current`
  /// has been explicitly set.
  var hasTSCH_Generated_ChartAxisNonStyleArchive_current: Bool {
    return hasExtensionValue(ext: TSCH_Generated_ChartAxisNonStyleArchive.Extensions.current)
  }
  /// Clears the value of extension `TSCH_Generated_ChartAxisNonStyleArchive.Extensions.current`.
  /// Subsequent reads from it will return its default value.
  mutating func clearTSCH_Generated_ChartAxisNonStyleArchive_current() {
    clearExtensionValue(ext: TSCH_Generated_ChartAxisNonStyleArchive.Extensions.current)
  }
}

extension TSCH_ChartAxisStyleArchive {

  var TSCH_Generated_ChartAxisStyleArchive_current: TSCH_Generated_ChartAxisStyleArchive {
    get {return getExtensionValue(ext: TSCH_Generated_ChartAxisStyleArchive.Extensions.current) ?? TSCH_Generated_ChartAxisStyleArchive()}
    set {setExtensionValue(ext: TSCH_Generated_ChartAxisStyleArchive.Extensions.current, value: newValue)}
  }
  /// Returns true if extension `TSCH_Generated_ChartAxisStyleArchive.Extensions.current`
  /// has been explicitly set.
  var hasTSCH_Generated_ChartAxisStyleArchive_current: Bool {
    return hasExtensionValue(ext: TSCH_Generated_ChartAxisStyleArchive.Extensions.current)
  }
  /// Clears the value of extension `TSCH_Generated_ChartAxisStyleArchive.Extensions.current`.
  /// Subsequent reads from it will return its default value.
  mutating func clearTSCH_Generated_ChartAxisStyleArchive_current() {
    clearExtensionValue(ext: TSCH_Generated_ChartAxisStyleArchive.Extensions.current)
  }
}

extension TSCH_ChartNonStyleArchive {

  var TSCH_Generated_ChartNonStyleArchive_current: TSCH_Generated_ChartNonStyleArchive {
    get {return getExtensionValue(ext: TSCH_Generated_ChartNonStyleArchive.Extensions.current) ?? TSCH_Generated_ChartNonStyleArchive()}
    set {setExtensionValue(ext: TSCH_Generated_ChartNonStyleArchive.Extensions.current, value: newValue)}
  }
  /// Returns true if extension `TSCH_Generated_ChartNonStyleArchive.Extensions.current`
  /// has been explicitly set.
  var hasTSCH_Generated_ChartNonStyleArchive_current: Bool {
    return hasExtensionValue(ext: TSCH_Generated_ChartNonStyleArchive.Extensions.current)
  }
  /// Clears the value of extension `TSCH_Generated_ChartNonStyleArchive.Extensions.current`.
  /// Subsequent reads from it will return its default value.
  mutating func clearTSCH_Generated_ChartNonStyleArchive_current() {
    clearExtensionValue(ext: TSCH_Generated_ChartNonStyleArchive.Extensions.current)
  }
}

extension TSCH_ChartSeriesNonStyleArchive {

  var TSCH_Generated_ChartSeriesNonStyleArchive_current: TSCH_Generated_ChartSeriesNonStyleArchive {
    get {return getExtensionValue(ext: TSCH_Generated_ChartSeriesNonStyleArchive.Extensions.current) ?? TSCH_Generated_ChartSeriesNonStyleArchive()}
    set {setExtensionValue(ext: TSCH_Generated_ChartSeriesNonStyleArchive.Extensions.current, value: newValue)}
  }
  /// Returns true if extension `TSCH_Generated_ChartSeriesNonStyleArchive.Extensions.current`
  /// has been explicitly set.
  var hasTSCH_Generated_ChartSeriesNonStyleArchive_current: Bool {
    return hasExtensionValue(ext: TSCH_Generated_ChartSeriesNonStyleArchive.Extensions.current)
  }
  /// Clears the value of extension `TSCH_Generated_ChartSeriesNonStyleArchive.Extensions.current`.
  /// Subsequent reads from it will return its default value.
  mutating func clearTSCH_Generated_ChartSeriesNonStyleArchive_current() {
    clearExtensionValue(ext: TSCH_Generated_ChartSeriesNonStyleArchive.Extensions.current)
  }
}

extension TSCH_ChartSeriesStyleArchive {

  var TSCH_Generated_ChartSeriesStyleArchive_current: TSCH_Generated_ChartSeriesStyleArchive {
    get {return getExtensionValue(ext: TSCH_Generated_ChartSeriesStyleArchive.Extensions.current) ?? TSCH_Generated_ChartSeriesStyleArchive()}
    set {setExtensionValue(ext: TSCH_Generated_ChartSeriesStyleArchive.Extensions.current, value: newValue)}
  }
  /// Returns true if extension `TSCH_Generated_ChartSeriesStyleArchive.Extensions.current`
  /// has been explicitly set.
  var hasTSCH_Generated_ChartSeriesStyleArchive_current: Bool {
    return hasExtensionValue(ext: TSCH_Generated_ChartSeriesStyleArchive.Extensions.current)
  }
  /// Clears the value of extension `TSCH_Generated_ChartSeriesStyleArchive.Extensions.current`.
  /// Subsequent reads from it will return its default value.
  mutating func clearTSCH_Generated_ChartSeriesStyleArchive_current() {
    clearExtensionValue(ext: TSCH_Generated_ChartSeriesStyleArchive.Extensions.current)
  }
}

extension TSCH_ChartStyleArchive {

  var TSCH_Generated_ChartStyleArchive_current: TSCH_Generated_ChartStyleArchive {
    get {return getExtensionValue(ext: TSCH_Generated_ChartStyleArchive.Extensions.current) ?? TSCH_Generated_ChartStyleArchive()}
    set {setExtensionValue(ext: TSCH_Generated_ChartStyleArchive.Extensions.current, value: newValue)}
  }
  /// Returns true if extension `TSCH_Generated_ChartStyleArchive.Extensions.current`
  /// has been explicitly set.
  var hasTSCH_Generated_ChartStyleArchive_current: Bool {
    return hasExtensionValue(ext: TSCH_Generated_ChartStyleArchive.Extensions.current)
  }
  /// Clears the value of extension `TSCH_Generated_ChartStyleArchive.Extensions.current`.
  /// Subsequent reads from it will return its default value.
  mutating func clearTSCH_Generated_ChartStyleArchive_current() {
    clearExtensionValue(ext: TSCH_Generated_ChartStyleArchive.Extensions.current)
  }
}

extension TSCH_LegendNonStyleArchive {

  var TSCH_Generated_LegendNonStyleArchive_current: TSCH_Generated_LegendNonStyleArchive {
    get {return getExtensionValue(ext: TSCH_Generated_LegendNonStyleArchive.Extensions.current) ?? TSCH_Generated_LegendNonStyleArchive()}
    set {setExtensionValue(ext: TSCH_Generated_LegendNonStyleArchive.Extensions.current, value: newValue)}
  }
  /// Returns true if extension `TSCH_Generated_LegendNonStyleArchive.Extensions.current`
  /// has been explicitly set.
  var hasTSCH_Generated_LegendNonStyleArchive_current: Bool {
    return hasExtensionValue(ext: TSCH_Generated_LegendNonStyleArchive.Extensions.current)
  }
  /// Clears the value of extension `TSCH_Generated_LegendNonStyleArchive.Extensions.current`.
  /// Subsequent reads from it will return its default value.
  mutating func clearTSCH_Generated_LegendNonStyleArchive_current() {
    clearExtensionValue(ext: TSCH_Generated_LegendNonStyleArchive.Extensions.current)
  }
}

extension TSCH_LegendStyleArchive {

  var TSCH_Generated_LegendStyleArchive_current: TSCH_Generated_LegendStyleArchive {
    get {return getExtensionValue(ext: TSCH_Generated_LegendStyleArchive.Extensions.current) ?? TSCH_Generated_LegendStyleArchive()}
    set {setExtensionValue(ext: TSCH_Generated_LegendStyleArchive.Extensions.current, value: newValue)}
  }
  /// Returns true if extension `TSCH_Generated_LegendStyleArchive.Extensions.current`
  /// has been explicitly set.
  var hasTSCH_Generated_LegendStyleArchive_current: Bool {
    return hasExtensionValue(ext: TSCH_Generated_LegendStyleArchive.Extensions.current)
  }
  /// Clears the value of extension `TSCH_Generated_LegendStyleArchive.Extensions.current`.
  /// Subsequent reads from it will return its default value.
  mutating func clearTSCH_Generated_LegendStyleArchive_current() {
    clearExtensionValue(ext: TSCH_Generated_LegendStyleArchive.Extensions.current)
  }
}

extension TSCH_ReferenceLineNonStyleArchive {

  var TSCH_Generated_ReferenceLineNonStyleArchive_current: TSCH_Generated_ReferenceLineNonStyleArchive {
    get {return getExtensionValue(ext: TSCH_Generated_ReferenceLineNonStyleArchive.Extensions.current) ?? TSCH_Generated_ReferenceLineNonStyleArchive()}
    set {setExtensionValue(ext: TSCH_Generated_ReferenceLineNonStyleArchive.Extensions.current, value: newValue)}
  }
  /// Returns true if extension `TSCH_Generated_ReferenceLineNonStyleArchive.Extensions.current`
  /// has been explicitly set.
  var hasTSCH_Generated_ReferenceLineNonStyleArchive_current: Bool {
    return hasExtensionValue(ext: TSCH_Generated_ReferenceLineNonStyleArchive.Extensions.current)
  }
  /// Clears the value of extension `TSCH_Generated_ReferenceLineNonStyleArchive.Extensions.current`.
  /// Subsequent reads from it will return its default value.
  mutating func clearTSCH_Generated_ReferenceLineNonStyleArchive_current() {
    clearExtensionValue(ext: TSCH_Generated_ReferenceLineNonStyleArchive.Extensions.current)
  }
}

extension TSCH_ReferenceLineStyleArchive {

  var TSCH_Generated_ReferenceLineStyleArchive_current: TSCH_Generated_ReferenceLineStyleArchive {
    get {return getExtensionValue(ext: TSCH_Generated_ReferenceLineStyleArchive.Extensions.current) ?? TSCH_Generated_ReferenceLineStyleArchive()}
    set {setExtensionValue(ext: TSCH_Generated_ReferenceLineStyleArchive.Extensions.current, value: newValue)}
  }
  /// Returns true if extension `TSCH_Generated_ReferenceLineStyleArchive.Extensions.current`
  /// has been explicitly set.
  var hasTSCH_Generated_ReferenceLineStyleArchive_current: Bool {
    return hasExtensionValue(ext: TSCH_Generated_ReferenceLineStyleArchive.Extensions.current)
  }
  /// Clears the value of extension `TSCH_Generated_ReferenceLineStyleArchive.Extensions.current`.
  /// Subsequent reads from it will return its default value.
  mutating func clearTSCH_Generated_ReferenceLineStyleArchive_current() {
    clearExtensionValue(ext: TSCH_Generated_ReferenceLineStyleArchive.Extensions.current)
  }

}

// MARK: - File's ExtensionMap: TSCH_Generated_TscharchivesGen_Extensions

/// A `SwiftProtobuf.SimpleExtensionMap` that includes all of the extensions defined by
/// this .proto file. It can be used any place an `SwiftProtobuf.ExtensionMap` is needed
/// in parsing, or it can be combined with other `SwiftProtobuf.SimpleExtensionMap`s to create
/// a larger `SwiftProtobuf.SimpleExtensionMap`.
let TSCH_Generated_TscharchivesGen_Extensions: SwiftProtobuf.SimpleExtensionMap = [
  TSCH_Generated_ChartStyleArchive.Extensions.current,
  TSCH_Generated_ChartNonStyleArchive.Extensions.current,
  TSCH_Generated_LegendStyleArchive.Extensions.current,
  TSCH_Generated_LegendNonStyleArchive.Extensions.current,
  TSCH_Generated_ChartAxisStyleArchive.Extensions.current,
  TSCH_Generated_ChartAxisNonStyleArchive.Extensions.current,
  TSCH_Generated_ChartSeriesStyleArchive.Extensions.current,
  TSCH_Generated_ChartSeriesNonStyleArchive.Extensions.current,
  TSCH_Generated_ReferenceLineStyleArchive.Extensions.current,
  TSCH_Generated_ReferenceLineNonStyleArchive.Extensions.current
]

// Extension Objects - The only reason these might be needed is when manually
// constructing a `SimpleExtensionMap`, otherwise, use the above _Extension Properties_
// accessors for the extension fields on the messages directly.

extension TSCH_Generated_ChartStyleArchive {
  enum Extensions {
    static let current = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalMessageExtensionField<TSCH_Generated_ChartStyleArchive>, TSCH_ChartStyleArchive>(
      _protobuf_fieldNumber: 10000,
      fieldName: "TSCH.Generated.ChartStyleArchive.current"
    )
  }
}

extension TSCH_Generated_ChartNonStyleArchive {
  enum Extensions {
    static let current = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalMessageExtensionField<TSCH_Generated_ChartNonStyleArchive>, TSCH_ChartNonStyleArchive>(
      _protobuf_fieldNumber: 10000,
      fieldName: "TSCH.Generated.ChartNonStyleArchive.current"
    )
  }
}

extension TSCH_Generated_LegendStyleArchive {
  enum Extensions {
    static let current = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalMessageExtensionField<TSCH_Generated_LegendStyleArchive>, TSCH_LegendStyleArchive>(
      _protobuf_fieldNumber: 10000,
      fieldName: "TSCH.Generated.LegendStyleArchive.current"
    )
  }
}

extension TSCH_Generated_LegendNonStyleArchive {
  enum Extensions {
    static let current = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalMessageExtensionField<TSCH_Generated_LegendNonStyleArchive>, TSCH_LegendNonStyleArchive>(
      _protobuf_fieldNumber: 10000,
      fieldName: "TSCH.Generated.LegendNonStyleArchive.current"
    )
  }
}

extension TSCH_Generated_ChartAxisStyleArchive {
  enum Extensions {
    static let current = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalMessageExtensionField<TSCH_Generated_ChartAxisStyleArchive>, TSCH_ChartAxisStyleArchive>(
      _protobuf_fieldNumber: 10000,
      fieldName: "TSCH.Generated.ChartAxisStyleArchive.current"
    )
  }
}

extension TSCH_Generated_ChartAxisNonStyleArchive {
  enum Extensions {
    static let current = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalMessageExtensionField<TSCH_Generated_ChartAxisNonStyleArchive>, TSCH_ChartAxisNonStyleArchive>(
      _protobuf_fieldNumber: 10000,
      fieldName: "TSCH.Generated.ChartAxisNonStyleArchive.current"
    )
  }
}

extension TSCH_Generated_ChartSeriesStyleArchive {
  enum Extensions {
    static let current = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalMessageExtensionField<TSCH_Generated_ChartSeriesStyleArchive>, TSCH_ChartSeriesStyleArchive>(
      _protobuf_fieldNumber: 10000,
      fieldName: "TSCH.Generated.ChartSeriesStyleArchive.current"
    )
  }
}

extension TSCH_Generated_ChartSeriesNonStyleArchive {
  enum Extensions {
    static let current = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalMessageExtensionField<TSCH_Generated_ChartSeriesNonStyleArchive>, TSCH_ChartSeriesNonStyleArchive>(
      _protobuf_fieldNumber: 10000,
      fieldName: "TSCH.Generated.ChartSeriesNonStyleArchive.current"
    )
  }
}

extension TSCH_Generated_ReferenceLineStyleArchive {
  enum Extensions {
    static let current = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalMessageExtensionField<TSCH_Generated_ReferenceLineStyleArchive>, TSCH_ReferenceLineStyleArchive>(
      _protobuf_fieldNumber: 10000,
      fieldName: "TSCH.Generated.ReferenceLineStyleArchive.current"
    )
  }
}

extension TSCH_Generated_ReferenceLineNonStyleArchive {
  enum Extensions {
    static let current = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalMessageExtensionField<TSCH_Generated_ReferenceLineNonStyleArchive>, TSCH_ReferenceLineNonStyleArchive>(
      _protobuf_fieldNumber: 10000,
      fieldName: "TSCH.Generated.ReferenceLineNonStyleArchive.current"
    )
  }
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "TSCH.Generated"

extension TSCH_Generated_ChartStyleArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ChartStyleArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "tschchartinfodefault3dchartopacity"),
    2: .same(proto: "tschchartinfoarea3dlightingpackage"),
    3: .same(proto: "tschchartinfobar3dlightingpackage"),
    4: .same(proto: "tschchartinfocolumn3dlightingpackage"),
    5: .same(proto: "tschchartinfodefault3dlightingpackage"),
    6: .same(proto: "tschchartinfoline3dlightingpackage"),
    7: .same(proto: "tschchartinfopie3dlightingpackage"),
    8: .same(proto: "tschchartinfodefaultbackgroundfill"),
    9: .same(proto: "tschchartinfodefaultbackgroundstroke"),
    10: .same(proto: "tschchartinfodefaultborderopacity"),
    11: .same(proto: "tschchartinfodefaultbordershadow"),
    12: .same(proto: "tschchartinfodefaultborderstroke"),
    13: .same(proto: "tschchartinfodefaultcombinelayers"),
    21: .same(proto: "tschchartinfodefaultdatasetnameparagraphstyleindex"),
    14: .same(proto: "tschchartinfodefaultgridbackgroundfill"),
    15: .same(proto: "tschchartinfodefaultgridbackgroundopacity"),
    16: .same(proto: "tschchartinfodefaultinterbargap"),
    17: .same(proto: "tschchartinfodefaultintersetgap"),
    123: .same(proto: "tschchartinfodefaultroundedcornerouterendonly"),
    122: .same(proto: "tschchartinfodefaultroundedcornerradius"),
    18: .same(proto: "tschchartinfodefaultshowborder"),
    19: .same(proto: "tschchartinfodefaulttitlecolor"),
    20: .same(proto: "tschchartinfodefaulttitleparagraphstyleindex"),
  ]

  fileprivate class _StorageClass {
    var _tschchartinfodefault3Dchartopacity: Float? = nil
    var _tschchartinfoarea3Dlightingpackage: TSCH_Chart3DLightingPackageArchive? = nil
    var _tschchartinfobar3Dlightingpackage: TSCH_Chart3DLightingPackageArchive? = nil
    var _tschchartinfocolumn3Dlightingpackage: TSCH_Chart3DLightingPackageArchive? = nil
    var _tschchartinfodefault3Dlightingpackage: TSCH_Chart3DLightingPackageArchive? = nil
    var _tschchartinfoline3Dlightingpackage: TSCH_Chart3DLightingPackageArchive? = nil
    var _tschchartinfopie3Dlightingpackage: TSCH_Chart3DLightingPackageArchive? = nil
    var _tschchartinfodefaultbackgroundfill: TSD_FillArchive? = nil
    var _tschchartinfodefaultbackgroundstroke: TSD_StrokeArchive? = nil
    var _tschchartinfodefaultborderopacity: Float? = nil
    var _tschchartinfodefaultbordershadow: TSD_ShadowArchive? = nil
    var _tschchartinfodefaultborderstroke: TSD_StrokeArchive? = nil
    var _tschchartinfodefaultcombinelayers: Bool? = nil
    var _tschchartinfodefaultdatasetnameparagraphstyleindex: Int32? = nil
    var _tschchartinfodefaultgridbackgroundfill: TSD_FillArchive? = nil
    var _tschchartinfodefaultgridbackgroundopacity: Float? = nil
    var _tschchartinfodefaultinterbargap: Float? = nil
    var _tschchartinfodefaultintersetgap: Float? = nil
    var _tschchartinfodefaultroundedcornerouterendonly: Bool? = nil
    var _tschchartinfodefaultroundedcornerradius: Float? = nil
    var _tschchartinfodefaultshowborder: Bool? = nil
    var _tschchartinfodefaulttitlecolor: TSP_Color? = nil
    var _tschchartinfodefaulttitleparagraphstyleindex: Int32? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _tschchartinfodefault3Dchartopacity = source._tschchartinfodefault3Dchartopacity
      _tschchartinfoarea3Dlightingpackage = source._tschchartinfoarea3Dlightingpackage
      _tschchartinfobar3Dlightingpackage = source._tschchartinfobar3Dlightingpackage
      _tschchartinfocolumn3Dlightingpackage = source._tschchartinfocolumn3Dlightingpackage
      _tschchartinfodefault3Dlightingpackage = source._tschchartinfodefault3Dlightingpackage
      _tschchartinfoline3Dlightingpackage = source._tschchartinfoline3Dlightingpackage
      _tschchartinfopie3Dlightingpackage = source._tschchartinfopie3Dlightingpackage
      _tschchartinfodefaultbackgroundfill = source._tschchartinfodefaultbackgroundfill
      _tschchartinfodefaultbackgroundstroke = source._tschchartinfodefaultbackgroundstroke
      _tschchartinfodefaultborderopacity = source._tschchartinfodefaultborderopacity
      _tschchartinfodefaultbordershadow = source._tschchartinfodefaultbordershadow
      _tschchartinfodefaultborderstroke = source._tschchartinfodefaultborderstroke
      _tschchartinfodefaultcombinelayers = source._tschchartinfodefaultcombinelayers
      _tschchartinfodefaultdatasetnameparagraphstyleindex = source._tschchartinfodefaultdatasetnameparagraphstyleindex
      _tschchartinfodefaultgridbackgroundfill = source._tschchartinfodefaultgridbackgroundfill
      _tschchartinfodefaultgridbackgroundopacity = source._tschchartinfodefaultgridbackgroundopacity
      _tschchartinfodefaultinterbargap = source._tschchartinfodefaultinterbargap
      _tschchartinfodefaultintersetgap = source._tschchartinfodefaultintersetgap
      _tschchartinfodefaultroundedcornerouterendonly = source._tschchartinfodefaultroundedcornerouterendonly
      _tschchartinfodefaultroundedcornerradius = source._tschchartinfodefaultroundedcornerradius
      _tschchartinfodefaultshowborder = source._tschchartinfodefaultshowborder
      _tschchartinfodefaulttitlecolor = source._tschchartinfodefaulttitlecolor
      _tschchartinfodefaulttitleparagraphstyleindex = source._tschchartinfodefaulttitleparagraphstyleindex
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._tschchartinfoarea3Dlightingpackage, !v.isInitialized {return false}
      if let v = _storage._tschchartinfobar3Dlightingpackage, !v.isInitialized {return false}
      if let v = _storage._tschchartinfocolumn3Dlightingpackage, !v.isInitialized {return false}
      if let v = _storage._tschchartinfodefault3Dlightingpackage, !v.isInitialized {return false}
      if let v = _storage._tschchartinfoline3Dlightingpackage, !v.isInitialized {return false}
      if let v = _storage._tschchartinfopie3Dlightingpackage, !v.isInitialized {return false}
      if let v = _storage._tschchartinfodefaultbackgroundfill, !v.isInitialized {return false}
      if let v = _storage._tschchartinfodefaultbackgroundstroke, !v.isInitialized {return false}
      if let v = _storage._tschchartinfodefaultbordershadow, !v.isInitialized {return false}
      if let v = _storage._tschchartinfodefaultborderstroke, !v.isInitialized {return false}
      if let v = _storage._tschchartinfodefaultgridbackgroundfill, !v.isInitialized {return false}
      if let v = _storage._tschchartinfodefaulttitlecolor, !v.isInitialized {return false}
      return true
    }
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularFloatField(value: &_storage._tschchartinfodefault3Dchartopacity)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfoarea3Dlightingpackage)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfobar3Dlightingpackage)
        case 4: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfocolumn3Dlightingpackage)
        case 5: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfodefault3Dlightingpackage)
        case 6: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfoline3Dlightingpackage)
        case 7: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfopie3Dlightingpackage)
        case 8: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfodefaultbackgroundfill)
        case 9: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfodefaultbackgroundstroke)
        case 10: try decoder.decodeSingularFloatField(value: &_storage._tschchartinfodefaultborderopacity)
        case 11: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfodefaultbordershadow)
        case 12: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfodefaultborderstroke)
        case 13: try decoder.decodeSingularBoolField(value: &_storage._tschchartinfodefaultcombinelayers)
        case 14: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfodefaultgridbackgroundfill)
        case 15: try decoder.decodeSingularFloatField(value: &_storage._tschchartinfodefaultgridbackgroundopacity)
        case 16: try decoder.decodeSingularFloatField(value: &_storage._tschchartinfodefaultinterbargap)
        case 17: try decoder.decodeSingularFloatField(value: &_storage._tschchartinfodefaultintersetgap)
        case 18: try decoder.decodeSingularBoolField(value: &_storage._tschchartinfodefaultshowborder)
        case 19: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfodefaulttitlecolor)
        case 20: try decoder.decodeSingularInt32Field(value: &_storage._tschchartinfodefaulttitleparagraphstyleindex)
        case 21: try decoder.decodeSingularInt32Field(value: &_storage._tschchartinfodefaultdatasetnameparagraphstyleindex)
        case 122: try decoder.decodeSingularFloatField(value: &_storage._tschchartinfodefaultroundedcornerradius)
        case 123: try decoder.decodeSingularBoolField(value: &_storage._tschchartinfodefaultroundedcornerouterendonly)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._tschchartinfodefault3Dchartopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 1)
      }
      if let v = _storage._tschchartinfoarea3Dlightingpackage {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._tschchartinfobar3Dlightingpackage {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if let v = _storage._tschchartinfocolumn3Dlightingpackage {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
      if let v = _storage._tschchartinfodefault3Dlightingpackage {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      }
      if let v = _storage._tschchartinfoline3Dlightingpackage {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
      }
      if let v = _storage._tschchartinfopie3Dlightingpackage {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      }
      if let v = _storage._tschchartinfodefaultbackgroundfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
      }
      if let v = _storage._tschchartinfodefaultbackgroundstroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 9)
      }
      if let v = _storage._tschchartinfodefaultborderopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 10)
      }
      if let v = _storage._tschchartinfodefaultbordershadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 11)
      }
      if let v = _storage._tschchartinfodefaultborderstroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 12)
      }
      if let v = _storage._tschchartinfodefaultcombinelayers {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 13)
      }
      if let v = _storage._tschchartinfodefaultgridbackgroundfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 14)
      }
      if let v = _storage._tschchartinfodefaultgridbackgroundopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 15)
      }
      if let v = _storage._tschchartinfodefaultinterbargap {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 16)
      }
      if let v = _storage._tschchartinfodefaultintersetgap {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 17)
      }
      if let v = _storage._tschchartinfodefaultshowborder {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 18)
      }
      if let v = _storage._tschchartinfodefaulttitlecolor {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 19)
      }
      if let v = _storage._tschchartinfodefaulttitleparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 20)
      }
      if let v = _storage._tschchartinfodefaultdatasetnameparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 21)
      }
      if let v = _storage._tschchartinfodefaultroundedcornerradius {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 122)
      }
      if let v = _storage._tschchartinfodefaultroundedcornerouterendonly {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 123)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSCH_Generated_ChartStyleArchive, rhs: TSCH_Generated_ChartStyleArchive) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._tschchartinfodefault3Dchartopacity != rhs_storage._tschchartinfodefault3Dchartopacity {return false}
        if _storage._tschchartinfoarea3Dlightingpackage != rhs_storage._tschchartinfoarea3Dlightingpackage {return false}
        if _storage._tschchartinfobar3Dlightingpackage != rhs_storage._tschchartinfobar3Dlightingpackage {return false}
        if _storage._tschchartinfocolumn3Dlightingpackage != rhs_storage._tschchartinfocolumn3Dlightingpackage {return false}
        if _storage._tschchartinfodefault3Dlightingpackage != rhs_storage._tschchartinfodefault3Dlightingpackage {return false}
        if _storage._tschchartinfoline3Dlightingpackage != rhs_storage._tschchartinfoline3Dlightingpackage {return false}
        if _storage._tschchartinfopie3Dlightingpackage != rhs_storage._tschchartinfopie3Dlightingpackage {return false}
        if _storage._tschchartinfodefaultbackgroundfill != rhs_storage._tschchartinfodefaultbackgroundfill {return false}
        if _storage._tschchartinfodefaultbackgroundstroke != rhs_storage._tschchartinfodefaultbackgroundstroke {return false}
        if _storage._tschchartinfodefaultborderopacity != rhs_storage._tschchartinfodefaultborderopacity {return false}
        if _storage._tschchartinfodefaultbordershadow != rhs_storage._tschchartinfodefaultbordershadow {return false}
        if _storage._tschchartinfodefaultborderstroke != rhs_storage._tschchartinfodefaultborderstroke {return false}
        if _storage._tschchartinfodefaultcombinelayers != rhs_storage._tschchartinfodefaultcombinelayers {return false}
        if _storage._tschchartinfodefaultdatasetnameparagraphstyleindex != rhs_storage._tschchartinfodefaultdatasetnameparagraphstyleindex {return false}
        if _storage._tschchartinfodefaultgridbackgroundfill != rhs_storage._tschchartinfodefaultgridbackgroundfill {return false}
        if _storage._tschchartinfodefaultgridbackgroundopacity != rhs_storage._tschchartinfodefaultgridbackgroundopacity {return false}
        if _storage._tschchartinfodefaultinterbargap != rhs_storage._tschchartinfodefaultinterbargap {return false}
        if _storage._tschchartinfodefaultintersetgap != rhs_storage._tschchartinfodefaultintersetgap {return false}
        if _storage._tschchartinfodefaultroundedcornerouterendonly != rhs_storage._tschchartinfodefaultroundedcornerouterendonly {return false}
        if _storage._tschchartinfodefaultroundedcornerradius != rhs_storage._tschchartinfodefaultroundedcornerradius {return false}
        if _storage._tschchartinfodefaultshowborder != rhs_storage._tschchartinfodefaultshowborder {return false}
        if _storage._tschchartinfodefaulttitlecolor != rhs_storage._tschchartinfodefaulttitlecolor {return false}
        if _storage._tschchartinfodefaulttitleparagraphstyleindex != rhs_storage._tschchartinfodefaulttitleparagraphstyleindex {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSCH_Generated_ChartNonStyleArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ChartNonStyleArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "tschchartinfodefault3dbarshape"),
    2: .same(proto: "tschchartinfodefault3dbeveledges"),
    3: .same(proto: "tschchartinfodefault3dintersetdepthgap"),
    4: .same(proto: "tschchartinfodefault3drotation"),
    5: .same(proto: "tschchartinfoarea3dscale"),
    6: .same(proto: "tschchartinfobar3dscale"),
    7: .same(proto: "tschchartinfocolumn3dscale"),
    8: .same(proto: "tschchartinfodefault3dscale"),
    9: .same(proto: "tschchartinfoline3dscale"),
    10: .same(proto: "tschchartinfopie3dscale"),
    11: .same(proto: "tschchartinfodefault3dviewport"),
    112: .same(proto: "tschchartinfoareacalloutlinetype"),
    113: .same(proto: "tschchartinfobarcalloutlinetype"),
    114: .same(proto: "tschchartinfobubblecalloutlinetype"),
    119: .same(proto: "tschchartinfodefaultcalloutlinetype"),
    115: .same(proto: "tschchartinfolinecalloutlinetype"),
    111: .same(proto: "tschchartinfopiecalloutlinetype"),
    116: .same(proto: "tschchartinfoscattercalloutlinetype"),
    117: .same(proto: "tschchartinfostackedareacalloutlinetype"),
    118: .same(proto: "tschchartinfostackedbarcalloutlinetype"),
    121: .same(proto: "tschchartinfodefaultdeprecatedroundedcornerouterendonly"),
    120: .same(proto: "tschchartinfodefaultdeprecatedroundedcornerradius"),
    24: .same(proto: "tschchartinfodefaultdatasetnamelocation"),
    28: .same(proto: "tschchartinfodefaultdonutplacetitleatcenter"),
    27: .same(proto: "tschchartinfodefaultinnerradius"),
    25: .same(proto: "tschchartinfodefaultmultidatacontroltype"),
    19: .same(proto: "tschchartinfodefaultpiestartangle"),
    20: .same(proto: "tschchartinfodefaultshowlegend"),
    21: .same(proto: "tschchartinfodefaultshowtitle"),
    22: .same(proto: "tschchartinfodefaultskiphiddendata"),
    23: .same(proto: "tschchartinfodefaulttitle"),
  ]

  fileprivate class _StorageClass {
    var _tschchartinfodefault3Dbarshape: Int32? = nil
    var _tschchartinfodefault3Dbeveledges: Bool? = nil
    var _tschchartinfodefault3Dintersetdepthgap: Float? = nil
    var _tschchartinfodefault3Drotation: TSCH_Chart3DVectorArchive? = nil
    var _tschchartinfoarea3Dscale: TSCH_Chart3DVectorArchive? = nil
    var _tschchartinfobar3Dscale: TSCH_Chart3DVectorArchive? = nil
    var _tschchartinfocolumn3Dscale: TSCH_Chart3DVectorArchive? = nil
    var _tschchartinfodefault3Dscale: TSCH_Chart3DVectorArchive? = nil
    var _tschchartinfoline3Dscale: TSCH_Chart3DVectorArchive? = nil
    var _tschchartinfopie3Dscale: TSCH_Chart3DVectorArchive? = nil
    var _tschchartinfodefault3Dviewport: TSCH_Chart3DVectorArchive? = nil
    var _tschchartinfoareacalloutlinetype: Int32? = nil
    var _tschchartinfobarcalloutlinetype: Int32? = nil
    var _tschchartinfobubblecalloutlinetype: Int32? = nil
    var _tschchartinfodefaultcalloutlinetype: Int32? = nil
    var _tschchartinfolinecalloutlinetype: Int32? = nil
    var _tschchartinfopiecalloutlinetype: Int32? = nil
    var _tschchartinfoscattercalloutlinetype: Int32? = nil
    var _tschchartinfostackedareacalloutlinetype: Int32? = nil
    var _tschchartinfostackedbarcalloutlinetype: Int32? = nil
    var _tschchartinfodefaultdeprecatedroundedcornerouterendonly: Bool? = nil
    var _tschchartinfodefaultdeprecatedroundedcornerradius: Float? = nil
    var _tschchartinfodefaultdatasetnamelocation: Int32? = nil
    var _tschchartinfodefaultdonutplacetitleatcenter: Bool? = nil
    var _tschchartinfodefaultinnerradius: Float? = nil
    var _tschchartinfodefaultmultidatacontroltype: Int32? = nil
    var _tschchartinfodefaultpiestartangle: Float? = nil
    var _tschchartinfodefaultshowlegend: Bool? = nil
    var _tschchartinfodefaultshowtitle: Bool? = nil
    var _tschchartinfodefaultskiphiddendata: Bool? = nil
    var _tschchartinfodefaulttitle: String? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _tschchartinfodefault3Dbarshape = source._tschchartinfodefault3Dbarshape
      _tschchartinfodefault3Dbeveledges = source._tschchartinfodefault3Dbeveledges
      _tschchartinfodefault3Dintersetdepthgap = source._tschchartinfodefault3Dintersetdepthgap
      _tschchartinfodefault3Drotation = source._tschchartinfodefault3Drotation
      _tschchartinfoarea3Dscale = source._tschchartinfoarea3Dscale
      _tschchartinfobar3Dscale = source._tschchartinfobar3Dscale
      _tschchartinfocolumn3Dscale = source._tschchartinfocolumn3Dscale
      _tschchartinfodefault3Dscale = source._tschchartinfodefault3Dscale
      _tschchartinfoline3Dscale = source._tschchartinfoline3Dscale
      _tschchartinfopie3Dscale = source._tschchartinfopie3Dscale
      _tschchartinfodefault3Dviewport = source._tschchartinfodefault3Dviewport
      _tschchartinfoareacalloutlinetype = source._tschchartinfoareacalloutlinetype
      _tschchartinfobarcalloutlinetype = source._tschchartinfobarcalloutlinetype
      _tschchartinfobubblecalloutlinetype = source._tschchartinfobubblecalloutlinetype
      _tschchartinfodefaultcalloutlinetype = source._tschchartinfodefaultcalloutlinetype
      _tschchartinfolinecalloutlinetype = source._tschchartinfolinecalloutlinetype
      _tschchartinfopiecalloutlinetype = source._tschchartinfopiecalloutlinetype
      _tschchartinfoscattercalloutlinetype = source._tschchartinfoscattercalloutlinetype
      _tschchartinfostackedareacalloutlinetype = source._tschchartinfostackedareacalloutlinetype
      _tschchartinfostackedbarcalloutlinetype = source._tschchartinfostackedbarcalloutlinetype
      _tschchartinfodefaultdeprecatedroundedcornerouterendonly = source._tschchartinfodefaultdeprecatedroundedcornerouterendonly
      _tschchartinfodefaultdeprecatedroundedcornerradius = source._tschchartinfodefaultdeprecatedroundedcornerradius
      _tschchartinfodefaultdatasetnamelocation = source._tschchartinfodefaultdatasetnamelocation
      _tschchartinfodefaultdonutplacetitleatcenter = source._tschchartinfodefaultdonutplacetitleatcenter
      _tschchartinfodefaultinnerradius = source._tschchartinfodefaultinnerradius
      _tschchartinfodefaultmultidatacontroltype = source._tschchartinfodefaultmultidatacontroltype
      _tschchartinfodefaultpiestartangle = source._tschchartinfodefaultpiestartangle
      _tschchartinfodefaultshowlegend = source._tschchartinfodefaultshowlegend
      _tschchartinfodefaultshowtitle = source._tschchartinfodefaultshowtitle
      _tschchartinfodefaultskiphiddendata = source._tschchartinfodefaultskiphiddendata
      _tschchartinfodefaulttitle = source._tschchartinfodefaulttitle
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._tschchartinfodefault3Drotation, !v.isInitialized {return false}
      if let v = _storage._tschchartinfoarea3Dscale, !v.isInitialized {return false}
      if let v = _storage._tschchartinfobar3Dscale, !v.isInitialized {return false}
      if let v = _storage._tschchartinfocolumn3Dscale, !v.isInitialized {return false}
      if let v = _storage._tschchartinfodefault3Dscale, !v.isInitialized {return false}
      if let v = _storage._tschchartinfoline3Dscale, !v.isInitialized {return false}
      if let v = _storage._tschchartinfopie3Dscale, !v.isInitialized {return false}
      if let v = _storage._tschchartinfodefault3Dviewport, !v.isInitialized {return false}
      return true
    }
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularInt32Field(value: &_storage._tschchartinfodefault3Dbarshape)
        case 2: try decoder.decodeSingularBoolField(value: &_storage._tschchartinfodefault3Dbeveledges)
        case 3: try decoder.decodeSingularFloatField(value: &_storage._tschchartinfodefault3Dintersetdepthgap)
        case 4: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfodefault3Drotation)
        case 5: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfoarea3Dscale)
        case 6: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfobar3Dscale)
        case 7: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfocolumn3Dscale)
        case 8: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfodefault3Dscale)
        case 9: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfoline3Dscale)
        case 10: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfopie3Dscale)
        case 11: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfodefault3Dviewport)
        case 19: try decoder.decodeSingularFloatField(value: &_storage._tschchartinfodefaultpiestartangle)
        case 20: try decoder.decodeSingularBoolField(value: &_storage._tschchartinfodefaultshowlegend)
        case 21: try decoder.decodeSingularBoolField(value: &_storage._tschchartinfodefaultshowtitle)
        case 22: try decoder.decodeSingularBoolField(value: &_storage._tschchartinfodefaultskiphiddendata)
        case 23: try decoder.decodeSingularStringField(value: &_storage._tschchartinfodefaulttitle)
        case 24: try decoder.decodeSingularInt32Field(value: &_storage._tschchartinfodefaultdatasetnamelocation)
        case 25: try decoder.decodeSingularInt32Field(value: &_storage._tschchartinfodefaultmultidatacontroltype)
        case 27: try decoder.decodeSingularFloatField(value: &_storage._tschchartinfodefaultinnerradius)
        case 28: try decoder.decodeSingularBoolField(value: &_storage._tschchartinfodefaultdonutplacetitleatcenter)
        case 111: try decoder.decodeSingularInt32Field(value: &_storage._tschchartinfopiecalloutlinetype)
        case 112: try decoder.decodeSingularInt32Field(value: &_storage._tschchartinfoareacalloutlinetype)
        case 113: try decoder.decodeSingularInt32Field(value: &_storage._tschchartinfobarcalloutlinetype)
        case 114: try decoder.decodeSingularInt32Field(value: &_storage._tschchartinfobubblecalloutlinetype)
        case 115: try decoder.decodeSingularInt32Field(value: &_storage._tschchartinfolinecalloutlinetype)
        case 116: try decoder.decodeSingularInt32Field(value: &_storage._tschchartinfoscattercalloutlinetype)
        case 117: try decoder.decodeSingularInt32Field(value: &_storage._tschchartinfostackedareacalloutlinetype)
        case 118: try decoder.decodeSingularInt32Field(value: &_storage._tschchartinfostackedbarcalloutlinetype)
        case 119: try decoder.decodeSingularInt32Field(value: &_storage._tschchartinfodefaultcalloutlinetype)
        case 120: try decoder.decodeSingularFloatField(value: &_storage._tschchartinfodefaultdeprecatedroundedcornerradius)
        case 121: try decoder.decodeSingularBoolField(value: &_storage._tschchartinfodefaultdeprecatedroundedcornerouterendonly)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._tschchartinfodefault3Dbarshape {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 1)
      }
      if let v = _storage._tschchartinfodefault3Dbeveledges {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 2)
      }
      if let v = _storage._tschchartinfodefault3Dintersetdepthgap {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 3)
      }
      if let v = _storage._tschchartinfodefault3Drotation {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
      if let v = _storage._tschchartinfoarea3Dscale {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      }
      if let v = _storage._tschchartinfobar3Dscale {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
      }
      if let v = _storage._tschchartinfocolumn3Dscale {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      }
      if let v = _storage._tschchartinfodefault3Dscale {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
      }
      if let v = _storage._tschchartinfoline3Dscale {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 9)
      }
      if let v = _storage._tschchartinfopie3Dscale {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 10)
      }
      if let v = _storage._tschchartinfodefault3Dviewport {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 11)
      }
      if let v = _storage._tschchartinfodefaultpiestartangle {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 19)
      }
      if let v = _storage._tschchartinfodefaultshowlegend {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 20)
      }
      if let v = _storage._tschchartinfodefaultshowtitle {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 21)
      }
      if let v = _storage._tschchartinfodefaultskiphiddendata {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 22)
      }
      if let v = _storage._tschchartinfodefaulttitle {
        try visitor.visitSingularStringField(value: v, fieldNumber: 23)
      }
      if let v = _storage._tschchartinfodefaultdatasetnamelocation {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 24)
      }
      if let v = _storage._tschchartinfodefaultmultidatacontroltype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 25)
      }
      if let v = _storage._tschchartinfodefaultinnerradius {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 27)
      }
      if let v = _storage._tschchartinfodefaultdonutplacetitleatcenter {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 28)
      }
      if let v = _storage._tschchartinfopiecalloutlinetype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 111)
      }
      if let v = _storage._tschchartinfoareacalloutlinetype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 112)
      }
      if let v = _storage._tschchartinfobarcalloutlinetype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 113)
      }
      if let v = _storage._tschchartinfobubblecalloutlinetype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 114)
      }
      if let v = _storage._tschchartinfolinecalloutlinetype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 115)
      }
      if let v = _storage._tschchartinfoscattercalloutlinetype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 116)
      }
      if let v = _storage._tschchartinfostackedareacalloutlinetype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 117)
      }
      if let v = _storage._tschchartinfostackedbarcalloutlinetype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 118)
      }
      if let v = _storage._tschchartinfodefaultcalloutlinetype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 119)
      }
      if let v = _storage._tschchartinfodefaultdeprecatedroundedcornerradius {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 120)
      }
      if let v = _storage._tschchartinfodefaultdeprecatedroundedcornerouterendonly {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 121)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSCH_Generated_ChartNonStyleArchive, rhs: TSCH_Generated_ChartNonStyleArchive) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._tschchartinfodefault3Dbarshape != rhs_storage._tschchartinfodefault3Dbarshape {return false}
        if _storage._tschchartinfodefault3Dbeveledges != rhs_storage._tschchartinfodefault3Dbeveledges {return false}
        if _storage._tschchartinfodefault3Dintersetdepthgap != rhs_storage._tschchartinfodefault3Dintersetdepthgap {return false}
        if _storage._tschchartinfodefault3Drotation != rhs_storage._tschchartinfodefault3Drotation {return false}
        if _storage._tschchartinfoarea3Dscale != rhs_storage._tschchartinfoarea3Dscale {return false}
        if _storage._tschchartinfobar3Dscale != rhs_storage._tschchartinfobar3Dscale {return false}
        if _storage._tschchartinfocolumn3Dscale != rhs_storage._tschchartinfocolumn3Dscale {return false}
        if _storage._tschchartinfodefault3Dscale != rhs_storage._tschchartinfodefault3Dscale {return false}
        if _storage._tschchartinfoline3Dscale != rhs_storage._tschchartinfoline3Dscale {return false}
        if _storage._tschchartinfopie3Dscale != rhs_storage._tschchartinfopie3Dscale {return false}
        if _storage._tschchartinfodefault3Dviewport != rhs_storage._tschchartinfodefault3Dviewport {return false}
        if _storage._tschchartinfoareacalloutlinetype != rhs_storage._tschchartinfoareacalloutlinetype {return false}
        if _storage._tschchartinfobarcalloutlinetype != rhs_storage._tschchartinfobarcalloutlinetype {return false}
        if _storage._tschchartinfobubblecalloutlinetype != rhs_storage._tschchartinfobubblecalloutlinetype {return false}
        if _storage._tschchartinfodefaultcalloutlinetype != rhs_storage._tschchartinfodefaultcalloutlinetype {return false}
        if _storage._tschchartinfolinecalloutlinetype != rhs_storage._tschchartinfolinecalloutlinetype {return false}
        if _storage._tschchartinfopiecalloutlinetype != rhs_storage._tschchartinfopiecalloutlinetype {return false}
        if _storage._tschchartinfoscattercalloutlinetype != rhs_storage._tschchartinfoscattercalloutlinetype {return false}
        if _storage._tschchartinfostackedareacalloutlinetype != rhs_storage._tschchartinfostackedareacalloutlinetype {return false}
        if _storage._tschchartinfostackedbarcalloutlinetype != rhs_storage._tschchartinfostackedbarcalloutlinetype {return false}
        if _storage._tschchartinfodefaultdeprecatedroundedcornerouterendonly != rhs_storage._tschchartinfodefaultdeprecatedroundedcornerouterendonly {return false}
        if _storage._tschchartinfodefaultdeprecatedroundedcornerradius != rhs_storage._tschchartinfodefaultdeprecatedroundedcornerradius {return false}
        if _storage._tschchartinfodefaultdatasetnamelocation != rhs_storage._tschchartinfodefaultdatasetnamelocation {return false}
        if _storage._tschchartinfodefaultdonutplacetitleatcenter != rhs_storage._tschchartinfodefaultdonutplacetitleatcenter {return false}
        if _storage._tschchartinfodefaultinnerradius != rhs_storage._tschchartinfodefaultinnerradius {return false}
        if _storage._tschchartinfodefaultmultidatacontroltype != rhs_storage._tschchartinfodefaultmultidatacontroltype {return false}
        if _storage._tschchartinfodefaultpiestartangle != rhs_storage._tschchartinfodefaultpiestartangle {return false}
        if _storage._tschchartinfodefaultshowlegend != rhs_storage._tschchartinfodefaultshowlegend {return false}
        if _storage._tschchartinfodefaultshowtitle != rhs_storage._tschchartinfodefaultshowtitle {return false}
        if _storage._tschchartinfodefaultskiphiddendata != rhs_storage._tschchartinfodefaultskiphiddendata {return false}
        if _storage._tschchartinfodefaulttitle != rhs_storage._tschchartinfodefaulttitle {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSCH_Generated_LegendStyleArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".LegendStyleArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "tschlegendmodeldefaultfill"),
    2: .same(proto: "tschlegendmodeldefaultlabelparagraphstyleindex"),
    3: .same(proto: "tschlegendmodeldefaultopacity"),
    4: .same(proto: "tschlegendmodeldefaultshadow"),
    5: .same(proto: "tschlegendmodeldefaultstroke"),
  ]

  public var isInitialized: Bool {
    if let v = self._tschlegendmodeldefaultfill, !v.isInitialized {return false}
    if let v = self._tschlegendmodeldefaultshadow, !v.isInitialized {return false}
    if let v = self._tschlegendmodeldefaultstroke, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._tschlegendmodeldefaultfill)
      case 2: try decoder.decodeSingularInt32Field(value: &self._tschlegendmodeldefaultlabelparagraphstyleindex)
      case 3: try decoder.decodeSingularFloatField(value: &self._tschlegendmodeldefaultopacity)
      case 4: try decoder.decodeSingularMessageField(value: &self._tschlegendmodeldefaultshadow)
      case 5: try decoder.decodeSingularMessageField(value: &self._tschlegendmodeldefaultstroke)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._tschlegendmodeldefaultfill {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if let v = self._tschlegendmodeldefaultlabelparagraphstyleindex {
      try visitor.visitSingularInt32Field(value: v, fieldNumber: 2)
    }
    if let v = self._tschlegendmodeldefaultopacity {
      try visitor.visitSingularFloatField(value: v, fieldNumber: 3)
    }
    if let v = self._tschlegendmodeldefaultshadow {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
    }
    if let v = self._tschlegendmodeldefaultstroke {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSCH_Generated_LegendStyleArchive, rhs: TSCH_Generated_LegendStyleArchive) -> Bool {
    if lhs._tschlegendmodeldefaultfill != rhs._tschlegendmodeldefaultfill {return false}
    if lhs._tschlegendmodeldefaultlabelparagraphstyleindex != rhs._tschlegendmodeldefaultlabelparagraphstyleindex {return false}
    if lhs._tschlegendmodeldefaultopacity != rhs._tschlegendmodeldefaultopacity {return false}
    if lhs._tschlegendmodeldefaultshadow != rhs._tschlegendmodeldefaultshadow {return false}
    if lhs._tschlegendmodeldefaultstroke != rhs._tschlegendmodeldefaultstroke {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSCH_Generated_LegendNonStyleArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".LegendNonStyleArchive"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSCH_Generated_LegendNonStyleArchive, rhs: TSCH_Generated_LegendNonStyleArchive) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSCH_Generated_ChartAxisStyleArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ChartAxisStyleArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "tschchartaxiscategory3dgridlineopacity"),
    2: .same(proto: "tschchartaxisvalue3dgridlineopacity"),
    3: .same(proto: "tschchartaxiscategory3dgridlinestroke"),
    4: .same(proto: "tschchartaxisvalue3dgridlinestroke"),
    5: .same(proto: "tschchartaxiscategoryhorizontalspacing"),
    6: .same(proto: "tschchartaxiscategorylabelparagraphstyleindex"),
    7: .same(proto: "tschchartaxisdefaultlabelparagraphstyleindex"),
    8: .same(proto: "tschchartaxisvaluelabelparagraphstyleindex"),
    9: .same(proto: "tschchartaxiscategorylabelsorientation"),
    10: .same(proto: "tschchartaxisdefaultlabelsorientation"),
    11: .same(proto: "tschchartaxisvaluelabelsorientation"),
    12: .same(proto: "tschchartaxiscategorymajorgridlineopacity"),
    13: .same(proto: "tschchartaxisvaluemajorgridlineopacity"),
    14: .same(proto: "tschchartaxiscategorymajorgridlineshadow"),
    15: .same(proto: "tschchartaxisvaluemajorgridlineshadow"),
    16: .same(proto: "tschchartaxiscategorymajorgridlinestroke"),
    17: .same(proto: "tschchartaxisvaluemajorgridlinestroke"),
    18: .same(proto: "tschchartaxiscategoryminorgridlineopacity"),
    19: .same(proto: "tschchartaxisvalueminorgridlineopacity"),
    20: .same(proto: "tschchartaxiscategoryminorgridlineshadow"),
    21: .same(proto: "tschchartaxisvalueminorgridlineshadow"),
    22: .same(proto: "tschchartaxiscategoryminorgridlinestroke"),
    23: .same(proto: "tschchartaxisvalueminorgridlinestroke"),
    24: .same(proto: "tschchartaxiscategoryshowaxis"),
    25: .same(proto: "tschchartaxisvalueshowaxis"),
    26: .same(proto: "tschchartaxiscategoryshowlastlabel"),
    27: .same(proto: "tschchartaxiscategoryshowmajorgridlines"),
    28: .same(proto: "tschchartaxisvalueshowmajorgridlines"),
    29: .same(proto: "tschchartaxiscategoryshowmajortickmarks"),
    30: .same(proto: "tschchartaxisvalueshowmajortickmarks"),
    31: .same(proto: "tschchartaxisvalueshowminimumlabel"),
    32: .same(proto: "tschchartaxiscategoryshowminorgridlines"),
    33: .same(proto: "tschchartaxisvalueshowminorgridlines"),
    34: .same(proto: "tschchartaxiscategoryshowminortickmarks"),
    35: .same(proto: "tschchartaxisvalueshowminortickmarks"),
    36: .same(proto: "tschchartaxiscategorytickmarklocation"),
    37: .same(proto: "tschchartaxisvaluetickmarklocation"),
    38: .same(proto: "tschchartaxiscategorytitleparagraphstyleindex"),
    39: .same(proto: "tschchartaxisdefaulttitleparagraphstyleindex"),
    40: .same(proto: "tschchartaxisvaluetitleparagraphstyleindex"),
    41: .same(proto: "tschchartaxiscategoryverticalspacing"),
  ]

  fileprivate class _StorageClass {
    var _tschchartaxiscategory3Dgridlineopacity: Float? = nil
    var _tschchartaxisvalue3Dgridlineopacity: Float? = nil
    var _tschchartaxiscategory3Dgridlinestroke: TSD_StrokeArchive? = nil
    var _tschchartaxisvalue3Dgridlinestroke: TSD_StrokeArchive? = nil
    var _tschchartaxiscategoryhorizontalspacing: Int32? = nil
    var _tschchartaxiscategorylabelparagraphstyleindex: Int32? = nil
    var _tschchartaxisdefaultlabelparagraphstyleindex: Int32? = nil
    var _tschchartaxisvaluelabelparagraphstyleindex: Int32? = nil
    var _tschchartaxiscategorylabelsorientation: Float? = nil
    var _tschchartaxisdefaultlabelsorientation: Float? = nil
    var _tschchartaxisvaluelabelsorientation: Float? = nil
    var _tschchartaxiscategorymajorgridlineopacity: Float? = nil
    var _tschchartaxisvaluemajorgridlineopacity: Float? = nil
    var _tschchartaxiscategorymajorgridlineshadow: TSD_ShadowArchive? = nil
    var _tschchartaxisvaluemajorgridlineshadow: TSD_ShadowArchive? = nil
    var _tschchartaxiscategorymajorgridlinestroke: TSD_StrokeArchive? = nil
    var _tschchartaxisvaluemajorgridlinestroke: TSD_StrokeArchive? = nil
    var _tschchartaxiscategoryminorgridlineopacity: Float? = nil
    var _tschchartaxisvalueminorgridlineopacity: Float? = nil
    var _tschchartaxiscategoryminorgridlineshadow: TSD_ShadowArchive? = nil
    var _tschchartaxisvalueminorgridlineshadow: TSD_ShadowArchive? = nil
    var _tschchartaxiscategoryminorgridlinestroke: TSD_StrokeArchive? = nil
    var _tschchartaxisvalueminorgridlinestroke: TSD_StrokeArchive? = nil
    var _tschchartaxiscategoryshowaxis: Bool? = nil
    var _tschchartaxisvalueshowaxis: Bool? = nil
    var _tschchartaxiscategoryshowlastlabel: Bool? = nil
    var _tschchartaxiscategoryshowmajorgridlines: Bool? = nil
    var _tschchartaxisvalueshowmajorgridlines: Bool? = nil
    var _tschchartaxiscategoryshowmajortickmarks: Bool? = nil
    var _tschchartaxisvalueshowmajortickmarks: Bool? = nil
    var _tschchartaxisvalueshowminimumlabel: Bool? = nil
    var _tschchartaxiscategoryshowminorgridlines: Bool? = nil
    var _tschchartaxisvalueshowminorgridlines: Bool? = nil
    var _tschchartaxiscategoryshowminortickmarks: Bool? = nil
    var _tschchartaxisvalueshowminortickmarks: Bool? = nil
    var _tschchartaxiscategorytickmarklocation: Int32? = nil
    var _tschchartaxisvaluetickmarklocation: Int32? = nil
    var _tschchartaxiscategorytitleparagraphstyleindex: Int32? = nil
    var _tschchartaxisdefaulttitleparagraphstyleindex: Int32? = nil
    var _tschchartaxisvaluetitleparagraphstyleindex: Int32? = nil
    var _tschchartaxiscategoryverticalspacing: Int32? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _tschchartaxiscategory3Dgridlineopacity = source._tschchartaxiscategory3Dgridlineopacity
      _tschchartaxisvalue3Dgridlineopacity = source._tschchartaxisvalue3Dgridlineopacity
      _tschchartaxiscategory3Dgridlinestroke = source._tschchartaxiscategory3Dgridlinestroke
      _tschchartaxisvalue3Dgridlinestroke = source._tschchartaxisvalue3Dgridlinestroke
      _tschchartaxiscategoryhorizontalspacing = source._tschchartaxiscategoryhorizontalspacing
      _tschchartaxiscategorylabelparagraphstyleindex = source._tschchartaxiscategorylabelparagraphstyleindex
      _tschchartaxisdefaultlabelparagraphstyleindex = source._tschchartaxisdefaultlabelparagraphstyleindex
      _tschchartaxisvaluelabelparagraphstyleindex = source._tschchartaxisvaluelabelparagraphstyleindex
      _tschchartaxiscategorylabelsorientation = source._tschchartaxiscategorylabelsorientation
      _tschchartaxisdefaultlabelsorientation = source._tschchartaxisdefaultlabelsorientation
      _tschchartaxisvaluelabelsorientation = source._tschchartaxisvaluelabelsorientation
      _tschchartaxiscategorymajorgridlineopacity = source._tschchartaxiscategorymajorgridlineopacity
      _tschchartaxisvaluemajorgridlineopacity = source._tschchartaxisvaluemajorgridlineopacity
      _tschchartaxiscategorymajorgridlineshadow = source._tschchartaxiscategorymajorgridlineshadow
      _tschchartaxisvaluemajorgridlineshadow = source._tschchartaxisvaluemajorgridlineshadow
      _tschchartaxiscategorymajorgridlinestroke = source._tschchartaxiscategorymajorgridlinestroke
      _tschchartaxisvaluemajorgridlinestroke = source._tschchartaxisvaluemajorgridlinestroke
      _tschchartaxiscategoryminorgridlineopacity = source._tschchartaxiscategoryminorgridlineopacity
      _tschchartaxisvalueminorgridlineopacity = source._tschchartaxisvalueminorgridlineopacity
      _tschchartaxiscategoryminorgridlineshadow = source._tschchartaxiscategoryminorgridlineshadow
      _tschchartaxisvalueminorgridlineshadow = source._tschchartaxisvalueminorgridlineshadow
      _tschchartaxiscategoryminorgridlinestroke = source._tschchartaxiscategoryminorgridlinestroke
      _tschchartaxisvalueminorgridlinestroke = source._tschchartaxisvalueminorgridlinestroke
      _tschchartaxiscategoryshowaxis = source._tschchartaxiscategoryshowaxis
      _tschchartaxisvalueshowaxis = source._tschchartaxisvalueshowaxis
      _tschchartaxiscategoryshowlastlabel = source._tschchartaxiscategoryshowlastlabel
      _tschchartaxiscategoryshowmajorgridlines = source._tschchartaxiscategoryshowmajorgridlines
      _tschchartaxisvalueshowmajorgridlines = source._tschchartaxisvalueshowmajorgridlines
      _tschchartaxiscategoryshowmajortickmarks = source._tschchartaxiscategoryshowmajortickmarks
      _tschchartaxisvalueshowmajortickmarks = source._tschchartaxisvalueshowmajortickmarks
      _tschchartaxisvalueshowminimumlabel = source._tschchartaxisvalueshowminimumlabel
      _tschchartaxiscategoryshowminorgridlines = source._tschchartaxiscategoryshowminorgridlines
      _tschchartaxisvalueshowminorgridlines = source._tschchartaxisvalueshowminorgridlines
      _tschchartaxiscategoryshowminortickmarks = source._tschchartaxiscategoryshowminortickmarks
      _tschchartaxisvalueshowminortickmarks = source._tschchartaxisvalueshowminortickmarks
      _tschchartaxiscategorytickmarklocation = source._tschchartaxiscategorytickmarklocation
      _tschchartaxisvaluetickmarklocation = source._tschchartaxisvaluetickmarklocation
      _tschchartaxiscategorytitleparagraphstyleindex = source._tschchartaxiscategorytitleparagraphstyleindex
      _tschchartaxisdefaulttitleparagraphstyleindex = source._tschchartaxisdefaulttitleparagraphstyleindex
      _tschchartaxisvaluetitleparagraphstyleindex = source._tschchartaxisvaluetitleparagraphstyleindex
      _tschchartaxiscategoryverticalspacing = source._tschchartaxiscategoryverticalspacing
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._tschchartaxiscategory3Dgridlinestroke, !v.isInitialized {return false}
      if let v = _storage._tschchartaxisvalue3Dgridlinestroke, !v.isInitialized {return false}
      if let v = _storage._tschchartaxiscategorymajorgridlineshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartaxisvaluemajorgridlineshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartaxiscategorymajorgridlinestroke, !v.isInitialized {return false}
      if let v = _storage._tschchartaxisvaluemajorgridlinestroke, !v.isInitialized {return false}
      if let v = _storage._tschchartaxiscategoryminorgridlineshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartaxisvalueminorgridlineshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartaxiscategoryminorgridlinestroke, !v.isInitialized {return false}
      if let v = _storage._tschchartaxisvalueminorgridlinestroke, !v.isInitialized {return false}
      return true
    }
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularFloatField(value: &_storage._tschchartaxiscategory3Dgridlineopacity)
        case 2: try decoder.decodeSingularFloatField(value: &_storage._tschchartaxisvalue3Dgridlineopacity)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxiscategory3Dgridlinestroke)
        case 4: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxisvalue3Dgridlinestroke)
        case 5: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxiscategoryhorizontalspacing)
        case 6: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxiscategorylabelparagraphstyleindex)
        case 7: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxisdefaultlabelparagraphstyleindex)
        case 8: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxisvaluelabelparagraphstyleindex)
        case 9: try decoder.decodeSingularFloatField(value: &_storage._tschchartaxiscategorylabelsorientation)
        case 10: try decoder.decodeSingularFloatField(value: &_storage._tschchartaxisdefaultlabelsorientation)
        case 11: try decoder.decodeSingularFloatField(value: &_storage._tschchartaxisvaluelabelsorientation)
        case 12: try decoder.decodeSingularFloatField(value: &_storage._tschchartaxiscategorymajorgridlineopacity)
        case 13: try decoder.decodeSingularFloatField(value: &_storage._tschchartaxisvaluemajorgridlineopacity)
        case 14: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxiscategorymajorgridlineshadow)
        case 15: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxisvaluemajorgridlineshadow)
        case 16: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxiscategorymajorgridlinestroke)
        case 17: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxisvaluemajorgridlinestroke)
        case 18: try decoder.decodeSingularFloatField(value: &_storage._tschchartaxiscategoryminorgridlineopacity)
        case 19: try decoder.decodeSingularFloatField(value: &_storage._tschchartaxisvalueminorgridlineopacity)
        case 20: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxiscategoryminorgridlineshadow)
        case 21: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxisvalueminorgridlineshadow)
        case 22: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxiscategoryminorgridlinestroke)
        case 23: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxisvalueminorgridlinestroke)
        case 24: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxiscategoryshowaxis)
        case 25: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxisvalueshowaxis)
        case 26: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxiscategoryshowlastlabel)
        case 27: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxiscategoryshowmajorgridlines)
        case 28: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxisvalueshowmajorgridlines)
        case 29: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxiscategoryshowmajortickmarks)
        case 30: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxisvalueshowmajortickmarks)
        case 31: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxisvalueshowminimumlabel)
        case 32: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxiscategoryshowminorgridlines)
        case 33: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxisvalueshowminorgridlines)
        case 34: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxiscategoryshowminortickmarks)
        case 35: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxisvalueshowminortickmarks)
        case 36: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxiscategorytickmarklocation)
        case 37: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxisvaluetickmarklocation)
        case 38: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxiscategorytitleparagraphstyleindex)
        case 39: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxisdefaulttitleparagraphstyleindex)
        case 40: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxisvaluetitleparagraphstyleindex)
        case 41: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxiscategoryverticalspacing)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._tschchartaxiscategory3Dgridlineopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 1)
      }
      if let v = _storage._tschchartaxisvalue3Dgridlineopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 2)
      }
      if let v = _storage._tschchartaxiscategory3Dgridlinestroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if let v = _storage._tschchartaxisvalue3Dgridlinestroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
      if let v = _storage._tschchartaxiscategoryhorizontalspacing {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 5)
      }
      if let v = _storage._tschchartaxiscategorylabelparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 6)
      }
      if let v = _storage._tschchartaxisdefaultlabelparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 7)
      }
      if let v = _storage._tschchartaxisvaluelabelparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 8)
      }
      if let v = _storage._tschchartaxiscategorylabelsorientation {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 9)
      }
      if let v = _storage._tschchartaxisdefaultlabelsorientation {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 10)
      }
      if let v = _storage._tschchartaxisvaluelabelsorientation {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 11)
      }
      if let v = _storage._tschchartaxiscategorymajorgridlineopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 12)
      }
      if let v = _storage._tschchartaxisvaluemajorgridlineopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 13)
      }
      if let v = _storage._tschchartaxiscategorymajorgridlineshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 14)
      }
      if let v = _storage._tschchartaxisvaluemajorgridlineshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 15)
      }
      if let v = _storage._tschchartaxiscategorymajorgridlinestroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 16)
      }
      if let v = _storage._tschchartaxisvaluemajorgridlinestroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 17)
      }
      if let v = _storage._tschchartaxiscategoryminorgridlineopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 18)
      }
      if let v = _storage._tschchartaxisvalueminorgridlineopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 19)
      }
      if let v = _storage._tschchartaxiscategoryminorgridlineshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 20)
      }
      if let v = _storage._tschchartaxisvalueminorgridlineshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 21)
      }
      if let v = _storage._tschchartaxiscategoryminorgridlinestroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 22)
      }
      if let v = _storage._tschchartaxisvalueminorgridlinestroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 23)
      }
      if let v = _storage._tschchartaxiscategoryshowaxis {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 24)
      }
      if let v = _storage._tschchartaxisvalueshowaxis {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 25)
      }
      if let v = _storage._tschchartaxiscategoryshowlastlabel {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 26)
      }
      if let v = _storage._tschchartaxiscategoryshowmajorgridlines {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 27)
      }
      if let v = _storage._tschchartaxisvalueshowmajorgridlines {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 28)
      }
      if let v = _storage._tschchartaxiscategoryshowmajortickmarks {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 29)
      }
      if let v = _storage._tschchartaxisvalueshowmajortickmarks {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 30)
      }
      if let v = _storage._tschchartaxisvalueshowminimumlabel {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 31)
      }
      if let v = _storage._tschchartaxiscategoryshowminorgridlines {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 32)
      }
      if let v = _storage._tschchartaxisvalueshowminorgridlines {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 33)
      }
      if let v = _storage._tschchartaxiscategoryshowminortickmarks {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 34)
      }
      if let v = _storage._tschchartaxisvalueshowminortickmarks {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 35)
      }
      if let v = _storage._tschchartaxiscategorytickmarklocation {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 36)
      }
      if let v = _storage._tschchartaxisvaluetickmarklocation {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 37)
      }
      if let v = _storage._tschchartaxiscategorytitleparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 38)
      }
      if let v = _storage._tschchartaxisdefaulttitleparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 39)
      }
      if let v = _storage._tschchartaxisvaluetitleparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 40)
      }
      if let v = _storage._tschchartaxiscategoryverticalspacing {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 41)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSCH_Generated_ChartAxisStyleArchive, rhs: TSCH_Generated_ChartAxisStyleArchive) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._tschchartaxiscategory3Dgridlineopacity != rhs_storage._tschchartaxiscategory3Dgridlineopacity {return false}
        if _storage._tschchartaxisvalue3Dgridlineopacity != rhs_storage._tschchartaxisvalue3Dgridlineopacity {return false}
        if _storage._tschchartaxiscategory3Dgridlinestroke != rhs_storage._tschchartaxiscategory3Dgridlinestroke {return false}
        if _storage._tschchartaxisvalue3Dgridlinestroke != rhs_storage._tschchartaxisvalue3Dgridlinestroke {return false}
        if _storage._tschchartaxiscategoryhorizontalspacing != rhs_storage._tschchartaxiscategoryhorizontalspacing {return false}
        if _storage._tschchartaxiscategorylabelparagraphstyleindex != rhs_storage._tschchartaxiscategorylabelparagraphstyleindex {return false}
        if _storage._tschchartaxisdefaultlabelparagraphstyleindex != rhs_storage._tschchartaxisdefaultlabelparagraphstyleindex {return false}
        if _storage._tschchartaxisvaluelabelparagraphstyleindex != rhs_storage._tschchartaxisvaluelabelparagraphstyleindex {return false}
        if _storage._tschchartaxiscategorylabelsorientation != rhs_storage._tschchartaxiscategorylabelsorientation {return false}
        if _storage._tschchartaxisdefaultlabelsorientation != rhs_storage._tschchartaxisdefaultlabelsorientation {return false}
        if _storage._tschchartaxisvaluelabelsorientation != rhs_storage._tschchartaxisvaluelabelsorientation {return false}
        if _storage._tschchartaxiscategorymajorgridlineopacity != rhs_storage._tschchartaxiscategorymajorgridlineopacity {return false}
        if _storage._tschchartaxisvaluemajorgridlineopacity != rhs_storage._tschchartaxisvaluemajorgridlineopacity {return false}
        if _storage._tschchartaxiscategorymajorgridlineshadow != rhs_storage._tschchartaxiscategorymajorgridlineshadow {return false}
        if _storage._tschchartaxisvaluemajorgridlineshadow != rhs_storage._tschchartaxisvaluemajorgridlineshadow {return false}
        if _storage._tschchartaxiscategorymajorgridlinestroke != rhs_storage._tschchartaxiscategorymajorgridlinestroke {return false}
        if _storage._tschchartaxisvaluemajorgridlinestroke != rhs_storage._tschchartaxisvaluemajorgridlinestroke {return false}
        if _storage._tschchartaxiscategoryminorgridlineopacity != rhs_storage._tschchartaxiscategoryminorgridlineopacity {return false}
        if _storage._tschchartaxisvalueminorgridlineopacity != rhs_storage._tschchartaxisvalueminorgridlineopacity {return false}
        if _storage._tschchartaxiscategoryminorgridlineshadow != rhs_storage._tschchartaxiscategoryminorgridlineshadow {return false}
        if _storage._tschchartaxisvalueminorgridlineshadow != rhs_storage._tschchartaxisvalueminorgridlineshadow {return false}
        if _storage._tschchartaxiscategoryminorgridlinestroke != rhs_storage._tschchartaxiscategoryminorgridlinestroke {return false}
        if _storage._tschchartaxisvalueminorgridlinestroke != rhs_storage._tschchartaxisvalueminorgridlinestroke {return false}
        if _storage._tschchartaxiscategoryshowaxis != rhs_storage._tschchartaxiscategoryshowaxis {return false}
        if _storage._tschchartaxisvalueshowaxis != rhs_storage._tschchartaxisvalueshowaxis {return false}
        if _storage._tschchartaxiscategoryshowlastlabel != rhs_storage._tschchartaxiscategoryshowlastlabel {return false}
        if _storage._tschchartaxiscategoryshowmajorgridlines != rhs_storage._tschchartaxiscategoryshowmajorgridlines {return false}
        if _storage._tschchartaxisvalueshowmajorgridlines != rhs_storage._tschchartaxisvalueshowmajorgridlines {return false}
        if _storage._tschchartaxiscategoryshowmajortickmarks != rhs_storage._tschchartaxiscategoryshowmajortickmarks {return false}
        if _storage._tschchartaxisvalueshowmajortickmarks != rhs_storage._tschchartaxisvalueshowmajortickmarks {return false}
        if _storage._tschchartaxisvalueshowminimumlabel != rhs_storage._tschchartaxisvalueshowminimumlabel {return false}
        if _storage._tschchartaxiscategoryshowminorgridlines != rhs_storage._tschchartaxiscategoryshowminorgridlines {return false}
        if _storage._tschchartaxisvalueshowminorgridlines != rhs_storage._tschchartaxisvalueshowminorgridlines {return false}
        if _storage._tschchartaxiscategoryshowminortickmarks != rhs_storage._tschchartaxiscategoryshowminortickmarks {return false}
        if _storage._tschchartaxisvalueshowminortickmarks != rhs_storage._tschchartaxisvalueshowminortickmarks {return false}
        if _storage._tschchartaxiscategorytickmarklocation != rhs_storage._tschchartaxiscategorytickmarklocation {return false}
        if _storage._tschchartaxisvaluetickmarklocation != rhs_storage._tschchartaxisvaluetickmarklocation {return false}
        if _storage._tschchartaxiscategorytitleparagraphstyleindex != rhs_storage._tschchartaxiscategorytitleparagraphstyleindex {return false}
        if _storage._tschchartaxisdefaulttitleparagraphstyleindex != rhs_storage._tschchartaxisdefaulttitleparagraphstyleindex {return false}
        if _storage._tschchartaxisvaluetitleparagraphstyleindex != rhs_storage._tschchartaxisvaluetitleparagraphstyleindex {return false}
        if _storage._tschchartaxiscategoryverticalspacing != rhs_storage._tschchartaxiscategoryverticalspacing {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSCH_Generated_ChartAxisNonStyleArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ChartAxisNonStyleArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    20: .standard(proto: "tschchartaxisdefault1_0dateformat"),
    2: .standard(proto: "tschchartaxisdefault1_0numberformat"),
    1: .same(proto: "tschchartaxisdefault3dlabelposition"),
    22: .same(proto: "tschchartaxisdefaultdateformat"),
    21: .same(proto: "tschchartaxisdefaultdurationformat"),
    42: .same(proto: "tschchartaxisdefaultnumberformat"),
    3: .same(proto: "tschchartaxisdefaultnumberformattype"),
    4: .same(proto: "tschchartaxisvaluenumberofdecades"),
    5: .same(proto: "tschchartaxisvaluenumberofmajorgridlines"),
    6: .same(proto: "tschchartaxisvaluenumberofminorgridlines"),
    7: .same(proto: "tschchartaxiscategoryplottoedges"),
    8: .same(proto: "tschchartaxisvaluescale"),
    9: .same(proto: "tschchartaxiscategoryshowlabels"),
    10: .same(proto: "tschchartaxisdefaultshowlabels"),
    11: .same(proto: "tschchartaxisvalueshowlabels"),
    12: .same(proto: "tschchartaxiscategoryshowserieslabels"),
    19: .same(proto: "tschchartaxismultidatashowserieslabels"),
    13: .same(proto: "tschchartaxiscategoryshowtitle"),
    14: .same(proto: "tschchartaxisvalueshowtitle"),
    15: .same(proto: "tschchartaxiscategorytitle"),
    16: .same(proto: "tschchartaxisvaluetitle"),
    17: .same(proto: "tschchartaxisdefaultusermax"),
    18: .same(proto: "tschchartaxisdefaultusermin"),
  ]

  fileprivate class _StorageClass {
    var _tschchartaxisdefault10Dateformat: TSK_FormatStructArchive? = nil
    var _tschchartaxisdefault10Numberformat: TSK_FormatStructArchive? = nil
    var _tschchartaxisdefault3Dlabelposition: Int32? = nil
    var _tschchartaxisdefaultdateformat: TSK_FormatStructArchive? = nil
    var _tschchartaxisdefaultdurationformat: TSK_FormatStructArchive? = nil
    var _tschchartaxisdefaultnumberformat: TSK_FormatStructArchive? = nil
    var _tschchartaxisdefaultnumberformattype: Int32? = nil
    var _tschchartaxisvaluenumberofdecades: Int32? = nil
    var _tschchartaxisvaluenumberofmajorgridlines: Int32? = nil
    var _tschchartaxisvaluenumberofminorgridlines: Int32? = nil
    var _tschchartaxiscategoryplottoedges: Bool? = nil
    var _tschchartaxisvaluescale: Int32? = nil
    var _tschchartaxiscategoryshowlabels: Bool? = nil
    var _tschchartaxisdefaultshowlabels: Bool? = nil
    var _tschchartaxisvalueshowlabels: Bool? = nil
    var _tschchartaxiscategoryshowserieslabels: Bool? = nil
    var _tschchartaxismultidatashowserieslabels: Bool? = nil
    var _tschchartaxiscategoryshowtitle: Bool? = nil
    var _tschchartaxisvalueshowtitle: Bool? = nil
    var _tschchartaxiscategorytitle: String? = nil
    var _tschchartaxisvaluetitle: String? = nil
    var _tschchartaxisdefaultusermax: TSCH_ChartsNSNumberDoubleArchive? = nil
    var _tschchartaxisdefaultusermin: TSCH_ChartsNSNumberDoubleArchive? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _tschchartaxisdefault10Dateformat = source._tschchartaxisdefault10Dateformat
      _tschchartaxisdefault10Numberformat = source._tschchartaxisdefault10Numberformat
      _tschchartaxisdefault3Dlabelposition = source._tschchartaxisdefault3Dlabelposition
      _tschchartaxisdefaultdateformat = source._tschchartaxisdefaultdateformat
      _tschchartaxisdefaultdurationformat = source._tschchartaxisdefaultdurationformat
      _tschchartaxisdefaultnumberformat = source._tschchartaxisdefaultnumberformat
      _tschchartaxisdefaultnumberformattype = source._tschchartaxisdefaultnumberformattype
      _tschchartaxisvaluenumberofdecades = source._tschchartaxisvaluenumberofdecades
      _tschchartaxisvaluenumberofmajorgridlines = source._tschchartaxisvaluenumberofmajorgridlines
      _tschchartaxisvaluenumberofminorgridlines = source._tschchartaxisvaluenumberofminorgridlines
      _tschchartaxiscategoryplottoedges = source._tschchartaxiscategoryplottoedges
      _tschchartaxisvaluescale = source._tschchartaxisvaluescale
      _tschchartaxiscategoryshowlabels = source._tschchartaxiscategoryshowlabels
      _tschchartaxisdefaultshowlabels = source._tschchartaxisdefaultshowlabels
      _tschchartaxisvalueshowlabels = source._tschchartaxisvalueshowlabels
      _tschchartaxiscategoryshowserieslabels = source._tschchartaxiscategoryshowserieslabels
      _tschchartaxismultidatashowserieslabels = source._tschchartaxismultidatashowserieslabels
      _tschchartaxiscategoryshowtitle = source._tschchartaxiscategoryshowtitle
      _tschchartaxisvalueshowtitle = source._tschchartaxisvalueshowtitle
      _tschchartaxiscategorytitle = source._tschchartaxiscategorytitle
      _tschchartaxisvaluetitle = source._tschchartaxisvaluetitle
      _tschchartaxisdefaultusermax = source._tschchartaxisdefaultusermax
      _tschchartaxisdefaultusermin = source._tschchartaxisdefaultusermin
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._tschchartaxisdefault10Dateformat, !v.isInitialized {return false}
      if let v = _storage._tschchartaxisdefault10Numberformat, !v.isInitialized {return false}
      if let v = _storage._tschchartaxisdefaultdateformat, !v.isInitialized {return false}
      if let v = _storage._tschchartaxisdefaultdurationformat, !v.isInitialized {return false}
      if let v = _storage._tschchartaxisdefaultnumberformat, !v.isInitialized {return false}
      return true
    }
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxisdefault3Dlabelposition)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxisdefault10Numberformat)
        case 3: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxisdefaultnumberformattype)
        case 4: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxisvaluenumberofdecades)
        case 5: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxisvaluenumberofmajorgridlines)
        case 6: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxisvaluenumberofminorgridlines)
        case 7: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxiscategoryplottoedges)
        case 8: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxisvaluescale)
        case 9: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxiscategoryshowlabels)
        case 10: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxisdefaultshowlabels)
        case 11: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxisvalueshowlabels)
        case 12: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxiscategoryshowserieslabels)
        case 13: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxiscategoryshowtitle)
        case 14: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxisvalueshowtitle)
        case 15: try decoder.decodeSingularStringField(value: &_storage._tschchartaxiscategorytitle)
        case 16: try decoder.decodeSingularStringField(value: &_storage._tschchartaxisvaluetitle)
        case 17: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxisdefaultusermax)
        case 18: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxisdefaultusermin)
        case 19: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxismultidatashowserieslabels)
        case 20: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxisdefault10Dateformat)
        case 21: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxisdefaultdurationformat)
        case 22: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxisdefaultdateformat)
        case 42: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxisdefaultnumberformat)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._tschchartaxisdefault3Dlabelposition {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 1)
      }
      if let v = _storage._tschchartaxisdefault10Numberformat {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._tschchartaxisdefaultnumberformattype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 3)
      }
      if let v = _storage._tschchartaxisvaluenumberofdecades {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 4)
      }
      if let v = _storage._tschchartaxisvaluenumberofmajorgridlines {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 5)
      }
      if let v = _storage._tschchartaxisvaluenumberofminorgridlines {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 6)
      }
      if let v = _storage._tschchartaxiscategoryplottoedges {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 7)
      }
      if let v = _storage._tschchartaxisvaluescale {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 8)
      }
      if let v = _storage._tschchartaxiscategoryshowlabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 9)
      }
      if let v = _storage._tschchartaxisdefaultshowlabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 10)
      }
      if let v = _storage._tschchartaxisvalueshowlabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 11)
      }
      if let v = _storage._tschchartaxiscategoryshowserieslabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 12)
      }
      if let v = _storage._tschchartaxiscategoryshowtitle {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 13)
      }
      if let v = _storage._tschchartaxisvalueshowtitle {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 14)
      }
      if let v = _storage._tschchartaxiscategorytitle {
        try visitor.visitSingularStringField(value: v, fieldNumber: 15)
      }
      if let v = _storage._tschchartaxisvaluetitle {
        try visitor.visitSingularStringField(value: v, fieldNumber: 16)
      }
      if let v = _storage._tschchartaxisdefaultusermax {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 17)
      }
      if let v = _storage._tschchartaxisdefaultusermin {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 18)
      }
      if let v = _storage._tschchartaxismultidatashowserieslabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 19)
      }
      if let v = _storage._tschchartaxisdefault10Dateformat {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 20)
      }
      if let v = _storage._tschchartaxisdefaultdurationformat {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 21)
      }
      if let v = _storage._tschchartaxisdefaultdateformat {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 22)
      }
      if let v = _storage._tschchartaxisdefaultnumberformat {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 42)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSCH_Generated_ChartAxisNonStyleArchive, rhs: TSCH_Generated_ChartAxisNonStyleArchive) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._tschchartaxisdefault10Dateformat != rhs_storage._tschchartaxisdefault10Dateformat {return false}
        if _storage._tschchartaxisdefault10Numberformat != rhs_storage._tschchartaxisdefault10Numberformat {return false}
        if _storage._tschchartaxisdefault3Dlabelposition != rhs_storage._tschchartaxisdefault3Dlabelposition {return false}
        if _storage._tschchartaxisdefaultdateformat != rhs_storage._tschchartaxisdefaultdateformat {return false}
        if _storage._tschchartaxisdefaultdurationformat != rhs_storage._tschchartaxisdefaultdurationformat {return false}
        if _storage._tschchartaxisdefaultnumberformat != rhs_storage._tschchartaxisdefaultnumberformat {return false}
        if _storage._tschchartaxisdefaultnumberformattype != rhs_storage._tschchartaxisdefaultnumberformattype {return false}
        if _storage._tschchartaxisvaluenumberofdecades != rhs_storage._tschchartaxisvaluenumberofdecades {return false}
        if _storage._tschchartaxisvaluenumberofmajorgridlines != rhs_storage._tschchartaxisvaluenumberofmajorgridlines {return false}
        if _storage._tschchartaxisvaluenumberofminorgridlines != rhs_storage._tschchartaxisvaluenumberofminorgridlines {return false}
        if _storage._tschchartaxiscategoryplottoedges != rhs_storage._tschchartaxiscategoryplottoedges {return false}
        if _storage._tschchartaxisvaluescale != rhs_storage._tschchartaxisvaluescale {return false}
        if _storage._tschchartaxiscategoryshowlabels != rhs_storage._tschchartaxiscategoryshowlabels {return false}
        if _storage._tschchartaxisdefaultshowlabels != rhs_storage._tschchartaxisdefaultshowlabels {return false}
        if _storage._tschchartaxisvalueshowlabels != rhs_storage._tschchartaxisvalueshowlabels {return false}
        if _storage._tschchartaxiscategoryshowserieslabels != rhs_storage._tschchartaxiscategoryshowserieslabels {return false}
        if _storage._tschchartaxismultidatashowserieslabels != rhs_storage._tschchartaxismultidatashowserieslabels {return false}
        if _storage._tschchartaxiscategoryshowtitle != rhs_storage._tschchartaxiscategoryshowtitle {return false}
        if _storage._tschchartaxisvalueshowtitle != rhs_storage._tschchartaxisvalueshowtitle {return false}
        if _storage._tschchartaxiscategorytitle != rhs_storage._tschchartaxiscategorytitle {return false}
        if _storage._tschchartaxisvaluetitle != rhs_storage._tschchartaxisvaluetitle {return false}
        if _storage._tschchartaxisdefaultusermax != rhs_storage._tschchartaxisdefaultusermax {return false}
        if _storage._tschchartaxisdefaultusermin != rhs_storage._tschchartaxisdefaultusermin {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSCH_Generated_ChartSeriesStyleArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ChartSeriesStyleArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    130: .same(proto: "tschchartseriesdefaultcalloutlineendlineend"),
    129: .same(proto: "tschchartseriesdefaultcalloutlinestartlineend"),
    128: .same(proto: "tschchartseriesdefaultcalloutlinestrokestyle"),
    1: .same(proto: "tschchartseriesdefaulterrorbarlineend"),
    2: .same(proto: "tschchartseriesdefaulterrorbarlineendscatterx"),
    3: .same(proto: "tschchartseriesdefaulterrorbarshadow"),
    98: .same(proto: "tschchartseriesdefaulterrorbarspacing"),
    99: .same(proto: "tschchartseriesdefaulterrorbarspacingscatterx"),
    4: .same(proto: "tschchartseriesdefaulterrorbarstroke"),
    5: .same(proto: "tschchartseriesdefaulterrorbarstrokescatterx"),
    6: .same(proto: "tschchartseries3dareafill"),
    7: .same(proto: "tschchartseries3dbarfill"),
    8: .same(proto: "tschchartseries3dcolumnfill"),
    9: .same(proto: "tschchartseries3dlinefill"),
    10: .same(proto: "tschchartseries3dpiefill"),
    11: .same(proto: "tschchartseriesareafill"),
    12: .same(proto: "tschchartseriesbarfill"),
    13: .same(proto: "tschchartseriescolumnfill"),
    14: .same(proto: "tschchartseriesdefaultfill"),
    15: .same(proto: "tschchartseriesmixedareafill"),
    16: .same(proto: "tschchartseriesmixedcolumnfill"),
    17: .same(proto: "tschchartseriespiefill"),
    18: .same(proto: "tschchartseriesarealabelparagraphstyleindex"),
    19: .same(proto: "tschchartseriesbarlabelparagraphstyleindex"),
    20: .same(proto: "tschchartseriesdefaultlabelparagraphstyleindex"),
    152: .same(proto: "tschchartseriesdonutlabelparagraphstyleindex"),
    21: .same(proto: "tschchartserieslinelabelparagraphstyleindex"),
    22: .same(proto: "tschchartseriesmixedlabelparagraphstyleindex"),
    23: .same(proto: "tschchartseriespielabelparagraphstyleindex"),
    24: .same(proto: "tschchartseriesdefaultopacity"),
    25: .same(proto: "tschchartseriesareaoutsidelabelparagraphstyleindex"),
    26: .same(proto: "tschchartseriesbaroutsidelabelparagraphstyleindex"),
    27: .same(proto: "tschchartseriesdefaultoutsidelabelparagraphstyleindex"),
    153: .same(proto: "tschchartseriesdonutoutsidelabelparagraphstyleindex"),
    28: .same(proto: "tschchartseriesmixedoutsidelabelparagraphstyleindex"),
    29: .same(proto: "tschchartseriespieoutsidelabelparagraphstyleindex"),
    30: .same(proto: "tschchartseries3dareashadow"),
    31: .same(proto: "tschchartseries3dbarshadow"),
    32: .same(proto: "tschchartseries3dcolumnshadow"),
    33: .same(proto: "tschchartseries3dlineshadow"),
    34: .same(proto: "tschchartseries3dpieshadow"),
    35: .same(proto: "tschchartseriesareashadow"),
    36: .same(proto: "tschchartseriesbarshadow"),
    37: .same(proto: "tschchartseriesbubbleshadow"),
    38: .same(proto: "tschchartseriesdefaultshadow"),
    39: .same(proto: "tschchartserieslineshadow"),
    40: .same(proto: "tschchartseriesmixedareashadow"),
    41: .same(proto: "tschchartseriesmixedcolumnshadow"),
    42: .same(proto: "tschchartseriesmixedlineshadow"),
    43: .same(proto: "tschchartseriespieshadow"),
    44: .same(proto: "tschchartseriesscattershadow"),
    45: .same(proto: "tschchartseriesareastroke"),
    46: .same(proto: "tschchartseriesbarstroke"),
    47: .same(proto: "tschchartseriesbubblestroke"),
    48: .same(proto: "tschchartserieslinestroke"),
    49: .same(proto: "tschchartseriesmixedareastroke"),
    50: .same(proto: "tschchartseriesmixedcolumnstroke"),
    51: .same(proto: "tschchartseriesmixedlinestroke"),
    52: .same(proto: "tschchartseriespiestroke"),
    53: .same(proto: "tschchartseriesscatterstroke"),
    54: .same(proto: "tschchartseriesareasymbolfill"),
    55: .same(proto: "tschchartseriesbubblesymbolfill"),
    56: .same(proto: "tschchartserieslinesymbolfill"),
    57: .same(proto: "tschchartseriesmixedareasymbolfill"),
    58: .same(proto: "tschchartseriesmixedlinesymbolfill"),
    59: .same(proto: "tschchartseriesscattersymbolfill"),
    60: .same(proto: "tschchartseriesareasymbolfilluseseriesfill"),
    61: .same(proto: "tschchartserieslinesymbolfilluseseriesfill"),
    62: .same(proto: "tschchartseriesmixedareasymbolfilluseseriesfill"),
    63: .same(proto: "tschchartseriesmixedlinesymbolfilluseseriesfill"),
    64: .same(proto: "tschchartseriesareasymbolfilluseseriesstroke"),
    65: .same(proto: "tschchartseriesbubblesymbolfilluseseriesstroke"),
    66: .same(proto: "tschchartserieslinesymbolfilluseseriesstroke"),
    67: .same(proto: "tschchartseriesmixedareasymbolfilluseseriesstroke"),
    68: .same(proto: "tschchartseriesmixedlinesymbolfilluseseriesstroke"),
    69: .same(proto: "tschchartseriesscattersymbolfilluseseriesstroke"),
    70: .same(proto: "tschchartseriesareasymbolsize"),
    71: .same(proto: "tschchartserieslinesymbolsize"),
    72: .same(proto: "tschchartseriesmixedareasymbolsize"),
    73: .same(proto: "tschchartseriesmixedlinesymbolsize"),
    74: .same(proto: "tschchartseriesscattersymbolsize"),
    75: .same(proto: "tschchartseriesareasymbolstroke"),
    76: .same(proto: "tschchartseriesbubblesymbolstroke"),
    77: .same(proto: "tschchartserieslinesymbolstroke"),
    78: .same(proto: "tschchartseriesmixedareasymbolstroke"),
    79: .same(proto: "tschchartseriesmixedlinesymbolstroke"),
    80: .same(proto: "tschchartseriesscattersymbolstroke"),
    85: .same(proto: "tschchartseriesdefaulttrendlineshadow"),
    86: .same(proto: "tschchartseriesdefaulttrendlinestroke"),
    81: .same(proto: "tschchartseriesdefaulttrendlineequationopacity"),
    82: .same(proto: "tschchartseriesdefaulttrendlineequationparagraphstyleindex"),
    83: .same(proto: "tschchartseriesdefaulttrendlinersquaredopacity"),
    84: .same(proto: "tschchartseriesdefaulttrendlinersquaredparagraphstyleindex"),
    87: .same(proto: "tschchartseriesareavaluelabelposition"),
    88: .same(proto: "tschchartseriesbarvaluelabelposition"),
    89: .same(proto: "tschchartseriesbubblevaluelabelposition"),
    90: .same(proto: "tschchartseriesdefaultvaluelabelposition"),
    91: .same(proto: "tschchartserieslinevaluelabelposition"),
    92: .same(proto: "tschchartseriesmixedareavaluelabelposition"),
    93: .same(proto: "tschchartseriesmixedcolumnvaluelabelposition"),
    94: .same(proto: "tschchartseriesmixedlinevaluelabelposition"),
    95: .same(proto: "tschchartseriesscattervaluelabelposition"),
    96: .same(proto: "tschchartseriesstackedareavaluelabelposition"),
    97: .same(proto: "tschchartseriesstackedbarvaluelabelposition"),
    100: .same(proto: "tschchartseriesdefaultvaluelabelspacing"),
  ]

  fileprivate class _StorageClass {
    var _tschchartseriesdefaultcalloutlineendlineend: TSD_LineEndArchive? = nil
    var _tschchartseriesdefaultcalloutlinestartlineend: TSD_LineEndArchive? = nil
    var _tschchartseriesdefaultcalloutlinestrokestyle: TSD_StrokeArchive? = nil
    var _tschchartseriesdefaulterrorbarlineend: TSD_LineEndArchive? = nil
    var _tschchartseriesdefaulterrorbarlineendscatterx: TSD_LineEndArchive? = nil
    var _tschchartseriesdefaulterrorbarshadow: TSD_ShadowArchive? = nil
    var _tschchartseriesdefaulterrorbarspacing: Int32? = nil
    var _tschchartseriesdefaulterrorbarspacingscatterx: Int32? = nil
    var _tschchartseriesdefaulterrorbarstroke: TSD_StrokeArchive? = nil
    var _tschchartseriesdefaulterrorbarstrokescatterx: TSD_StrokeArchive? = nil
    var _tschchartseries3Dareafill: TSD_FillArchive? = nil
    var _tschchartseries3Dbarfill: TSD_FillArchive? = nil
    var _tschchartseries3Dcolumnfill: TSD_FillArchive? = nil
    var _tschchartseries3Dlinefill: TSD_FillArchive? = nil
    var _tschchartseries3Dpiefill: TSD_FillArchive? = nil
    var _tschchartseriesareafill: TSD_FillArchive? = nil
    var _tschchartseriesbarfill: TSD_FillArchive? = nil
    var _tschchartseriescolumnfill: TSD_FillArchive? = nil
    var _tschchartseriesdefaultfill: TSD_FillArchive? = nil
    var _tschchartseriesmixedareafill: TSD_FillArchive? = nil
    var _tschchartseriesmixedcolumnfill: TSD_FillArchive? = nil
    var _tschchartseriespiefill: TSD_FillArchive? = nil
    var _tschchartseriesarealabelparagraphstyleindex: Int32? = nil
    var _tschchartseriesbarlabelparagraphstyleindex: Int32? = nil
    var _tschchartseriesdefaultlabelparagraphstyleindex: Int32? = nil
    var _tschchartseriesdonutlabelparagraphstyleindex: Int32? = nil
    var _tschchartserieslinelabelparagraphstyleindex: Int32? = nil
    var _tschchartseriesmixedlabelparagraphstyleindex: Int32? = nil
    var _tschchartseriespielabelparagraphstyleindex: Int32? = nil
    var _tschchartseriesdefaultopacity: Float? = nil
    var _tschchartseriesareaoutsidelabelparagraphstyleindex: Int32? = nil
    var _tschchartseriesbaroutsidelabelparagraphstyleindex: Int32? = nil
    var _tschchartseriesdefaultoutsidelabelparagraphstyleindex: Int32? = nil
    var _tschchartseriesdonutoutsidelabelparagraphstyleindex: Int32? = nil
    var _tschchartseriesmixedoutsidelabelparagraphstyleindex: Int32? = nil
    var _tschchartseriespieoutsidelabelparagraphstyleindex: Int32? = nil
    var _tschchartseries3Dareashadow: TSD_ShadowArchive? = nil
    var _tschchartseries3Dbarshadow: TSD_ShadowArchive? = nil
    var _tschchartseries3Dcolumnshadow: TSD_ShadowArchive? = nil
    var _tschchartseries3Dlineshadow: TSD_ShadowArchive? = nil
    var _tschchartseries3Dpieshadow: TSD_ShadowArchive? = nil
    var _tschchartseriesareashadow: TSD_ShadowArchive? = nil
    var _tschchartseriesbarshadow: TSD_ShadowArchive? = nil
    var _tschchartseriesbubbleshadow: TSD_ShadowArchive? = nil
    var _tschchartseriesdefaultshadow: TSD_ShadowArchive? = nil
    var _tschchartserieslineshadow: TSD_ShadowArchive? = nil
    var _tschchartseriesmixedareashadow: TSD_ShadowArchive? = nil
    var _tschchartseriesmixedcolumnshadow: TSD_ShadowArchive? = nil
    var _tschchartseriesmixedlineshadow: TSD_ShadowArchive? = nil
    var _tschchartseriespieshadow: TSD_ShadowArchive? = nil
    var _tschchartseriesscattershadow: TSD_ShadowArchive? = nil
    var _tschchartseriesareastroke: TSD_StrokeArchive? = nil
    var _tschchartseriesbarstroke: TSD_StrokeArchive? = nil
    var _tschchartseriesbubblestroke: TSD_StrokeArchive? = nil
    var _tschchartserieslinestroke: TSD_StrokeArchive? = nil
    var _tschchartseriesmixedareastroke: TSD_StrokeArchive? = nil
    var _tschchartseriesmixedcolumnstroke: TSD_StrokeArchive? = nil
    var _tschchartseriesmixedlinestroke: TSD_StrokeArchive? = nil
    var _tschchartseriespiestroke: TSD_StrokeArchive? = nil
    var _tschchartseriesscatterstroke: TSD_StrokeArchive? = nil
    var _tschchartseriesareasymbolfill: TSD_FillArchive? = nil
    var _tschchartseriesbubblesymbolfill: TSD_FillArchive? = nil
    var _tschchartserieslinesymbolfill: TSD_FillArchive? = nil
    var _tschchartseriesmixedareasymbolfill: TSD_FillArchive? = nil
    var _tschchartseriesmixedlinesymbolfill: TSD_FillArchive? = nil
    var _tschchartseriesscattersymbolfill: TSD_FillArchive? = nil
    var _tschchartseriesareasymbolfilluseseriesfill: Bool? = nil
    var _tschchartserieslinesymbolfilluseseriesfill: Bool? = nil
    var _tschchartseriesmixedareasymbolfilluseseriesfill: Bool? = nil
    var _tschchartseriesmixedlinesymbolfilluseseriesfill: Bool? = nil
    var _tschchartseriesareasymbolfilluseseriesstroke: Bool? = nil
    var _tschchartseriesbubblesymbolfilluseseriesstroke: Bool? = nil
    var _tschchartserieslinesymbolfilluseseriesstroke: Bool? = nil
    var _tschchartseriesmixedareasymbolfilluseseriesstroke: Bool? = nil
    var _tschchartseriesmixedlinesymbolfilluseseriesstroke: Bool? = nil
    var _tschchartseriesscattersymbolfilluseseriesstroke: Bool? = nil
    var _tschchartseriesareasymbolsize: Float? = nil
    var _tschchartserieslinesymbolsize: Float? = nil
    var _tschchartseriesmixedareasymbolsize: Float? = nil
    var _tschchartseriesmixedlinesymbolsize: Float? = nil
    var _tschchartseriesscattersymbolsize: Float? = nil
    var _tschchartseriesareasymbolstroke: TSD_StrokeArchive? = nil
    var _tschchartseriesbubblesymbolstroke: TSD_StrokeArchive? = nil
    var _tschchartserieslinesymbolstroke: TSD_StrokeArchive? = nil
    var _tschchartseriesmixedareasymbolstroke: TSD_StrokeArchive? = nil
    var _tschchartseriesmixedlinesymbolstroke: TSD_StrokeArchive? = nil
    var _tschchartseriesscattersymbolstroke: TSD_StrokeArchive? = nil
    var _tschchartseriesdefaulttrendlineshadow: TSD_ShadowArchive? = nil
    var _tschchartseriesdefaulttrendlinestroke: TSD_StrokeArchive? = nil
    var _tschchartseriesdefaulttrendlineequationopacity: Float? = nil
    var _tschchartseriesdefaulttrendlineequationparagraphstyleindex: Int32? = nil
    var _tschchartseriesdefaulttrendlinersquaredopacity: Float? = nil
    var _tschchartseriesdefaulttrendlinersquaredparagraphstyleindex: Int32? = nil
    var _tschchartseriesareavaluelabelposition: Int32? = nil
    var _tschchartseriesbarvaluelabelposition: Int32? = nil
    var _tschchartseriesbubblevaluelabelposition: Int32? = nil
    var _tschchartseriesdefaultvaluelabelposition: Int32? = nil
    var _tschchartserieslinevaluelabelposition: Int32? = nil
    var _tschchartseriesmixedareavaluelabelposition: Int32? = nil
    var _tschchartseriesmixedcolumnvaluelabelposition: Int32? = nil
    var _tschchartseriesmixedlinevaluelabelposition: Int32? = nil
    var _tschchartseriesscattervaluelabelposition: Int32? = nil
    var _tschchartseriesstackedareavaluelabelposition: Int32? = nil
    var _tschchartseriesstackedbarvaluelabelposition: Int32? = nil
    var _tschchartseriesdefaultvaluelabelspacing: Int32? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _tschchartseriesdefaultcalloutlineendlineend = source._tschchartseriesdefaultcalloutlineendlineend
      _tschchartseriesdefaultcalloutlinestartlineend = source._tschchartseriesdefaultcalloutlinestartlineend
      _tschchartseriesdefaultcalloutlinestrokestyle = source._tschchartseriesdefaultcalloutlinestrokestyle
      _tschchartseriesdefaulterrorbarlineend = source._tschchartseriesdefaulterrorbarlineend
      _tschchartseriesdefaulterrorbarlineendscatterx = source._tschchartseriesdefaulterrorbarlineendscatterx
      _tschchartseriesdefaulterrorbarshadow = source._tschchartseriesdefaulterrorbarshadow
      _tschchartseriesdefaulterrorbarspacing = source._tschchartseriesdefaulterrorbarspacing
      _tschchartseriesdefaulterrorbarspacingscatterx = source._tschchartseriesdefaulterrorbarspacingscatterx
      _tschchartseriesdefaulterrorbarstroke = source._tschchartseriesdefaulterrorbarstroke
      _tschchartseriesdefaulterrorbarstrokescatterx = source._tschchartseriesdefaulterrorbarstrokescatterx
      _tschchartseries3Dareafill = source._tschchartseries3Dareafill
      _tschchartseries3Dbarfill = source._tschchartseries3Dbarfill
      _tschchartseries3Dcolumnfill = source._tschchartseries3Dcolumnfill
      _tschchartseries3Dlinefill = source._tschchartseries3Dlinefill
      _tschchartseries3Dpiefill = source._tschchartseries3Dpiefill
      _tschchartseriesareafill = source._tschchartseriesareafill
      _tschchartseriesbarfill = source._tschchartseriesbarfill
      _tschchartseriescolumnfill = source._tschchartseriescolumnfill
      _tschchartseriesdefaultfill = source._tschchartseriesdefaultfill
      _tschchartseriesmixedareafill = source._tschchartseriesmixedareafill
      _tschchartseriesmixedcolumnfill = source._tschchartseriesmixedcolumnfill
      _tschchartseriespiefill = source._tschchartseriespiefill
      _tschchartseriesarealabelparagraphstyleindex = source._tschchartseriesarealabelparagraphstyleindex
      _tschchartseriesbarlabelparagraphstyleindex = source._tschchartseriesbarlabelparagraphstyleindex
      _tschchartseriesdefaultlabelparagraphstyleindex = source._tschchartseriesdefaultlabelparagraphstyleindex
      _tschchartseriesdonutlabelparagraphstyleindex = source._tschchartseriesdonutlabelparagraphstyleindex
      _tschchartserieslinelabelparagraphstyleindex = source._tschchartserieslinelabelparagraphstyleindex
      _tschchartseriesmixedlabelparagraphstyleindex = source._tschchartseriesmixedlabelparagraphstyleindex
      _tschchartseriespielabelparagraphstyleindex = source._tschchartseriespielabelparagraphstyleindex
      _tschchartseriesdefaultopacity = source._tschchartseriesdefaultopacity
      _tschchartseriesareaoutsidelabelparagraphstyleindex = source._tschchartseriesareaoutsidelabelparagraphstyleindex
      _tschchartseriesbaroutsidelabelparagraphstyleindex = source._tschchartseriesbaroutsidelabelparagraphstyleindex
      _tschchartseriesdefaultoutsidelabelparagraphstyleindex = source._tschchartseriesdefaultoutsidelabelparagraphstyleindex
      _tschchartseriesdonutoutsidelabelparagraphstyleindex = source._tschchartseriesdonutoutsidelabelparagraphstyleindex
      _tschchartseriesmixedoutsidelabelparagraphstyleindex = source._tschchartseriesmixedoutsidelabelparagraphstyleindex
      _tschchartseriespieoutsidelabelparagraphstyleindex = source._tschchartseriespieoutsidelabelparagraphstyleindex
      _tschchartseries3Dareashadow = source._tschchartseries3Dareashadow
      _tschchartseries3Dbarshadow = source._tschchartseries3Dbarshadow
      _tschchartseries3Dcolumnshadow = source._tschchartseries3Dcolumnshadow
      _tschchartseries3Dlineshadow = source._tschchartseries3Dlineshadow
      _tschchartseries3Dpieshadow = source._tschchartseries3Dpieshadow
      _tschchartseriesareashadow = source._tschchartseriesareashadow
      _tschchartseriesbarshadow = source._tschchartseriesbarshadow
      _tschchartseriesbubbleshadow = source._tschchartseriesbubbleshadow
      _tschchartseriesdefaultshadow = source._tschchartseriesdefaultshadow
      _tschchartserieslineshadow = source._tschchartserieslineshadow
      _tschchartseriesmixedareashadow = source._tschchartseriesmixedareashadow
      _tschchartseriesmixedcolumnshadow = source._tschchartseriesmixedcolumnshadow
      _tschchartseriesmixedlineshadow = source._tschchartseriesmixedlineshadow
      _tschchartseriespieshadow = source._tschchartseriespieshadow
      _tschchartseriesscattershadow = source._tschchartseriesscattershadow
      _tschchartseriesareastroke = source._tschchartseriesareastroke
      _tschchartseriesbarstroke = source._tschchartseriesbarstroke
      _tschchartseriesbubblestroke = source._tschchartseriesbubblestroke
      _tschchartserieslinestroke = source._tschchartserieslinestroke
      _tschchartseriesmixedareastroke = source._tschchartseriesmixedareastroke
      _tschchartseriesmixedcolumnstroke = source._tschchartseriesmixedcolumnstroke
      _tschchartseriesmixedlinestroke = source._tschchartseriesmixedlinestroke
      _tschchartseriespiestroke = source._tschchartseriespiestroke
      _tschchartseriesscatterstroke = source._tschchartseriesscatterstroke
      _tschchartseriesareasymbolfill = source._tschchartseriesareasymbolfill
      _tschchartseriesbubblesymbolfill = source._tschchartseriesbubblesymbolfill
      _tschchartserieslinesymbolfill = source._tschchartserieslinesymbolfill
      _tschchartseriesmixedareasymbolfill = source._tschchartseriesmixedareasymbolfill
      _tschchartseriesmixedlinesymbolfill = source._tschchartseriesmixedlinesymbolfill
      _tschchartseriesscattersymbolfill = source._tschchartseriesscattersymbolfill
      _tschchartseriesareasymbolfilluseseriesfill = source._tschchartseriesareasymbolfilluseseriesfill
      _tschchartserieslinesymbolfilluseseriesfill = source._tschchartserieslinesymbolfilluseseriesfill
      _tschchartseriesmixedareasymbolfilluseseriesfill = source._tschchartseriesmixedareasymbolfilluseseriesfill
      _tschchartseriesmixedlinesymbolfilluseseriesfill = source._tschchartseriesmixedlinesymbolfilluseseriesfill
      _tschchartseriesareasymbolfilluseseriesstroke = source._tschchartseriesareasymbolfilluseseriesstroke
      _tschchartseriesbubblesymbolfilluseseriesstroke = source._tschchartseriesbubblesymbolfilluseseriesstroke
      _tschchartserieslinesymbolfilluseseriesstroke = source._tschchartserieslinesymbolfilluseseriesstroke
      _tschchartseriesmixedareasymbolfilluseseriesstroke = source._tschchartseriesmixedareasymbolfilluseseriesstroke
      _tschchartseriesmixedlinesymbolfilluseseriesstroke = source._tschchartseriesmixedlinesymbolfilluseseriesstroke
      _tschchartseriesscattersymbolfilluseseriesstroke = source._tschchartseriesscattersymbolfilluseseriesstroke
      _tschchartseriesareasymbolsize = source._tschchartseriesareasymbolsize
      _tschchartserieslinesymbolsize = source._tschchartserieslinesymbolsize
      _tschchartseriesmixedareasymbolsize = source._tschchartseriesmixedareasymbolsize
      _tschchartseriesmixedlinesymbolsize = source._tschchartseriesmixedlinesymbolsize
      _tschchartseriesscattersymbolsize = source._tschchartseriesscattersymbolsize
      _tschchartseriesareasymbolstroke = source._tschchartseriesareasymbolstroke
      _tschchartseriesbubblesymbolstroke = source._tschchartseriesbubblesymbolstroke
      _tschchartserieslinesymbolstroke = source._tschchartserieslinesymbolstroke
      _tschchartseriesmixedareasymbolstroke = source._tschchartseriesmixedareasymbolstroke
      _tschchartseriesmixedlinesymbolstroke = source._tschchartseriesmixedlinesymbolstroke
      _tschchartseriesscattersymbolstroke = source._tschchartseriesscattersymbolstroke
      _tschchartseriesdefaulttrendlineshadow = source._tschchartseriesdefaulttrendlineshadow
      _tschchartseriesdefaulttrendlinestroke = source._tschchartseriesdefaulttrendlinestroke
      _tschchartseriesdefaulttrendlineequationopacity = source._tschchartseriesdefaulttrendlineequationopacity
      _tschchartseriesdefaulttrendlineequationparagraphstyleindex = source._tschchartseriesdefaulttrendlineequationparagraphstyleindex
      _tschchartseriesdefaulttrendlinersquaredopacity = source._tschchartseriesdefaulttrendlinersquaredopacity
      _tschchartseriesdefaulttrendlinersquaredparagraphstyleindex = source._tschchartseriesdefaulttrendlinersquaredparagraphstyleindex
      _tschchartseriesareavaluelabelposition = source._tschchartseriesareavaluelabelposition
      _tschchartseriesbarvaluelabelposition = source._tschchartseriesbarvaluelabelposition
      _tschchartseriesbubblevaluelabelposition = source._tschchartseriesbubblevaluelabelposition
      _tschchartseriesdefaultvaluelabelposition = source._tschchartseriesdefaultvaluelabelposition
      _tschchartserieslinevaluelabelposition = source._tschchartserieslinevaluelabelposition
      _tschchartseriesmixedareavaluelabelposition = source._tschchartseriesmixedareavaluelabelposition
      _tschchartseriesmixedcolumnvaluelabelposition = source._tschchartseriesmixedcolumnvaluelabelposition
      _tschchartseriesmixedlinevaluelabelposition = source._tschchartseriesmixedlinevaluelabelposition
      _tschchartseriesscattervaluelabelposition = source._tschchartseriesscattervaluelabelposition
      _tschchartseriesstackedareavaluelabelposition = source._tschchartseriesstackedareavaluelabelposition
      _tschchartseriesstackedbarvaluelabelposition = source._tschchartseriesstackedbarvaluelabelposition
      _tschchartseriesdefaultvaluelabelspacing = source._tschchartseriesdefaultvaluelabelspacing
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._tschchartseriesdefaultcalloutlineendlineend, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesdefaultcalloutlinestartlineend, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesdefaultcalloutlinestrokestyle, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesdefaulterrorbarlineend, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesdefaulterrorbarlineendscatterx, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesdefaulterrorbarshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesdefaulterrorbarstroke, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesdefaulterrorbarstrokescatterx, !v.isInitialized {return false}
      if let v = _storage._tschchartseries3Dareafill, !v.isInitialized {return false}
      if let v = _storage._tschchartseries3Dbarfill, !v.isInitialized {return false}
      if let v = _storage._tschchartseries3Dcolumnfill, !v.isInitialized {return false}
      if let v = _storage._tschchartseries3Dlinefill, !v.isInitialized {return false}
      if let v = _storage._tschchartseries3Dpiefill, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesareafill, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesbarfill, !v.isInitialized {return false}
      if let v = _storage._tschchartseriescolumnfill, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesdefaultfill, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesmixedareafill, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesmixedcolumnfill, !v.isInitialized {return false}
      if let v = _storage._tschchartseriespiefill, !v.isInitialized {return false}
      if let v = _storage._tschchartseries3Dareashadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseries3Dbarshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseries3Dcolumnshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseries3Dlineshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseries3Dpieshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesareashadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesbarshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesbubbleshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesdefaultshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartserieslineshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesmixedareashadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesmixedcolumnshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesmixedlineshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseriespieshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesscattershadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesareastroke, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesbarstroke, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesbubblestroke, !v.isInitialized {return false}
      if let v = _storage._tschchartserieslinestroke, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesmixedareastroke, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesmixedcolumnstroke, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesmixedlinestroke, !v.isInitialized {return false}
      if let v = _storage._tschchartseriespiestroke, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesscatterstroke, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesareasymbolfill, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesbubblesymbolfill, !v.isInitialized {return false}
      if let v = _storage._tschchartserieslinesymbolfill, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesmixedareasymbolfill, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesmixedlinesymbolfill, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesscattersymbolfill, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesareasymbolstroke, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesbubblesymbolstroke, !v.isInitialized {return false}
      if let v = _storage._tschchartserieslinesymbolstroke, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesmixedareasymbolstroke, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesmixedlinesymbolstroke, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesscattersymbolstroke, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesdefaulttrendlineshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesdefaulttrendlinestroke, !v.isInitialized {return false}
      return true
    }
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaulterrorbarlineend)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaulterrorbarlineendscatterx)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaulterrorbarshadow)
        case 4: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaulterrorbarstroke)
        case 5: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaulterrorbarstrokescatterx)
        case 6: try decoder.decodeSingularMessageField(value: &_storage._tschchartseries3Dareafill)
        case 7: try decoder.decodeSingularMessageField(value: &_storage._tschchartseries3Dbarfill)
        case 8: try decoder.decodeSingularMessageField(value: &_storage._tschchartseries3Dcolumnfill)
        case 9: try decoder.decodeSingularMessageField(value: &_storage._tschchartseries3Dlinefill)
        case 10: try decoder.decodeSingularMessageField(value: &_storage._tschchartseries3Dpiefill)
        case 11: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesareafill)
        case 12: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesbarfill)
        case 13: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriescolumnfill)
        case 14: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaultfill)
        case 15: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesmixedareafill)
        case 16: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesmixedcolumnfill)
        case 17: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriespiefill)
        case 18: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesarealabelparagraphstyleindex)
        case 19: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesbarlabelparagraphstyleindex)
        case 20: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaultlabelparagraphstyleindex)
        case 21: try decoder.decodeSingularInt32Field(value: &_storage._tschchartserieslinelabelparagraphstyleindex)
        case 22: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesmixedlabelparagraphstyleindex)
        case 23: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriespielabelparagraphstyleindex)
        case 24: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesdefaultopacity)
        case 25: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesareaoutsidelabelparagraphstyleindex)
        case 26: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesbaroutsidelabelparagraphstyleindex)
        case 27: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaultoutsidelabelparagraphstyleindex)
        case 28: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesmixedoutsidelabelparagraphstyleindex)
        case 29: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriespieoutsidelabelparagraphstyleindex)
        case 30: try decoder.decodeSingularMessageField(value: &_storage._tschchartseries3Dareashadow)
        case 31: try decoder.decodeSingularMessageField(value: &_storage._tschchartseries3Dbarshadow)
        case 32: try decoder.decodeSingularMessageField(value: &_storage._tschchartseries3Dcolumnshadow)
        case 33: try decoder.decodeSingularMessageField(value: &_storage._tschchartseries3Dlineshadow)
        case 34: try decoder.decodeSingularMessageField(value: &_storage._tschchartseries3Dpieshadow)
        case 35: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesareashadow)
        case 36: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesbarshadow)
        case 37: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesbubbleshadow)
        case 38: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaultshadow)
        case 39: try decoder.decodeSingularMessageField(value: &_storage._tschchartserieslineshadow)
        case 40: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesmixedareashadow)
        case 41: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesmixedcolumnshadow)
        case 42: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesmixedlineshadow)
        case 43: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriespieshadow)
        case 44: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesscattershadow)
        case 45: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesareastroke)
        case 46: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesbarstroke)
        case 47: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesbubblestroke)
        case 48: try decoder.decodeSingularMessageField(value: &_storage._tschchartserieslinestroke)
        case 49: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesmixedareastroke)
        case 50: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesmixedcolumnstroke)
        case 51: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesmixedlinestroke)
        case 52: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriespiestroke)
        case 53: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesscatterstroke)
        case 54: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesareasymbolfill)
        case 55: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesbubblesymbolfill)
        case 56: try decoder.decodeSingularMessageField(value: &_storage._tschchartserieslinesymbolfill)
        case 57: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesmixedareasymbolfill)
        case 58: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesmixedlinesymbolfill)
        case 59: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesscattersymbolfill)
        case 60: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesareasymbolfilluseseriesfill)
        case 61: try decoder.decodeSingularBoolField(value: &_storage._tschchartserieslinesymbolfilluseseriesfill)
        case 62: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesmixedareasymbolfilluseseriesfill)
        case 63: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesmixedlinesymbolfilluseseriesfill)
        case 64: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesareasymbolfilluseseriesstroke)
        case 65: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesbubblesymbolfilluseseriesstroke)
        case 66: try decoder.decodeSingularBoolField(value: &_storage._tschchartserieslinesymbolfilluseseriesstroke)
        case 67: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesmixedareasymbolfilluseseriesstroke)
        case 68: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesmixedlinesymbolfilluseseriesstroke)
        case 69: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesscattersymbolfilluseseriesstroke)
        case 70: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesareasymbolsize)
        case 71: try decoder.decodeSingularFloatField(value: &_storage._tschchartserieslinesymbolsize)
        case 72: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesmixedareasymbolsize)
        case 73: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesmixedlinesymbolsize)
        case 74: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesscattersymbolsize)
        case 75: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesareasymbolstroke)
        case 76: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesbubblesymbolstroke)
        case 77: try decoder.decodeSingularMessageField(value: &_storage._tschchartserieslinesymbolstroke)
        case 78: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesmixedareasymbolstroke)
        case 79: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesmixedlinesymbolstroke)
        case 80: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesscattersymbolstroke)
        case 81: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesdefaulttrendlineequationopacity)
        case 82: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaulttrendlineequationparagraphstyleindex)
        case 83: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesdefaulttrendlinersquaredopacity)
        case 84: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaulttrendlinersquaredparagraphstyleindex)
        case 85: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaulttrendlineshadow)
        case 86: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaulttrendlinestroke)
        case 87: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesareavaluelabelposition)
        case 88: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesbarvaluelabelposition)
        case 89: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesbubblevaluelabelposition)
        case 90: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaultvaluelabelposition)
        case 91: try decoder.decodeSingularInt32Field(value: &_storage._tschchartserieslinevaluelabelposition)
        case 92: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesmixedareavaluelabelposition)
        case 93: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesmixedcolumnvaluelabelposition)
        case 94: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesmixedlinevaluelabelposition)
        case 95: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesscattervaluelabelposition)
        case 96: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesstackedareavaluelabelposition)
        case 97: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesstackedbarvaluelabelposition)
        case 98: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaulterrorbarspacing)
        case 99: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaulterrorbarspacingscatterx)
        case 100: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaultvaluelabelspacing)
        case 128: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaultcalloutlinestrokestyle)
        case 129: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaultcalloutlinestartlineend)
        case 130: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaultcalloutlineendlineend)
        case 152: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdonutlabelparagraphstyleindex)
        case 153: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdonutoutsidelabelparagraphstyleindex)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._tschchartseriesdefaulterrorbarlineend {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarlineendscatterx {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarstroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarstrokescatterx {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      }
      if let v = _storage._tschchartseries3Dareafill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
      }
      if let v = _storage._tschchartseries3Dbarfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      }
      if let v = _storage._tschchartseries3Dcolumnfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
      }
      if let v = _storage._tschchartseries3Dlinefill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 9)
      }
      if let v = _storage._tschchartseries3Dpiefill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 10)
      }
      if let v = _storage._tschchartseriesareafill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 11)
      }
      if let v = _storage._tschchartseriesbarfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 12)
      }
      if let v = _storage._tschchartseriescolumnfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 13)
      }
      if let v = _storage._tschchartseriesdefaultfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 14)
      }
      if let v = _storage._tschchartseriesmixedareafill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 15)
      }
      if let v = _storage._tschchartseriesmixedcolumnfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 16)
      }
      if let v = _storage._tschchartseriespiefill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 17)
      }
      if let v = _storage._tschchartseriesarealabelparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 18)
      }
      if let v = _storage._tschchartseriesbarlabelparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 19)
      }
      if let v = _storage._tschchartseriesdefaultlabelparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 20)
      }
      if let v = _storage._tschchartserieslinelabelparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 21)
      }
      if let v = _storage._tschchartseriesmixedlabelparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 22)
      }
      if let v = _storage._tschchartseriespielabelparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 23)
      }
      if let v = _storage._tschchartseriesdefaultopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 24)
      }
      if let v = _storage._tschchartseriesareaoutsidelabelparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 25)
      }
      if let v = _storage._tschchartseriesbaroutsidelabelparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 26)
      }
      if let v = _storage._tschchartseriesdefaultoutsidelabelparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 27)
      }
      if let v = _storage._tschchartseriesmixedoutsidelabelparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 28)
      }
      if let v = _storage._tschchartseriespieoutsidelabelparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 29)
      }
      if let v = _storage._tschchartseries3Dareashadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 30)
      }
      if let v = _storage._tschchartseries3Dbarshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 31)
      }
      if let v = _storage._tschchartseries3Dcolumnshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 32)
      }
      if let v = _storage._tschchartseries3Dlineshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 33)
      }
      if let v = _storage._tschchartseries3Dpieshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 34)
      }
      if let v = _storage._tschchartseriesareashadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 35)
      }
      if let v = _storage._tschchartseriesbarshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 36)
      }
      if let v = _storage._tschchartseriesbubbleshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 37)
      }
      if let v = _storage._tschchartseriesdefaultshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 38)
      }
      if let v = _storage._tschchartserieslineshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 39)
      }
      if let v = _storage._tschchartseriesmixedareashadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 40)
      }
      if let v = _storage._tschchartseriesmixedcolumnshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 41)
      }
      if let v = _storage._tschchartseriesmixedlineshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 42)
      }
      if let v = _storage._tschchartseriespieshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 43)
      }
      if let v = _storage._tschchartseriesscattershadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 44)
      }
      if let v = _storage._tschchartseriesareastroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 45)
      }
      if let v = _storage._tschchartseriesbarstroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 46)
      }
      if let v = _storage._tschchartseriesbubblestroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 47)
      }
      if let v = _storage._tschchartserieslinestroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 48)
      }
      if let v = _storage._tschchartseriesmixedareastroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 49)
      }
      if let v = _storage._tschchartseriesmixedcolumnstroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 50)
      }
      if let v = _storage._tschchartseriesmixedlinestroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 51)
      }
      if let v = _storage._tschchartseriespiestroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 52)
      }
      if let v = _storage._tschchartseriesscatterstroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 53)
      }
      if let v = _storage._tschchartseriesareasymbolfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 54)
      }
      if let v = _storage._tschchartseriesbubblesymbolfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 55)
      }
      if let v = _storage._tschchartserieslinesymbolfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 56)
      }
      if let v = _storage._tschchartseriesmixedareasymbolfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 57)
      }
      if let v = _storage._tschchartseriesmixedlinesymbolfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 58)
      }
      if let v = _storage._tschchartseriesscattersymbolfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 59)
      }
      if let v = _storage._tschchartseriesareasymbolfilluseseriesfill {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 60)
      }
      if let v = _storage._tschchartserieslinesymbolfilluseseriesfill {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 61)
      }
      if let v = _storage._tschchartseriesmixedareasymbolfilluseseriesfill {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 62)
      }
      if let v = _storage._tschchartseriesmixedlinesymbolfilluseseriesfill {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 63)
      }
      if let v = _storage._tschchartseriesareasymbolfilluseseriesstroke {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 64)
      }
      if let v = _storage._tschchartseriesbubblesymbolfilluseseriesstroke {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 65)
      }
      if let v = _storage._tschchartserieslinesymbolfilluseseriesstroke {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 66)
      }
      if let v = _storage._tschchartseriesmixedareasymbolfilluseseriesstroke {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 67)
      }
      if let v = _storage._tschchartseriesmixedlinesymbolfilluseseriesstroke {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 68)
      }
      if let v = _storage._tschchartseriesscattersymbolfilluseseriesstroke {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 69)
      }
      if let v = _storage._tschchartseriesareasymbolsize {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 70)
      }
      if let v = _storage._tschchartserieslinesymbolsize {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 71)
      }
      if let v = _storage._tschchartseriesmixedareasymbolsize {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 72)
      }
      if let v = _storage._tschchartseriesmixedlinesymbolsize {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 73)
      }
      if let v = _storage._tschchartseriesscattersymbolsize {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 74)
      }
      if let v = _storage._tschchartseriesareasymbolstroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 75)
      }
      if let v = _storage._tschchartseriesbubblesymbolstroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 76)
      }
      if let v = _storage._tschchartserieslinesymbolstroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 77)
      }
      if let v = _storage._tschchartseriesmixedareasymbolstroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 78)
      }
      if let v = _storage._tschchartseriesmixedlinesymbolstroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 79)
      }
      if let v = _storage._tschchartseriesscattersymbolstroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 80)
      }
      if let v = _storage._tschchartseriesdefaulttrendlineequationopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 81)
      }
      if let v = _storage._tschchartseriesdefaulttrendlineequationparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 82)
      }
      if let v = _storage._tschchartseriesdefaulttrendlinersquaredopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 83)
      }
      if let v = _storage._tschchartseriesdefaulttrendlinersquaredparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 84)
      }
      if let v = _storage._tschchartseriesdefaulttrendlineshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 85)
      }
      if let v = _storage._tschchartseriesdefaulttrendlinestroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 86)
      }
      if let v = _storage._tschchartseriesareavaluelabelposition {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 87)
      }
      if let v = _storage._tschchartseriesbarvaluelabelposition {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 88)
      }
      if let v = _storage._tschchartseriesbubblevaluelabelposition {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 89)
      }
      if let v = _storage._tschchartseriesdefaultvaluelabelposition {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 90)
      }
      if let v = _storage._tschchartserieslinevaluelabelposition {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 91)
      }
      if let v = _storage._tschchartseriesmixedareavaluelabelposition {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 92)
      }
      if let v = _storage._tschchartseriesmixedcolumnvaluelabelposition {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 93)
      }
      if let v = _storage._tschchartseriesmixedlinevaluelabelposition {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 94)
      }
      if let v = _storage._tschchartseriesscattervaluelabelposition {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 95)
      }
      if let v = _storage._tschchartseriesstackedareavaluelabelposition {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 96)
      }
      if let v = _storage._tschchartseriesstackedbarvaluelabelposition {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 97)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarspacing {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 98)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarspacingscatterx {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 99)
      }
      if let v = _storage._tschchartseriesdefaultvaluelabelspacing {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 100)
      }
      if let v = _storage._tschchartseriesdefaultcalloutlinestrokestyle {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 128)
      }
      if let v = _storage._tschchartseriesdefaultcalloutlinestartlineend {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 129)
      }
      if let v = _storage._tschchartseriesdefaultcalloutlineendlineend {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 130)
      }
      if let v = _storage._tschchartseriesdonutlabelparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 152)
      }
      if let v = _storage._tschchartseriesdonutoutsidelabelparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 153)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSCH_Generated_ChartSeriesStyleArchive, rhs: TSCH_Generated_ChartSeriesStyleArchive) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._tschchartseriesdefaultcalloutlineendlineend != rhs_storage._tschchartseriesdefaultcalloutlineendlineend {return false}
        if _storage._tschchartseriesdefaultcalloutlinestartlineend != rhs_storage._tschchartseriesdefaultcalloutlinestartlineend {return false}
        if _storage._tschchartseriesdefaultcalloutlinestrokestyle != rhs_storage._tschchartseriesdefaultcalloutlinestrokestyle {return false}
        if _storage._tschchartseriesdefaulterrorbarlineend != rhs_storage._tschchartseriesdefaulterrorbarlineend {return false}
        if _storage._tschchartseriesdefaulterrorbarlineendscatterx != rhs_storage._tschchartseriesdefaulterrorbarlineendscatterx {return false}
        if _storage._tschchartseriesdefaulterrorbarshadow != rhs_storage._tschchartseriesdefaulterrorbarshadow {return false}
        if _storage._tschchartseriesdefaulterrorbarspacing != rhs_storage._tschchartseriesdefaulterrorbarspacing {return false}
        if _storage._tschchartseriesdefaulterrorbarspacingscatterx != rhs_storage._tschchartseriesdefaulterrorbarspacingscatterx {return false}
        if _storage._tschchartseriesdefaulterrorbarstroke != rhs_storage._tschchartseriesdefaulterrorbarstroke {return false}
        if _storage._tschchartseriesdefaulterrorbarstrokescatterx != rhs_storage._tschchartseriesdefaulterrorbarstrokescatterx {return false}
        if _storage._tschchartseries3Dareafill != rhs_storage._tschchartseries3Dareafill {return false}
        if _storage._tschchartseries3Dbarfill != rhs_storage._tschchartseries3Dbarfill {return false}
        if _storage._tschchartseries3Dcolumnfill != rhs_storage._tschchartseries3Dcolumnfill {return false}
        if _storage._tschchartseries3Dlinefill != rhs_storage._tschchartseries3Dlinefill {return false}
        if _storage._tschchartseries3Dpiefill != rhs_storage._tschchartseries3Dpiefill {return false}
        if _storage._tschchartseriesareafill != rhs_storage._tschchartseriesareafill {return false}
        if _storage._tschchartseriesbarfill != rhs_storage._tschchartseriesbarfill {return false}
        if _storage._tschchartseriescolumnfill != rhs_storage._tschchartseriescolumnfill {return false}
        if _storage._tschchartseriesdefaultfill != rhs_storage._tschchartseriesdefaultfill {return false}
        if _storage._tschchartseriesmixedareafill != rhs_storage._tschchartseriesmixedareafill {return false}
        if _storage._tschchartseriesmixedcolumnfill != rhs_storage._tschchartseriesmixedcolumnfill {return false}
        if _storage._tschchartseriespiefill != rhs_storage._tschchartseriespiefill {return false}
        if _storage._tschchartseriesarealabelparagraphstyleindex != rhs_storage._tschchartseriesarealabelparagraphstyleindex {return false}
        if _storage._tschchartseriesbarlabelparagraphstyleindex != rhs_storage._tschchartseriesbarlabelparagraphstyleindex {return false}
        if _storage._tschchartseriesdefaultlabelparagraphstyleindex != rhs_storage._tschchartseriesdefaultlabelparagraphstyleindex {return false}
        if _storage._tschchartseriesdonutlabelparagraphstyleindex != rhs_storage._tschchartseriesdonutlabelparagraphstyleindex {return false}
        if _storage._tschchartserieslinelabelparagraphstyleindex != rhs_storage._tschchartserieslinelabelparagraphstyleindex {return false}
        if _storage._tschchartseriesmixedlabelparagraphstyleindex != rhs_storage._tschchartseriesmixedlabelparagraphstyleindex {return false}
        if _storage._tschchartseriespielabelparagraphstyleindex != rhs_storage._tschchartseriespielabelparagraphstyleindex {return false}
        if _storage._tschchartseriesdefaultopacity != rhs_storage._tschchartseriesdefaultopacity {return false}
        if _storage._tschchartseriesareaoutsidelabelparagraphstyleindex != rhs_storage._tschchartseriesareaoutsidelabelparagraphstyleindex {return false}
        if _storage._tschchartseriesbaroutsidelabelparagraphstyleindex != rhs_storage._tschchartseriesbaroutsidelabelparagraphstyleindex {return false}
        if _storage._tschchartseriesdefaultoutsidelabelparagraphstyleindex != rhs_storage._tschchartseriesdefaultoutsidelabelparagraphstyleindex {return false}
        if _storage._tschchartseriesdonutoutsidelabelparagraphstyleindex != rhs_storage._tschchartseriesdonutoutsidelabelparagraphstyleindex {return false}
        if _storage._tschchartseriesmixedoutsidelabelparagraphstyleindex != rhs_storage._tschchartseriesmixedoutsidelabelparagraphstyleindex {return false}
        if _storage._tschchartseriespieoutsidelabelparagraphstyleindex != rhs_storage._tschchartseriespieoutsidelabelparagraphstyleindex {return false}
        if _storage._tschchartseries3Dareashadow != rhs_storage._tschchartseries3Dareashadow {return false}
        if _storage._tschchartseries3Dbarshadow != rhs_storage._tschchartseries3Dbarshadow {return false}
        if _storage._tschchartseries3Dcolumnshadow != rhs_storage._tschchartseries3Dcolumnshadow {return false}
        if _storage._tschchartseries3Dlineshadow != rhs_storage._tschchartseries3Dlineshadow {return false}
        if _storage._tschchartseries3Dpieshadow != rhs_storage._tschchartseries3Dpieshadow {return false}
        if _storage._tschchartseriesareashadow != rhs_storage._tschchartseriesareashadow {return false}
        if _storage._tschchartseriesbarshadow != rhs_storage._tschchartseriesbarshadow {return false}
        if _storage._tschchartseriesbubbleshadow != rhs_storage._tschchartseriesbubbleshadow {return false}
        if _storage._tschchartseriesdefaultshadow != rhs_storage._tschchartseriesdefaultshadow {return false}
        if _storage._tschchartserieslineshadow != rhs_storage._tschchartserieslineshadow {return false}
        if _storage._tschchartseriesmixedareashadow != rhs_storage._tschchartseriesmixedareashadow {return false}
        if _storage._tschchartseriesmixedcolumnshadow != rhs_storage._tschchartseriesmixedcolumnshadow {return false}
        if _storage._tschchartseriesmixedlineshadow != rhs_storage._tschchartseriesmixedlineshadow {return false}
        if _storage._tschchartseriespieshadow != rhs_storage._tschchartseriespieshadow {return false}
        if _storage._tschchartseriesscattershadow != rhs_storage._tschchartseriesscattershadow {return false}
        if _storage._tschchartseriesareastroke != rhs_storage._tschchartseriesareastroke {return false}
        if _storage._tschchartseriesbarstroke != rhs_storage._tschchartseriesbarstroke {return false}
        if _storage._tschchartseriesbubblestroke != rhs_storage._tschchartseriesbubblestroke {return false}
        if _storage._tschchartserieslinestroke != rhs_storage._tschchartserieslinestroke {return false}
        if _storage._tschchartseriesmixedareastroke != rhs_storage._tschchartseriesmixedareastroke {return false}
        if _storage._tschchartseriesmixedcolumnstroke != rhs_storage._tschchartseriesmixedcolumnstroke {return false}
        if _storage._tschchartseriesmixedlinestroke != rhs_storage._tschchartseriesmixedlinestroke {return false}
        if _storage._tschchartseriespiestroke != rhs_storage._tschchartseriespiestroke {return false}
        if _storage._tschchartseriesscatterstroke != rhs_storage._tschchartseriesscatterstroke {return false}
        if _storage._tschchartseriesareasymbolfill != rhs_storage._tschchartseriesareasymbolfill {return false}
        if _storage._tschchartseriesbubblesymbolfill != rhs_storage._tschchartseriesbubblesymbolfill {return false}
        if _storage._tschchartserieslinesymbolfill != rhs_storage._tschchartserieslinesymbolfill {return false}
        if _storage._tschchartseriesmixedareasymbolfill != rhs_storage._tschchartseriesmixedareasymbolfill {return false}
        if _storage._tschchartseriesmixedlinesymbolfill != rhs_storage._tschchartseriesmixedlinesymbolfill {return false}
        if _storage._tschchartseriesscattersymbolfill != rhs_storage._tschchartseriesscattersymbolfill {return false}
        if _storage._tschchartseriesareasymbolfilluseseriesfill != rhs_storage._tschchartseriesareasymbolfilluseseriesfill {return false}
        if _storage._tschchartserieslinesymbolfilluseseriesfill != rhs_storage._tschchartserieslinesymbolfilluseseriesfill {return false}
        if _storage._tschchartseriesmixedareasymbolfilluseseriesfill != rhs_storage._tschchartseriesmixedareasymbolfilluseseriesfill {return false}
        if _storage._tschchartseriesmixedlinesymbolfilluseseriesfill != rhs_storage._tschchartseriesmixedlinesymbolfilluseseriesfill {return false}
        if _storage._tschchartseriesareasymbolfilluseseriesstroke != rhs_storage._tschchartseriesareasymbolfilluseseriesstroke {return false}
        if _storage._tschchartseriesbubblesymbolfilluseseriesstroke != rhs_storage._tschchartseriesbubblesymbolfilluseseriesstroke {return false}
        if _storage._tschchartserieslinesymbolfilluseseriesstroke != rhs_storage._tschchartserieslinesymbolfilluseseriesstroke {return false}
        if _storage._tschchartseriesmixedareasymbolfilluseseriesstroke != rhs_storage._tschchartseriesmixedareasymbolfilluseseriesstroke {return false}
        if _storage._tschchartseriesmixedlinesymbolfilluseseriesstroke != rhs_storage._tschchartseriesmixedlinesymbolfilluseseriesstroke {return false}
        if _storage._tschchartseriesscattersymbolfilluseseriesstroke != rhs_storage._tschchartseriesscattersymbolfilluseseriesstroke {return false}
        if _storage._tschchartseriesareasymbolsize != rhs_storage._tschchartseriesareasymbolsize {return false}
        if _storage._tschchartserieslinesymbolsize != rhs_storage._tschchartserieslinesymbolsize {return false}
        if _storage._tschchartseriesmixedareasymbolsize != rhs_storage._tschchartseriesmixedareasymbolsize {return false}
        if _storage._tschchartseriesmixedlinesymbolsize != rhs_storage._tschchartseriesmixedlinesymbolsize {return false}
        if _storage._tschchartseriesscattersymbolsize != rhs_storage._tschchartseriesscattersymbolsize {return false}
        if _storage._tschchartseriesareasymbolstroke != rhs_storage._tschchartseriesareasymbolstroke {return false}
        if _storage._tschchartseriesbubblesymbolstroke != rhs_storage._tschchartseriesbubblesymbolstroke {return false}
        if _storage._tschchartserieslinesymbolstroke != rhs_storage._tschchartserieslinesymbolstroke {return false}
        if _storage._tschchartseriesmixedareasymbolstroke != rhs_storage._tschchartseriesmixedareasymbolstroke {return false}
        if _storage._tschchartseriesmixedlinesymbolstroke != rhs_storage._tschchartseriesmixedlinesymbolstroke {return false}
        if _storage._tschchartseriesscattersymbolstroke != rhs_storage._tschchartseriesscattersymbolstroke {return false}
        if _storage._tschchartseriesdefaulttrendlineshadow != rhs_storage._tschchartseriesdefaulttrendlineshadow {return false}
        if _storage._tschchartseriesdefaulttrendlinestroke != rhs_storage._tschchartseriesdefaulttrendlinestroke {return false}
        if _storage._tschchartseriesdefaulttrendlineequationopacity != rhs_storage._tschchartseriesdefaulttrendlineequationopacity {return false}
        if _storage._tschchartseriesdefaulttrendlineequationparagraphstyleindex != rhs_storage._tschchartseriesdefaulttrendlineequationparagraphstyleindex {return false}
        if _storage._tschchartseriesdefaulttrendlinersquaredopacity != rhs_storage._tschchartseriesdefaulttrendlinersquaredopacity {return false}
        if _storage._tschchartseriesdefaulttrendlinersquaredparagraphstyleindex != rhs_storage._tschchartseriesdefaulttrendlinersquaredparagraphstyleindex {return false}
        if _storage._tschchartseriesareavaluelabelposition != rhs_storage._tschchartseriesareavaluelabelposition {return false}
        if _storage._tschchartseriesbarvaluelabelposition != rhs_storage._tschchartseriesbarvaluelabelposition {return false}
        if _storage._tschchartseriesbubblevaluelabelposition != rhs_storage._tschchartseriesbubblevaluelabelposition {return false}
        if _storage._tschchartseriesdefaultvaluelabelposition != rhs_storage._tschchartseriesdefaultvaluelabelposition {return false}
        if _storage._tschchartserieslinevaluelabelposition != rhs_storage._tschchartserieslinevaluelabelposition {return false}
        if _storage._tschchartseriesmixedareavaluelabelposition != rhs_storage._tschchartseriesmixedareavaluelabelposition {return false}
        if _storage._tschchartseriesmixedcolumnvaluelabelposition != rhs_storage._tschchartseriesmixedcolumnvaluelabelposition {return false}
        if _storage._tschchartseriesmixedlinevaluelabelposition != rhs_storage._tschchartseriesmixedlinevaluelabelposition {return false}
        if _storage._tschchartseriesscattervaluelabelposition != rhs_storage._tschchartseriesscattervaluelabelposition {return false}
        if _storage._tschchartseriesstackedareavaluelabelposition != rhs_storage._tschchartseriesstackedareavaluelabelposition {return false}
        if _storage._tschchartseriesstackedbarvaluelabelposition != rhs_storage._tschchartseriesstackedbarvaluelabelposition {return false}
        if _storage._tschchartseriesdefaultvaluelabelspacing != rhs_storage._tschchartseriesdefaultvaluelabelspacing {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSCH_Generated_ChartSeriesNonStyleArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ChartSeriesNonStyleArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    69: .standard(proto: "tschchartseriesdefault1_0dateformat"),
    21: .standard(proto: "tschchartseriesdefault1_0numberformat"),
    22: .standard(proto: "tschchartseriespie1_0numberformat"),
    16: .standard(proto: "tschchartseriespie2_3labelexplosion"),
    1: .same(proto: "tschchartseriesbubbleadjustmentscale"),
    71: .same(proto: "tschchartseriesdefaultdateformat"),
    70: .same(proto: "tschchartseriesdefaultdurationformat"),
    103: .same(proto: "tschchartseriesareaenablecalloutline"),
    104: .same(proto: "tschchartseriesbarenablecalloutline"),
    105: .same(proto: "tschchartseriesbubbleenablecalloutline"),
    110: .same(proto: "tschchartseriesdefaultenablecalloutline"),
    106: .same(proto: "tschchartserieslineenablecalloutline"),
    102: .same(proto: "tschchartseriespieenablecalloutline"),
    107: .same(proto: "tschchartseriesscatterenablecalloutline"),
    108: .same(proto: "tschchartseriesstackedareaenablecalloutline"),
    109: .same(proto: "tschchartseriesstackedbarenablecalloutline"),
    2: .same(proto: "tschchartseriesdefaulterrorbarcustomnegativedata"),
    3: .same(proto: "tschchartseriesdefaulterrorbarcustomnegativedatascatterx"),
    4: .same(proto: "tschchartseriesdefaulterrorbarcustompositivedata"),
    5: .same(proto: "tschchartseriesdefaulterrorbarcustompositivedatascatterx"),
    6: .same(proto: "tschchartseriesdefaulterrorbarfixedvalue"),
    7: .same(proto: "tschchartseriesdefaulterrorbarfixedvaluescatterx"),
    8: .same(proto: "tschchartseriesdefaulterrorbarpercentvalue"),
    9: .same(proto: "tschchartseriesdefaulterrorbarpercentvaluescatterx"),
    10: .same(proto: "tschchartseriesdefaulterrorbarsetting"),
    11: .same(proto: "tschchartseriesdefaulterrorbarsettingscatterx"),
    12: .same(proto: "tschchartseriesdefaulterrorbarstddevvalue"),
    13: .same(proto: "tschchartseriesdefaulterrorbarstddevvaluescatterx"),
    14: .same(proto: "tschchartseriesdefaulterrorbartype"),
    15: .same(proto: "tschchartseriesdefaulterrorbartypescatterx"),
    147: .same(proto: "tschchartseriespielabelexplosion"),
    17: .same(proto: "tschchartseriesbubblelinetype"),
    18: .same(proto: "tschchartserieslinelinetype"),
    19: .same(proto: "tschchartseriesmixedlinelinetype"),
    20: .same(proto: "tschchartseriesscatterlinetype"),
    98: .same(proto: "tschchartseriesdefaultnumberformat"),
    99: .same(proto: "tschchartseriespienumberformat"),
    23: .same(proto: "tschchartseriesdefaultnumberformattype"),
    24: .same(proto: "tschchartseriespienumberformattype"),
    25: .same(proto: "tschchartseriesstackedpercentnumberformat"),
    26: .same(proto: "tschchartseriesdefaultseriestype"),
    27: .same(proto: "tschchartseriesdefaultshowerrorbar"),
    28: .same(proto: "tschchartseriesdefaultshowerrorbarscatterx"),
    101: .same(proto: "tschchartseriesbubbleshowlabelsinfront"),
    100: .same(proto: "tschchartseriesdefaultshowlabelsinfront"),
    29: .same(proto: "tschchartseriesscattershowline"),
    30: .same(proto: "tschchartseriesbubbleshownegativedata"),
    65: .same(proto: "tschchartseriesbubbleshowserieslabels"),
    31: .same(proto: "tschchartseriespieshowserieslabels"),
    67: .same(proto: "tschchartseriesscattershowserieslabels"),
    32: .same(proto: "tschchartseriesareashowsymbol"),
    33: .same(proto: "tschchartserieslineshowsymbol"),
    34: .same(proto: "tschchartseriesmixedareashowsymbol"),
    35: .same(proto: "tschchartseriesmixedlineshowsymbol"),
    36: .same(proto: "tschchartseriesscattershowsymbol"),
    37: .same(proto: "tschchartseriesdefaultshowtrendline"),
    38: .same(proto: "tschchartseriesareashowvaluelabels"),
    39: .same(proto: "tschchartseriesbarshowvaluelabels"),
    40: .same(proto: "tschchartseriesbubbleshowvaluelabels"),
    41: .same(proto: "tschchartseriesdefaultshowvaluelabels"),
    42: .same(proto: "tschchartserieslineshowvaluelabels"),
    43: .same(proto: "tschchartseriesmixedshowvaluelabels"),
    44: .same(proto: "tschchartseriespieshowvaluelabels"),
    45: .same(proto: "tschchartseriesscattershowvaluelabels"),
    46: .same(proto: "tschchartseriesbubblesizedimension"),
    139: .same(proto: "tschchartseriesareastacklabels"),
    140: .same(proto: "tschchartseriesbarstacklabels"),
    141: .same(proto: "tschchartseriesbubblestacklabels"),
    146: .same(proto: "tschchartseriesdefaultstacklabels"),
    142: .same(proto: "tschchartserieslinestacklabels"),
    138: .same(proto: "tschchartseriespiestacklabels"),
    143: .same(proto: "tschchartseriesscatterstacklabels"),
    144: .same(proto: "tschchartseriesstackedareastacklabels"),
    145: .same(proto: "tschchartseriesstackedbarstacklabels"),
    47: .same(proto: "tschchartseriesareasymboltype"),
    48: .same(proto: "tschchartserieslinesymboltype"),
    49: .same(proto: "tschchartseriesmixedareasymboltype"),
    50: .same(proto: "tschchartseriesmixedlinesymboltype"),
    51: .same(proto: "tschchartseriesscattersymboltype"),
    52: .same(proto: "tschchartseriesdefaulttrendlineequationoffsetx"),
    53: .same(proto: "tschchartseriesdefaulttrendlineequationoffsety"),
    54: .same(proto: "tschchartseriesdefaulttrendlinelabelstring"),
    55: .same(proto: "tschchartseriesdefaulttrendlineorder"),
    56: .same(proto: "tschchartseriesdefaulttrendlineperiod"),
    57: .same(proto: "tschchartseriesdefaulttrendlinersquaredoffsetx"),
    58: .same(proto: "tschchartseriesdefaulttrendlinersquaredoffsety"),
    59: .same(proto: "tschchartseriesdefaulttrendlineshowequation"),
    60: .same(proto: "tschchartseriesdefaulttrendlineshowlabel"),
    61: .same(proto: "tschchartseriesdefaulttrendlineshowr2value"),
    62: .same(proto: "tschchartseriesdefaulttrendlinetype"),
    66: .same(proto: "tschchartseriesbubblevaluelabelsaxis"),
    68: .same(proto: "tschchartseriesscattervaluelabelsaxis"),
    63: .same(proto: "tschchartseriespiewedgeexplosion"),
    64: .same(proto: "tschchartseriesdefaultyaxisordinal"),
  ]

  fileprivate class _StorageClass {
    var _tschchartseriesdefault10Dateformat: TSK_FormatStructArchive? = nil
    var _tschchartseriesdefault10Numberformat: TSK_FormatStructArchive? = nil
    var _tschchartseriespie10Numberformat: TSK_FormatStructArchive? = nil
    var _tschchartseriespie23Labelexplosion: Float? = nil
    var _tschchartseriesbubbleadjustmentscale: Float? = nil
    var _tschchartseriesdefaultdateformat: TSK_FormatStructArchive? = nil
    var _tschchartseriesdefaultdurationformat: TSK_FormatStructArchive? = nil
    var _tschchartseriesareaenablecalloutline: Int32? = nil
    var _tschchartseriesbarenablecalloutline: Int32? = nil
    var _tschchartseriesbubbleenablecalloutline: Int32? = nil
    var _tschchartseriesdefaultenablecalloutline: Int32? = nil
    var _tschchartserieslineenablecalloutline: Int32? = nil
    var _tschchartseriespieenablecalloutline: Int32? = nil
    var _tschchartseriesscatterenablecalloutline: Int32? = nil
    var _tschchartseriesstackedareaenablecalloutline: Int32? = nil
    var _tschchartseriesstackedbarenablecalloutline: Int32? = nil
    var _tschchartseriesdefaulterrorbarcustomnegativedata: TSCH_ChartsNSArrayOfNSNumberDoubleArchive? = nil
    var _tschchartseriesdefaulterrorbarcustomnegativedatascatterx: TSCH_ChartsNSArrayOfNSNumberDoubleArchive? = nil
    var _tschchartseriesdefaulterrorbarcustompositivedata: TSCH_ChartsNSArrayOfNSNumberDoubleArchive? = nil
    var _tschchartseriesdefaulterrorbarcustompositivedatascatterx: TSCH_ChartsNSArrayOfNSNumberDoubleArchive? = nil
    var _tschchartseriesdefaulterrorbarfixedvalue: Float? = nil
    var _tschchartseriesdefaulterrorbarfixedvaluescatterx: Float? = nil
    var _tschchartseriesdefaulterrorbarpercentvalue: Float? = nil
    var _tschchartseriesdefaulterrorbarpercentvaluescatterx: Float? = nil
    var _tschchartseriesdefaulterrorbarsetting: Int32? = nil
    var _tschchartseriesdefaulterrorbarsettingscatterx: Int32? = nil
    var _tschchartseriesdefaulterrorbarstddevvalue: Float? = nil
    var _tschchartseriesdefaulterrorbarstddevvaluescatterx: Float? = nil
    var _tschchartseriesdefaulterrorbartype: Int32? = nil
    var _tschchartseriesdefaulterrorbartypescatterx: Int32? = nil
    var _tschchartseriespielabelexplosion: Float? = nil
    var _tschchartseriesbubblelinetype: Int32? = nil
    var _tschchartserieslinelinetype: Int32? = nil
    var _tschchartseriesmixedlinelinetype: Int32? = nil
    var _tschchartseriesscatterlinetype: Int32? = nil
    var _tschchartseriesdefaultnumberformat: TSK_FormatStructArchive? = nil
    var _tschchartseriespienumberformat: TSK_FormatStructArchive? = nil
    var _tschchartseriesdefaultnumberformattype: Int32? = nil
    var _tschchartseriespienumberformattype: Int32? = nil
    var _tschchartseriesstackedpercentnumberformat: TSK_FormatStructArchive? = nil
    var _tschchartseriesdefaultseriestype: Int32? = nil
    var _tschchartseriesdefaultshowerrorbar: Bool? = nil
    var _tschchartseriesdefaultshowerrorbarscatterx: Bool? = nil
    var _tschchartseriesbubbleshowlabelsinfront: Bool? = nil
    var _tschchartseriesdefaultshowlabelsinfront: Bool? = nil
    var _tschchartseriesscattershowline: Bool? = nil
    var _tschchartseriesbubbleshownegativedata: Bool? = nil
    var _tschchartseriesbubbleshowserieslabels: Bool? = nil
    var _tschchartseriespieshowserieslabels: Bool? = nil
    var _tschchartseriesscattershowserieslabels: Bool? = nil
    var _tschchartseriesareashowsymbol: Bool? = nil
    var _tschchartserieslineshowsymbol: Bool? = nil
    var _tschchartseriesmixedareashowsymbol: Bool? = nil
    var _tschchartseriesmixedlineshowsymbol: Bool? = nil
    var _tschchartseriesscattershowsymbol: Bool? = nil
    var _tschchartseriesdefaultshowtrendline: Bool? = nil
    var _tschchartseriesareashowvaluelabels: Bool? = nil
    var _tschchartseriesbarshowvaluelabels: Bool? = nil
    var _tschchartseriesbubbleshowvaluelabels: Bool? = nil
    var _tschchartseriesdefaultshowvaluelabels: Bool? = nil
    var _tschchartserieslineshowvaluelabels: Bool? = nil
    var _tschchartseriesmixedshowvaluelabels: Bool? = nil
    var _tschchartseriespieshowvaluelabels: Bool? = nil
    var _tschchartseriesscattershowvaluelabels: Bool? = nil
    var _tschchartseriesbubblesizedimension: Int32? = nil
    var _tschchartseriesareastacklabels: Bool? = nil
    var _tschchartseriesbarstacklabels: Bool? = nil
    var _tschchartseriesbubblestacklabels: Bool? = nil
    var _tschchartseriesdefaultstacklabels: Bool? = nil
    var _tschchartserieslinestacklabels: Bool? = nil
    var _tschchartseriespiestacklabels: Bool? = nil
    var _tschchartseriesscatterstacklabels: Bool? = nil
    var _tschchartseriesstackedareastacklabels: Bool? = nil
    var _tschchartseriesstackedbarstacklabels: Bool? = nil
    var _tschchartseriesareasymboltype: Int32? = nil
    var _tschchartserieslinesymboltype: Int32? = nil
    var _tschchartseriesmixedareasymboltype: Int32? = nil
    var _tschchartseriesmixedlinesymboltype: Int32? = nil
    var _tschchartseriesscattersymboltype: Int32? = nil
    var _tschchartseriesdefaulttrendlineequationoffsetx: Float? = nil
    var _tschchartseriesdefaulttrendlineequationoffsety: Float? = nil
    var _tschchartseriesdefaulttrendlinelabelstring: String? = nil
    var _tschchartseriesdefaulttrendlineorder: Int32? = nil
    var _tschchartseriesdefaulttrendlineperiod: Int32? = nil
    var _tschchartseriesdefaulttrendlinersquaredoffsetx: Float? = nil
    var _tschchartseriesdefaulttrendlinersquaredoffsety: Float? = nil
    var _tschchartseriesdefaulttrendlineshowequation: Bool? = nil
    var _tschchartseriesdefaulttrendlineshowlabel: Bool? = nil
    var _tschchartseriesdefaulttrendlineshowr2Value: Bool? = nil
    var _tschchartseriesdefaulttrendlinetype: Int32? = nil
    var _tschchartseriesbubblevaluelabelsaxis: Int32? = nil
    var _tschchartseriesscattervaluelabelsaxis: Int32? = nil
    var _tschchartseriespiewedgeexplosion: Float? = nil
    var _tschchartseriesdefaultyaxisordinal: Int32? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _tschchartseriesdefault10Dateformat = source._tschchartseriesdefault10Dateformat
      _tschchartseriesdefault10Numberformat = source._tschchartseriesdefault10Numberformat
      _tschchartseriespie10Numberformat = source._tschchartseriespie10Numberformat
      _tschchartseriespie23Labelexplosion = source._tschchartseriespie23Labelexplosion
      _tschchartseriesbubbleadjustmentscale = source._tschchartseriesbubbleadjustmentscale
      _tschchartseriesdefaultdateformat = source._tschchartseriesdefaultdateformat
      _tschchartseriesdefaultdurationformat = source._tschchartseriesdefaultdurationformat
      _tschchartseriesareaenablecalloutline = source._tschchartseriesareaenablecalloutline
      _tschchartseriesbarenablecalloutline = source._tschchartseriesbarenablecalloutline
      _tschchartseriesbubbleenablecalloutline = source._tschchartseriesbubbleenablecalloutline
      _tschchartseriesdefaultenablecalloutline = source._tschchartseriesdefaultenablecalloutline
      _tschchartserieslineenablecalloutline = source._tschchartserieslineenablecalloutline
      _tschchartseriespieenablecalloutline = source._tschchartseriespieenablecalloutline
      _tschchartseriesscatterenablecalloutline = source._tschchartseriesscatterenablecalloutline
      _tschchartseriesstackedareaenablecalloutline = source._tschchartseriesstackedareaenablecalloutline
      _tschchartseriesstackedbarenablecalloutline = source._tschchartseriesstackedbarenablecalloutline
      _tschchartseriesdefaulterrorbarcustomnegativedata = source._tschchartseriesdefaulterrorbarcustomnegativedata
      _tschchartseriesdefaulterrorbarcustomnegativedatascatterx = source._tschchartseriesdefaulterrorbarcustomnegativedatascatterx
      _tschchartseriesdefaulterrorbarcustompositivedata = source._tschchartseriesdefaulterrorbarcustompositivedata
      _tschchartseriesdefaulterrorbarcustompositivedatascatterx = source._tschchartseriesdefaulterrorbarcustompositivedatascatterx
      _tschchartseriesdefaulterrorbarfixedvalue = source._tschchartseriesdefaulterrorbarfixedvalue
      _tschchartseriesdefaulterrorbarfixedvaluescatterx = source._tschchartseriesdefaulterrorbarfixedvaluescatterx
      _tschchartseriesdefaulterrorbarpercentvalue = source._tschchartseriesdefaulterrorbarpercentvalue
      _tschchartseriesdefaulterrorbarpercentvaluescatterx = source._tschchartseriesdefaulterrorbarpercentvaluescatterx
      _tschchartseriesdefaulterrorbarsetting = source._tschchartseriesdefaulterrorbarsetting
      _tschchartseriesdefaulterrorbarsettingscatterx = source._tschchartseriesdefaulterrorbarsettingscatterx
      _tschchartseriesdefaulterrorbarstddevvalue = source._tschchartseriesdefaulterrorbarstddevvalue
      _tschchartseriesdefaulterrorbarstddevvaluescatterx = source._tschchartseriesdefaulterrorbarstddevvaluescatterx
      _tschchartseriesdefaulterrorbartype = source._tschchartseriesdefaulterrorbartype
      _tschchartseriesdefaulterrorbartypescatterx = source._tschchartseriesdefaulterrorbartypescatterx
      _tschchartseriespielabelexplosion = source._tschchartseriespielabelexplosion
      _tschchartseriesbubblelinetype = source._tschchartseriesbubblelinetype
      _tschchartserieslinelinetype = source._tschchartserieslinelinetype
      _tschchartseriesmixedlinelinetype = source._tschchartseriesmixedlinelinetype
      _tschchartseriesscatterlinetype = source._tschchartseriesscatterlinetype
      _tschchartseriesdefaultnumberformat = source._tschchartseriesdefaultnumberformat
      _tschchartseriespienumberformat = source._tschchartseriespienumberformat
      _tschchartseriesdefaultnumberformattype = source._tschchartseriesdefaultnumberformattype
      _tschchartseriespienumberformattype = source._tschchartseriespienumberformattype
      _tschchartseriesstackedpercentnumberformat = source._tschchartseriesstackedpercentnumberformat
      _tschchartseriesdefaultseriestype = source._tschchartseriesdefaultseriestype
      _tschchartseriesdefaultshowerrorbar = source._tschchartseriesdefaultshowerrorbar
      _tschchartseriesdefaultshowerrorbarscatterx = source._tschchartseriesdefaultshowerrorbarscatterx
      _tschchartseriesbubbleshowlabelsinfront = source._tschchartseriesbubbleshowlabelsinfront
      _tschchartseriesdefaultshowlabelsinfront = source._tschchartseriesdefaultshowlabelsinfront
      _tschchartseriesscattershowline = source._tschchartseriesscattershowline
      _tschchartseriesbubbleshownegativedata = source._tschchartseriesbubbleshownegativedata
      _tschchartseriesbubbleshowserieslabels = source._tschchartseriesbubbleshowserieslabels
      _tschchartseriespieshowserieslabels = source._tschchartseriespieshowserieslabels
      _tschchartseriesscattershowserieslabels = source._tschchartseriesscattershowserieslabels
      _tschchartseriesareashowsymbol = source._tschchartseriesareashowsymbol
      _tschchartserieslineshowsymbol = source._tschchartserieslineshowsymbol
      _tschchartseriesmixedareashowsymbol = source._tschchartseriesmixedareashowsymbol
      _tschchartseriesmixedlineshowsymbol = source._tschchartseriesmixedlineshowsymbol
      _tschchartseriesscattershowsymbol = source._tschchartseriesscattershowsymbol
      _tschchartseriesdefaultshowtrendline = source._tschchartseriesdefaultshowtrendline
      _tschchartseriesareashowvaluelabels = source._tschchartseriesareashowvaluelabels
      _tschchartseriesbarshowvaluelabels = source._tschchartseriesbarshowvaluelabels
      _tschchartseriesbubbleshowvaluelabels = source._tschchartseriesbubbleshowvaluelabels
      _tschchartseriesdefaultshowvaluelabels = source._tschchartseriesdefaultshowvaluelabels
      _tschchartserieslineshowvaluelabels = source._tschchartserieslineshowvaluelabels
      _tschchartseriesmixedshowvaluelabels = source._tschchartseriesmixedshowvaluelabels
      _tschchartseriespieshowvaluelabels = source._tschchartseriespieshowvaluelabels
      _tschchartseriesscattershowvaluelabels = source._tschchartseriesscattershowvaluelabels
      _tschchartseriesbubblesizedimension = source._tschchartseriesbubblesizedimension
      _tschchartseriesareastacklabels = source._tschchartseriesareastacklabels
      _tschchartseriesbarstacklabels = source._tschchartseriesbarstacklabels
      _tschchartseriesbubblestacklabels = source._tschchartseriesbubblestacklabels
      _tschchartseriesdefaultstacklabels = source._tschchartseriesdefaultstacklabels
      _tschchartserieslinestacklabels = source._tschchartserieslinestacklabels
      _tschchartseriespiestacklabels = source._tschchartseriespiestacklabels
      _tschchartseriesscatterstacklabels = source._tschchartseriesscatterstacklabels
      _tschchartseriesstackedareastacklabels = source._tschchartseriesstackedareastacklabels
      _tschchartseriesstackedbarstacklabels = source._tschchartseriesstackedbarstacklabels
      _tschchartseriesareasymboltype = source._tschchartseriesareasymboltype
      _tschchartserieslinesymboltype = source._tschchartserieslinesymboltype
      _tschchartseriesmixedareasymboltype = source._tschchartseriesmixedareasymboltype
      _tschchartseriesmixedlinesymboltype = source._tschchartseriesmixedlinesymboltype
      _tschchartseriesscattersymboltype = source._tschchartseriesscattersymboltype
      _tschchartseriesdefaulttrendlineequationoffsetx = source._tschchartseriesdefaulttrendlineequationoffsetx
      _tschchartseriesdefaulttrendlineequationoffsety = source._tschchartseriesdefaulttrendlineequationoffsety
      _tschchartseriesdefaulttrendlinelabelstring = source._tschchartseriesdefaulttrendlinelabelstring
      _tschchartseriesdefaulttrendlineorder = source._tschchartseriesdefaulttrendlineorder
      _tschchartseriesdefaulttrendlineperiod = source._tschchartseriesdefaulttrendlineperiod
      _tschchartseriesdefaulttrendlinersquaredoffsetx = source._tschchartseriesdefaulttrendlinersquaredoffsetx
      _tschchartseriesdefaulttrendlinersquaredoffsety = source._tschchartseriesdefaulttrendlinersquaredoffsety
      _tschchartseriesdefaulttrendlineshowequation = source._tschchartseriesdefaulttrendlineshowequation
      _tschchartseriesdefaulttrendlineshowlabel = source._tschchartseriesdefaulttrendlineshowlabel
      _tschchartseriesdefaulttrendlineshowr2Value = source._tschchartseriesdefaulttrendlineshowr2Value
      _tschchartseriesdefaulttrendlinetype = source._tschchartseriesdefaulttrendlinetype
      _tschchartseriesbubblevaluelabelsaxis = source._tschchartseriesbubblevaluelabelsaxis
      _tschchartseriesscattervaluelabelsaxis = source._tschchartseriesscattervaluelabelsaxis
      _tschchartseriespiewedgeexplosion = source._tschchartseriespiewedgeexplosion
      _tschchartseriesdefaultyaxisordinal = source._tschchartseriesdefaultyaxisordinal
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._tschchartseriesdefault10Dateformat, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesdefault10Numberformat, !v.isInitialized {return false}
      if let v = _storage._tschchartseriespie10Numberformat, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesdefaultdateformat, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesdefaultdurationformat, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesdefaultnumberformat, !v.isInitialized {return false}
      if let v = _storage._tschchartseriespienumberformat, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesstackedpercentnumberformat, !v.isInitialized {return false}
      return true
    }
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesbubbleadjustmentscale)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaulterrorbarcustomnegativedata)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaulterrorbarcustomnegativedatascatterx)
        case 4: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaulterrorbarcustompositivedata)
        case 5: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaulterrorbarcustompositivedatascatterx)
        case 6: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesdefaulterrorbarfixedvalue)
        case 7: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesdefaulterrorbarfixedvaluescatterx)
        case 8: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesdefaulterrorbarpercentvalue)
        case 9: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesdefaulterrorbarpercentvaluescatterx)
        case 10: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaulterrorbarsetting)
        case 11: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaulterrorbarsettingscatterx)
        case 12: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesdefaulterrorbarstddevvalue)
        case 13: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesdefaulterrorbarstddevvaluescatterx)
        case 14: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaulterrorbartype)
        case 15: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaulterrorbartypescatterx)
        case 16: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriespie23Labelexplosion)
        case 17: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesbubblelinetype)
        case 18: try decoder.decodeSingularInt32Field(value: &_storage._tschchartserieslinelinetype)
        case 19: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesmixedlinelinetype)
        case 20: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesscatterlinetype)
        case 21: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefault10Numberformat)
        case 22: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriespie10Numberformat)
        case 23: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaultnumberformattype)
        case 24: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriespienumberformattype)
        case 25: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesstackedpercentnumberformat)
        case 26: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaultseriestype)
        case 27: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesdefaultshowerrorbar)
        case 28: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesdefaultshowerrorbarscatterx)
        case 29: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesscattershowline)
        case 30: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesbubbleshownegativedata)
        case 31: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriespieshowserieslabels)
        case 32: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesareashowsymbol)
        case 33: try decoder.decodeSingularBoolField(value: &_storage._tschchartserieslineshowsymbol)
        case 34: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesmixedareashowsymbol)
        case 35: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesmixedlineshowsymbol)
        case 36: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesscattershowsymbol)
        case 37: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesdefaultshowtrendline)
        case 38: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesareashowvaluelabels)
        case 39: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesbarshowvaluelabels)
        case 40: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesbubbleshowvaluelabels)
        case 41: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesdefaultshowvaluelabels)
        case 42: try decoder.decodeSingularBoolField(value: &_storage._tschchartserieslineshowvaluelabels)
        case 43: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesmixedshowvaluelabels)
        case 44: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriespieshowvaluelabels)
        case 45: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesscattershowvaluelabels)
        case 46: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesbubblesizedimension)
        case 47: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesareasymboltype)
        case 48: try decoder.decodeSingularInt32Field(value: &_storage._tschchartserieslinesymboltype)
        case 49: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesmixedareasymboltype)
        case 50: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesmixedlinesymboltype)
        case 51: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesscattersymboltype)
        case 52: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesdefaulttrendlineequationoffsetx)
        case 53: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesdefaulttrendlineequationoffsety)
        case 54: try decoder.decodeSingularStringField(value: &_storage._tschchartseriesdefaulttrendlinelabelstring)
        case 55: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaulttrendlineorder)
        case 56: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaulttrendlineperiod)
        case 57: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesdefaulttrendlinersquaredoffsetx)
        case 58: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesdefaulttrendlinersquaredoffsety)
        case 59: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesdefaulttrendlineshowequation)
        case 60: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesdefaulttrendlineshowlabel)
        case 61: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesdefaulttrendlineshowr2Value)
        case 62: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaulttrendlinetype)
        case 63: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriespiewedgeexplosion)
        case 64: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaultyaxisordinal)
        case 65: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesbubbleshowserieslabels)
        case 66: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesbubblevaluelabelsaxis)
        case 67: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesscattershowserieslabels)
        case 68: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesscattervaluelabelsaxis)
        case 69: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefault10Dateformat)
        case 70: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaultdurationformat)
        case 71: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaultdateformat)
        case 98: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaultnumberformat)
        case 99: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriespienumberformat)
        case 100: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesdefaultshowlabelsinfront)
        case 101: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesbubbleshowlabelsinfront)
        case 102: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriespieenablecalloutline)
        case 103: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesareaenablecalloutline)
        case 104: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesbarenablecalloutline)
        case 105: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesbubbleenablecalloutline)
        case 106: try decoder.decodeSingularInt32Field(value: &_storage._tschchartserieslineenablecalloutline)
        case 107: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesscatterenablecalloutline)
        case 108: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesstackedareaenablecalloutline)
        case 109: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesstackedbarenablecalloutline)
        case 110: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaultenablecalloutline)
        case 138: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriespiestacklabels)
        case 139: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesareastacklabels)
        case 140: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesbarstacklabels)
        case 141: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesbubblestacklabels)
        case 142: try decoder.decodeSingularBoolField(value: &_storage._tschchartserieslinestacklabels)
        case 143: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesscatterstacklabels)
        case 144: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesstackedareastacklabels)
        case 145: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesstackedbarstacklabels)
        case 146: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesdefaultstacklabels)
        case 147: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriespielabelexplosion)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._tschchartseriesbubbleadjustmentscale {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 1)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarcustomnegativedata {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarcustomnegativedatascatterx {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarcustompositivedata {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarcustompositivedatascatterx {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarfixedvalue {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 6)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarfixedvaluescatterx {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 7)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarpercentvalue {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 8)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarpercentvaluescatterx {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 9)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarsetting {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 10)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarsettingscatterx {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 11)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarstddevvalue {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 12)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarstddevvaluescatterx {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 13)
      }
      if let v = _storage._tschchartseriesdefaulterrorbartype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 14)
      }
      if let v = _storage._tschchartseriesdefaulterrorbartypescatterx {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 15)
      }
      if let v = _storage._tschchartseriespie23Labelexplosion {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 16)
      }
      if let v = _storage._tschchartseriesbubblelinetype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 17)
      }
      if let v = _storage._tschchartserieslinelinetype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 18)
      }
      if let v = _storage._tschchartseriesmixedlinelinetype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 19)
      }
      if let v = _storage._tschchartseriesscatterlinetype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 20)
      }
      if let v = _storage._tschchartseriesdefault10Numberformat {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 21)
      }
      if let v = _storage._tschchartseriespie10Numberformat {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 22)
      }
      if let v = _storage._tschchartseriesdefaultnumberformattype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 23)
      }
      if let v = _storage._tschchartseriespienumberformattype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 24)
      }
      if let v = _storage._tschchartseriesstackedpercentnumberformat {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 25)
      }
      if let v = _storage._tschchartseriesdefaultseriestype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 26)
      }
      if let v = _storage._tschchartseriesdefaultshowerrorbar {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 27)
      }
      if let v = _storage._tschchartseriesdefaultshowerrorbarscatterx {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 28)
      }
      if let v = _storage._tschchartseriesscattershowline {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 29)
      }
      if let v = _storage._tschchartseriesbubbleshownegativedata {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 30)
      }
      if let v = _storage._tschchartseriespieshowserieslabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 31)
      }
      if let v = _storage._tschchartseriesareashowsymbol {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 32)
      }
      if let v = _storage._tschchartserieslineshowsymbol {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 33)
      }
      if let v = _storage._tschchartseriesmixedareashowsymbol {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 34)
      }
      if let v = _storage._tschchartseriesmixedlineshowsymbol {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 35)
      }
      if let v = _storage._tschchartseriesscattershowsymbol {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 36)
      }
      if let v = _storage._tschchartseriesdefaultshowtrendline {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 37)
      }
      if let v = _storage._tschchartseriesareashowvaluelabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 38)
      }
      if let v = _storage._tschchartseriesbarshowvaluelabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 39)
      }
      if let v = _storage._tschchartseriesbubbleshowvaluelabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 40)
      }
      if let v = _storage._tschchartseriesdefaultshowvaluelabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 41)
      }
      if let v = _storage._tschchartserieslineshowvaluelabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 42)
      }
      if let v = _storage._tschchartseriesmixedshowvaluelabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 43)
      }
      if let v = _storage._tschchartseriespieshowvaluelabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 44)
      }
      if let v = _storage._tschchartseriesscattershowvaluelabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 45)
      }
      if let v = _storage._tschchartseriesbubblesizedimension {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 46)
      }
      if let v = _storage._tschchartseriesareasymboltype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 47)
      }
      if let v = _storage._tschchartserieslinesymboltype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 48)
      }
      if let v = _storage._tschchartseriesmixedareasymboltype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 49)
      }
      if let v = _storage._tschchartseriesmixedlinesymboltype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 50)
      }
      if let v = _storage._tschchartseriesscattersymboltype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 51)
      }
      if let v = _storage._tschchartseriesdefaulttrendlineequationoffsetx {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 52)
      }
      if let v = _storage._tschchartseriesdefaulttrendlineequationoffsety {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 53)
      }
      if let v = _storage._tschchartseriesdefaulttrendlinelabelstring {
        try visitor.visitSingularStringField(value: v, fieldNumber: 54)
      }
      if let v = _storage._tschchartseriesdefaulttrendlineorder {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 55)
      }
      if let v = _storage._tschchartseriesdefaulttrendlineperiod {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 56)
      }
      if let v = _storage._tschchartseriesdefaulttrendlinersquaredoffsetx {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 57)
      }
      if let v = _storage._tschchartseriesdefaulttrendlinersquaredoffsety {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 58)
      }
      if let v = _storage._tschchartseriesdefaulttrendlineshowequation {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 59)
      }
      if let v = _storage._tschchartseriesdefaulttrendlineshowlabel {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 60)
      }
      if let v = _storage._tschchartseriesdefaulttrendlineshowr2Value {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 61)
      }
      if let v = _storage._tschchartseriesdefaulttrendlinetype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 62)
      }
      if let v = _storage._tschchartseriespiewedgeexplosion {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 63)
      }
      if let v = _storage._tschchartseriesdefaultyaxisordinal {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 64)
      }
      if let v = _storage._tschchartseriesbubbleshowserieslabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 65)
      }
      if let v = _storage._tschchartseriesbubblevaluelabelsaxis {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 66)
      }
      if let v = _storage._tschchartseriesscattershowserieslabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 67)
      }
      if let v = _storage._tschchartseriesscattervaluelabelsaxis {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 68)
      }
      if let v = _storage._tschchartseriesdefault10Dateformat {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 69)
      }
      if let v = _storage._tschchartseriesdefaultdurationformat {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 70)
      }
      if let v = _storage._tschchartseriesdefaultdateformat {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 71)
      }
      if let v = _storage._tschchartseriesdefaultnumberformat {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 98)
      }
      if let v = _storage._tschchartseriespienumberformat {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 99)
      }
      if let v = _storage._tschchartseriesdefaultshowlabelsinfront {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 100)
      }
      if let v = _storage._tschchartseriesbubbleshowlabelsinfront {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 101)
      }
      if let v = _storage._tschchartseriespieenablecalloutline {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 102)
      }
      if let v = _storage._tschchartseriesareaenablecalloutline {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 103)
      }
      if let v = _storage._tschchartseriesbarenablecalloutline {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 104)
      }
      if let v = _storage._tschchartseriesbubbleenablecalloutline {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 105)
      }
      if let v = _storage._tschchartserieslineenablecalloutline {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 106)
      }
      if let v = _storage._tschchartseriesscatterenablecalloutline {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 107)
      }
      if let v = _storage._tschchartseriesstackedareaenablecalloutline {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 108)
      }
      if let v = _storage._tschchartseriesstackedbarenablecalloutline {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 109)
      }
      if let v = _storage._tschchartseriesdefaultenablecalloutline {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 110)
      }
      if let v = _storage._tschchartseriespiestacklabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 138)
      }
      if let v = _storage._tschchartseriesareastacklabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 139)
      }
      if let v = _storage._tschchartseriesbarstacklabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 140)
      }
      if let v = _storage._tschchartseriesbubblestacklabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 141)
      }
      if let v = _storage._tschchartserieslinestacklabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 142)
      }
      if let v = _storage._tschchartseriesscatterstacklabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 143)
      }
      if let v = _storage._tschchartseriesstackedareastacklabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 144)
      }
      if let v = _storage._tschchartseriesstackedbarstacklabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 145)
      }
      if let v = _storage._tschchartseriesdefaultstacklabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 146)
      }
      if let v = _storage._tschchartseriespielabelexplosion {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 147)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSCH_Generated_ChartSeriesNonStyleArchive, rhs: TSCH_Generated_ChartSeriesNonStyleArchive) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._tschchartseriesdefault10Dateformat != rhs_storage._tschchartseriesdefault10Dateformat {return false}
        if _storage._tschchartseriesdefault10Numberformat != rhs_storage._tschchartseriesdefault10Numberformat {return false}
        if _storage._tschchartseriespie10Numberformat != rhs_storage._tschchartseriespie10Numberformat {return false}
        if _storage._tschchartseriespie23Labelexplosion != rhs_storage._tschchartseriespie23Labelexplosion {return false}
        if _storage._tschchartseriesbubbleadjustmentscale != rhs_storage._tschchartseriesbubbleadjustmentscale {return false}
        if _storage._tschchartseriesdefaultdateformat != rhs_storage._tschchartseriesdefaultdateformat {return false}
        if _storage._tschchartseriesdefaultdurationformat != rhs_storage._tschchartseriesdefaultdurationformat {return false}
        if _storage._tschchartseriesareaenablecalloutline != rhs_storage._tschchartseriesareaenablecalloutline {return false}
        if _storage._tschchartseriesbarenablecalloutline != rhs_storage._tschchartseriesbarenablecalloutline {return false}
        if _storage._tschchartseriesbubbleenablecalloutline != rhs_storage._tschchartseriesbubbleenablecalloutline {return false}
        if _storage._tschchartseriesdefaultenablecalloutline != rhs_storage._tschchartseriesdefaultenablecalloutline {return false}
        if _storage._tschchartserieslineenablecalloutline != rhs_storage._tschchartserieslineenablecalloutline {return false}
        if _storage._tschchartseriespieenablecalloutline != rhs_storage._tschchartseriespieenablecalloutline {return false}
        if _storage._tschchartseriesscatterenablecalloutline != rhs_storage._tschchartseriesscatterenablecalloutline {return false}
        if _storage._tschchartseriesstackedareaenablecalloutline != rhs_storage._tschchartseriesstackedareaenablecalloutline {return false}
        if _storage._tschchartseriesstackedbarenablecalloutline != rhs_storage._tschchartseriesstackedbarenablecalloutline {return false}
        if _storage._tschchartseriesdefaulterrorbarcustomnegativedata != rhs_storage._tschchartseriesdefaulterrorbarcustomnegativedata {return false}
        if _storage._tschchartseriesdefaulterrorbarcustomnegativedatascatterx != rhs_storage._tschchartseriesdefaulterrorbarcustomnegativedatascatterx {return false}
        if _storage._tschchartseriesdefaulterrorbarcustompositivedata != rhs_storage._tschchartseriesdefaulterrorbarcustompositivedata {return false}
        if _storage._tschchartseriesdefaulterrorbarcustompositivedatascatterx != rhs_storage._tschchartseriesdefaulterrorbarcustompositivedatascatterx {return false}
        if _storage._tschchartseriesdefaulterrorbarfixedvalue != rhs_storage._tschchartseriesdefaulterrorbarfixedvalue {return false}
        if _storage._tschchartseriesdefaulterrorbarfixedvaluescatterx != rhs_storage._tschchartseriesdefaulterrorbarfixedvaluescatterx {return false}
        if _storage._tschchartseriesdefaulterrorbarpercentvalue != rhs_storage._tschchartseriesdefaulterrorbarpercentvalue {return false}
        if _storage._tschchartseriesdefaulterrorbarpercentvaluescatterx != rhs_storage._tschchartseriesdefaulterrorbarpercentvaluescatterx {return false}
        if _storage._tschchartseriesdefaulterrorbarsetting != rhs_storage._tschchartseriesdefaulterrorbarsetting {return false}
        if _storage._tschchartseriesdefaulterrorbarsettingscatterx != rhs_storage._tschchartseriesdefaulterrorbarsettingscatterx {return false}
        if _storage._tschchartseriesdefaulterrorbarstddevvalue != rhs_storage._tschchartseriesdefaulterrorbarstddevvalue {return false}
        if _storage._tschchartseriesdefaulterrorbarstddevvaluescatterx != rhs_storage._tschchartseriesdefaulterrorbarstddevvaluescatterx {return false}
        if _storage._tschchartseriesdefaulterrorbartype != rhs_storage._tschchartseriesdefaulterrorbartype {return false}
        if _storage._tschchartseriesdefaulterrorbartypescatterx != rhs_storage._tschchartseriesdefaulterrorbartypescatterx {return false}
        if _storage._tschchartseriespielabelexplosion != rhs_storage._tschchartseriespielabelexplosion {return false}
        if _storage._tschchartseriesbubblelinetype != rhs_storage._tschchartseriesbubblelinetype {return false}
        if _storage._tschchartserieslinelinetype != rhs_storage._tschchartserieslinelinetype {return false}
        if _storage._tschchartseriesmixedlinelinetype != rhs_storage._tschchartseriesmixedlinelinetype {return false}
        if _storage._tschchartseriesscatterlinetype != rhs_storage._tschchartseriesscatterlinetype {return false}
        if _storage._tschchartseriesdefaultnumberformat != rhs_storage._tschchartseriesdefaultnumberformat {return false}
        if _storage._tschchartseriespienumberformat != rhs_storage._tschchartseriespienumberformat {return false}
        if _storage._tschchartseriesdefaultnumberformattype != rhs_storage._tschchartseriesdefaultnumberformattype {return false}
        if _storage._tschchartseriespienumberformattype != rhs_storage._tschchartseriespienumberformattype {return false}
        if _storage._tschchartseriesstackedpercentnumberformat != rhs_storage._tschchartseriesstackedpercentnumberformat {return false}
        if _storage._tschchartseriesdefaultseriestype != rhs_storage._tschchartseriesdefaultseriestype {return false}
        if _storage._tschchartseriesdefaultshowerrorbar != rhs_storage._tschchartseriesdefaultshowerrorbar {return false}
        if _storage._tschchartseriesdefaultshowerrorbarscatterx != rhs_storage._tschchartseriesdefaultshowerrorbarscatterx {return false}
        if _storage._tschchartseriesbubbleshowlabelsinfront != rhs_storage._tschchartseriesbubbleshowlabelsinfront {return false}
        if _storage._tschchartseriesdefaultshowlabelsinfront != rhs_storage._tschchartseriesdefaultshowlabelsinfront {return false}
        if _storage._tschchartseriesscattershowline != rhs_storage._tschchartseriesscattershowline {return false}
        if _storage._tschchartseriesbubbleshownegativedata != rhs_storage._tschchartseriesbubbleshownegativedata {return false}
        if _storage._tschchartseriesbubbleshowserieslabels != rhs_storage._tschchartseriesbubbleshowserieslabels {return false}
        if _storage._tschchartseriespieshowserieslabels != rhs_storage._tschchartseriespieshowserieslabels {return false}
        if _storage._tschchartseriesscattershowserieslabels != rhs_storage._tschchartseriesscattershowserieslabels {return false}
        if _storage._tschchartseriesareashowsymbol != rhs_storage._tschchartseriesareashowsymbol {return false}
        if _storage._tschchartserieslineshowsymbol != rhs_storage._tschchartserieslineshowsymbol {return false}
        if _storage._tschchartseriesmixedareashowsymbol != rhs_storage._tschchartseriesmixedareashowsymbol {return false}
        if _storage._tschchartseriesmixedlineshowsymbol != rhs_storage._tschchartseriesmixedlineshowsymbol {return false}
        if _storage._tschchartseriesscattershowsymbol != rhs_storage._tschchartseriesscattershowsymbol {return false}
        if _storage._tschchartseriesdefaultshowtrendline != rhs_storage._tschchartseriesdefaultshowtrendline {return false}
        if _storage._tschchartseriesareashowvaluelabels != rhs_storage._tschchartseriesareashowvaluelabels {return false}
        if _storage._tschchartseriesbarshowvaluelabels != rhs_storage._tschchartseriesbarshowvaluelabels {return false}
        if _storage._tschchartseriesbubbleshowvaluelabels != rhs_storage._tschchartseriesbubbleshowvaluelabels {return false}
        if _storage._tschchartseriesdefaultshowvaluelabels != rhs_storage._tschchartseriesdefaultshowvaluelabels {return false}
        if _storage._tschchartserieslineshowvaluelabels != rhs_storage._tschchartserieslineshowvaluelabels {return false}
        if _storage._tschchartseriesmixedshowvaluelabels != rhs_storage._tschchartseriesmixedshowvaluelabels {return false}
        if _storage._tschchartseriespieshowvaluelabels != rhs_storage._tschchartseriespieshowvaluelabels {return false}
        if _storage._tschchartseriesscattershowvaluelabels != rhs_storage._tschchartseriesscattershowvaluelabels {return false}
        if _storage._tschchartseriesbubblesizedimension != rhs_storage._tschchartseriesbubblesizedimension {return false}
        if _storage._tschchartseriesareastacklabels != rhs_storage._tschchartseriesareastacklabels {return false}
        if _storage._tschchartseriesbarstacklabels != rhs_storage._tschchartseriesbarstacklabels {return false}
        if _storage._tschchartseriesbubblestacklabels != rhs_storage._tschchartseriesbubblestacklabels {return false}
        if _storage._tschchartseriesdefaultstacklabels != rhs_storage._tschchartseriesdefaultstacklabels {return false}
        if _storage._tschchartserieslinestacklabels != rhs_storage._tschchartserieslinestacklabels {return false}
        if _storage._tschchartseriespiestacklabels != rhs_storage._tschchartseriespiestacklabels {return false}
        if _storage._tschchartseriesscatterstacklabels != rhs_storage._tschchartseriesscatterstacklabels {return false}
        if _storage._tschchartseriesstackedareastacklabels != rhs_storage._tschchartseriesstackedareastacklabels {return false}
        if _storage._tschchartseriesstackedbarstacklabels != rhs_storage._tschchartseriesstackedbarstacklabels {return false}
        if _storage._tschchartseriesareasymboltype != rhs_storage._tschchartseriesareasymboltype {return false}
        if _storage._tschchartserieslinesymboltype != rhs_storage._tschchartserieslinesymboltype {return false}
        if _storage._tschchartseriesmixedareasymboltype != rhs_storage._tschchartseriesmixedareasymboltype {return false}
        if _storage._tschchartseriesmixedlinesymboltype != rhs_storage._tschchartseriesmixedlinesymboltype {return false}
        if _storage._tschchartseriesscattersymboltype != rhs_storage._tschchartseriesscattersymboltype {return false}
        if _storage._tschchartseriesdefaulttrendlineequationoffsetx != rhs_storage._tschchartseriesdefaulttrendlineequationoffsetx {return false}
        if _storage._tschchartseriesdefaulttrendlineequationoffsety != rhs_storage._tschchartseriesdefaulttrendlineequationoffsety {return false}
        if _storage._tschchartseriesdefaulttrendlinelabelstring != rhs_storage._tschchartseriesdefaulttrendlinelabelstring {return false}
        if _storage._tschchartseriesdefaulttrendlineorder != rhs_storage._tschchartseriesdefaulttrendlineorder {return false}
        if _storage._tschchartseriesdefaulttrendlineperiod != rhs_storage._tschchartseriesdefaulttrendlineperiod {return false}
        if _storage._tschchartseriesdefaulttrendlinersquaredoffsetx != rhs_storage._tschchartseriesdefaulttrendlinersquaredoffsetx {return false}
        if _storage._tschchartseriesdefaulttrendlinersquaredoffsety != rhs_storage._tschchartseriesdefaulttrendlinersquaredoffsety {return false}
        if _storage._tschchartseriesdefaulttrendlineshowequation != rhs_storage._tschchartseriesdefaulttrendlineshowequation {return false}
        if _storage._tschchartseriesdefaulttrendlineshowlabel != rhs_storage._tschchartseriesdefaulttrendlineshowlabel {return false}
        if _storage._tschchartseriesdefaulttrendlineshowr2Value != rhs_storage._tschchartseriesdefaulttrendlineshowr2Value {return false}
        if _storage._tschchartseriesdefaulttrendlinetype != rhs_storage._tschchartseriesdefaulttrendlinetype {return false}
        if _storage._tschchartseriesbubblevaluelabelsaxis != rhs_storage._tschchartseriesbubblevaluelabelsaxis {return false}
        if _storage._tschchartseriesscattervaluelabelsaxis != rhs_storage._tschchartseriesscattervaluelabelsaxis {return false}
        if _storage._tschchartseriespiewedgeexplosion != rhs_storage._tschchartseriespiewedgeexplosion {return false}
        if _storage._tschchartseriesdefaultyaxisordinal != rhs_storage._tschchartseriesdefaultyaxisordinal {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSCH_Generated_ReferenceLineStyleArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ReferenceLineStyleArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    3: .same(proto: "tschreferencelinedefaultlabelparagraphstyleindex"),
    2: .same(proto: "tschreferencelinedefaultshadow"),
    1: .same(proto: "tschreferencelinedefaultstroke"),
    4: .same(proto: "tschreferencelinedefaultvaluelabelparagraphstyleindex"),
  ]

  public var isInitialized: Bool {
    if let v = self._tschreferencelinedefaultshadow, !v.isInitialized {return false}
    if let v = self._tschreferencelinedefaultstroke, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._tschreferencelinedefaultstroke)
      case 2: try decoder.decodeSingularMessageField(value: &self._tschreferencelinedefaultshadow)
      case 3: try decoder.decodeSingularInt32Field(value: &self._tschreferencelinedefaultlabelparagraphstyleindex)
      case 4: try decoder.decodeSingularInt32Field(value: &self._tschreferencelinedefaultvaluelabelparagraphstyleindex)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._tschreferencelinedefaultstroke {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if let v = self._tschreferencelinedefaultshadow {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    }
    if let v = self._tschreferencelinedefaultlabelparagraphstyleindex {
      try visitor.visitSingularInt32Field(value: v, fieldNumber: 3)
    }
    if let v = self._tschreferencelinedefaultvaluelabelparagraphstyleindex {
      try visitor.visitSingularInt32Field(value: v, fieldNumber: 4)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSCH_Generated_ReferenceLineStyleArchive, rhs: TSCH_Generated_ReferenceLineStyleArchive) -> Bool {
    if lhs._tschreferencelinedefaultlabelparagraphstyleindex != rhs._tschreferencelinedefaultlabelparagraphstyleindex {return false}
    if lhs._tschreferencelinedefaultshadow != rhs._tschreferencelinedefaultshadow {return false}
    if lhs._tschreferencelinedefaultstroke != rhs._tschreferencelinedefaultstroke {return false}
    if lhs._tschreferencelinedefaultvaluelabelparagraphstyleindex != rhs._tschreferencelinedefaultvaluelabelparagraphstyleindex {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSCH_Generated_ReferenceLineNonStyleArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ReferenceLineNonStyleArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    6: .same(proto: "tschreferencelinedefaultcustomvalue"),
    5: .same(proto: "tschreferencelinedefaultlabel"),
    3: .same(proto: "tschreferencelinedefaultshowlabel"),
    2: .same(proto: "tschreferencelinedefaultshowline"),
    4: .same(proto: "tschreferencelinedefaultshowvaluelabel"),
    1: .same(proto: "tschreferencelinedefaulttype"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularInt32Field(value: &self._tschreferencelinedefaulttype)
      case 2: try decoder.decodeSingularBoolField(value: &self._tschreferencelinedefaultshowline)
      case 3: try decoder.decodeSingularBoolField(value: &self._tschreferencelinedefaultshowlabel)
      case 4: try decoder.decodeSingularBoolField(value: &self._tschreferencelinedefaultshowvaluelabel)
      case 5: try decoder.decodeSingularStringField(value: &self._tschreferencelinedefaultlabel)
      case 6: try decoder.decodeSingularMessageField(value: &self._tschreferencelinedefaultcustomvalue)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._tschreferencelinedefaulttype {
      try visitor.visitSingularInt32Field(value: v, fieldNumber: 1)
    }
    if let v = self._tschreferencelinedefaultshowline {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 2)
    }
    if let v = self._tschreferencelinedefaultshowlabel {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 3)
    }
    if let v = self._tschreferencelinedefaultshowvaluelabel {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 4)
    }
    if let v = self._tschreferencelinedefaultlabel {
      try visitor.visitSingularStringField(value: v, fieldNumber: 5)
    }
    if let v = self._tschreferencelinedefaultcustomvalue {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSCH_Generated_ReferenceLineNonStyleArchive, rhs: TSCH_Generated_ReferenceLineNonStyleArchive) -> Bool {
    if lhs._tschreferencelinedefaultcustomvalue != rhs._tschreferencelinedefaultcustomvalue {return false}
    if lhs._tschreferencelinedefaultlabel != rhs._tschreferencelinedefaultlabel {return false}
    if lhs._tschreferencelinedefaultshowlabel != rhs._tschreferencelinedefaultshowlabel {return false}
    if lhs._tschreferencelinedefaultshowline != rhs._tschreferencelinedefaultshowline {return false}
    if lhs._tschreferencelinedefaultshowvaluelabel != rhs._tschreferencelinedefaultshowvaluelabel {return false}
    if lhs._tschreferencelinedefaulttype != rhs._tschreferencelinedefaulttype {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSCH_Generated_ChartGenericPropertyMapArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ChartGenericPropertyMapArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "tschchartinfo3dbarshape"),
    2: .same(proto: "tschchartinfo3dbeveledges"),
    3: .same(proto: "tschchartinfo3dchartopacity"),
    4: .same(proto: "tschchartinfo3dintersetdepthgap"),
    5: .same(proto: "tschchartinfo3dlightingpackage"),
    6: .same(proto: "tschchartinfo3drotation"),
    7: .same(proto: "tschchartinfo3dscale"),
    8: .same(proto: "tschchartinfo3dviewport"),
    9: .same(proto: "tschchartinfobackgroundfill"),
    10: .same(proto: "tschchartinfobackgroundstroke"),
    11: .same(proto: "tschchartinfoborderopacity"),
    12: .same(proto: "tschchartinfobordershadow"),
    13: .same(proto: "tschchartinfoborderstroke"),
    14: .same(proto: "tschchartinfocalloutlinetype"),
    15: .same(proto: "tschchartinfocombinelayers"),
    16: .same(proto: "tschchartinfodeprecatedroundedcornerouterendonly"),
    17: .same(proto: "tschchartinfodeprecatedroundedcornerradius"),
    18: .same(proto: "tschchartinfodatasetnamelocation"),
    19: .same(proto: "tschchartinfodatasetnameparagraphstyleindex"),
    20: .same(proto: "tschchartinfodonutplacetitleatcenter"),
    21: .same(proto: "tschchartinfogridbackgroundfill"),
    22: .same(proto: "tschchartinfogridbackgroundopacity"),
    23: .same(proto: "tschchartinfoinnerradius"),
    24: .same(proto: "tschchartinfointerbargap"),
    25: .same(proto: "tschchartinfointersetgap"),
    26: .same(proto: "tschchartinfomultidatacontroltype"),
    27: .same(proto: "tschchartinfopiestartangle"),
    28: .same(proto: "tschchartinforoundedcornerouterendonly"),
    29: .same(proto: "tschchartinforoundedcornerradius"),
    30: .same(proto: "tschchartinfoshowborder"),
    31: .same(proto: "tschchartinfoshowlegend"),
    32: .same(proto: "tschchartinfoshowtitle"),
    33: .same(proto: "tschchartinfoskiphiddendata"),
    34: .same(proto: "tschchartinfotitlecolor"),
    35: .same(proto: "tschchartinfotitle"),
    36: .same(proto: "tschchartinfotitleparagraphstyleindex"),
  ]

  fileprivate class _StorageClass {
    var _tschchartinfo3Dbarshape: Int32? = nil
    var _tschchartinfo3Dbeveledges: Bool? = nil
    var _tschchartinfo3Dchartopacity: Float? = nil
    var _tschchartinfo3Dintersetdepthgap: Float? = nil
    var _tschchartinfo3Dlightingpackage: TSCH_Chart3DLightingPackageArchive? = nil
    var _tschchartinfo3Drotation: TSCH_Chart3DVectorArchive? = nil
    var _tschchartinfo3Dscale: TSCH_Chart3DVectorArchive? = nil
    var _tschchartinfo3Dviewport: TSCH_Chart3DVectorArchive? = nil
    var _tschchartinfobackgroundfill: TSD_FillArchive? = nil
    var _tschchartinfobackgroundstroke: TSD_StrokeArchive? = nil
    var _tschchartinfoborderopacity: Float? = nil
    var _tschchartinfobordershadow: TSD_ShadowArchive? = nil
    var _tschchartinfoborderstroke: TSD_StrokeArchive? = nil
    var _tschchartinfocalloutlinetype: Int32? = nil
    var _tschchartinfocombinelayers: Bool? = nil
    var _tschchartinfodeprecatedroundedcornerouterendonly: Bool? = nil
    var _tschchartinfodeprecatedroundedcornerradius: Float? = nil
    var _tschchartinfodatasetnamelocation: Int32? = nil
    var _tschchartinfodatasetnameparagraphstyleindex: Int32? = nil
    var _tschchartinfodonutplacetitleatcenter: Bool? = nil
    var _tschchartinfogridbackgroundfill: TSD_FillArchive? = nil
    var _tschchartinfogridbackgroundopacity: Float? = nil
    var _tschchartinfoinnerradius: Float? = nil
    var _tschchartinfointerbargap: Float? = nil
    var _tschchartinfointersetgap: Float? = nil
    var _tschchartinfomultidatacontroltype: Int32? = nil
    var _tschchartinfopiestartangle: Float? = nil
    var _tschchartinforoundedcornerouterendonly: Bool? = nil
    var _tschchartinforoundedcornerradius: Float? = nil
    var _tschchartinfoshowborder: Bool? = nil
    var _tschchartinfoshowlegend: Bool? = nil
    var _tschchartinfoshowtitle: Bool? = nil
    var _tschchartinfoskiphiddendata: Bool? = nil
    var _tschchartinfotitlecolor: TSP_Color? = nil
    var _tschchartinfotitle: String? = nil
    var _tschchartinfotitleparagraphstyleindex: Int32? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _tschchartinfo3Dbarshape = source._tschchartinfo3Dbarshape
      _tschchartinfo3Dbeveledges = source._tschchartinfo3Dbeveledges
      _tschchartinfo3Dchartopacity = source._tschchartinfo3Dchartopacity
      _tschchartinfo3Dintersetdepthgap = source._tschchartinfo3Dintersetdepthgap
      _tschchartinfo3Dlightingpackage = source._tschchartinfo3Dlightingpackage
      _tschchartinfo3Drotation = source._tschchartinfo3Drotation
      _tschchartinfo3Dscale = source._tschchartinfo3Dscale
      _tschchartinfo3Dviewport = source._tschchartinfo3Dviewport
      _tschchartinfobackgroundfill = source._tschchartinfobackgroundfill
      _tschchartinfobackgroundstroke = source._tschchartinfobackgroundstroke
      _tschchartinfoborderopacity = source._tschchartinfoborderopacity
      _tschchartinfobordershadow = source._tschchartinfobordershadow
      _tschchartinfoborderstroke = source._tschchartinfoborderstroke
      _tschchartinfocalloutlinetype = source._tschchartinfocalloutlinetype
      _tschchartinfocombinelayers = source._tschchartinfocombinelayers
      _tschchartinfodeprecatedroundedcornerouterendonly = source._tschchartinfodeprecatedroundedcornerouterendonly
      _tschchartinfodeprecatedroundedcornerradius = source._tschchartinfodeprecatedroundedcornerradius
      _tschchartinfodatasetnamelocation = source._tschchartinfodatasetnamelocation
      _tschchartinfodatasetnameparagraphstyleindex = source._tschchartinfodatasetnameparagraphstyleindex
      _tschchartinfodonutplacetitleatcenter = source._tschchartinfodonutplacetitleatcenter
      _tschchartinfogridbackgroundfill = source._tschchartinfogridbackgroundfill
      _tschchartinfogridbackgroundopacity = source._tschchartinfogridbackgroundopacity
      _tschchartinfoinnerradius = source._tschchartinfoinnerradius
      _tschchartinfointerbargap = source._tschchartinfointerbargap
      _tschchartinfointersetgap = source._tschchartinfointersetgap
      _tschchartinfomultidatacontroltype = source._tschchartinfomultidatacontroltype
      _tschchartinfopiestartangle = source._tschchartinfopiestartangle
      _tschchartinforoundedcornerouterendonly = source._tschchartinforoundedcornerouterendonly
      _tschchartinforoundedcornerradius = source._tschchartinforoundedcornerradius
      _tschchartinfoshowborder = source._tschchartinfoshowborder
      _tschchartinfoshowlegend = source._tschchartinfoshowlegend
      _tschchartinfoshowtitle = source._tschchartinfoshowtitle
      _tschchartinfoskiphiddendata = source._tschchartinfoskiphiddendata
      _tschchartinfotitlecolor = source._tschchartinfotitlecolor
      _tschchartinfotitle = source._tschchartinfotitle
      _tschchartinfotitleparagraphstyleindex = source._tschchartinfotitleparagraphstyleindex
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._tschchartinfo3Dlightingpackage, !v.isInitialized {return false}
      if let v = _storage._tschchartinfo3Drotation, !v.isInitialized {return false}
      if let v = _storage._tschchartinfo3Dscale, !v.isInitialized {return false}
      if let v = _storage._tschchartinfo3Dviewport, !v.isInitialized {return false}
      if let v = _storage._tschchartinfobackgroundfill, !v.isInitialized {return false}
      if let v = _storage._tschchartinfobackgroundstroke, !v.isInitialized {return false}
      if let v = _storage._tschchartinfobordershadow, !v.isInitialized {return false}
      if let v = _storage._tschchartinfoborderstroke, !v.isInitialized {return false}
      if let v = _storage._tschchartinfogridbackgroundfill, !v.isInitialized {return false}
      if let v = _storage._tschchartinfotitlecolor, !v.isInitialized {return false}
      return true
    }
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularInt32Field(value: &_storage._tschchartinfo3Dbarshape)
        case 2: try decoder.decodeSingularBoolField(value: &_storage._tschchartinfo3Dbeveledges)
        case 3: try decoder.decodeSingularFloatField(value: &_storage._tschchartinfo3Dchartopacity)
        case 4: try decoder.decodeSingularFloatField(value: &_storage._tschchartinfo3Dintersetdepthgap)
        case 5: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfo3Dlightingpackage)
        case 6: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfo3Drotation)
        case 7: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfo3Dscale)
        case 8: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfo3Dviewport)
        case 9: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfobackgroundfill)
        case 10: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfobackgroundstroke)
        case 11: try decoder.decodeSingularFloatField(value: &_storage._tschchartinfoborderopacity)
        case 12: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfobordershadow)
        case 13: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfoborderstroke)
        case 14: try decoder.decodeSingularInt32Field(value: &_storage._tschchartinfocalloutlinetype)
        case 15: try decoder.decodeSingularBoolField(value: &_storage._tschchartinfocombinelayers)
        case 16: try decoder.decodeSingularBoolField(value: &_storage._tschchartinfodeprecatedroundedcornerouterendonly)
        case 17: try decoder.decodeSingularFloatField(value: &_storage._tschchartinfodeprecatedroundedcornerradius)
        case 18: try decoder.decodeSingularInt32Field(value: &_storage._tschchartinfodatasetnamelocation)
        case 19: try decoder.decodeSingularInt32Field(value: &_storage._tschchartinfodatasetnameparagraphstyleindex)
        case 20: try decoder.decodeSingularBoolField(value: &_storage._tschchartinfodonutplacetitleatcenter)
        case 21: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfogridbackgroundfill)
        case 22: try decoder.decodeSingularFloatField(value: &_storage._tschchartinfogridbackgroundopacity)
        case 23: try decoder.decodeSingularFloatField(value: &_storage._tschchartinfoinnerradius)
        case 24: try decoder.decodeSingularFloatField(value: &_storage._tschchartinfointerbargap)
        case 25: try decoder.decodeSingularFloatField(value: &_storage._tschchartinfointersetgap)
        case 26: try decoder.decodeSingularInt32Field(value: &_storage._tschchartinfomultidatacontroltype)
        case 27: try decoder.decodeSingularFloatField(value: &_storage._tschchartinfopiestartangle)
        case 28: try decoder.decodeSingularBoolField(value: &_storage._tschchartinforoundedcornerouterendonly)
        case 29: try decoder.decodeSingularFloatField(value: &_storage._tschchartinforoundedcornerradius)
        case 30: try decoder.decodeSingularBoolField(value: &_storage._tschchartinfoshowborder)
        case 31: try decoder.decodeSingularBoolField(value: &_storage._tschchartinfoshowlegend)
        case 32: try decoder.decodeSingularBoolField(value: &_storage._tschchartinfoshowtitle)
        case 33: try decoder.decodeSingularBoolField(value: &_storage._tschchartinfoskiphiddendata)
        case 34: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfotitlecolor)
        case 35: try decoder.decodeSingularStringField(value: &_storage._tschchartinfotitle)
        case 36: try decoder.decodeSingularInt32Field(value: &_storage._tschchartinfotitleparagraphstyleindex)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._tschchartinfo3Dbarshape {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 1)
      }
      if let v = _storage._tschchartinfo3Dbeveledges {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 2)
      }
      if let v = _storage._tschchartinfo3Dchartopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 3)
      }
      if let v = _storage._tschchartinfo3Dintersetdepthgap {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 4)
      }
      if let v = _storage._tschchartinfo3Dlightingpackage {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      }
      if let v = _storage._tschchartinfo3Drotation {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
      }
      if let v = _storage._tschchartinfo3Dscale {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      }
      if let v = _storage._tschchartinfo3Dviewport {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
      }
      if let v = _storage._tschchartinfobackgroundfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 9)
      }
      if let v = _storage._tschchartinfobackgroundstroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 10)
      }
      if let v = _storage._tschchartinfoborderopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 11)
      }
      if let v = _storage._tschchartinfobordershadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 12)
      }
      if let v = _storage._tschchartinfoborderstroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 13)
      }
      if let v = _storage._tschchartinfocalloutlinetype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 14)
      }
      if let v = _storage._tschchartinfocombinelayers {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 15)
      }
      if let v = _storage._tschchartinfodeprecatedroundedcornerouterendonly {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 16)
      }
      if let v = _storage._tschchartinfodeprecatedroundedcornerradius {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 17)
      }
      if let v = _storage._tschchartinfodatasetnamelocation {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 18)
      }
      if let v = _storage._tschchartinfodatasetnameparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 19)
      }
      if let v = _storage._tschchartinfodonutplacetitleatcenter {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 20)
      }
      if let v = _storage._tschchartinfogridbackgroundfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 21)
      }
      if let v = _storage._tschchartinfogridbackgroundopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 22)
      }
      if let v = _storage._tschchartinfoinnerradius {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 23)
      }
      if let v = _storage._tschchartinfointerbargap {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 24)
      }
      if let v = _storage._tschchartinfointersetgap {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 25)
      }
      if let v = _storage._tschchartinfomultidatacontroltype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 26)
      }
      if let v = _storage._tschchartinfopiestartangle {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 27)
      }
      if let v = _storage._tschchartinforoundedcornerouterendonly {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 28)
      }
      if let v = _storage._tschchartinforoundedcornerradius {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 29)
      }
      if let v = _storage._tschchartinfoshowborder {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 30)
      }
      if let v = _storage._tschchartinfoshowlegend {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 31)
      }
      if let v = _storage._tschchartinfoshowtitle {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 32)
      }
      if let v = _storage._tschchartinfoskiphiddendata {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 33)
      }
      if let v = _storage._tschchartinfotitlecolor {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 34)
      }
      if let v = _storage._tschchartinfotitle {
        try visitor.visitSingularStringField(value: v, fieldNumber: 35)
      }
      if let v = _storage._tschchartinfotitleparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 36)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSCH_Generated_ChartGenericPropertyMapArchive, rhs: TSCH_Generated_ChartGenericPropertyMapArchive) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._tschchartinfo3Dbarshape != rhs_storage._tschchartinfo3Dbarshape {return false}
        if _storage._tschchartinfo3Dbeveledges != rhs_storage._tschchartinfo3Dbeveledges {return false}
        if _storage._tschchartinfo3Dchartopacity != rhs_storage._tschchartinfo3Dchartopacity {return false}
        if _storage._tschchartinfo3Dintersetdepthgap != rhs_storage._tschchartinfo3Dintersetdepthgap {return false}
        if _storage._tschchartinfo3Dlightingpackage != rhs_storage._tschchartinfo3Dlightingpackage {return false}
        if _storage._tschchartinfo3Drotation != rhs_storage._tschchartinfo3Drotation {return false}
        if _storage._tschchartinfo3Dscale != rhs_storage._tschchartinfo3Dscale {return false}
        if _storage._tschchartinfo3Dviewport != rhs_storage._tschchartinfo3Dviewport {return false}
        if _storage._tschchartinfobackgroundfill != rhs_storage._tschchartinfobackgroundfill {return false}
        if _storage._tschchartinfobackgroundstroke != rhs_storage._tschchartinfobackgroundstroke {return false}
        if _storage._tschchartinfoborderopacity != rhs_storage._tschchartinfoborderopacity {return false}
        if _storage._tschchartinfobordershadow != rhs_storage._tschchartinfobordershadow {return false}
        if _storage._tschchartinfoborderstroke != rhs_storage._tschchartinfoborderstroke {return false}
        if _storage._tschchartinfocalloutlinetype != rhs_storage._tschchartinfocalloutlinetype {return false}
        if _storage._tschchartinfocombinelayers != rhs_storage._tschchartinfocombinelayers {return false}
        if _storage._tschchartinfodeprecatedroundedcornerouterendonly != rhs_storage._tschchartinfodeprecatedroundedcornerouterendonly {return false}
        if _storage._tschchartinfodeprecatedroundedcornerradius != rhs_storage._tschchartinfodeprecatedroundedcornerradius {return false}
        if _storage._tschchartinfodatasetnamelocation != rhs_storage._tschchartinfodatasetnamelocation {return false}
        if _storage._tschchartinfodatasetnameparagraphstyleindex != rhs_storage._tschchartinfodatasetnameparagraphstyleindex {return false}
        if _storage._tschchartinfodonutplacetitleatcenter != rhs_storage._tschchartinfodonutplacetitleatcenter {return false}
        if _storage._tschchartinfogridbackgroundfill != rhs_storage._tschchartinfogridbackgroundfill {return false}
        if _storage._tschchartinfogridbackgroundopacity != rhs_storage._tschchartinfogridbackgroundopacity {return false}
        if _storage._tschchartinfoinnerradius != rhs_storage._tschchartinfoinnerradius {return false}
        if _storage._tschchartinfointerbargap != rhs_storage._tschchartinfointerbargap {return false}
        if _storage._tschchartinfointersetgap != rhs_storage._tschchartinfointersetgap {return false}
        if _storage._tschchartinfomultidatacontroltype != rhs_storage._tschchartinfomultidatacontroltype {return false}
        if _storage._tschchartinfopiestartangle != rhs_storage._tschchartinfopiestartangle {return false}
        if _storage._tschchartinforoundedcornerouterendonly != rhs_storage._tschchartinforoundedcornerouterendonly {return false}
        if _storage._tschchartinforoundedcornerradius != rhs_storage._tschchartinforoundedcornerradius {return false}
        if _storage._tschchartinfoshowborder != rhs_storage._tschchartinfoshowborder {return false}
        if _storage._tschchartinfoshowlegend != rhs_storage._tschchartinfoshowlegend {return false}
        if _storage._tschchartinfoshowtitle != rhs_storage._tschchartinfoshowtitle {return false}
        if _storage._tschchartinfoskiphiddendata != rhs_storage._tschchartinfoskiphiddendata {return false}
        if _storage._tschchartinfotitlecolor != rhs_storage._tschchartinfotitlecolor {return false}
        if _storage._tschchartinfotitle != rhs_storage._tschchartinfotitle {return false}
        if _storage._tschchartinfotitleparagraphstyleindex != rhs_storage._tschchartinfotitleparagraphstyleindex {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSCH_Generated_LegendGenericPropertyMapArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".LegendGenericPropertyMapArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "tschlegendmodelfill"),
    2: .same(proto: "tschlegendmodellabelparagraphstyleindex"),
    3: .same(proto: "tschlegendmodelopacity"),
    4: .same(proto: "tschlegendmodelshadow"),
    5: .same(proto: "tschlegendmodelstroke"),
  ]

  public var isInitialized: Bool {
    if let v = self._tschlegendmodelfill, !v.isInitialized {return false}
    if let v = self._tschlegendmodelshadow, !v.isInitialized {return false}
    if let v = self._tschlegendmodelstroke, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._tschlegendmodelfill)
      case 2: try decoder.decodeSingularInt32Field(value: &self._tschlegendmodellabelparagraphstyleindex)
      case 3: try decoder.decodeSingularFloatField(value: &self._tschlegendmodelopacity)
      case 4: try decoder.decodeSingularMessageField(value: &self._tschlegendmodelshadow)
      case 5: try decoder.decodeSingularMessageField(value: &self._tschlegendmodelstroke)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._tschlegendmodelfill {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if let v = self._tschlegendmodellabelparagraphstyleindex {
      try visitor.visitSingularInt32Field(value: v, fieldNumber: 2)
    }
    if let v = self._tschlegendmodelopacity {
      try visitor.visitSingularFloatField(value: v, fieldNumber: 3)
    }
    if let v = self._tschlegendmodelshadow {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
    }
    if let v = self._tschlegendmodelstroke {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSCH_Generated_LegendGenericPropertyMapArchive, rhs: TSCH_Generated_LegendGenericPropertyMapArchive) -> Bool {
    if lhs._tschlegendmodelfill != rhs._tschlegendmodelfill {return false}
    if lhs._tschlegendmodellabelparagraphstyleindex != rhs._tschlegendmodellabelparagraphstyleindex {return false}
    if lhs._tschlegendmodelopacity != rhs._tschlegendmodelopacity {return false}
    if lhs._tschlegendmodelshadow != rhs._tschlegendmodelshadow {return false}
    if lhs._tschlegendmodelstroke != rhs._tschlegendmodelstroke {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSCH_Generated_ChartAxisGenericPropertyMapArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ChartAxisGenericPropertyMapArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "tschchartaxis1_0dateformat"),
    2: .standard(proto: "tschchartaxis1_0numberformat"),
    3: .same(proto: "tschchartaxis3dgridlineopacity"),
    4: .same(proto: "tschchartaxis3dgridlinestroke"),
    5: .same(proto: "tschchartaxis3dlabelposition"),
    6: .same(proto: "tschchartaxisdateformat"),
    7: .same(proto: "tschchartaxisdurationformat"),
    8: .same(proto: "tschchartaxishorizontalspacing"),
    9: .same(proto: "tschchartaxislabelparagraphstyleindex"),
    10: .same(proto: "tschchartaxislabelsorientation"),
    11: .same(proto: "tschchartaxismajorgridlineopacity"),
    12: .same(proto: "tschchartaxismajorgridlineshadow"),
    13: .same(proto: "tschchartaxismajorgridlinestroke"),
    14: .same(proto: "tschchartaxisminorgridlineopacity"),
    15: .same(proto: "tschchartaxisminorgridlineshadow"),
    16: .same(proto: "tschchartaxisminorgridlinestroke"),
    17: .same(proto: "tschchartaxisnumberformat"),
    18: .same(proto: "tschchartaxisnumberformattype"),
    19: .same(proto: "tschchartaxisnumberofdecades"),
    20: .same(proto: "tschchartaxisnumberofmajorgridlines"),
    21: .same(proto: "tschchartaxisnumberofminorgridlines"),
    22: .same(proto: "tschchartaxisplottoedges"),
    23: .same(proto: "tschchartaxisscale"),
    24: .same(proto: "tschchartaxisshowaxis"),
    25: .same(proto: "tschchartaxisshowlabels"),
    26: .same(proto: "tschchartaxisshowlastlabel"),
    27: .same(proto: "tschchartaxisshowmajorgridlines"),
    28: .same(proto: "tschchartaxisshowmajortickmarks"),
    29: .same(proto: "tschchartaxisshowminimumlabel"),
    30: .same(proto: "tschchartaxisshowminorgridlines"),
    31: .same(proto: "tschchartaxisshowminortickmarks"),
    32: .same(proto: "tschchartaxisshowserieslabels"),
    33: .same(proto: "tschchartaxisshowtitle"),
    34: .same(proto: "tschchartaxistickmarklocation"),
    35: .same(proto: "tschchartaxistitle"),
    36: .same(proto: "tschchartaxistitleparagraphstyleindex"),
    37: .same(proto: "tschchartaxisusermax"),
    38: .same(proto: "tschchartaxisusermin"),
    39: .same(proto: "tschchartaxisverticalspacing"),
  ]

  fileprivate class _StorageClass {
    var _tschchartaxis10Dateformat: TSK_FormatStructArchive? = nil
    var _tschchartaxis10Numberformat: TSK_FormatStructArchive? = nil
    var _tschchartaxis3Dgridlineopacity: Float? = nil
    var _tschchartaxis3Dgridlinestroke: TSD_StrokeArchive? = nil
    var _tschchartaxis3Dlabelposition: Int32? = nil
    var _tschchartaxisdateformat: TSK_FormatStructArchive? = nil
    var _tschchartaxisdurationformat: TSK_FormatStructArchive? = nil
    var _tschchartaxishorizontalspacing: Int32? = nil
    var _tschchartaxislabelparagraphstyleindex: Int32? = nil
    var _tschchartaxislabelsorientation: Float? = nil
    var _tschchartaxismajorgridlineopacity: Float? = nil
    var _tschchartaxismajorgridlineshadow: TSD_ShadowArchive? = nil
    var _tschchartaxismajorgridlinestroke: TSD_StrokeArchive? = nil
    var _tschchartaxisminorgridlineopacity: Float? = nil
    var _tschchartaxisminorgridlineshadow: TSD_ShadowArchive? = nil
    var _tschchartaxisminorgridlinestroke: TSD_StrokeArchive? = nil
    var _tschchartaxisnumberformat: TSK_FormatStructArchive? = nil
    var _tschchartaxisnumberformattype: Int32? = nil
    var _tschchartaxisnumberofdecades: Int32? = nil
    var _tschchartaxisnumberofmajorgridlines: Int32? = nil
    var _tschchartaxisnumberofminorgridlines: Int32? = nil
    var _tschchartaxisplottoedges: Bool? = nil
    var _tschchartaxisscale: Int32? = nil
    var _tschchartaxisshowaxis: Bool? = nil
    var _tschchartaxisshowlabels: Bool? = nil
    var _tschchartaxisshowlastlabel: Bool? = nil
    var _tschchartaxisshowmajorgridlines: Bool? = nil
    var _tschchartaxisshowmajortickmarks: Bool? = nil
    var _tschchartaxisshowminimumlabel: Bool? = nil
    var _tschchartaxisshowminorgridlines: Bool? = nil
    var _tschchartaxisshowminortickmarks: Bool? = nil
    var _tschchartaxisshowserieslabels: Bool? = nil
    var _tschchartaxisshowtitle: Bool? = nil
    var _tschchartaxistickmarklocation: Int32? = nil
    var _tschchartaxistitle: String? = nil
    var _tschchartaxistitleparagraphstyleindex: Int32? = nil
    var _tschchartaxisusermax: TSCH_ChartsNSNumberDoubleArchive? = nil
    var _tschchartaxisusermin: TSCH_ChartsNSNumberDoubleArchive? = nil
    var _tschchartaxisverticalspacing: Int32? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _tschchartaxis10Dateformat = source._tschchartaxis10Dateformat
      _tschchartaxis10Numberformat = source._tschchartaxis10Numberformat
      _tschchartaxis3Dgridlineopacity = source._tschchartaxis3Dgridlineopacity
      _tschchartaxis3Dgridlinestroke = source._tschchartaxis3Dgridlinestroke
      _tschchartaxis3Dlabelposition = source._tschchartaxis3Dlabelposition
      _tschchartaxisdateformat = source._tschchartaxisdateformat
      _tschchartaxisdurationformat = source._tschchartaxisdurationformat
      _tschchartaxishorizontalspacing = source._tschchartaxishorizontalspacing
      _tschchartaxislabelparagraphstyleindex = source._tschchartaxislabelparagraphstyleindex
      _tschchartaxislabelsorientation = source._tschchartaxislabelsorientation
      _tschchartaxismajorgridlineopacity = source._tschchartaxismajorgridlineopacity
      _tschchartaxismajorgridlineshadow = source._tschchartaxismajorgridlineshadow
      _tschchartaxismajorgridlinestroke = source._tschchartaxismajorgridlinestroke
      _tschchartaxisminorgridlineopacity = source._tschchartaxisminorgridlineopacity
      _tschchartaxisminorgridlineshadow = source._tschchartaxisminorgridlineshadow
      _tschchartaxisminorgridlinestroke = source._tschchartaxisminorgridlinestroke
      _tschchartaxisnumberformat = source._tschchartaxisnumberformat
      _tschchartaxisnumberformattype = source._tschchartaxisnumberformattype
      _tschchartaxisnumberofdecades = source._tschchartaxisnumberofdecades
      _tschchartaxisnumberofmajorgridlines = source._tschchartaxisnumberofmajorgridlines
      _tschchartaxisnumberofminorgridlines = source._tschchartaxisnumberofminorgridlines
      _tschchartaxisplottoedges = source._tschchartaxisplottoedges
      _tschchartaxisscale = source._tschchartaxisscale
      _tschchartaxisshowaxis = source._tschchartaxisshowaxis
      _tschchartaxisshowlabels = source._tschchartaxisshowlabels
      _tschchartaxisshowlastlabel = source._tschchartaxisshowlastlabel
      _tschchartaxisshowmajorgridlines = source._tschchartaxisshowmajorgridlines
      _tschchartaxisshowmajortickmarks = source._tschchartaxisshowmajortickmarks
      _tschchartaxisshowminimumlabel = source._tschchartaxisshowminimumlabel
      _tschchartaxisshowminorgridlines = source._tschchartaxisshowminorgridlines
      _tschchartaxisshowminortickmarks = source._tschchartaxisshowminortickmarks
      _tschchartaxisshowserieslabels = source._tschchartaxisshowserieslabels
      _tschchartaxisshowtitle = source._tschchartaxisshowtitle
      _tschchartaxistickmarklocation = source._tschchartaxistickmarklocation
      _tschchartaxistitle = source._tschchartaxistitle
      _tschchartaxistitleparagraphstyleindex = source._tschchartaxistitleparagraphstyleindex
      _tschchartaxisusermax = source._tschchartaxisusermax
      _tschchartaxisusermin = source._tschchartaxisusermin
      _tschchartaxisverticalspacing = source._tschchartaxisverticalspacing
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._tschchartaxis10Dateformat, !v.isInitialized {return false}
      if let v = _storage._tschchartaxis10Numberformat, !v.isInitialized {return false}
      if let v = _storage._tschchartaxis3Dgridlinestroke, !v.isInitialized {return false}
      if let v = _storage._tschchartaxisdateformat, !v.isInitialized {return false}
      if let v = _storage._tschchartaxisdurationformat, !v.isInitialized {return false}
      if let v = _storage._tschchartaxismajorgridlineshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartaxismajorgridlinestroke, !v.isInitialized {return false}
      if let v = _storage._tschchartaxisminorgridlineshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartaxisminorgridlinestroke, !v.isInitialized {return false}
      if let v = _storage._tschchartaxisnumberformat, !v.isInitialized {return false}
      return true
    }
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxis10Dateformat)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxis10Numberformat)
        case 3: try decoder.decodeSingularFloatField(value: &_storage._tschchartaxis3Dgridlineopacity)
        case 4: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxis3Dgridlinestroke)
        case 5: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxis3Dlabelposition)
        case 6: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxisdateformat)
        case 7: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxisdurationformat)
        case 8: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxishorizontalspacing)
        case 9: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxislabelparagraphstyleindex)
        case 10: try decoder.decodeSingularFloatField(value: &_storage._tschchartaxislabelsorientation)
        case 11: try decoder.decodeSingularFloatField(value: &_storage._tschchartaxismajorgridlineopacity)
        case 12: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxismajorgridlineshadow)
        case 13: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxismajorgridlinestroke)
        case 14: try decoder.decodeSingularFloatField(value: &_storage._tschchartaxisminorgridlineopacity)
        case 15: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxisminorgridlineshadow)
        case 16: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxisminorgridlinestroke)
        case 17: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxisnumberformat)
        case 18: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxisnumberformattype)
        case 19: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxisnumberofdecades)
        case 20: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxisnumberofmajorgridlines)
        case 21: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxisnumberofminorgridlines)
        case 22: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxisplottoedges)
        case 23: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxisscale)
        case 24: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxisshowaxis)
        case 25: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxisshowlabels)
        case 26: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxisshowlastlabel)
        case 27: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxisshowmajorgridlines)
        case 28: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxisshowmajortickmarks)
        case 29: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxisshowminimumlabel)
        case 30: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxisshowminorgridlines)
        case 31: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxisshowminortickmarks)
        case 32: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxisshowserieslabels)
        case 33: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxisshowtitle)
        case 34: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxistickmarklocation)
        case 35: try decoder.decodeSingularStringField(value: &_storage._tschchartaxistitle)
        case 36: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxistitleparagraphstyleindex)
        case 37: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxisusermax)
        case 38: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxisusermin)
        case 39: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxisverticalspacing)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._tschchartaxis10Dateformat {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._tschchartaxis10Numberformat {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._tschchartaxis3Dgridlineopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 3)
      }
      if let v = _storage._tschchartaxis3Dgridlinestroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
      if let v = _storage._tschchartaxis3Dlabelposition {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 5)
      }
      if let v = _storage._tschchartaxisdateformat {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
      }
      if let v = _storage._tschchartaxisdurationformat {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      }
      if let v = _storage._tschchartaxishorizontalspacing {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 8)
      }
      if let v = _storage._tschchartaxislabelparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 9)
      }
      if let v = _storage._tschchartaxislabelsorientation {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 10)
      }
      if let v = _storage._tschchartaxismajorgridlineopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 11)
      }
      if let v = _storage._tschchartaxismajorgridlineshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 12)
      }
      if let v = _storage._tschchartaxismajorgridlinestroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 13)
      }
      if let v = _storage._tschchartaxisminorgridlineopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 14)
      }
      if let v = _storage._tschchartaxisminorgridlineshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 15)
      }
      if let v = _storage._tschchartaxisminorgridlinestroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 16)
      }
      if let v = _storage._tschchartaxisnumberformat {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 17)
      }
      if let v = _storage._tschchartaxisnumberformattype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 18)
      }
      if let v = _storage._tschchartaxisnumberofdecades {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 19)
      }
      if let v = _storage._tschchartaxisnumberofmajorgridlines {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 20)
      }
      if let v = _storage._tschchartaxisnumberofminorgridlines {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 21)
      }
      if let v = _storage._tschchartaxisplottoedges {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 22)
      }
      if let v = _storage._tschchartaxisscale {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 23)
      }
      if let v = _storage._tschchartaxisshowaxis {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 24)
      }
      if let v = _storage._tschchartaxisshowlabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 25)
      }
      if let v = _storage._tschchartaxisshowlastlabel {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 26)
      }
      if let v = _storage._tschchartaxisshowmajorgridlines {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 27)
      }
      if let v = _storage._tschchartaxisshowmajortickmarks {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 28)
      }
      if let v = _storage._tschchartaxisshowminimumlabel {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 29)
      }
      if let v = _storage._tschchartaxisshowminorgridlines {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 30)
      }
      if let v = _storage._tschchartaxisshowminortickmarks {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 31)
      }
      if let v = _storage._tschchartaxisshowserieslabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 32)
      }
      if let v = _storage._tschchartaxisshowtitle {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 33)
      }
      if let v = _storage._tschchartaxistickmarklocation {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 34)
      }
      if let v = _storage._tschchartaxistitle {
        try visitor.visitSingularStringField(value: v, fieldNumber: 35)
      }
      if let v = _storage._tschchartaxistitleparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 36)
      }
      if let v = _storage._tschchartaxisusermax {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 37)
      }
      if let v = _storage._tschchartaxisusermin {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 38)
      }
      if let v = _storage._tschchartaxisverticalspacing {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 39)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSCH_Generated_ChartAxisGenericPropertyMapArchive, rhs: TSCH_Generated_ChartAxisGenericPropertyMapArchive) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._tschchartaxis10Dateformat != rhs_storage._tschchartaxis10Dateformat {return false}
        if _storage._tschchartaxis10Numberformat != rhs_storage._tschchartaxis10Numberformat {return false}
        if _storage._tschchartaxis3Dgridlineopacity != rhs_storage._tschchartaxis3Dgridlineopacity {return false}
        if _storage._tschchartaxis3Dgridlinestroke != rhs_storage._tschchartaxis3Dgridlinestroke {return false}
        if _storage._tschchartaxis3Dlabelposition != rhs_storage._tschchartaxis3Dlabelposition {return false}
        if _storage._tschchartaxisdateformat != rhs_storage._tschchartaxisdateformat {return false}
        if _storage._tschchartaxisdurationformat != rhs_storage._tschchartaxisdurationformat {return false}
        if _storage._tschchartaxishorizontalspacing != rhs_storage._tschchartaxishorizontalspacing {return false}
        if _storage._tschchartaxislabelparagraphstyleindex != rhs_storage._tschchartaxislabelparagraphstyleindex {return false}
        if _storage._tschchartaxislabelsorientation != rhs_storage._tschchartaxislabelsorientation {return false}
        if _storage._tschchartaxismajorgridlineopacity != rhs_storage._tschchartaxismajorgridlineopacity {return false}
        if _storage._tschchartaxismajorgridlineshadow != rhs_storage._tschchartaxismajorgridlineshadow {return false}
        if _storage._tschchartaxismajorgridlinestroke != rhs_storage._tschchartaxismajorgridlinestroke {return false}
        if _storage._tschchartaxisminorgridlineopacity != rhs_storage._tschchartaxisminorgridlineopacity {return false}
        if _storage._tschchartaxisminorgridlineshadow != rhs_storage._tschchartaxisminorgridlineshadow {return false}
        if _storage._tschchartaxisminorgridlinestroke != rhs_storage._tschchartaxisminorgridlinestroke {return false}
        if _storage._tschchartaxisnumberformat != rhs_storage._tschchartaxisnumberformat {return false}
        if _storage._tschchartaxisnumberformattype != rhs_storage._tschchartaxisnumberformattype {return false}
        if _storage._tschchartaxisnumberofdecades != rhs_storage._tschchartaxisnumberofdecades {return false}
        if _storage._tschchartaxisnumberofmajorgridlines != rhs_storage._tschchartaxisnumberofmajorgridlines {return false}
        if _storage._tschchartaxisnumberofminorgridlines != rhs_storage._tschchartaxisnumberofminorgridlines {return false}
        if _storage._tschchartaxisplottoedges != rhs_storage._tschchartaxisplottoedges {return false}
        if _storage._tschchartaxisscale != rhs_storage._tschchartaxisscale {return false}
        if _storage._tschchartaxisshowaxis != rhs_storage._tschchartaxisshowaxis {return false}
        if _storage._tschchartaxisshowlabels != rhs_storage._tschchartaxisshowlabels {return false}
        if _storage._tschchartaxisshowlastlabel != rhs_storage._tschchartaxisshowlastlabel {return false}
        if _storage._tschchartaxisshowmajorgridlines != rhs_storage._tschchartaxisshowmajorgridlines {return false}
        if _storage._tschchartaxisshowmajortickmarks != rhs_storage._tschchartaxisshowmajortickmarks {return false}
        if _storage._tschchartaxisshowminimumlabel != rhs_storage._tschchartaxisshowminimumlabel {return false}
        if _storage._tschchartaxisshowminorgridlines != rhs_storage._tschchartaxisshowminorgridlines {return false}
        if _storage._tschchartaxisshowminortickmarks != rhs_storage._tschchartaxisshowminortickmarks {return false}
        if _storage._tschchartaxisshowserieslabels != rhs_storage._tschchartaxisshowserieslabels {return false}
        if _storage._tschchartaxisshowtitle != rhs_storage._tschchartaxisshowtitle {return false}
        if _storage._tschchartaxistickmarklocation != rhs_storage._tschchartaxistickmarklocation {return false}
        if _storage._tschchartaxistitle != rhs_storage._tschchartaxistitle {return false}
        if _storage._tschchartaxistitleparagraphstyleindex != rhs_storage._tschchartaxistitleparagraphstyleindex {return false}
        if _storage._tschchartaxisusermax != rhs_storage._tschchartaxisusermax {return false}
        if _storage._tschchartaxisusermin != rhs_storage._tschchartaxisusermin {return false}
        if _storage._tschchartaxisverticalspacing != rhs_storage._tschchartaxisverticalspacing {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSCH_Generated_ChartSeriesGenericPropertyMapArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ChartSeriesGenericPropertyMapArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "tschchartseries1_0dateformat"),
    2: .standard(proto: "tschchartseries1_0numberformat"),
    3: .standard(proto: "tschchartseries2_3labelexplosion"),
    4: .same(proto: "tschchartseriesadjustmentscale"),
    5: .same(proto: "tschchartseriescalloutlineendlineend"),
    6: .same(proto: "tschchartseriescalloutlinestartlineend"),
    7: .same(proto: "tschchartseriescalloutlinestrokestyle"),
    8: .same(proto: "tschchartseriesdateformat"),
    9: .same(proto: "tschchartseriesdurationformat"),
    10: .same(proto: "tschchartseriesenablecalloutline"),
    11: .same(proto: "tschchartserieserrorbarcustomnegativedata"),
    12: .same(proto: "tschchartserieserrorbarcustomnegativedatascatterx"),
    13: .same(proto: "tschchartserieserrorbarcustompositivedata"),
    14: .same(proto: "tschchartserieserrorbarcustompositivedatascatterx"),
    15: .same(proto: "tschchartserieserrorbarfixedvalue"),
    16: .same(proto: "tschchartserieserrorbarfixedvaluescatterx"),
    17: .same(proto: "tschchartserieserrorbarlineend"),
    18: .same(proto: "tschchartserieserrorbarlineendscatterx"),
    19: .same(proto: "tschchartserieserrorbarpercentvalue"),
    20: .same(proto: "tschchartserieserrorbarpercentvaluescatterx"),
    21: .same(proto: "tschchartserieserrorbarsetting"),
    22: .same(proto: "tschchartserieserrorbarsettingscatterx"),
    23: .same(proto: "tschchartserieserrorbarshadow"),
    24: .same(proto: "tschchartserieserrorbarspacing"),
    25: .same(proto: "tschchartserieserrorbarspacingscatterx"),
    26: .same(proto: "tschchartserieserrorbarstddevvalue"),
    27: .same(proto: "tschchartserieserrorbarstddevvaluescatterx"),
    28: .same(proto: "tschchartserieserrorbarstroke"),
    29: .same(proto: "tschchartserieserrorbarstrokescatterx"),
    30: .same(proto: "tschchartserieserrorbartype"),
    31: .same(proto: "tschchartserieserrorbartypescatterx"),
    32: .same(proto: "tschchartseriesfill"),
    33: .same(proto: "tschchartserieslabelexplosion"),
    34: .same(proto: "tschchartserieslabelparagraphstyleindex"),
    35: .same(proto: "tschchartserieslinetype"),
    36: .same(proto: "tschchartseriesnumberformat"),
    37: .same(proto: "tschchartseriesnumberformattype"),
    38: .same(proto: "tschchartseriesopacity"),
    39: .same(proto: "tschchartseriesoutsidelabelparagraphstyleindex"),
    40: .same(proto: "tschchartseriespercentnumberformat"),
    41: .same(proto: "tschchartseriesseriestype"),
    42: .same(proto: "tschchartseriesshadow"),
    43: .same(proto: "tschchartseriesshowerrorbar"),
    44: .same(proto: "tschchartseriesshowerrorbarscatterx"),
    45: .same(proto: "tschchartseriesshowlabelsinfront"),
    46: .same(proto: "tschchartseriesshowline"),
    47: .same(proto: "tschchartseriesshownegativedata"),
    48: .same(proto: "tschchartseriesshowserieslabels"),
    49: .same(proto: "tschchartseriesshowsymbol"),
    50: .same(proto: "tschchartseriesshowtrendline"),
    51: .same(proto: "tschchartseriesshowvaluelabels"),
    52: .same(proto: "tschchartseriessizedimension"),
    53: .same(proto: "tschchartseriesstacklabels"),
    54: .same(proto: "tschchartseriesstroke"),
    55: .same(proto: "tschchartseriessymbolfill"),
    56: .same(proto: "tschchartseriessymbolfilluseseriesfill"),
    57: .same(proto: "tschchartseriessymbolfilluseseriesstroke"),
    58: .same(proto: "tschchartseriessymbolsize"),
    59: .same(proto: "tschchartseriessymbolstroke"),
    60: .same(proto: "tschchartseriessymboltype"),
    61: .same(proto: "tschchartseriestrendlineequationoffsetx"),
    62: .same(proto: "tschchartseriestrendlineequationoffsety"),
    63: .same(proto: "tschchartseriestrendlinelabelstring"),
    64: .same(proto: "tschchartseriestrendlineorder"),
    65: .same(proto: "tschchartseriestrendlineperiod"),
    66: .same(proto: "tschchartseriestrendlinersquaredoffsetx"),
    67: .same(proto: "tschchartseriestrendlinersquaredoffsety"),
    68: .same(proto: "tschchartseriestrendlineshadow"),
    69: .same(proto: "tschchartseriestrendlineshowequation"),
    70: .same(proto: "tschchartseriestrendlineshowlabel"),
    71: .same(proto: "tschchartseriestrendlineshowr2value"),
    72: .same(proto: "tschchartseriestrendlinestroke"),
    73: .same(proto: "tschchartseriestrendlinetype"),
    74: .same(proto: "tschchartseriestrendlineequationopacity"),
    75: .same(proto: "tschchartseriestrendlineequationparagraphstyleindex"),
    76: .same(proto: "tschchartseriestrendlinersquaredopacity"),
    77: .same(proto: "tschchartseriestrendlinersquaredparagraphstyleindex"),
    78: .same(proto: "tschchartseriesvaluelabelposition"),
    79: .same(proto: "tschchartseriesvaluelabelspacing"),
    80: .same(proto: "tschchartseriesvaluelabelsaxis"),
    81: .same(proto: "tschchartserieswedgeexplosion"),
    82: .same(proto: "tschchartseriesyaxisordinal"),
  ]

  fileprivate class _StorageClass {
    var _tschchartseries10Dateformat: TSK_FormatStructArchive? = nil
    var _tschchartseries10Numberformat: TSK_FormatStructArchive? = nil
    var _tschchartseries23Labelexplosion: Float? = nil
    var _tschchartseriesadjustmentscale: Float? = nil
    var _tschchartseriescalloutlineendlineend: TSD_LineEndArchive? = nil
    var _tschchartseriescalloutlinestartlineend: TSD_LineEndArchive? = nil
    var _tschchartseriescalloutlinestrokestyle: TSD_StrokeArchive? = nil
    var _tschchartseriesdateformat: TSK_FormatStructArchive? = nil
    var _tschchartseriesdurationformat: TSK_FormatStructArchive? = nil
    var _tschchartseriesenablecalloutline: Int32? = nil
    var _tschchartserieserrorbarcustomnegativedata: TSCH_ChartsNSArrayOfNSNumberDoubleArchive? = nil
    var _tschchartserieserrorbarcustomnegativedatascatterx: TSCH_ChartsNSArrayOfNSNumberDoubleArchive? = nil
    var _tschchartserieserrorbarcustompositivedata: TSCH_ChartsNSArrayOfNSNumberDoubleArchive? = nil
    var _tschchartserieserrorbarcustompositivedatascatterx: TSCH_ChartsNSArrayOfNSNumberDoubleArchive? = nil
    var _tschchartserieserrorbarfixedvalue: Float? = nil
    var _tschchartserieserrorbarfixedvaluescatterx: Float? = nil
    var _tschchartserieserrorbarlineend: TSD_LineEndArchive? = nil
    var _tschchartserieserrorbarlineendscatterx: TSD_LineEndArchive? = nil
    var _tschchartserieserrorbarpercentvalue: Float? = nil
    var _tschchartserieserrorbarpercentvaluescatterx: Float? = nil
    var _tschchartserieserrorbarsetting: Int32? = nil
    var _tschchartserieserrorbarsettingscatterx: Int32? = nil
    var _tschchartserieserrorbarshadow: TSD_ShadowArchive? = nil
    var _tschchartserieserrorbarspacing: Int32? = nil
    var _tschchartserieserrorbarspacingscatterx: Int32? = nil
    var _tschchartserieserrorbarstddevvalue: Float? = nil
    var _tschchartserieserrorbarstddevvaluescatterx: Float? = nil
    var _tschchartserieserrorbarstroke: TSD_StrokeArchive? = nil
    var _tschchartserieserrorbarstrokescatterx: TSD_StrokeArchive? = nil
    var _tschchartserieserrorbartype: Int32? = nil
    var _tschchartserieserrorbartypescatterx: Int32? = nil
    var _tschchartseriesfill: TSD_FillArchive? = nil
    var _tschchartserieslabelexplosion: Float? = nil
    var _tschchartserieslabelparagraphstyleindex: Int32? = nil
    var _tschchartserieslinetype: Int32? = nil
    var _tschchartseriesnumberformat: TSK_FormatStructArchive? = nil
    var _tschchartseriesnumberformattype: Int32? = nil
    var _tschchartseriesopacity: Float? = nil
    var _tschchartseriesoutsidelabelparagraphstyleindex: Int32? = nil
    var _tschchartseriespercentnumberformat: TSK_FormatStructArchive? = nil
    var _tschchartseriesseriestype: Int32? = nil
    var _tschchartseriesshadow: TSD_ShadowArchive? = nil
    var _tschchartseriesshowerrorbar: Bool? = nil
    var _tschchartseriesshowerrorbarscatterx: Bool? = nil
    var _tschchartseriesshowlabelsinfront: Bool? = nil
    var _tschchartseriesshowline: Bool? = nil
    var _tschchartseriesshownegativedata: Bool? = nil
    var _tschchartseriesshowserieslabels: Bool? = nil
    var _tschchartseriesshowsymbol: Bool? = nil
    var _tschchartseriesshowtrendline: Bool? = nil
    var _tschchartseriesshowvaluelabels: Bool? = nil
    var _tschchartseriessizedimension: Int32? = nil
    var _tschchartseriesstacklabels: Bool? = nil
    var _tschchartseriesstroke: TSD_StrokeArchive? = nil
    var _tschchartseriessymbolfill: TSD_FillArchive? = nil
    var _tschchartseriessymbolfilluseseriesfill: Bool? = nil
    var _tschchartseriessymbolfilluseseriesstroke: Bool? = nil
    var _tschchartseriessymbolsize: Float? = nil
    var _tschchartseriessymbolstroke: TSD_StrokeArchive? = nil
    var _tschchartseriessymboltype: Int32? = nil
    var _tschchartseriestrendlineequationoffsetx: Float? = nil
    var _tschchartseriestrendlineequationoffsety: Float? = nil
    var _tschchartseriestrendlinelabelstring: String? = nil
    var _tschchartseriestrendlineorder: Int32? = nil
    var _tschchartseriestrendlineperiod: Int32? = nil
    var _tschchartseriestrendlinersquaredoffsetx: Float? = nil
    var _tschchartseriestrendlinersquaredoffsety: Float? = nil
    var _tschchartseriestrendlineshadow: TSD_ShadowArchive? = nil
    var _tschchartseriestrendlineshowequation: Bool? = nil
    var _tschchartseriestrendlineshowlabel: Bool? = nil
    var _tschchartseriestrendlineshowr2Value: Bool? = nil
    var _tschchartseriestrendlinestroke: TSD_StrokeArchive? = nil
    var _tschchartseriestrendlinetype: Int32? = nil
    var _tschchartseriestrendlineequationopacity: Float? = nil
    var _tschchartseriestrendlineequationparagraphstyleindex: Int32? = nil
    var _tschchartseriestrendlinersquaredopacity: Float? = nil
    var _tschchartseriestrendlinersquaredparagraphstyleindex: Int32? = nil
    var _tschchartseriesvaluelabelposition: Int32? = nil
    var _tschchartseriesvaluelabelspacing: Int32? = nil
    var _tschchartseriesvaluelabelsaxis: Int32? = nil
    var _tschchartserieswedgeexplosion: Float? = nil
    var _tschchartseriesyaxisordinal: Int32? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _tschchartseries10Dateformat = source._tschchartseries10Dateformat
      _tschchartseries10Numberformat = source._tschchartseries10Numberformat
      _tschchartseries23Labelexplosion = source._tschchartseries23Labelexplosion
      _tschchartseriesadjustmentscale = source._tschchartseriesadjustmentscale
      _tschchartseriescalloutlineendlineend = source._tschchartseriescalloutlineendlineend
      _tschchartseriescalloutlinestartlineend = source._tschchartseriescalloutlinestartlineend
      _tschchartseriescalloutlinestrokestyle = source._tschchartseriescalloutlinestrokestyle
      _tschchartseriesdateformat = source._tschchartseriesdateformat
      _tschchartseriesdurationformat = source._tschchartseriesdurationformat
      _tschchartseriesenablecalloutline = source._tschchartseriesenablecalloutline
      _tschchartserieserrorbarcustomnegativedata = source._tschchartserieserrorbarcustomnegativedata
      _tschchartserieserrorbarcustomnegativedatascatterx = source._tschchartserieserrorbarcustomnegativedatascatterx
      _tschchartserieserrorbarcustompositivedata = source._tschchartserieserrorbarcustompositivedata
      _tschchartserieserrorbarcustompositivedatascatterx = source._tschchartserieserrorbarcustompositivedatascatterx
      _tschchartserieserrorbarfixedvalue = source._tschchartserieserrorbarfixedvalue
      _tschchartserieserrorbarfixedvaluescatterx = source._tschchartserieserrorbarfixedvaluescatterx
      _tschchartserieserrorbarlineend = source._tschchartserieserrorbarlineend
      _tschchartserieserrorbarlineendscatterx = source._tschchartserieserrorbarlineendscatterx
      _tschchartserieserrorbarpercentvalue = source._tschchartserieserrorbarpercentvalue
      _tschchartserieserrorbarpercentvaluescatterx = source._tschchartserieserrorbarpercentvaluescatterx
      _tschchartserieserrorbarsetting = source._tschchartserieserrorbarsetting
      _tschchartserieserrorbarsettingscatterx = source._tschchartserieserrorbarsettingscatterx
      _tschchartserieserrorbarshadow = source._tschchartserieserrorbarshadow
      _tschchartserieserrorbarspacing = source._tschchartserieserrorbarspacing
      _tschchartserieserrorbarspacingscatterx = source._tschchartserieserrorbarspacingscatterx
      _tschchartserieserrorbarstddevvalue = source._tschchartserieserrorbarstddevvalue
      _tschchartserieserrorbarstddevvaluescatterx = source._tschchartserieserrorbarstddevvaluescatterx
      _tschchartserieserrorbarstroke = source._tschchartserieserrorbarstroke
      _tschchartserieserrorbarstrokescatterx = source._tschchartserieserrorbarstrokescatterx
      _tschchartserieserrorbartype = source._tschchartserieserrorbartype
      _tschchartserieserrorbartypescatterx = source._tschchartserieserrorbartypescatterx
      _tschchartseriesfill = source._tschchartseriesfill
      _tschchartserieslabelexplosion = source._tschchartserieslabelexplosion
      _tschchartserieslabelparagraphstyleindex = source._tschchartserieslabelparagraphstyleindex
      _tschchartserieslinetype = source._tschchartserieslinetype
      _tschchartseriesnumberformat = source._tschchartseriesnumberformat
      _tschchartseriesnumberformattype = source._tschchartseriesnumberformattype
      _tschchartseriesopacity = source._tschchartseriesopacity
      _tschchartseriesoutsidelabelparagraphstyleindex = source._tschchartseriesoutsidelabelparagraphstyleindex
      _tschchartseriespercentnumberformat = source._tschchartseriespercentnumberformat
      _tschchartseriesseriestype = source._tschchartseriesseriestype
      _tschchartseriesshadow = source._tschchartseriesshadow
      _tschchartseriesshowerrorbar = source._tschchartseriesshowerrorbar
      _tschchartseriesshowerrorbarscatterx = source._tschchartseriesshowerrorbarscatterx
      _tschchartseriesshowlabelsinfront = source._tschchartseriesshowlabelsinfront
      _tschchartseriesshowline = source._tschchartseriesshowline
      _tschchartseriesshownegativedata = source._tschchartseriesshownegativedata
      _tschchartseriesshowserieslabels = source._tschchartseriesshowserieslabels
      _tschchartseriesshowsymbol = source._tschchartseriesshowsymbol
      _tschchartseriesshowtrendline = source._tschchartseriesshowtrendline
      _tschchartseriesshowvaluelabels = source._tschchartseriesshowvaluelabels
      _tschchartseriessizedimension = source._tschchartseriessizedimension
      _tschchartseriesstacklabels = source._tschchartseriesstacklabels
      _tschchartseriesstroke = source._tschchartseriesstroke
      _tschchartseriessymbolfill = source._tschchartseriessymbolfill
      _tschchartseriessymbolfilluseseriesfill = source._tschchartseriessymbolfilluseseriesfill
      _tschchartseriessymbolfilluseseriesstroke = source._tschchartseriessymbolfilluseseriesstroke
      _tschchartseriessymbolsize = source._tschchartseriessymbolsize
      _tschchartseriessymbolstroke = source._tschchartseriessymbolstroke
      _tschchartseriessymboltype = source._tschchartseriessymboltype
      _tschchartseriestrendlineequationoffsetx = source._tschchartseriestrendlineequationoffsetx
      _tschchartseriestrendlineequationoffsety = source._tschchartseriestrendlineequationoffsety
      _tschchartseriestrendlinelabelstring = source._tschchartseriestrendlinelabelstring
      _tschchartseriestrendlineorder = source._tschchartseriestrendlineorder
      _tschchartseriestrendlineperiod = source._tschchartseriestrendlineperiod
      _tschchartseriestrendlinersquaredoffsetx = source._tschchartseriestrendlinersquaredoffsetx
      _tschchartseriestrendlinersquaredoffsety = source._tschchartseriestrendlinersquaredoffsety
      _tschchartseriestrendlineshadow = source._tschchartseriestrendlineshadow
      _tschchartseriestrendlineshowequation = source._tschchartseriestrendlineshowequation
      _tschchartseriestrendlineshowlabel = source._tschchartseriestrendlineshowlabel
      _tschchartseriestrendlineshowr2Value = source._tschchartseriestrendlineshowr2Value
      _tschchartseriestrendlinestroke = source._tschchartseriestrendlinestroke
      _tschchartseriestrendlinetype = source._tschchartseriestrendlinetype
      _tschchartseriestrendlineequationopacity = source._tschchartseriestrendlineequationopacity
      _tschchartseriestrendlineequationparagraphstyleindex = source._tschchartseriestrendlineequationparagraphstyleindex
      _tschchartseriestrendlinersquaredopacity = source._tschchartseriestrendlinersquaredopacity
      _tschchartseriestrendlinersquaredparagraphstyleindex = source._tschchartseriestrendlinersquaredparagraphstyleindex
      _tschchartseriesvaluelabelposition = source._tschchartseriesvaluelabelposition
      _tschchartseriesvaluelabelspacing = source._tschchartseriesvaluelabelspacing
      _tschchartseriesvaluelabelsaxis = source._tschchartseriesvaluelabelsaxis
      _tschchartserieswedgeexplosion = source._tschchartserieswedgeexplosion
      _tschchartseriesyaxisordinal = source._tschchartseriesyaxisordinal
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._tschchartseries10Dateformat, !v.isInitialized {return false}
      if let v = _storage._tschchartseries10Numberformat, !v.isInitialized {return false}
      if let v = _storage._tschchartseriescalloutlineendlineend, !v.isInitialized {return false}
      if let v = _storage._tschchartseriescalloutlinestartlineend, !v.isInitialized {return false}
      if let v = _storage._tschchartseriescalloutlinestrokestyle, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesdateformat, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesdurationformat, !v.isInitialized {return false}
      if let v = _storage._tschchartserieserrorbarlineend, !v.isInitialized {return false}
      if let v = _storage._tschchartserieserrorbarlineendscatterx, !v.isInitialized {return false}
      if let v = _storage._tschchartserieserrorbarshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartserieserrorbarstroke, !v.isInitialized {return false}
      if let v = _storage._tschchartserieserrorbarstrokescatterx, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesfill, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesnumberformat, !v.isInitialized {return false}
      if let v = _storage._tschchartseriespercentnumberformat, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesstroke, !v.isInitialized {return false}
      if let v = _storage._tschchartseriessymbolfill, !v.isInitialized {return false}
      if let v = _storage._tschchartseriessymbolstroke, !v.isInitialized {return false}
      if let v = _storage._tschchartseriestrendlineshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseriestrendlinestroke, !v.isInitialized {return false}
      return true
    }
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._tschchartseries10Dateformat)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._tschchartseries10Numberformat)
        case 3: try decoder.decodeSingularFloatField(value: &_storage._tschchartseries23Labelexplosion)
        case 4: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesadjustmentscale)
        case 5: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriescalloutlineendlineend)
        case 6: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriescalloutlinestartlineend)
        case 7: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriescalloutlinestrokestyle)
        case 8: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdateformat)
        case 9: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdurationformat)
        case 10: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesenablecalloutline)
        case 11: try decoder.decodeSingularMessageField(value: &_storage._tschchartserieserrorbarcustomnegativedata)
        case 12: try decoder.decodeSingularMessageField(value: &_storage._tschchartserieserrorbarcustomnegativedatascatterx)
        case 13: try decoder.decodeSingularMessageField(value: &_storage._tschchartserieserrorbarcustompositivedata)
        case 14: try decoder.decodeSingularMessageField(value: &_storage._tschchartserieserrorbarcustompositivedatascatterx)
        case 15: try decoder.decodeSingularFloatField(value: &_storage._tschchartserieserrorbarfixedvalue)
        case 16: try decoder.decodeSingularFloatField(value: &_storage._tschchartserieserrorbarfixedvaluescatterx)
        case 17: try decoder.decodeSingularMessageField(value: &_storage._tschchartserieserrorbarlineend)
        case 18: try decoder.decodeSingularMessageField(value: &_storage._tschchartserieserrorbarlineendscatterx)
        case 19: try decoder.decodeSingularFloatField(value: &_storage._tschchartserieserrorbarpercentvalue)
        case 20: try decoder.decodeSingularFloatField(value: &_storage._tschchartserieserrorbarpercentvaluescatterx)
        case 21: try decoder.decodeSingularInt32Field(value: &_storage._tschchartserieserrorbarsetting)
        case 22: try decoder.decodeSingularInt32Field(value: &_storage._tschchartserieserrorbarsettingscatterx)
        case 23: try decoder.decodeSingularMessageField(value: &_storage._tschchartserieserrorbarshadow)
        case 24: try decoder.decodeSingularInt32Field(value: &_storage._tschchartserieserrorbarspacing)
        case 25: try decoder.decodeSingularInt32Field(value: &_storage._tschchartserieserrorbarspacingscatterx)
        case 26: try decoder.decodeSingularFloatField(value: &_storage._tschchartserieserrorbarstddevvalue)
        case 27: try decoder.decodeSingularFloatField(value: &_storage._tschchartserieserrorbarstddevvaluescatterx)
        case 28: try decoder.decodeSingularMessageField(value: &_storage._tschchartserieserrorbarstroke)
        case 29: try decoder.decodeSingularMessageField(value: &_storage._tschchartserieserrorbarstrokescatterx)
        case 30: try decoder.decodeSingularInt32Field(value: &_storage._tschchartserieserrorbartype)
        case 31: try decoder.decodeSingularInt32Field(value: &_storage._tschchartserieserrorbartypescatterx)
        case 32: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesfill)
        case 33: try decoder.decodeSingularFloatField(value: &_storage._tschchartserieslabelexplosion)
        case 34: try decoder.decodeSingularInt32Field(value: &_storage._tschchartserieslabelparagraphstyleindex)
        case 35: try decoder.decodeSingularInt32Field(value: &_storage._tschchartserieslinetype)
        case 36: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesnumberformat)
        case 37: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesnumberformattype)
        case 38: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesopacity)
        case 39: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesoutsidelabelparagraphstyleindex)
        case 40: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriespercentnumberformat)
        case 41: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesseriestype)
        case 42: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesshadow)
        case 43: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesshowerrorbar)
        case 44: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesshowerrorbarscatterx)
        case 45: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesshowlabelsinfront)
        case 46: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesshowline)
        case 47: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesshownegativedata)
        case 48: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesshowserieslabels)
        case 49: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesshowsymbol)
        case 50: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesshowtrendline)
        case 51: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesshowvaluelabels)
        case 52: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriessizedimension)
        case 53: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesstacklabels)
        case 54: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesstroke)
        case 55: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriessymbolfill)
        case 56: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriessymbolfilluseseriesfill)
        case 57: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriessymbolfilluseseriesstroke)
        case 58: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriessymbolsize)
        case 59: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriessymbolstroke)
        case 60: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriessymboltype)
        case 61: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriestrendlineequationoffsetx)
        case 62: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriestrendlineequationoffsety)
        case 63: try decoder.decodeSingularStringField(value: &_storage._tschchartseriestrendlinelabelstring)
        case 64: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriestrendlineorder)
        case 65: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriestrendlineperiod)
        case 66: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriestrendlinersquaredoffsetx)
        case 67: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriestrendlinersquaredoffsety)
        case 68: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriestrendlineshadow)
        case 69: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriestrendlineshowequation)
        case 70: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriestrendlineshowlabel)
        case 71: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriestrendlineshowr2Value)
        case 72: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriestrendlinestroke)
        case 73: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriestrendlinetype)
        case 74: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriestrendlineequationopacity)
        case 75: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriestrendlineequationparagraphstyleindex)
        case 76: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriestrendlinersquaredopacity)
        case 77: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriestrendlinersquaredparagraphstyleindex)
        case 78: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesvaluelabelposition)
        case 79: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesvaluelabelspacing)
        case 80: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesvaluelabelsaxis)
        case 81: try decoder.decodeSingularFloatField(value: &_storage._tschchartserieswedgeexplosion)
        case 82: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesyaxisordinal)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._tschchartseries10Dateformat {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._tschchartseries10Numberformat {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._tschchartseries23Labelexplosion {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 3)
      }
      if let v = _storage._tschchartseriesadjustmentscale {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 4)
      }
      if let v = _storage._tschchartseriescalloutlineendlineend {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      }
      if let v = _storage._tschchartseriescalloutlinestartlineend {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
      }
      if let v = _storage._tschchartseriescalloutlinestrokestyle {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      }
      if let v = _storage._tschchartseriesdateformat {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
      }
      if let v = _storage._tschchartseriesdurationformat {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 9)
      }
      if let v = _storage._tschchartseriesenablecalloutline {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 10)
      }
      if let v = _storage._tschchartserieserrorbarcustomnegativedata {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 11)
      }
      if let v = _storage._tschchartserieserrorbarcustomnegativedatascatterx {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 12)
      }
      if let v = _storage._tschchartserieserrorbarcustompositivedata {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 13)
      }
      if let v = _storage._tschchartserieserrorbarcustompositivedatascatterx {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 14)
      }
      if let v = _storage._tschchartserieserrorbarfixedvalue {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 15)
      }
      if let v = _storage._tschchartserieserrorbarfixedvaluescatterx {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 16)
      }
      if let v = _storage._tschchartserieserrorbarlineend {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 17)
      }
      if let v = _storage._tschchartserieserrorbarlineendscatterx {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 18)
      }
      if let v = _storage._tschchartserieserrorbarpercentvalue {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 19)
      }
      if let v = _storage._tschchartserieserrorbarpercentvaluescatterx {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 20)
      }
      if let v = _storage._tschchartserieserrorbarsetting {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 21)
      }
      if let v = _storage._tschchartserieserrorbarsettingscatterx {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 22)
      }
      if let v = _storage._tschchartserieserrorbarshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 23)
      }
      if let v = _storage._tschchartserieserrorbarspacing {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 24)
      }
      if let v = _storage._tschchartserieserrorbarspacingscatterx {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 25)
      }
      if let v = _storage._tschchartserieserrorbarstddevvalue {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 26)
      }
      if let v = _storage._tschchartserieserrorbarstddevvaluescatterx {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 27)
      }
      if let v = _storage._tschchartserieserrorbarstroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 28)
      }
      if let v = _storage._tschchartserieserrorbarstrokescatterx {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 29)
      }
      if let v = _storage._tschchartserieserrorbartype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 30)
      }
      if let v = _storage._tschchartserieserrorbartypescatterx {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 31)
      }
      if let v = _storage._tschchartseriesfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 32)
      }
      if let v = _storage._tschchartserieslabelexplosion {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 33)
      }
      if let v = _storage._tschchartserieslabelparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 34)
      }
      if let v = _storage._tschchartserieslinetype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 35)
      }
      if let v = _storage._tschchartseriesnumberformat {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 36)
      }
      if let v = _storage._tschchartseriesnumberformattype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 37)
      }
      if let v = _storage._tschchartseriesopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 38)
      }
      if let v = _storage._tschchartseriesoutsidelabelparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 39)
      }
      if let v = _storage._tschchartseriespercentnumberformat {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 40)
      }
      if let v = _storage._tschchartseriesseriestype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 41)
      }
      if let v = _storage._tschchartseriesshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 42)
      }
      if let v = _storage._tschchartseriesshowerrorbar {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 43)
      }
      if let v = _storage._tschchartseriesshowerrorbarscatterx {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 44)
      }
      if let v = _storage._tschchartseriesshowlabelsinfront {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 45)
      }
      if let v = _storage._tschchartseriesshowline {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 46)
      }
      if let v = _storage._tschchartseriesshownegativedata {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 47)
      }
      if let v = _storage._tschchartseriesshowserieslabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 48)
      }
      if let v = _storage._tschchartseriesshowsymbol {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 49)
      }
      if let v = _storage._tschchartseriesshowtrendline {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 50)
      }
      if let v = _storage._tschchartseriesshowvaluelabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 51)
      }
      if let v = _storage._tschchartseriessizedimension {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 52)
      }
      if let v = _storage._tschchartseriesstacklabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 53)
      }
      if let v = _storage._tschchartseriesstroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 54)
      }
      if let v = _storage._tschchartseriessymbolfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 55)
      }
      if let v = _storage._tschchartseriessymbolfilluseseriesfill {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 56)
      }
      if let v = _storage._tschchartseriessymbolfilluseseriesstroke {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 57)
      }
      if let v = _storage._tschchartseriessymbolsize {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 58)
      }
      if let v = _storage._tschchartseriessymbolstroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 59)
      }
      if let v = _storage._tschchartseriessymboltype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 60)
      }
      if let v = _storage._tschchartseriestrendlineequationoffsetx {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 61)
      }
      if let v = _storage._tschchartseriestrendlineequationoffsety {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 62)
      }
      if let v = _storage._tschchartseriestrendlinelabelstring {
        try visitor.visitSingularStringField(value: v, fieldNumber: 63)
      }
      if let v = _storage._tschchartseriestrendlineorder {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 64)
      }
      if let v = _storage._tschchartseriestrendlineperiod {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 65)
      }
      if let v = _storage._tschchartseriestrendlinersquaredoffsetx {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 66)
      }
      if let v = _storage._tschchartseriestrendlinersquaredoffsety {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 67)
      }
      if let v = _storage._tschchartseriestrendlineshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 68)
      }
      if let v = _storage._tschchartseriestrendlineshowequation {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 69)
      }
      if let v = _storage._tschchartseriestrendlineshowlabel {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 70)
      }
      if let v = _storage._tschchartseriestrendlineshowr2Value {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 71)
      }
      if let v = _storage._tschchartseriestrendlinestroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 72)
      }
      if let v = _storage._tschchartseriestrendlinetype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 73)
      }
      if let v = _storage._tschchartseriestrendlineequationopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 74)
      }
      if let v = _storage._tschchartseriestrendlineequationparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 75)
      }
      if let v = _storage._tschchartseriestrendlinersquaredopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 76)
      }
      if let v = _storage._tschchartseriestrendlinersquaredparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 77)
      }
      if let v = _storage._tschchartseriesvaluelabelposition {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 78)
      }
      if let v = _storage._tschchartseriesvaluelabelspacing {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 79)
      }
      if let v = _storage._tschchartseriesvaluelabelsaxis {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 80)
      }
      if let v = _storage._tschchartserieswedgeexplosion {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 81)
      }
      if let v = _storage._tschchartseriesyaxisordinal {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 82)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSCH_Generated_ChartSeriesGenericPropertyMapArchive, rhs: TSCH_Generated_ChartSeriesGenericPropertyMapArchive) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._tschchartseries10Dateformat != rhs_storage._tschchartseries10Dateformat {return false}
        if _storage._tschchartseries10Numberformat != rhs_storage._tschchartseries10Numberformat {return false}
        if _storage._tschchartseries23Labelexplosion != rhs_storage._tschchartseries23Labelexplosion {return false}
        if _storage._tschchartseriesadjustmentscale != rhs_storage._tschchartseriesadjustmentscale {return false}
        if _storage._tschchartseriescalloutlineendlineend != rhs_storage._tschchartseriescalloutlineendlineend {return false}
        if _storage._tschchartseriescalloutlinestartlineend != rhs_storage._tschchartseriescalloutlinestartlineend {return false}
        if _storage._tschchartseriescalloutlinestrokestyle != rhs_storage._tschchartseriescalloutlinestrokestyle {return false}
        if _storage._tschchartseriesdateformat != rhs_storage._tschchartseriesdateformat {return false}
        if _storage._tschchartseriesdurationformat != rhs_storage._tschchartseriesdurationformat {return false}
        if _storage._tschchartseriesenablecalloutline != rhs_storage._tschchartseriesenablecalloutline {return false}
        if _storage._tschchartserieserrorbarcustomnegativedata != rhs_storage._tschchartserieserrorbarcustomnegativedata {return false}
        if _storage._tschchartserieserrorbarcustomnegativedatascatterx != rhs_storage._tschchartserieserrorbarcustomnegativedatascatterx {return false}
        if _storage._tschchartserieserrorbarcustompositivedata != rhs_storage._tschchartserieserrorbarcustompositivedata {return false}
        if _storage._tschchartserieserrorbarcustompositivedatascatterx != rhs_storage._tschchartserieserrorbarcustompositivedatascatterx {return false}
        if _storage._tschchartserieserrorbarfixedvalue != rhs_storage._tschchartserieserrorbarfixedvalue {return false}
        if _storage._tschchartserieserrorbarfixedvaluescatterx != rhs_storage._tschchartserieserrorbarfixedvaluescatterx {return false}
        if _storage._tschchartserieserrorbarlineend != rhs_storage._tschchartserieserrorbarlineend {return false}
        if _storage._tschchartserieserrorbarlineendscatterx != rhs_storage._tschchartserieserrorbarlineendscatterx {return false}
        if _storage._tschchartserieserrorbarpercentvalue != rhs_storage._tschchartserieserrorbarpercentvalue {return false}
        if _storage._tschchartserieserrorbarpercentvaluescatterx != rhs_storage._tschchartserieserrorbarpercentvaluescatterx {return false}
        if _storage._tschchartserieserrorbarsetting != rhs_storage._tschchartserieserrorbarsetting {return false}
        if _storage._tschchartserieserrorbarsettingscatterx != rhs_storage._tschchartserieserrorbarsettingscatterx {return false}
        if _storage._tschchartserieserrorbarshadow != rhs_storage._tschchartserieserrorbarshadow {return false}
        if _storage._tschchartserieserrorbarspacing != rhs_storage._tschchartserieserrorbarspacing {return false}
        if _storage._tschchartserieserrorbarspacingscatterx != rhs_storage._tschchartserieserrorbarspacingscatterx {return false}
        if _storage._tschchartserieserrorbarstddevvalue != rhs_storage._tschchartserieserrorbarstddevvalue {return false}
        if _storage._tschchartserieserrorbarstddevvaluescatterx != rhs_storage._tschchartserieserrorbarstddevvaluescatterx {return false}
        if _storage._tschchartserieserrorbarstroke != rhs_storage._tschchartserieserrorbarstroke {return false}
        if _storage._tschchartserieserrorbarstrokescatterx != rhs_storage._tschchartserieserrorbarstrokescatterx {return false}
        if _storage._tschchartserieserrorbartype != rhs_storage._tschchartserieserrorbartype {return false}
        if _storage._tschchartserieserrorbartypescatterx != rhs_storage._tschchartserieserrorbartypescatterx {return false}
        if _storage._tschchartseriesfill != rhs_storage._tschchartseriesfill {return false}
        if _storage._tschchartserieslabelexplosion != rhs_storage._tschchartserieslabelexplosion {return false}
        if _storage._tschchartserieslabelparagraphstyleindex != rhs_storage._tschchartserieslabelparagraphstyleindex {return false}
        if _storage._tschchartserieslinetype != rhs_storage._tschchartserieslinetype {return false}
        if _storage._tschchartseriesnumberformat != rhs_storage._tschchartseriesnumberformat {return false}
        if _storage._tschchartseriesnumberformattype != rhs_storage._tschchartseriesnumberformattype {return false}
        if _storage._tschchartseriesopacity != rhs_storage._tschchartseriesopacity {return false}
        if _storage._tschchartseriesoutsidelabelparagraphstyleindex != rhs_storage._tschchartseriesoutsidelabelparagraphstyleindex {return false}
        if _storage._tschchartseriespercentnumberformat != rhs_storage._tschchartseriespercentnumberformat {return false}
        if _storage._tschchartseriesseriestype != rhs_storage._tschchartseriesseriestype {return false}
        if _storage._tschchartseriesshadow != rhs_storage._tschchartseriesshadow {return false}
        if _storage._tschchartseriesshowerrorbar != rhs_storage._tschchartseriesshowerrorbar {return false}
        if _storage._tschchartseriesshowerrorbarscatterx != rhs_storage._tschchartseriesshowerrorbarscatterx {return false}
        if _storage._tschchartseriesshowlabelsinfront != rhs_storage._tschchartseriesshowlabelsinfront {return false}
        if _storage._tschchartseriesshowline != rhs_storage._tschchartseriesshowline {return false}
        if _storage._tschchartseriesshownegativedata != rhs_storage._tschchartseriesshownegativedata {return false}
        if _storage._tschchartseriesshowserieslabels != rhs_storage._tschchartseriesshowserieslabels {return false}
        if _storage._tschchartseriesshowsymbol != rhs_storage._tschchartseriesshowsymbol {return false}
        if _storage._tschchartseriesshowtrendline != rhs_storage._tschchartseriesshowtrendline {return false}
        if _storage._tschchartseriesshowvaluelabels != rhs_storage._tschchartseriesshowvaluelabels {return false}
        if _storage._tschchartseriessizedimension != rhs_storage._tschchartseriessizedimension {return false}
        if _storage._tschchartseriesstacklabels != rhs_storage._tschchartseriesstacklabels {return false}
        if _storage._tschchartseriesstroke != rhs_storage._tschchartseriesstroke {return false}
        if _storage._tschchartseriessymbolfill != rhs_storage._tschchartseriessymbolfill {return false}
        if _storage._tschchartseriessymbolfilluseseriesfill != rhs_storage._tschchartseriessymbolfilluseseriesfill {return false}
        if _storage._tschchartseriessymbolfilluseseriesstroke != rhs_storage._tschchartseriessymbolfilluseseriesstroke {return false}
        if _storage._tschchartseriessymbolsize != rhs_storage._tschchartseriessymbolsize {return false}
        if _storage._tschchartseriessymbolstroke != rhs_storage._tschchartseriessymbolstroke {return false}
        if _storage._tschchartseriessymboltype != rhs_storage._tschchartseriessymboltype {return false}
        if _storage._tschchartseriestrendlineequationoffsetx != rhs_storage._tschchartseriestrendlineequationoffsetx {return false}
        if _storage._tschchartseriestrendlineequationoffsety != rhs_storage._tschchartseriestrendlineequationoffsety {return false}
        if _storage._tschchartseriestrendlinelabelstring != rhs_storage._tschchartseriestrendlinelabelstring {return false}
        if _storage._tschchartseriestrendlineorder != rhs_storage._tschchartseriestrendlineorder {return false}
        if _storage._tschchartseriestrendlineperiod != rhs_storage._tschchartseriestrendlineperiod {return false}
        if _storage._tschchartseriestrendlinersquaredoffsetx != rhs_storage._tschchartseriestrendlinersquaredoffsetx {return false}
        if _storage._tschchartseriestrendlinersquaredoffsety != rhs_storage._tschchartseriestrendlinersquaredoffsety {return false}
        if _storage._tschchartseriestrendlineshadow != rhs_storage._tschchartseriestrendlineshadow {return false}
        if _storage._tschchartseriestrendlineshowequation != rhs_storage._tschchartseriestrendlineshowequation {return false}
        if _storage._tschchartseriestrendlineshowlabel != rhs_storage._tschchartseriestrendlineshowlabel {return false}
        if _storage._tschchartseriestrendlineshowr2Value != rhs_storage._tschchartseriestrendlineshowr2Value {return false}
        if _storage._tschchartseriestrendlinestroke != rhs_storage._tschchartseriestrendlinestroke {return false}
        if _storage._tschchartseriestrendlinetype != rhs_storage._tschchartseriestrendlinetype {return false}
        if _storage._tschchartseriestrendlineequationopacity != rhs_storage._tschchartseriestrendlineequationopacity {return false}
        if _storage._tschchartseriestrendlineequationparagraphstyleindex != rhs_storage._tschchartseriestrendlineequationparagraphstyleindex {return false}
        if _storage._tschchartseriestrendlinersquaredopacity != rhs_storage._tschchartseriestrendlinersquaredopacity {return false}
        if _storage._tschchartseriestrendlinersquaredparagraphstyleindex != rhs_storage._tschchartseriestrendlinersquaredparagraphstyleindex {return false}
        if _storage._tschchartseriesvaluelabelposition != rhs_storage._tschchartseriesvaluelabelposition {return false}
        if _storage._tschchartseriesvaluelabelspacing != rhs_storage._tschchartseriesvaluelabelspacing {return false}
        if _storage._tschchartseriesvaluelabelsaxis != rhs_storage._tschchartseriesvaluelabelsaxis {return false}
        if _storage._tschchartserieswedgeexplosion != rhs_storage._tschchartserieswedgeexplosion {return false}
        if _storage._tschchartseriesyaxisordinal != rhs_storage._tschchartseriesyaxisordinal {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSCH_Generated_ReferenceLineGenericPropertyMapArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ReferenceLineGenericPropertyMapArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "tschreferencelinecustomvalue"),
    2: .same(proto: "tschreferencelinelabel"),
    3: .same(proto: "tschreferencelinelabelparagraphstyleindex"),
    4: .same(proto: "tschreferencelineshadow"),
    5: .same(proto: "tschreferencelineshowlabel"),
    6: .same(proto: "tschreferencelineshowline"),
    7: .same(proto: "tschreferencelineshowvaluelabel"),
    8: .same(proto: "tschreferencelinestroke"),
    9: .same(proto: "tschreferencelinetype"),
    10: .same(proto: "tschreferencelinevaluelabelparagraphstyleindex"),
  ]

  public var isInitialized: Bool {
    if let v = self._tschreferencelineshadow, !v.isInitialized {return false}
    if let v = self._tschreferencelinestroke, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._tschreferencelinecustomvalue)
      case 2: try decoder.decodeSingularStringField(value: &self._tschreferencelinelabel)
      case 3: try decoder.decodeSingularInt32Field(value: &self._tschreferencelinelabelparagraphstyleindex)
      case 4: try decoder.decodeSingularMessageField(value: &self._tschreferencelineshadow)
      case 5: try decoder.decodeSingularBoolField(value: &self._tschreferencelineshowlabel)
      case 6: try decoder.decodeSingularBoolField(value: &self._tschreferencelineshowline)
      case 7: try decoder.decodeSingularBoolField(value: &self._tschreferencelineshowvaluelabel)
      case 8: try decoder.decodeSingularMessageField(value: &self._tschreferencelinestroke)
      case 9: try decoder.decodeSingularInt32Field(value: &self._tschreferencelinetype)
      case 10: try decoder.decodeSingularInt32Field(value: &self._tschreferencelinevaluelabelparagraphstyleindex)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._tschreferencelinecustomvalue {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if let v = self._tschreferencelinelabel {
      try visitor.visitSingularStringField(value: v, fieldNumber: 2)
    }
    if let v = self._tschreferencelinelabelparagraphstyleindex {
      try visitor.visitSingularInt32Field(value: v, fieldNumber: 3)
    }
    if let v = self._tschreferencelineshadow {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
    }
    if let v = self._tschreferencelineshowlabel {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 5)
    }
    if let v = self._tschreferencelineshowline {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 6)
    }
    if let v = self._tschreferencelineshowvaluelabel {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 7)
    }
    if let v = self._tschreferencelinestroke {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
    }
    if let v = self._tschreferencelinetype {
      try visitor.visitSingularInt32Field(value: v, fieldNumber: 9)
    }
    if let v = self._tschreferencelinevaluelabelparagraphstyleindex {
      try visitor.visitSingularInt32Field(value: v, fieldNumber: 10)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSCH_Generated_ReferenceLineGenericPropertyMapArchive, rhs: TSCH_Generated_ReferenceLineGenericPropertyMapArchive) -> Bool {
    if lhs._tschreferencelinecustomvalue != rhs._tschreferencelinecustomvalue {return false}
    if lhs._tschreferencelinelabel != rhs._tschreferencelinelabel {return false}
    if lhs._tschreferencelinelabelparagraphstyleindex != rhs._tschreferencelinelabelparagraphstyleindex {return false}
    if lhs._tschreferencelineshadow != rhs._tschreferencelineshadow {return false}
    if lhs._tschreferencelineshowlabel != rhs._tschreferencelineshowlabel {return false}
    if lhs._tschreferencelineshowline != rhs._tschreferencelineshowline {return false}
    if lhs._tschreferencelineshowvaluelabel != rhs._tschreferencelineshowvaluelabel {return false}
    if lhs._tschreferencelinestroke != rhs._tschreferencelinestroke {return false}
    if lhs._tschreferencelinetype != rhs._tschreferencelinetype {return false}
    if lhs._tschreferencelinevaluelabelparagraphstyleindex != rhs._tschreferencelinevaluelabelparagraphstyleindex {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
