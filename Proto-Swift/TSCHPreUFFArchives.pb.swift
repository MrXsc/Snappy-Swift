// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: TSCHPreUFFArchives.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

struct TSCH_PreUFF_ChartInfoArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var `super`: TSD_DrawableArchive {
    get {return _storage._super ?? TSD_DrawableArchive()}
    set {_uniqueStorage()._super = newValue}
  }
  /// Returns true if ``super`` has been explicitly set.
  var hasSuper: Bool {return _storage._super != nil}
  /// Clears the value of ``super``. Subsequent reads from it will return its default value.
  mutating func clearSuper() {_uniqueStorage()._super = nil}

  var chartModel: TSCH_PreUFF_ChartModelArchive {
    get {return _storage._chartModel ?? TSCH_PreUFF_ChartModelArchive()}
    set {_uniqueStorage()._chartModel = newValue}
  }
  /// Returns true if `chartModel` has been explicitly set.
  var hasChartModel: Bool {return _storage._chartModel != nil}
  /// Clears the value of `chartModel`. Subsequent reads from it will return its default value.
  mutating func clearChartModel() {_uniqueStorage()._chartModel = nil}

  var style: TSP_Reference {
    get {return _storage._style ?? TSP_Reference()}
    set {_uniqueStorage()._style = newValue}
  }
  /// Returns true if `style` has been explicitly set.
  var hasStyle: Bool {return _storage._style != nil}
  /// Clears the value of `style`. Subsequent reads from it will return its default value.
  mutating func clearStyle() {_uniqueStorage()._style = nil}

  var chartType: TSCH_ChartType {
    get {return _storage._chartType ?? .undefinedChartType}
    set {_uniqueStorage()._chartType = newValue}
  }
  /// Returns true if `chartType` has been explicitly set.
  var hasChartType: Bool {return _storage._chartType != nil}
  /// Clears the value of `chartType`. Subsequent reads from it will return its default value.
  mutating func clearChartType() {_uniqueStorage()._chartType = nil}

  var legendModel: TSCH_PreUFF_LegendModelArchive {
    get {return _storage._legendModel ?? TSCH_PreUFF_LegendModelArchive()}
    set {_uniqueStorage()._legendModel = newValue}
  }
  /// Returns true if `legendModel` has been explicitly set.
  var hasLegendModel: Bool {return _storage._legendModel != nil}
  /// Clears the value of `legendModel`. Subsequent reads from it will return its default value.
  mutating func clearLegendModel() {_uniqueStorage()._legendModel = nil}

  var innerChartFrame: TSCH_RectArchive {
    get {return _storage._innerChartFrame ?? TSCH_RectArchive()}
    set {_uniqueStorage()._innerChartFrame = newValue}
  }
  /// Returns true if `innerChartFrame` has been explicitly set.
  var hasInnerChartFrame: Bool {return _storage._innerChartFrame != nil}
  /// Clears the value of `innerChartFrame`. Subsequent reads from it will return its default value.
  mutating func clearInnerChartFrame() {_uniqueStorage()._innerChartFrame = nil}

  var valueAxisStyles: [TSP_Reference] {
    get {return _storage._valueAxisStyles}
    set {_uniqueStorage()._valueAxisStyles = newValue}
  }

  var categoryAxisStyles: [TSP_Reference] {
    get {return _storage._categoryAxisStyles}
    set {_uniqueStorage()._categoryAxisStyles = newValue}
  }

  var valueAxisNonstyles: [TSP_Reference] {
    get {return _storage._valueAxisNonstyles}
    set {_uniqueStorage()._valueAxisNonstyles = newValue}
  }

  var categoryAxisNonstyles: [TSP_Reference] {
    get {return _storage._categoryAxisNonstyles}
    set {_uniqueStorage()._categoryAxisNonstyles = newValue}
  }

  var seriesThemeStyles: [TSP_Reference] {
    get {return _storage._seriesThemeStyles}
    set {_uniqueStorage()._seriesThemeStyles = newValue}
  }

  var seriesPrivateStyles: TSP_SparseReferenceArray {
    get {return _storage._seriesPrivateStyles ?? TSP_SparseReferenceArray()}
    set {_uniqueStorage()._seriesPrivateStyles = newValue}
  }
  /// Returns true if `seriesPrivateStyles` has been explicitly set.
  var hasSeriesPrivateStyles: Bool {return _storage._seriesPrivateStyles != nil}
  /// Clears the value of `seriesPrivateStyles`. Subsequent reads from it will return its default value.
  mutating func clearSeriesPrivateStyles() {_uniqueStorage()._seriesPrivateStyles = nil}

  var seriesNonStyles: TSP_SparseReferenceArray {
    get {return _storage._seriesNonStyles ?? TSP_SparseReferenceArray()}
    set {_uniqueStorage()._seriesNonStyles = newValue}
  }
  /// Returns true if `seriesNonStyles` has been explicitly set.
  var hasSeriesNonStyles: Bool {return _storage._seriesNonStyles != nil}
  /// Clears the value of `seriesNonStyles`. Subsequent reads from it will return its default value.
  mutating func clearSeriesNonStyles() {_uniqueStorage()._seriesNonStyles = nil}

  var nonStyle: TSP_Reference {
    get {return _storage._nonStyle ?? TSP_Reference()}
    set {_uniqueStorage()._nonStyle = newValue}
  }
  /// Returns true if `nonStyle` has been explicitly set.
  var hasNonStyle: Bool {return _storage._nonStyle != nil}
  /// Clears the value of `nonStyle`. Subsequent reads from it will return its default value.
  mutating func clearNonStyle() {_uniqueStorage()._nonStyle = nil}

  var mediator: TSP_Reference {
    get {return _storage._mediator ?? TSP_Reference()}
    set {_uniqueStorage()._mediator = newValue}
  }
  /// Returns true if `mediator` has been explicitly set.
  var hasMediator: Bool {return _storage._mediator != nil}
  /// Clears the value of `mediator`. Subsequent reads from it will return its default value.
  mutating func clearMediator() {_uniqueStorage()._mediator = nil}

  var cdePreviewOrigin: TSP_Point {
    get {return _storage._cdePreviewOrigin ?? TSP_Point()}
    set {_uniqueStorage()._cdePreviewOrigin = newValue}
  }
  /// Returns true if `cdePreviewOrigin` has been explicitly set.
  var hasCdePreviewOrigin: Bool {return _storage._cdePreviewOrigin != nil}
  /// Clears the value of `cdePreviewOrigin`. Subsequent reads from it will return its default value.
  mutating func clearCdePreviewOrigin() {_uniqueStorage()._cdePreviewOrigin = nil}

  var chartStylePreset: TSP_Reference {
    get {return _storage._chartStylePreset ?? TSP_Reference()}
    set {_uniqueStorage()._chartStylePreset = newValue}
  }
  /// Returns true if `chartStylePreset` has been explicitly set.
  var hasChartStylePreset: Bool {return _storage._chartStylePreset != nil}
  /// Clears the value of `chartStylePreset`. Subsequent reads from it will return its default value.
  mutating func clearChartStylePreset() {_uniqueStorage()._chartStylePreset = nil}

  var paragraphStyles: [TSP_Reference] {
    get {return _storage._paragraphStyles}
    set {_uniqueStorage()._paragraphStyles = newValue}
  }

  var lastRowSectedInTheCde: Int32 {
    get {return _storage._lastRowSectedInTheCde ?? 0}
    set {_uniqueStorage()._lastRowSectedInTheCde = newValue}
  }
  /// Returns true if `lastRowSectedInTheCde` has been explicitly set.
  var hasLastRowSectedInTheCde: Bool {return _storage._lastRowSectedInTheCde != nil}
  /// Clears the value of `lastRowSectedInTheCde`. Subsequent reads from it will return its default value.
  mutating func clearLastRowSectedInTheCde() {_uniqueStorage()._lastRowSectedInTheCde = nil}

  var lastColumnSectedInTheCde: Int32 {
    get {return _storage._lastColumnSectedInTheCde ?? 0}
    set {_uniqueStorage()._lastColumnSectedInTheCde = newValue}
  }
  /// Returns true if `lastColumnSectedInTheCde` has been explicitly set.
  var hasLastColumnSectedInTheCde: Bool {return _storage._lastColumnSectedInTheCde != nil}
  /// Clears the value of `lastColumnSectedInTheCde`. Subsequent reads from it will return its default value.
  mutating func clearLastColumnSectedInTheCde() {_uniqueStorage()._lastColumnSectedInTheCde = nil}

  var chartStylePresetIndex: Int32 {
    get {return _storage._chartStylePresetIndex ?? 0}
    set {_uniqueStorage()._chartStylePresetIndex = newValue}
  }
  /// Returns true if `chartStylePresetIndex` has been explicitly set.
  var hasChartStylePresetIndex: Bool {return _storage._chartStylePresetIndex != nil}
  /// Clears the value of `chartStylePresetIndex`. Subsequent reads from it will return its default value.
  mutating func clearChartStylePresetIndex() {_uniqueStorage()._chartStylePresetIndex = nil}

  var needsCalcEngineDeferredImportAction: Bool {
    get {return _storage._needsCalcEngineDeferredImportAction ?? false}
    set {_uniqueStorage()._needsCalcEngineDeferredImportAction = newValue}
  }
  /// Returns true if `needsCalcEngineDeferredImportAction` has been explicitly set.
  var hasNeedsCalcEngineDeferredImportAction: Bool {return _storage._needsCalcEngineDeferredImportAction != nil}
  /// Clears the value of `needsCalcEngineDeferredImportAction`. Subsequent reads from it will return its default value.
  mutating func clearNeedsCalcEngineDeferredImportAction() {_uniqueStorage()._needsCalcEngineDeferredImportAction = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

struct TSCH_PreUFF_LegendModelArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var info: TSP_Reference {
    get {return _info ?? TSP_Reference()}
    set {_info = newValue}
  }
  /// Returns true if `info` has been explicitly set.
  var hasInfo: Bool {return self._info != nil}
  /// Clears the value of `info`. Subsequent reads from it will return its default value.
  mutating func clearInfo() {self._info = nil}

  var frame: TSCH_RectArchive {
    get {return _frame ?? TSCH_RectArchive()}
    set {_frame = newValue}
  }
  /// Returns true if `frame` has been explicitly set.
  var hasFrame: Bool {return self._frame != nil}
  /// Clears the value of `frame`. Subsequent reads from it will return its default value.
  mutating func clearFrame() {self._frame = nil}

  var style: TSP_Reference {
    get {return _style ?? TSP_Reference()}
    set {_style = newValue}
  }
  /// Returns true if `style` has been explicitly set.
  var hasStyle: Bool {return self._style != nil}
  /// Clears the value of `style`. Subsequent reads from it will return its default value.
  mutating func clearStyle() {self._style = nil}

  var nonStyle: TSP_Reference {
    get {return _nonStyle ?? TSP_Reference()}
    set {_nonStyle = newValue}
  }
  /// Returns true if `nonStyle` has been explicitly set.
  var hasNonStyle: Bool {return self._nonStyle != nil}
  /// Clears the value of `nonStyle`. Subsequent reads from it will return its default value.
  mutating func clearNonStyle() {self._nonStyle = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _info: TSP_Reference? = nil
  fileprivate var _frame: TSCH_RectArchive? = nil
  fileprivate var _style: TSP_Reference? = nil
  fileprivate var _nonStyle: TSP_Reference? = nil
}

struct TSCH_PreUFF_ChartModelArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var info: TSP_Reference {
    get {return _info ?? TSP_Reference()}
    set {_info = newValue}
  }
  /// Returns true if `info` has been explicitly set.
  var hasInfo: Bool {return self._info != nil}
  /// Clears the value of `info`. Subsequent reads from it will return its default value.
  mutating func clearInfo() {self._info = nil}

  var grid: TSP_Reference {
    get {return _grid ?? TSP_Reference()}
    set {_grid = newValue}
  }
  /// Returns true if `grid` has been explicitly set.
  var hasGrid: Bool {return self._grid != nil}
  /// Clears the value of `grid`. Subsequent reads from it will return its default value.
  mutating func clearGrid() {self._grid = nil}

  var seriesTypes: [UInt32] = []

  var scatterFormat: UInt32 {
    get {return _scatterFormat ?? 0}
    set {_scatterFormat = newValue}
  }
  /// Returns true if `scatterFormat` has been explicitly set.
  var hasScatterFormat: Bool {return self._scatterFormat != nil}
  /// Clears the value of `scatterFormat`. Subsequent reads from it will return its default value.
  mutating func clearScatterFormat() {self._scatterFormat = nil}

  var inlineGrid: TSCH_PreUFF_ChartGridArchive {
    get {return _inlineGrid ?? TSCH_PreUFF_ChartGridArchive()}
    set {_inlineGrid = newValue}
  }
  /// Returns true if `inlineGrid` has been explicitly set.
  var hasInlineGrid: Bool {return self._inlineGrid != nil}
  /// Clears the value of `inlineGrid`. Subsequent reads from it will return its default value.
  mutating func clearInlineGrid() {self._inlineGrid = nil}

  var multidatasetIndex: UInt32 {
    get {return _multidatasetIndex ?? 0}
    set {_multidatasetIndex = newValue}
  }
  /// Returns true if `multidatasetIndex` has been explicitly set.
  var hasMultidatasetIndex: Bool {return self._multidatasetIndex != nil}
  /// Clears the value of `multidatasetIndex`. Subsequent reads from it will return its default value.
  mutating func clearMultidatasetIndex() {self._multidatasetIndex = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _info: TSP_Reference? = nil
  fileprivate var _grid: TSP_Reference? = nil
  fileprivate var _scatterFormat: UInt32? = nil
  fileprivate var _inlineGrid: TSCH_PreUFF_ChartGridArchive? = nil
  fileprivate var _multidatasetIndex: UInt32? = nil
}

struct TSCH_PreUFF_ChartGridArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var direction: Int32 {
    get {return _direction ?? 0}
    set {_direction = newValue}
  }
  /// Returns true if `direction` has been explicitly set.
  var hasDirection: Bool {return self._direction != nil}
  /// Clears the value of `direction`. Subsequent reads from it will return its default value.
  mutating func clearDirection() {self._direction = nil}

  var rowName: [String] = []

  var columnName: [String] = []

  var valueRow: [TSCH_PreUFF_ChartGridArchive.ValueRow] = []

  var dirty: Bool {
    get {return _dirty ?? false}
    set {_dirty = newValue}
  }
  /// Returns true if `dirty` has been explicitly set.
  var hasDirty: Bool {return self._dirty != nil}
  /// Clears the value of `dirty`. Subsequent reads from it will return its default value.
  mutating func clearDirty() {self._dirty = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  struct ValueRow {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    var value: [Double] = []

    var unknownFields = SwiftProtobuf.UnknownStorage()

    init() {}
  }

  init() {}

  fileprivate var _direction: Int32? = nil
  fileprivate var _dirty: Bool? = nil
}

struct TSCH_PreUFF_ChartsNumberFormatArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var valueType: TSCH_NumberValueType {
    get {return _storage._valueType ?? .decimal}
    set {_uniqueStorage()._valueType = newValue}
  }
  /// Returns true if `valueType` has been explicitly set.
  var hasValueType: Bool {return _storage._valueType != nil}
  /// Clears the value of `valueType`. Subsequent reads from it will return its default value.
  mutating func clearValueType() {_uniqueStorage()._valueType = nil}

  var formatString: String {
    get {return _storage._formatString ?? String()}
    set {_uniqueStorage()._formatString = newValue}
  }
  /// Returns true if `formatString` has been explicitly set.
  var hasFormatString: Bool {return _storage._formatString != nil}
  /// Clears the value of `formatString`. Subsequent reads from it will return its default value.
  mutating func clearFormatString() {_uniqueStorage()._formatString = nil}

  var decimalPlaces: UInt32 {
    get {return _storage._decimalPlaces ?? 0}
    set {_uniqueStorage()._decimalPlaces = newValue}
  }
  /// Returns true if `decimalPlaces` has been explicitly set.
  var hasDecimalPlaces: Bool {return _storage._decimalPlaces != nil}
  /// Clears the value of `decimalPlaces`. Subsequent reads from it will return its default value.
  mutating func clearDecimalPlaces() {_uniqueStorage()._decimalPlaces = nil}

  var currencyCode: String {
    get {return _storage._currencyCode ?? String()}
    set {_uniqueStorage()._currencyCode = newValue}
  }
  /// Returns true if `currencyCode` has been explicitly set.
  var hasCurrencyCode: Bool {return _storage._currencyCode != nil}
  /// Clears the value of `currencyCode`. Subsequent reads from it will return its default value.
  mutating func clearCurrencyCode() {_uniqueStorage()._currencyCode = nil}

  var negativeStyle: TSCH_NegativeNumberStyle {
    get {return _storage._negativeStyle ?? .minus}
    set {_uniqueStorage()._negativeStyle = newValue}
  }
  /// Returns true if `negativeStyle` has been explicitly set.
  var hasNegativeStyle: Bool {return _storage._negativeStyle != nil}
  /// Clears the value of `negativeStyle`. Subsequent reads from it will return its default value.
  mutating func clearNegativeStyle() {_uniqueStorage()._negativeStyle = nil}

  var showThousandsSeparator: Bool {
    get {return _storage._showThousandsSeparator ?? false}
    set {_uniqueStorage()._showThousandsSeparator = newValue}
  }
  /// Returns true if `showThousandsSeparator` has been explicitly set.
  var hasShowThousandsSeparator: Bool {return _storage._showThousandsSeparator != nil}
  /// Clears the value of `showThousandsSeparator`. Subsequent reads from it will return its default value.
  mutating func clearShowThousandsSeparator() {_uniqueStorage()._showThousandsSeparator = nil}

  var fractionAccuracy: TSCH_FractionAccuracy {
    get {return _storage._fractionAccuracy ?? .conflicting}
    set {_uniqueStorage()._fractionAccuracy = newValue}
  }
  /// Returns true if `fractionAccuracy` has been explicitly set.
  var hasFractionAccuracy: Bool {return _storage._fractionAccuracy != nil}
  /// Clears the value of `fractionAccuracy`. Subsequent reads from it will return its default value.
  mutating func clearFractionAccuracy() {_uniqueStorage()._fractionAccuracy = nil}

  var suffixString: String {
    get {return _storage._suffixString ?? String()}
    set {_uniqueStorage()._suffixString = newValue}
  }
  /// Returns true if `suffixString` has been explicitly set.
  var hasSuffixString: Bool {return _storage._suffixString != nil}
  /// Clears the value of `suffixString`. Subsequent reads from it will return its default value.
  mutating func clearSuffixString() {_uniqueStorage()._suffixString = nil}

  var base: UInt32 {
    get {return _storage._base ?? 0}
    set {_uniqueStorage()._base = newValue}
  }
  /// Returns true if `base` has been explicitly set.
  var hasBase: Bool {return _storage._base != nil}
  /// Clears the value of `base`. Subsequent reads from it will return its default value.
  mutating func clearBase() {_uniqueStorage()._base = nil}

  var basePlaces: UInt32 {
    get {return _storage._basePlaces ?? 0}
    set {_uniqueStorage()._basePlaces = newValue}
  }
  /// Returns true if `basePlaces` has been explicitly set.
  var hasBasePlaces: Bool {return _storage._basePlaces != nil}
  /// Clears the value of `basePlaces`. Subsequent reads from it will return its default value.
  mutating func clearBasePlaces() {_uniqueStorage()._basePlaces = nil}

  var baseUseMinusSign: Bool {
    get {return _storage._baseUseMinusSign ?? false}
    set {_uniqueStorage()._baseUseMinusSign = newValue}
  }
  /// Returns true if `baseUseMinusSign` has been explicitly set.
  var hasBaseUseMinusSign: Bool {return _storage._baseUseMinusSign != nil}
  /// Clears the value of `baseUseMinusSign`. Subsequent reads from it will return its default value.
  mutating func clearBaseUseMinusSign() {_uniqueStorage()._baseUseMinusSign = nil}

  var useAccountingStyle: Bool {
    get {return _storage._useAccountingStyle ?? false}
    set {_uniqueStorage()._useAccountingStyle = newValue}
  }
  /// Returns true if `useAccountingStyle` has been explicitly set.
  var hasUseAccountingStyle: Bool {return _storage._useAccountingStyle != nil}
  /// Clears the value of `useAccountingStyle`. Subsequent reads from it will return its default value.
  mutating func clearUseAccountingStyle() {_uniqueStorage()._useAccountingStyle = nil}

  var isCustom: Bool {
    get {return _storage._isCustom ?? false}
    set {_uniqueStorage()._isCustom = newValue}
  }
  /// Returns true if `isCustom` has been explicitly set.
  var hasIsCustom: Bool {return _storage._isCustom != nil}
  /// Clears the value of `isCustom`. Subsequent reads from it will return its default value.
  mutating func clearIsCustom() {_uniqueStorage()._isCustom = nil}

  var scaleFactor: Double {
    get {return _storage._scaleFactor ?? 0}
    set {_uniqueStorage()._scaleFactor = newValue}
  }
  /// Returns true if `scaleFactor` has been explicitly set.
  var hasScaleFactor: Bool {return _storage._scaleFactor != nil}
  /// Clears the value of `scaleFactor`. Subsequent reads from it will return its default value.
  mutating func clearScaleFactor() {_uniqueStorage()._scaleFactor = nil}

  var interstitialStrings: [String] {
    get {return _storage._interstitialStrings}
    set {_uniqueStorage()._interstitialStrings = newValue}
  }

  var interstitialStringInsertionIndexes: TSP_IndexSet {
    get {return _storage._interstitialStringInsertionIndexes ?? TSP_IndexSet()}
    set {_uniqueStorage()._interstitialStringInsertionIndexes = newValue}
  }
  /// Returns true if `interstitialStringInsertionIndexes` has been explicitly set.
  var hasInterstitialStringInsertionIndexes: Bool {return _storage._interstitialStringInsertionIndexes != nil}
  /// Clears the value of `interstitialStringInsertionIndexes`. Subsequent reads from it will return its default value.
  mutating func clearInterstitialStringInsertionIndexes() {_uniqueStorage()._interstitialStringInsertionIndexes = nil}

  var indexFromRightOfLastDigitPlaceholder: UInt32 {
    get {return _storage._indexFromRightOfLastDigitPlaceholder ?? 0}
    set {_uniqueStorage()._indexFromRightOfLastDigitPlaceholder = newValue}
  }
  /// Returns true if `indexFromRightOfLastDigitPlaceholder` has been explicitly set.
  var hasIndexFromRightOfLastDigitPlaceholder: Bool {return _storage._indexFromRightOfLastDigitPlaceholder != nil}
  /// Clears the value of `indexFromRightOfLastDigitPlaceholder`. Subsequent reads from it will return its default value.
  mutating func clearIndexFromRightOfLastDigitPlaceholder() {_uniqueStorage()._indexFromRightOfLastDigitPlaceholder = nil}

  var isTextFormat: Bool {
    get {return _storage._isTextFormat ?? false}
    set {_uniqueStorage()._isTextFormat = newValue}
  }
  /// Returns true if `isTextFormat` has been explicitly set.
  var hasIsTextFormat: Bool {return _storage._isTextFormat != nil}
  /// Clears the value of `isTextFormat`. Subsequent reads from it will return its default value.
  mutating func clearIsTextFormat() {_uniqueStorage()._isTextFormat = nil}

  var minimumIntegerWidth: UInt32 {
    get {return _storage._minimumIntegerWidth ?? 0}
    set {_uniqueStorage()._minimumIntegerWidth = newValue}
  }
  /// Returns true if `minimumIntegerWidth` has been explicitly set.
  var hasMinimumIntegerWidth: Bool {return _storage._minimumIntegerWidth != nil}
  /// Clears the value of `minimumIntegerWidth`. Subsequent reads from it will return its default value.
  mutating func clearMinimumIntegerWidth() {_uniqueStorage()._minimumIntegerWidth = nil}

  var decimalWidth: UInt32 {
    get {return _storage._decimalWidth ?? 0}
    set {_uniqueStorage()._decimalWidth = newValue}
  }
  /// Returns true if `decimalWidth` has been explicitly set.
  var hasDecimalWidth: Bool {return _storage._decimalWidth != nil}
  /// Clears the value of `decimalWidth`. Subsequent reads from it will return its default value.
  mutating func clearDecimalWidth() {_uniqueStorage()._decimalWidth = nil}

  var numberOfNonSpaceIntegerPlaceholderDigits: UInt32 {
    get {return _storage._numberOfNonSpaceIntegerPlaceholderDigits ?? 0}
    set {_uniqueStorage()._numberOfNonSpaceIntegerPlaceholderDigits = newValue}
  }
  /// Returns true if `numberOfNonSpaceIntegerPlaceholderDigits` has been explicitly set.
  var hasNumberOfNonSpaceIntegerPlaceholderDigits: Bool {return _storage._numberOfNonSpaceIntegerPlaceholderDigits != nil}
  /// Clears the value of `numberOfNonSpaceIntegerPlaceholderDigits`. Subsequent reads from it will return its default value.
  mutating func clearNumberOfNonSpaceIntegerPlaceholderDigits() {_uniqueStorage()._numberOfNonSpaceIntegerPlaceholderDigits = nil}

  var numberOfNonSpaceDecimalPlaceholderDigits: UInt32 {
    get {return _storage._numberOfNonSpaceDecimalPlaceholderDigits ?? 0}
    set {_uniqueStorage()._numberOfNonSpaceDecimalPlaceholderDigits = newValue}
  }
  /// Returns true if `numberOfNonSpaceDecimalPlaceholderDigits` has been explicitly set.
  var hasNumberOfNonSpaceDecimalPlaceholderDigits: Bool {return _storage._numberOfNonSpaceDecimalPlaceholderDigits != nil}
  /// Clears the value of `numberOfNonSpaceDecimalPlaceholderDigits`. Subsequent reads from it will return its default value.
  mutating func clearNumberOfNonSpaceDecimalPlaceholderDigits() {_uniqueStorage()._numberOfNonSpaceDecimalPlaceholderDigits = nil}

  var formatName: String {
    get {return _storage._formatName ?? String()}
    set {_uniqueStorage()._formatName = newValue}
  }
  /// Returns true if `formatName` has been explicitly set.
  var hasFormatName: Bool {return _storage._formatName != nil}
  /// Clears the value of `formatName`. Subsequent reads from it will return its default value.
  mutating func clearFormatName() {_uniqueStorage()._formatName = nil}

  var prefixString: String {
    get {return _storage._prefixString ?? String()}
    set {_uniqueStorage()._prefixString = newValue}
  }
  /// Returns true if `prefixString` has been explicitly set.
  var hasPrefixString: Bool {return _storage._prefixString != nil}
  /// Clears the value of `prefixString`. Subsequent reads from it will return its default value.
  mutating func clearPrefixString() {_uniqueStorage()._prefixString = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

struct TSCH_PreUFF_ChartStyleArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var `super`: TSS_StyleArchive {
    get {return _storage._super ?? TSS_StyleArchive()}
    set {_uniqueStorage()._super = newValue}
  }
  /// Returns true if ``super`` has been explicitly set.
  var hasSuper: Bool {return _storage._super != nil}
  /// Clears the value of ``super``. Subsequent reads from it will return its default value.
  mutating func clearSuper() {_uniqueStorage()._super = nil}

  var tschchartinfodefaultbackgroundfill: TSD_FillArchive {
    get {return _storage._tschchartinfodefaultbackgroundfill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartinfodefaultbackgroundfill = newValue}
  }
  /// Returns true if `tschchartinfodefaultbackgroundfill` has been explicitly set.
  var hasTschchartinfodefaultbackgroundfill: Bool {return _storage._tschchartinfodefaultbackgroundfill != nil}
  /// Clears the value of `tschchartinfodefaultbackgroundfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultbackgroundfill() {_uniqueStorage()._tschchartinfodefaultbackgroundfill = nil}

  var tschchartinfodefaultbackgroundstroke: TSD_StrokeArchive {
    get {return _storage._tschchartinfodefaultbackgroundstroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartinfodefaultbackgroundstroke = newValue}
  }
  /// Returns true if `tschchartinfodefaultbackgroundstroke` has been explicitly set.
  var hasTschchartinfodefaultbackgroundstroke: Bool {return _storage._tschchartinfodefaultbackgroundstroke != nil}
  /// Clears the value of `tschchartinfodefaultbackgroundstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultbackgroundstroke() {_uniqueStorage()._tschchartinfodefaultbackgroundstroke = nil}

  var tschchartinfodefaultgridbackgroundfill: TSD_FillArchive {
    get {return _storage._tschchartinfodefaultgridbackgroundfill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartinfodefaultgridbackgroundfill = newValue}
  }
  /// Returns true if `tschchartinfodefaultgridbackgroundfill` has been explicitly set.
  var hasTschchartinfodefaultgridbackgroundfill: Bool {return _storage._tschchartinfodefaultgridbackgroundfill != nil}
  /// Clears the value of `tschchartinfodefaultgridbackgroundfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultgridbackgroundfill() {_uniqueStorage()._tschchartinfodefaultgridbackgroundfill = nil}

  var tschchartinfodefaultintersetgap: Float {
    get {return _storage._tschchartinfodefaultintersetgap ?? 0}
    set {_uniqueStorage()._tschchartinfodefaultintersetgap = newValue}
  }
  /// Returns true if `tschchartinfodefaultintersetgap` has been explicitly set.
  var hasTschchartinfodefaultintersetgap: Bool {return _storage._tschchartinfodefaultintersetgap != nil}
  /// Clears the value of `tschchartinfodefaultintersetgap`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultintersetgap() {_uniqueStorage()._tschchartinfodefaultintersetgap = nil}

  var tschchartinfodefaultinterbargap: Float {
    get {return _storage._tschchartinfodefaultinterbargap ?? 0}
    set {_uniqueStorage()._tschchartinfodefaultinterbargap = newValue}
  }
  /// Returns true if `tschchartinfodefaultinterbargap` has been explicitly set.
  var hasTschchartinfodefaultinterbargap: Bool {return _storage._tschchartinfodefaultinterbargap != nil}
  /// Clears the value of `tschchartinfodefaultinterbargap`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultinterbargap() {_uniqueStorage()._tschchartinfodefaultinterbargap = nil}

  var tschchartinfodefaultshowborder: Bool {
    get {return _storage._tschchartinfodefaultshowborder ?? false}
    set {_uniqueStorage()._tschchartinfodefaultshowborder = newValue}
  }
  /// Returns true if `tschchartinfodefaultshowborder` has been explicitly set.
  var hasTschchartinfodefaultshowborder: Bool {return _storage._tschchartinfodefaultshowborder != nil}
  /// Clears the value of `tschchartinfodefaultshowborder`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultshowborder() {_uniqueStorage()._tschchartinfodefaultshowborder = nil}

  var tschchartinfodefaultborderstroke: TSD_StrokeArchive {
    get {return _storage._tschchartinfodefaultborderstroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartinfodefaultborderstroke = newValue}
  }
  /// Returns true if `tschchartinfodefaultborderstroke` has been explicitly set.
  var hasTschchartinfodefaultborderstroke: Bool {return _storage._tschchartinfodefaultborderstroke != nil}
  /// Clears the value of `tschchartinfodefaultborderstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultborderstroke() {_uniqueStorage()._tschchartinfodefaultborderstroke = nil}

  var tschchartinfodefaulttitlecolor: TSP_Color {
    get {return _storage._tschchartinfodefaulttitlecolor ?? TSP_Color()}
    set {_uniqueStorage()._tschchartinfodefaulttitlecolor = newValue}
  }
  /// Returns true if `tschchartinfodefaulttitlecolor` has been explicitly set.
  var hasTschchartinfodefaulttitlecolor: Bool {return _storage._tschchartinfodefaulttitlecolor != nil}
  /// Clears the value of `tschchartinfodefaulttitlecolor`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaulttitlecolor() {_uniqueStorage()._tschchartinfodefaulttitlecolor = nil}

  var tschchartinfodefaultgridbackgroundopacity: Float {
    get {return _storage._tschchartinfodefaultgridbackgroundopacity ?? 0}
    set {_uniqueStorage()._tschchartinfodefaultgridbackgroundopacity = newValue}
  }
  /// Returns true if `tschchartinfodefaultgridbackgroundopacity` has been explicitly set.
  var hasTschchartinfodefaultgridbackgroundopacity: Bool {return _storage._tschchartinfodefaultgridbackgroundopacity != nil}
  /// Clears the value of `tschchartinfodefaultgridbackgroundopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultgridbackgroundopacity() {_uniqueStorage()._tschchartinfodefaultgridbackgroundopacity = nil}

  var tschchartinfodefaultcombinelayers: Bool {
    get {return _storage._tschchartinfodefaultcombinelayers ?? false}
    set {_uniqueStorage()._tschchartinfodefaultcombinelayers = newValue}
  }
  /// Returns true if `tschchartinfodefaultcombinelayers` has been explicitly set.
  var hasTschchartinfodefaultcombinelayers: Bool {return _storage._tschchartinfodefaultcombinelayers != nil}
  /// Clears the value of `tschchartinfodefaultcombinelayers`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultcombinelayers() {_uniqueStorage()._tschchartinfodefaultcombinelayers = nil}

  var tschchartinfodefaultbordershadow: TSD_ShadowArchive {
    get {return _storage._tschchartinfodefaultbordershadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartinfodefaultbordershadow = newValue}
  }
  /// Returns true if `tschchartinfodefaultbordershadow` has been explicitly set.
  var hasTschchartinfodefaultbordershadow: Bool {return _storage._tschchartinfodefaultbordershadow != nil}
  /// Clears the value of `tschchartinfodefaultbordershadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultbordershadow() {_uniqueStorage()._tschchartinfodefaultbordershadow = nil}

  var tschchartinfodefaultborderopacity: Float {
    get {return _storage._tschchartinfodefaultborderopacity ?? 0}
    set {_uniqueStorage()._tschchartinfodefaultborderopacity = newValue}
  }
  /// Returns true if `tschchartinfodefaultborderopacity` has been explicitly set.
  var hasTschchartinfodefaultborderopacity: Bool {return _storage._tschchartinfodefaultborderopacity != nil}
  /// Clears the value of `tschchartinfodefaultborderopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultborderopacity() {_uniqueStorage()._tschchartinfodefaultborderopacity = nil}

  var tschchartinfodefaulttitleparagraphstyleindex: Int32 {
    get {return _storage._tschchartinfodefaulttitleparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartinfodefaulttitleparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartinfodefaulttitleparagraphstyleindex` has been explicitly set.
  var hasTschchartinfodefaulttitleparagraphstyleindex: Bool {return _storage._tschchartinfodefaulttitleparagraphstyleindex != nil}
  /// Clears the value of `tschchartinfodefaulttitleparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaulttitleparagraphstyleindex() {_uniqueStorage()._tschchartinfodefaulttitleparagraphstyleindex = nil}

  var tschchartinfodefaultdeprecatedmasterfontfamily: String {
    get {return _storage._tschchartinfodefaultdeprecatedmasterfontfamily ?? String()}
    set {_uniqueStorage()._tschchartinfodefaultdeprecatedmasterfontfamily = newValue}
  }
  /// Returns true if `tschchartinfodefaultdeprecatedmasterfontfamily` has been explicitly set.
  var hasTschchartinfodefaultdeprecatedmasterfontfamily: Bool {return _storage._tschchartinfodefaultdeprecatedmasterfontfamily != nil}
  /// Clears the value of `tschchartinfodefaultdeprecatedmasterfontfamily`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultdeprecatedmasterfontfamily() {_uniqueStorage()._tschchartinfodefaultdeprecatedmasterfontfamily = nil}

  var tschchartinfodefaultdeprecatedmasterfontnamedsize: Int32 {
    get {return _storage._tschchartinfodefaultdeprecatedmasterfontnamedsize ?? 0}
    set {_uniqueStorage()._tschchartinfodefaultdeprecatedmasterfontnamedsize = newValue}
  }
  /// Returns true if `tschchartinfodefaultdeprecatedmasterfontnamedsize` has been explicitly set.
  var hasTschchartinfodefaultdeprecatedmasterfontnamedsize: Bool {return _storage._tschchartinfodefaultdeprecatedmasterfontnamedsize != nil}
  /// Clears the value of `tschchartinfodefaultdeprecatedmasterfontnamedsize`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultdeprecatedmasterfontnamedsize() {_uniqueStorage()._tschchartinfodefaultdeprecatedmasterfontnamedsize = nil}

  var tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex: Int32 {
    get {return _storage._tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex` has been explicitly set.
  var hasTschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex: Bool {return _storage._tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex != nil}
  /// Clears the value of `tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex() {_uniqueStorage()._tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex = nil}

  var tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex: Int32 {
    get {return _storage._tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex` has been explicitly set.
  var hasTschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex: Bool {return _storage._tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex != nil}
  /// Clears the value of `tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex() {_uniqueStorage()._tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex = nil}

  var tschchartinfodefaultdeprecatedtrendlineequationshadow: TSD_ShadowArchive {
    get {return _storage._tschchartinfodefaultdeprecatedtrendlineequationshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartinfodefaultdeprecatedtrendlineequationshadow = newValue}
  }
  /// Returns true if `tschchartinfodefaultdeprecatedtrendlineequationshadow` has been explicitly set.
  var hasTschchartinfodefaultdeprecatedtrendlineequationshadow: Bool {return _storage._tschchartinfodefaultdeprecatedtrendlineequationshadow != nil}
  /// Clears the value of `tschchartinfodefaultdeprecatedtrendlineequationshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultdeprecatedtrendlineequationshadow() {_uniqueStorage()._tschchartinfodefaultdeprecatedtrendlineequationshadow = nil}

  var tschchartinfodefaultdeprecatedtrendlinersquaredshadow: TSD_ShadowArchive {
    get {return _storage._tschchartinfodefaultdeprecatedtrendlinersquaredshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartinfodefaultdeprecatedtrendlinersquaredshadow = newValue}
  }
  /// Returns true if `tschchartinfodefaultdeprecatedtrendlinersquaredshadow` has been explicitly set.
  var hasTschchartinfodefaultdeprecatedtrendlinersquaredshadow: Bool {return _storage._tschchartinfodefaultdeprecatedtrendlinersquaredshadow != nil}
  /// Clears the value of `tschchartinfodefaultdeprecatedtrendlinersquaredshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultdeprecatedtrendlinersquaredshadow() {_uniqueStorage()._tschchartinfodefaultdeprecatedtrendlinersquaredshadow = nil}

  var tschchartinfodefaultdeprecatedtrendlineequationopacity: Float {
    get {return _storage._tschchartinfodefaultdeprecatedtrendlineequationopacity ?? 0}
    set {_uniqueStorage()._tschchartinfodefaultdeprecatedtrendlineequationopacity = newValue}
  }
  /// Returns true if `tschchartinfodefaultdeprecatedtrendlineequationopacity` has been explicitly set.
  var hasTschchartinfodefaultdeprecatedtrendlineequationopacity: Bool {return _storage._tschchartinfodefaultdeprecatedtrendlineequationopacity != nil}
  /// Clears the value of `tschchartinfodefaultdeprecatedtrendlineequationopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultdeprecatedtrendlineequationopacity() {_uniqueStorage()._tschchartinfodefaultdeprecatedtrendlineequationopacity = nil}

  var tschchartinfodefaultdeprecatedtrendlinersquaredopacity: Float {
    get {return _storage._tschchartinfodefaultdeprecatedtrendlinersquaredopacity ?? 0}
    set {_uniqueStorage()._tschchartinfodefaultdeprecatedtrendlinersquaredopacity = newValue}
  }
  /// Returns true if `tschchartinfodefaultdeprecatedtrendlinersquaredopacity` has been explicitly set.
  var hasTschchartinfodefaultdeprecatedtrendlinersquaredopacity: Bool {return _storage._tschchartinfodefaultdeprecatedtrendlinersquaredopacity != nil}
  /// Clears the value of `tschchartinfodefaultdeprecatedtrendlinersquaredopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultdeprecatedtrendlinersquaredopacity() {_uniqueStorage()._tschchartinfodefaultdeprecatedtrendlinersquaredopacity = nil}

  var tschchartinfobardeprecated3Dshadow: TSD_ShadowArchive {
    get {return _storage._tschchartinfobardeprecated3Dshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartinfobardeprecated3Dshadow = newValue}
  }
  /// Returns true if `tschchartinfobardeprecated3Dshadow` has been explicitly set.
  var hasTschchartinfobardeprecated3Dshadow: Bool {return _storage._tschchartinfobardeprecated3Dshadow != nil}
  /// Clears the value of `tschchartinfobardeprecated3Dshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfobardeprecated3Dshadow() {_uniqueStorage()._tschchartinfobardeprecated3Dshadow = nil}

  var tschchartinfocolumndeprecated3Dshadow: TSD_ShadowArchive {
    get {return _storage._tschchartinfocolumndeprecated3Dshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartinfocolumndeprecated3Dshadow = newValue}
  }
  /// Returns true if `tschchartinfocolumndeprecated3Dshadow` has been explicitly set.
  var hasTschchartinfocolumndeprecated3Dshadow: Bool {return _storage._tschchartinfocolumndeprecated3Dshadow != nil}
  /// Clears the value of `tschchartinfocolumndeprecated3Dshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfocolumndeprecated3Dshadow() {_uniqueStorage()._tschchartinfocolumndeprecated3Dshadow = nil}

  var tschchartinfolinedeprecated3Dshadow: TSD_ShadowArchive {
    get {return _storage._tschchartinfolinedeprecated3Dshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartinfolinedeprecated3Dshadow = newValue}
  }
  /// Returns true if `tschchartinfolinedeprecated3Dshadow` has been explicitly set.
  var hasTschchartinfolinedeprecated3Dshadow: Bool {return _storage._tschchartinfolinedeprecated3Dshadow != nil}
  /// Clears the value of `tschchartinfolinedeprecated3Dshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfolinedeprecated3Dshadow() {_uniqueStorage()._tschchartinfolinedeprecated3Dshadow = nil}

  var tschchartinfoareadeprecated3Dshadow: TSD_ShadowArchive {
    get {return _storage._tschchartinfoareadeprecated3Dshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartinfoareadeprecated3Dshadow = newValue}
  }
  /// Returns true if `tschchartinfoareadeprecated3Dshadow` has been explicitly set.
  var hasTschchartinfoareadeprecated3Dshadow: Bool {return _storage._tschchartinfoareadeprecated3Dshadow != nil}
  /// Clears the value of `tschchartinfoareadeprecated3Dshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfoareadeprecated3Dshadow() {_uniqueStorage()._tschchartinfoareadeprecated3Dshadow = nil}

  var tschchartinfopiedeprecated3Dshadow: TSD_ShadowArchive {
    get {return _storage._tschchartinfopiedeprecated3Dshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartinfopiedeprecated3Dshadow = newValue}
  }
  /// Returns true if `tschchartinfopiedeprecated3Dshadow` has been explicitly set.
  var hasTschchartinfopiedeprecated3Dshadow: Bool {return _storage._tschchartinfopiedeprecated3Dshadow != nil}
  /// Clears the value of `tschchartinfopiedeprecated3Dshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfopiedeprecated3Dshadow() {_uniqueStorage()._tschchartinfopiedeprecated3Dshadow = nil}

  var tschchartinfodefault3Dlightingpackage: TSCH_Chart3DLightingPackageArchive {
    get {return _storage._tschchartinfodefault3Dlightingpackage ?? TSCH_Chart3DLightingPackageArchive()}
    set {_uniqueStorage()._tschchartinfodefault3Dlightingpackage = newValue}
  }
  /// Returns true if `tschchartinfodefault3Dlightingpackage` has been explicitly set.
  var hasTschchartinfodefault3Dlightingpackage: Bool {return _storage._tschchartinfodefault3Dlightingpackage != nil}
  /// Clears the value of `tschchartinfodefault3Dlightingpackage`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefault3Dlightingpackage() {_uniqueStorage()._tschchartinfodefault3Dlightingpackage = nil}

  var tschchartinfocolumn3Dlightingpackage: TSCH_Chart3DLightingPackageArchive {
    get {return _storage._tschchartinfocolumn3Dlightingpackage ?? TSCH_Chart3DLightingPackageArchive()}
    set {_uniqueStorage()._tschchartinfocolumn3Dlightingpackage = newValue}
  }
  /// Returns true if `tschchartinfocolumn3Dlightingpackage` has been explicitly set.
  var hasTschchartinfocolumn3Dlightingpackage: Bool {return _storage._tschchartinfocolumn3Dlightingpackage != nil}
  /// Clears the value of `tschchartinfocolumn3Dlightingpackage`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfocolumn3Dlightingpackage() {_uniqueStorage()._tschchartinfocolumn3Dlightingpackage = nil}

  var tschchartinfobar3Dlightingpackage: TSCH_Chart3DLightingPackageArchive {
    get {return _storage._tschchartinfobar3Dlightingpackage ?? TSCH_Chart3DLightingPackageArchive()}
    set {_uniqueStorage()._tschchartinfobar3Dlightingpackage = newValue}
  }
  /// Returns true if `tschchartinfobar3Dlightingpackage` has been explicitly set.
  var hasTschchartinfobar3Dlightingpackage: Bool {return _storage._tschchartinfobar3Dlightingpackage != nil}
  /// Clears the value of `tschchartinfobar3Dlightingpackage`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfobar3Dlightingpackage() {_uniqueStorage()._tschchartinfobar3Dlightingpackage = nil}

  var tschchartinfoline3Dlightingpackage: TSCH_Chart3DLightingPackageArchive {
    get {return _storage._tschchartinfoline3Dlightingpackage ?? TSCH_Chart3DLightingPackageArchive()}
    set {_uniqueStorage()._tschchartinfoline3Dlightingpackage = newValue}
  }
  /// Returns true if `tschchartinfoline3Dlightingpackage` has been explicitly set.
  var hasTschchartinfoline3Dlightingpackage: Bool {return _storage._tschchartinfoline3Dlightingpackage != nil}
  /// Clears the value of `tschchartinfoline3Dlightingpackage`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfoline3Dlightingpackage() {_uniqueStorage()._tschchartinfoline3Dlightingpackage = nil}

  var tschchartinfoarea3Dlightingpackage: TSCH_Chart3DLightingPackageArchive {
    get {return _storage._tschchartinfoarea3Dlightingpackage ?? TSCH_Chart3DLightingPackageArchive()}
    set {_uniqueStorage()._tschchartinfoarea3Dlightingpackage = newValue}
  }
  /// Returns true if `tschchartinfoarea3Dlightingpackage` has been explicitly set.
  var hasTschchartinfoarea3Dlightingpackage: Bool {return _storage._tschchartinfoarea3Dlightingpackage != nil}
  /// Clears the value of `tschchartinfoarea3Dlightingpackage`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfoarea3Dlightingpackage() {_uniqueStorage()._tschchartinfoarea3Dlightingpackage = nil}

  var tschchartinfopie3Dlightingpackage: TSCH_Chart3DLightingPackageArchive {
    get {return _storage._tschchartinfopie3Dlightingpackage ?? TSCH_Chart3DLightingPackageArchive()}
    set {_uniqueStorage()._tschchartinfopie3Dlightingpackage = newValue}
  }
  /// Returns true if `tschchartinfopie3Dlightingpackage` has been explicitly set.
  var hasTschchartinfopie3Dlightingpackage: Bool {return _storage._tschchartinfopie3Dlightingpackage != nil}
  /// Clears the value of `tschchartinfopie3Dlightingpackage`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfopie3Dlightingpackage() {_uniqueStorage()._tschchartinfopie3Dlightingpackage = nil}

  var tschchartinfodefaultdeprecated3Dbeveledges: Bool {
    get {return _storage._tschchartinfodefaultdeprecated3Dbeveledges ?? false}
    set {_uniqueStorage()._tschchartinfodefaultdeprecated3Dbeveledges = newValue}
  }
  /// Returns true if `tschchartinfodefaultdeprecated3Dbeveledges` has been explicitly set.
  var hasTschchartinfodefaultdeprecated3Dbeveledges: Bool {return _storage._tschchartinfodefaultdeprecated3Dbeveledges != nil}
  /// Clears the value of `tschchartinfodefaultdeprecated3Dbeveledges`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultdeprecated3Dbeveledges() {_uniqueStorage()._tschchartinfodefaultdeprecated3Dbeveledges = nil}

  var tschchartinfopiedeprecated3Dbeveledges: Bool {
    get {return _storage._tschchartinfopiedeprecated3Dbeveledges ?? false}
    set {_uniqueStorage()._tschchartinfopiedeprecated3Dbeveledges = newValue}
  }
  /// Returns true if `tschchartinfopiedeprecated3Dbeveledges` has been explicitly set.
  var hasTschchartinfopiedeprecated3Dbeveledges: Bool {return _storage._tschchartinfopiedeprecated3Dbeveledges != nil}
  /// Clears the value of `tschchartinfopiedeprecated3Dbeveledges`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfopiedeprecated3Dbeveledges() {_uniqueStorage()._tschchartinfopiedeprecated3Dbeveledges = nil}

  var tschchartinfobardeprecated3Dbeveledges: Bool {
    get {return _storage._tschchartinfobardeprecated3Dbeveledges ?? false}
    set {_uniqueStorage()._tschchartinfobardeprecated3Dbeveledges = newValue}
  }
  /// Returns true if `tschchartinfobardeprecated3Dbeveledges` has been explicitly set.
  var hasTschchartinfobardeprecated3Dbeveledges: Bool {return _storage._tschchartinfobardeprecated3Dbeveledges != nil}
  /// Clears the value of `tschchartinfobardeprecated3Dbeveledges`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfobardeprecated3Dbeveledges() {_uniqueStorage()._tschchartinfobardeprecated3Dbeveledges = nil}

  var tschchartinfocolumndeprecated3Dbeveledges: Bool {
    get {return _storage._tschchartinfocolumndeprecated3Dbeveledges ?? false}
    set {_uniqueStorage()._tschchartinfocolumndeprecated3Dbeveledges = newValue}
  }
  /// Returns true if `tschchartinfocolumndeprecated3Dbeveledges` has been explicitly set.
  var hasTschchartinfocolumndeprecated3Dbeveledges: Bool {return _storage._tschchartinfocolumndeprecated3Dbeveledges != nil}
  /// Clears the value of `tschchartinfocolumndeprecated3Dbeveledges`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfocolumndeprecated3Dbeveledges() {_uniqueStorage()._tschchartinfocolumndeprecated3Dbeveledges = nil}

  var tschchartinfodefaultdeprecated3Dbarshape: Int32 {
    get {return _storage._tschchartinfodefaultdeprecated3Dbarshape ?? 0}
    set {_uniqueStorage()._tschchartinfodefaultdeprecated3Dbarshape = newValue}
  }
  /// Returns true if `tschchartinfodefaultdeprecated3Dbarshape` has been explicitly set.
  var hasTschchartinfodefaultdeprecated3Dbarshape: Bool {return _storage._tschchartinfodefaultdeprecated3Dbarshape != nil}
  /// Clears the value of `tschchartinfodefaultdeprecated3Dbarshape`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultdeprecated3Dbarshape() {_uniqueStorage()._tschchartinfodefaultdeprecated3Dbarshape = nil}

  var tschchartinfodefault3Dchartopacity: Float {
    get {return _storage._tschchartinfodefault3Dchartopacity ?? 0}
    set {_uniqueStorage()._tschchartinfodefault3Dchartopacity = newValue}
  }
  /// Returns true if `tschchartinfodefault3Dchartopacity` has been explicitly set.
  var hasTschchartinfodefault3Dchartopacity: Bool {return _storage._tschchartinfodefault3Dchartopacity != nil}
  /// Clears the value of `tschchartinfodefault3Dchartopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefault3Dchartopacity() {_uniqueStorage()._tschchartinfodefault3Dchartopacity = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

struct TSCH_PreUFF_ChartNonStyleArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var `super`: TSS_StyleArchive {
    get {return _storage._super ?? TSS_StyleArchive()}
    set {_uniqueStorage()._super = newValue}
  }
  /// Returns true if ``super`` has been explicitly set.
  var hasSuper: Bool {return _storage._super != nil}
  /// Clears the value of ``super``. Subsequent reads from it will return its default value.
  mutating func clearSuper() {_uniqueStorage()._super = nil}

  var tschchartinfodefaulttitle: String {
    get {return _storage._tschchartinfodefaulttitle ?? String()}
    set {_uniqueStorage()._tschchartinfodefaulttitle = newValue}
  }
  /// Returns true if `tschchartinfodefaulttitle` has been explicitly set.
  var hasTschchartinfodefaulttitle: Bool {return _storage._tschchartinfodefaulttitle != nil}
  /// Clears the value of `tschchartinfodefaulttitle`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaulttitle() {_uniqueStorage()._tschchartinfodefaulttitle = nil}

  var tschchartinfodefaultshowlegend: Bool {
    get {return _storage._tschchartinfodefaultshowlegend ?? false}
    set {_uniqueStorage()._tschchartinfodefaultshowlegend = newValue}
  }
  /// Returns true if `tschchartinfodefaultshowlegend` has been explicitly set.
  var hasTschchartinfodefaultshowlegend: Bool {return _storage._tschchartinfodefaultshowlegend != nil}
  /// Clears the value of `tschchartinfodefaultshowlegend`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultshowlegend() {_uniqueStorage()._tschchartinfodefaultshowlegend = nil}

  var tschchartinfodefaultpiestartangle: Float {
    get {return _storage._tschchartinfodefaultpiestartangle ?? 0}
    set {_uniqueStorage()._tschchartinfodefaultpiestartangle = newValue}
  }
  /// Returns true if `tschchartinfodefaultpiestartangle` has been explicitly set.
  var hasTschchartinfodefaultpiestartangle: Bool {return _storage._tschchartinfodefaultpiestartangle != nil}
  /// Clears the value of `tschchartinfodefaultpiestartangle`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultpiestartangle() {_uniqueStorage()._tschchartinfodefaultpiestartangle = nil}

  var tschchartinfodefaultshowtitle: Bool {
    get {return _storage._tschchartinfodefaultshowtitle ?? false}
    set {_uniqueStorage()._tschchartinfodefaultshowtitle = newValue}
  }
  /// Returns true if `tschchartinfodefaultshowtitle` has been explicitly set.
  var hasTschchartinfodefaultshowtitle: Bool {return _storage._tschchartinfodefaultshowtitle != nil}
  /// Clears the value of `tschchartinfodefaultshowtitle`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultshowtitle() {_uniqueStorage()._tschchartinfodefaultshowtitle = nil}

  var tschchartinfodefaultdeprecatedagainmasterfontnamedsize: Int32 {
    get {return _storage._tschchartinfodefaultdeprecatedagainmasterfontnamedsize ?? 0}
    set {_uniqueStorage()._tschchartinfodefaultdeprecatedagainmasterfontnamedsize = newValue}
  }
  /// Returns true if `tschchartinfodefaultdeprecatedagainmasterfontnamedsize` has been explicitly set.
  var hasTschchartinfodefaultdeprecatedagainmasterfontnamedsize: Bool {return _storage._tschchartinfodefaultdeprecatedagainmasterfontnamedsize != nil}
  /// Clears the value of `tschchartinfodefaultdeprecatedagainmasterfontnamedsize`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultdeprecatedagainmasterfontnamedsize() {_uniqueStorage()._tschchartinfodefaultdeprecatedagainmasterfontnamedsize = nil}

  var tschchartinfodefault3Drotation: TSCH_Chart3DVectorArchive {
    get {return _storage._tschchartinfodefault3Drotation ?? TSCH_Chart3DVectorArchive()}
    set {_uniqueStorage()._tschchartinfodefault3Drotation = newValue}
  }
  /// Returns true if `tschchartinfodefault3Drotation` has been explicitly set.
  var hasTschchartinfodefault3Drotation: Bool {return _storage._tschchartinfodefault3Drotation != nil}
  /// Clears the value of `tschchartinfodefault3Drotation`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefault3Drotation() {_uniqueStorage()._tschchartinfodefault3Drotation = nil}

  var tschchartinfodefault3Dscale: TSCH_Chart3DVectorArchive {
    get {return _storage._tschchartinfodefault3Dscale ?? TSCH_Chart3DVectorArchive()}
    set {_uniqueStorage()._tschchartinfodefault3Dscale = newValue}
  }
  /// Returns true if `tschchartinfodefault3Dscale` has been explicitly set.
  var hasTschchartinfodefault3Dscale: Bool {return _storage._tschchartinfodefault3Dscale != nil}
  /// Clears the value of `tschchartinfodefault3Dscale`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefault3Dscale() {_uniqueStorage()._tschchartinfodefault3Dscale = nil}

  var tschchartinfocolumn3Dscale: TSCH_Chart3DVectorArchive {
    get {return _storage._tschchartinfocolumn3Dscale ?? TSCH_Chart3DVectorArchive()}
    set {_uniqueStorage()._tschchartinfocolumn3Dscale = newValue}
  }
  /// Returns true if `tschchartinfocolumn3Dscale` has been explicitly set.
  var hasTschchartinfocolumn3Dscale: Bool {return _storage._tschchartinfocolumn3Dscale != nil}
  /// Clears the value of `tschchartinfocolumn3Dscale`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfocolumn3Dscale() {_uniqueStorage()._tschchartinfocolumn3Dscale = nil}

  var tschchartinfobar3Dscale: TSCH_Chart3DVectorArchive {
    get {return _storage._tschchartinfobar3Dscale ?? TSCH_Chart3DVectorArchive()}
    set {_uniqueStorage()._tschchartinfobar3Dscale = newValue}
  }
  /// Returns true if `tschchartinfobar3Dscale` has been explicitly set.
  var hasTschchartinfobar3Dscale: Bool {return _storage._tschchartinfobar3Dscale != nil}
  /// Clears the value of `tschchartinfobar3Dscale`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfobar3Dscale() {_uniqueStorage()._tschchartinfobar3Dscale = nil}

  var tschchartinfoline3Dscale: TSCH_Chart3DVectorArchive {
    get {return _storage._tschchartinfoline3Dscale ?? TSCH_Chart3DVectorArchive()}
    set {_uniqueStorage()._tschchartinfoline3Dscale = newValue}
  }
  /// Returns true if `tschchartinfoline3Dscale` has been explicitly set.
  var hasTschchartinfoline3Dscale: Bool {return _storage._tschchartinfoline3Dscale != nil}
  /// Clears the value of `tschchartinfoline3Dscale`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfoline3Dscale() {_uniqueStorage()._tschchartinfoline3Dscale = nil}

  var tschchartinfoarea3Dscale: TSCH_Chart3DVectorArchive {
    get {return _storage._tschchartinfoarea3Dscale ?? TSCH_Chart3DVectorArchive()}
    set {_uniqueStorage()._tschchartinfoarea3Dscale = newValue}
  }
  /// Returns true if `tschchartinfoarea3Dscale` has been explicitly set.
  var hasTschchartinfoarea3Dscale: Bool {return _storage._tschchartinfoarea3Dscale != nil}
  /// Clears the value of `tschchartinfoarea3Dscale`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfoarea3Dscale() {_uniqueStorage()._tschchartinfoarea3Dscale = nil}

  var tschchartinfopie3Dscale: TSCH_Chart3DVectorArchive {
    get {return _storage._tschchartinfopie3Dscale ?? TSCH_Chart3DVectorArchive()}
    set {_uniqueStorage()._tschchartinfopie3Dscale = newValue}
  }
  /// Returns true if `tschchartinfopie3Dscale` has been explicitly set.
  var hasTschchartinfopie3Dscale: Bool {return _storage._tschchartinfopie3Dscale != nil}
  /// Clears the value of `tschchartinfopie3Dscale`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfopie3Dscale() {_uniqueStorage()._tschchartinfopie3Dscale = nil}

  var tschchartinfodefault3Dviewport: TSCH_Chart3DVectorArchive {
    get {return _storage._tschchartinfodefault3Dviewport ?? TSCH_Chart3DVectorArchive()}
    set {_uniqueStorage()._tschchartinfodefault3Dviewport = newValue}
  }
  /// Returns true if `tschchartinfodefault3Dviewport` has been explicitly set.
  var hasTschchartinfodefault3Dviewport: Bool {return _storage._tschchartinfodefault3Dviewport != nil}
  /// Clears the value of `tschchartinfodefault3Dviewport`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefault3Dviewport() {_uniqueStorage()._tschchartinfodefault3Dviewport = nil}

  var tschchartinfodefaultdeprecated3Dlightingpackage: TSCH_Chart3DLightingPackageArchive {
    get {return _storage._tschchartinfodefaultdeprecated3Dlightingpackage ?? TSCH_Chart3DLightingPackageArchive()}
    set {_uniqueStorage()._tschchartinfodefaultdeprecated3Dlightingpackage = newValue}
  }
  /// Returns true if `tschchartinfodefaultdeprecated3Dlightingpackage` has been explicitly set.
  var hasTschchartinfodefaultdeprecated3Dlightingpackage: Bool {return _storage._tschchartinfodefaultdeprecated3Dlightingpackage != nil}
  /// Clears the value of `tschchartinfodefaultdeprecated3Dlightingpackage`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultdeprecated3Dlightingpackage() {_uniqueStorage()._tschchartinfodefaultdeprecated3Dlightingpackage = nil}

  var tschchartinfocolumndeprecated3Dlightingpackage: TSCH_Chart3DLightingPackageArchive {
    get {return _storage._tschchartinfocolumndeprecated3Dlightingpackage ?? TSCH_Chart3DLightingPackageArchive()}
    set {_uniqueStorage()._tschchartinfocolumndeprecated3Dlightingpackage = newValue}
  }
  /// Returns true if `tschchartinfocolumndeprecated3Dlightingpackage` has been explicitly set.
  var hasTschchartinfocolumndeprecated3Dlightingpackage: Bool {return _storage._tschchartinfocolumndeprecated3Dlightingpackage != nil}
  /// Clears the value of `tschchartinfocolumndeprecated3Dlightingpackage`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfocolumndeprecated3Dlightingpackage() {_uniqueStorage()._tschchartinfocolumndeprecated3Dlightingpackage = nil}

  var tschchartinfobardeprecated3Dlightingpackage: TSCH_Chart3DLightingPackageArchive {
    get {return _storage._tschchartinfobardeprecated3Dlightingpackage ?? TSCH_Chart3DLightingPackageArchive()}
    set {_uniqueStorage()._tschchartinfobardeprecated3Dlightingpackage = newValue}
  }
  /// Returns true if `tschchartinfobardeprecated3Dlightingpackage` has been explicitly set.
  var hasTschchartinfobardeprecated3Dlightingpackage: Bool {return _storage._tschchartinfobardeprecated3Dlightingpackage != nil}
  /// Clears the value of `tschchartinfobardeprecated3Dlightingpackage`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfobardeprecated3Dlightingpackage() {_uniqueStorage()._tschchartinfobardeprecated3Dlightingpackage = nil}

  var tschchartinfolinedeprecated3Dlightingpackage: TSCH_Chart3DLightingPackageArchive {
    get {return _storage._tschchartinfolinedeprecated3Dlightingpackage ?? TSCH_Chart3DLightingPackageArchive()}
    set {_uniqueStorage()._tschchartinfolinedeprecated3Dlightingpackage = newValue}
  }
  /// Returns true if `tschchartinfolinedeprecated3Dlightingpackage` has been explicitly set.
  var hasTschchartinfolinedeprecated3Dlightingpackage: Bool {return _storage._tschchartinfolinedeprecated3Dlightingpackage != nil}
  /// Clears the value of `tschchartinfolinedeprecated3Dlightingpackage`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfolinedeprecated3Dlightingpackage() {_uniqueStorage()._tschchartinfolinedeprecated3Dlightingpackage = nil}

  var tschchartinfoareadeprecated3Dlightingpackage: TSCH_Chart3DLightingPackageArchive {
    get {return _storage._tschchartinfoareadeprecated3Dlightingpackage ?? TSCH_Chart3DLightingPackageArchive()}
    set {_uniqueStorage()._tschchartinfoareadeprecated3Dlightingpackage = newValue}
  }
  /// Returns true if `tschchartinfoareadeprecated3Dlightingpackage` has been explicitly set.
  var hasTschchartinfoareadeprecated3Dlightingpackage: Bool {return _storage._tschchartinfoareadeprecated3Dlightingpackage != nil}
  /// Clears the value of `tschchartinfoareadeprecated3Dlightingpackage`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfoareadeprecated3Dlightingpackage() {_uniqueStorage()._tschchartinfoareadeprecated3Dlightingpackage = nil}

  var tschchartinfopiedeprecated3Dlightingpackage: TSCH_Chart3DLightingPackageArchive {
    get {return _storage._tschchartinfopiedeprecated3Dlightingpackage ?? TSCH_Chart3DLightingPackageArchive()}
    set {_uniqueStorage()._tschchartinfopiedeprecated3Dlightingpackage = newValue}
  }
  /// Returns true if `tschchartinfopiedeprecated3Dlightingpackage` has been explicitly set.
  var hasTschchartinfopiedeprecated3Dlightingpackage: Bool {return _storage._tschchartinfopiedeprecated3Dlightingpackage != nil}
  /// Clears the value of `tschchartinfopiedeprecated3Dlightingpackage`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfopiedeprecated3Dlightingpackage() {_uniqueStorage()._tschchartinfopiedeprecated3Dlightingpackage = nil}

  var tschchartinfodefaultskiphiddendata: Bool {
    get {return _storage._tschchartinfodefaultskiphiddendata ?? false}
    set {_uniqueStorage()._tschchartinfodefaultskiphiddendata = newValue}
  }
  /// Returns true if `tschchartinfodefaultskiphiddendata` has been explicitly set.
  var hasTschchartinfodefaultskiphiddendata: Bool {return _storage._tschchartinfodefaultskiphiddendata != nil}
  /// Clears the value of `tschchartinfodefaultskiphiddendata`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefaultskiphiddendata() {_uniqueStorage()._tschchartinfodefaultskiphiddendata = nil}

  var tschchartinfodefault3Dbeveledges: Bool {
    get {return _storage._tschchartinfodefault3Dbeveledges ?? false}
    set {_uniqueStorage()._tschchartinfodefault3Dbeveledges = newValue}
  }
  /// Returns true if `tschchartinfodefault3Dbeveledges` has been explicitly set.
  var hasTschchartinfodefault3Dbeveledges: Bool {return _storage._tschchartinfodefault3Dbeveledges != nil}
  /// Clears the value of `tschchartinfodefault3Dbeveledges`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefault3Dbeveledges() {_uniqueStorage()._tschchartinfodefault3Dbeveledges = nil}

  var tschchartinfodefault3Dbarshape: Int32 {
    get {return _storage._tschchartinfodefault3Dbarshape ?? 0}
    set {_uniqueStorage()._tschchartinfodefault3Dbarshape = newValue}
  }
  /// Returns true if `tschchartinfodefault3Dbarshape` has been explicitly set.
  var hasTschchartinfodefault3Dbarshape: Bool {return _storage._tschchartinfodefault3Dbarshape != nil}
  /// Clears the value of `tschchartinfodefault3Dbarshape`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefault3Dbarshape() {_uniqueStorage()._tschchartinfodefault3Dbarshape = nil}

  var tschchartinfodefault3Dintersetdepthgap: Float {
    get {return _storage._tschchartinfodefault3Dintersetdepthgap ?? 0}
    set {_uniqueStorage()._tschchartinfodefault3Dintersetdepthgap = newValue}
  }
  /// Returns true if `tschchartinfodefault3Dintersetdepthgap` has been explicitly set.
  var hasTschchartinfodefault3Dintersetdepthgap: Bool {return _storage._tschchartinfodefault3Dintersetdepthgap != nil}
  /// Clears the value of `tschchartinfodefault3Dintersetdepthgap`. Subsequent reads from it will return its default value.
  mutating func clearTschchartinfodefault3Dintersetdepthgap() {_uniqueStorage()._tschchartinfodefault3Dintersetdepthgap = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

struct TSCH_PreUFF_LegendStyleArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var `super`: TSS_StyleArchive {
    get {return _super ?? TSS_StyleArchive()}
    set {_super = newValue}
  }
  /// Returns true if ``super`` has been explicitly set.
  var hasSuper: Bool {return self._super != nil}
  /// Clears the value of ``super``. Subsequent reads from it will return its default value.
  mutating func clearSuper() {self._super = nil}

  var tschlegendmodeldefaultfill: TSD_FillArchive {
    get {return _tschlegendmodeldefaultfill ?? TSD_FillArchive()}
    set {_tschlegendmodeldefaultfill = newValue}
  }
  /// Returns true if `tschlegendmodeldefaultfill` has been explicitly set.
  var hasTschlegendmodeldefaultfill: Bool {return self._tschlegendmodeldefaultfill != nil}
  /// Clears the value of `tschlegendmodeldefaultfill`. Subsequent reads from it will return its default value.
  mutating func clearTschlegendmodeldefaultfill() {self._tschlegendmodeldefaultfill = nil}

  var tschlegendmodeldefaultstroke: TSD_StrokeArchive {
    get {return _tschlegendmodeldefaultstroke ?? TSD_StrokeArchive()}
    set {_tschlegendmodeldefaultstroke = newValue}
  }
  /// Returns true if `tschlegendmodeldefaultstroke` has been explicitly set.
  var hasTschlegendmodeldefaultstroke: Bool {return self._tschlegendmodeldefaultstroke != nil}
  /// Clears the value of `tschlegendmodeldefaultstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschlegendmodeldefaultstroke() {self._tschlegendmodeldefaultstroke = nil}

  var tschlegendmodeldefaultshadow: TSD_ShadowArchive {
    get {return _tschlegendmodeldefaultshadow ?? TSD_ShadowArchive()}
    set {_tschlegendmodeldefaultshadow = newValue}
  }
  /// Returns true if `tschlegendmodeldefaultshadow` has been explicitly set.
  var hasTschlegendmodeldefaultshadow: Bool {return self._tschlegendmodeldefaultshadow != nil}
  /// Clears the value of `tschlegendmodeldefaultshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschlegendmodeldefaultshadow() {self._tschlegendmodeldefaultshadow = nil}

  var tschlegendmodeldefaultopacity: Float {
    get {return _tschlegendmodeldefaultopacity ?? 0}
    set {_tschlegendmodeldefaultopacity = newValue}
  }
  /// Returns true if `tschlegendmodeldefaultopacity` has been explicitly set.
  var hasTschlegendmodeldefaultopacity: Bool {return self._tschlegendmodeldefaultopacity != nil}
  /// Clears the value of `tschlegendmodeldefaultopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschlegendmodeldefaultopacity() {self._tschlegendmodeldefaultopacity = nil}

  var tschlegendmodeldefaultlabelparagraphstyleindex: Int32 {
    get {return _tschlegendmodeldefaultlabelparagraphstyleindex ?? 0}
    set {_tschlegendmodeldefaultlabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschlegendmodeldefaultlabelparagraphstyleindex` has been explicitly set.
  var hasTschlegendmodeldefaultlabelparagraphstyleindex: Bool {return self._tschlegendmodeldefaultlabelparagraphstyleindex != nil}
  /// Clears the value of `tschlegendmodeldefaultlabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschlegendmodeldefaultlabelparagraphstyleindex() {self._tschlegendmodeldefaultlabelparagraphstyleindex = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _super: TSS_StyleArchive? = nil
  fileprivate var _tschlegendmodeldefaultfill: TSD_FillArchive? = nil
  fileprivate var _tschlegendmodeldefaultstroke: TSD_StrokeArchive? = nil
  fileprivate var _tschlegendmodeldefaultshadow: TSD_ShadowArchive? = nil
  fileprivate var _tschlegendmodeldefaultopacity: Float? = nil
  fileprivate var _tschlegendmodeldefaultlabelparagraphstyleindex: Int32? = nil
}

struct TSCH_PreUFF_LegendNonStyleArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var `super`: TSS_StyleArchive {
    get {return _super ?? TSS_StyleArchive()}
    set {_super = newValue}
  }
  /// Returns true if ``super`` has been explicitly set.
  var hasSuper: Bool {return self._super != nil}
  /// Clears the value of ``super``. Subsequent reads from it will return its default value.
  mutating func clearSuper() {self._super = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _super: TSS_StyleArchive? = nil
}

struct TSCH_PreUFF_ChartAxisStyleArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var `super`: TSS_StyleArchive {
    get {return _storage._super ?? TSS_StyleArchive()}
    set {_uniqueStorage()._super = newValue}
  }
  /// Returns true if ``super`` has been explicitly set.
  var hasSuper: Bool {return _storage._super != nil}
  /// Clears the value of ``super``. Subsequent reads from it will return its default value.
  mutating func clearSuper() {_uniqueStorage()._super = nil}

  var tschchartaxisvalueshowmajorgridlines: Bool {
    get {return _storage._tschchartaxisvalueshowmajorgridlines ?? false}
    set {_uniqueStorage()._tschchartaxisvalueshowmajorgridlines = newValue}
  }
  /// Returns true if `tschchartaxisvalueshowmajorgridlines` has been explicitly set.
  var hasTschchartaxisvalueshowmajorgridlines: Bool {return _storage._tschchartaxisvalueshowmajorgridlines != nil}
  /// Clears the value of `tschchartaxisvalueshowmajorgridlines`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvalueshowmajorgridlines() {_uniqueStorage()._tschchartaxisvalueshowmajorgridlines = nil}

  var tschchartaxisvalueshowminorgridlines: Bool {
    get {return _storage._tschchartaxisvalueshowminorgridlines ?? false}
    set {_uniqueStorage()._tschchartaxisvalueshowminorgridlines = newValue}
  }
  /// Returns true if `tschchartaxisvalueshowminorgridlines` has been explicitly set.
  var hasTschchartaxisvalueshowminorgridlines: Bool {return _storage._tschchartaxisvalueshowminorgridlines != nil}
  /// Clears the value of `tschchartaxisvalueshowminorgridlines`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvalueshowminorgridlines() {_uniqueStorage()._tschchartaxisvalueshowminorgridlines = nil}

  var tschchartaxisvaluemajorgridlinestroke: TSD_StrokeArchive {
    get {return _storage._tschchartaxisvaluemajorgridlinestroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartaxisvaluemajorgridlinestroke = newValue}
  }
  /// Returns true if `tschchartaxisvaluemajorgridlinestroke` has been explicitly set.
  var hasTschchartaxisvaluemajorgridlinestroke: Bool {return _storage._tschchartaxisvaluemajorgridlinestroke != nil}
  /// Clears the value of `tschchartaxisvaluemajorgridlinestroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvaluemajorgridlinestroke() {_uniqueStorage()._tschchartaxisvaluemajorgridlinestroke = nil}

  var tschchartaxisvalueminorgridlinestroke: TSD_StrokeArchive {
    get {return _storage._tschchartaxisvalueminorgridlinestroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartaxisvalueminorgridlinestroke = newValue}
  }
  /// Returns true if `tschchartaxisvalueminorgridlinestroke` has been explicitly set.
  var hasTschchartaxisvalueminorgridlinestroke: Bool {return _storage._tschchartaxisvalueminorgridlinestroke != nil}
  /// Clears the value of `tschchartaxisvalueminorgridlinestroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvalueminorgridlinestroke() {_uniqueStorage()._tschchartaxisvalueminorgridlinestroke = nil}

  var tschchartaxisvaluetickmarklocation: Int32 {
    get {return _storage._tschchartaxisvaluetickmarklocation ?? 0}
    set {_uniqueStorage()._tschchartaxisvaluetickmarklocation = newValue}
  }
  /// Returns true if `tschchartaxisvaluetickmarklocation` has been explicitly set.
  var hasTschchartaxisvaluetickmarklocation: Bool {return _storage._tschchartaxisvaluetickmarklocation != nil}
  /// Clears the value of `tschchartaxisvaluetickmarklocation`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvaluetickmarklocation() {_uniqueStorage()._tschchartaxisvaluetickmarklocation = nil}

  var tschchartaxisvalueshowmajortickmarks: Bool {
    get {return _storage._tschchartaxisvalueshowmajortickmarks ?? false}
    set {_uniqueStorage()._tschchartaxisvalueshowmajortickmarks = newValue}
  }
  /// Returns true if `tschchartaxisvalueshowmajortickmarks` has been explicitly set.
  var hasTschchartaxisvalueshowmajortickmarks: Bool {return _storage._tschchartaxisvalueshowmajortickmarks != nil}
  /// Clears the value of `tschchartaxisvalueshowmajortickmarks`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvalueshowmajortickmarks() {_uniqueStorage()._tschchartaxisvalueshowmajortickmarks = nil}

  var tschchartaxisvalueshowminortickmarks: Bool {
    get {return _storage._tschchartaxisvalueshowminortickmarks ?? false}
    set {_uniqueStorage()._tschchartaxisvalueshowminortickmarks = newValue}
  }
  /// Returns true if `tschchartaxisvalueshowminortickmarks` has been explicitly set.
  var hasTschchartaxisvalueshowminortickmarks: Bool {return _storage._tschchartaxisvalueshowminortickmarks != nil}
  /// Clears the value of `tschchartaxisvalueshowminortickmarks`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvalueshowminortickmarks() {_uniqueStorage()._tschchartaxisvalueshowminortickmarks = nil}

  var tschchartaxisvaluelabelsorientation: Float {
    get {return _storage._tschchartaxisvaluelabelsorientation ?? 0}
    set {_uniqueStorage()._tschchartaxisvaluelabelsorientation = newValue}
  }
  /// Returns true if `tschchartaxisvaluelabelsorientation` has been explicitly set.
  var hasTschchartaxisvaluelabelsorientation: Bool {return _storage._tschchartaxisvaluelabelsorientation != nil}
  /// Clears the value of `tschchartaxisvaluelabelsorientation`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvaluelabelsorientation() {_uniqueStorage()._tschchartaxisvaluelabelsorientation = nil}

  var tschchartaxisvalueshowminimumlabel: Bool {
    get {return _storage._tschchartaxisvalueshowminimumlabel ?? false}
    set {_uniqueStorage()._tschchartaxisvalueshowminimumlabel = newValue}
  }
  /// Returns true if `tschchartaxisvalueshowminimumlabel` has been explicitly set.
  var hasTschchartaxisvalueshowminimumlabel: Bool {return _storage._tschchartaxisvalueshowminimumlabel != nil}
  /// Clears the value of `tschchartaxisvalueshowminimumlabel`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvalueshowminimumlabel() {_uniqueStorage()._tschchartaxisvalueshowminimumlabel = nil}

  var tschchartaxisvaluemajorgridlineshadow: TSD_ShadowArchive {
    get {return _storage._tschchartaxisvaluemajorgridlineshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartaxisvaluemajorgridlineshadow = newValue}
  }
  /// Returns true if `tschchartaxisvaluemajorgridlineshadow` has been explicitly set.
  var hasTschchartaxisvaluemajorgridlineshadow: Bool {return _storage._tschchartaxisvaluemajorgridlineshadow != nil}
  /// Clears the value of `tschchartaxisvaluemajorgridlineshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvaluemajorgridlineshadow() {_uniqueStorage()._tschchartaxisvaluemajorgridlineshadow = nil}

  var tschchartaxisvalueminorgridlineshadow: TSD_ShadowArchive {
    get {return _storage._tschchartaxisvalueminorgridlineshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartaxisvalueminorgridlineshadow = newValue}
  }
  /// Returns true if `tschchartaxisvalueminorgridlineshadow` has been explicitly set.
  var hasTschchartaxisvalueminorgridlineshadow: Bool {return _storage._tschchartaxisvalueminorgridlineshadow != nil}
  /// Clears the value of `tschchartaxisvalueminorgridlineshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvalueminorgridlineshadow() {_uniqueStorage()._tschchartaxisvalueminorgridlineshadow = nil}

  var tschchartaxisvaluemajorgridlineopacity: Float {
    get {return _storage._tschchartaxisvaluemajorgridlineopacity ?? 0}
    set {_uniqueStorage()._tschchartaxisvaluemajorgridlineopacity = newValue}
  }
  /// Returns true if `tschchartaxisvaluemajorgridlineopacity` has been explicitly set.
  var hasTschchartaxisvaluemajorgridlineopacity: Bool {return _storage._tschchartaxisvaluemajorgridlineopacity != nil}
  /// Clears the value of `tschchartaxisvaluemajorgridlineopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvaluemajorgridlineopacity() {_uniqueStorage()._tschchartaxisvaluemajorgridlineopacity = nil}

  var tschchartaxisvalueminorgridlineopacity: Float {
    get {return _storage._tschchartaxisvalueminorgridlineopacity ?? 0}
    set {_uniqueStorage()._tschchartaxisvalueminorgridlineopacity = newValue}
  }
  /// Returns true if `tschchartaxisvalueminorgridlineopacity` has been explicitly set.
  var hasTschchartaxisvalueminorgridlineopacity: Bool {return _storage._tschchartaxisvalueminorgridlineopacity != nil}
  /// Clears the value of `tschchartaxisvalueminorgridlineopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvalueminorgridlineopacity() {_uniqueStorage()._tschchartaxisvalueminorgridlineopacity = nil}

  var tschchartaxisvalueshowaxis: Bool {
    get {return _storage._tschchartaxisvalueshowaxis ?? false}
    set {_uniqueStorage()._tschchartaxisvalueshowaxis = newValue}
  }
  /// Returns true if `tschchartaxisvalueshowaxis` has been explicitly set.
  var hasTschchartaxisvalueshowaxis: Bool {return _storage._tschchartaxisvalueshowaxis != nil}
  /// Clears the value of `tschchartaxisvalueshowaxis`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvalueshowaxis() {_uniqueStorage()._tschchartaxisvalueshowaxis = nil}

  var tschchartaxiscategoryshowmajorgridlines: Bool {
    get {return _storage._tschchartaxiscategoryshowmajorgridlines ?? false}
    set {_uniqueStorage()._tschchartaxiscategoryshowmajorgridlines = newValue}
  }
  /// Returns true if `tschchartaxiscategoryshowmajorgridlines` has been explicitly set.
  var hasTschchartaxiscategoryshowmajorgridlines: Bool {return _storage._tschchartaxiscategoryshowmajorgridlines != nil}
  /// Clears the value of `tschchartaxiscategoryshowmajorgridlines`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategoryshowmajorgridlines() {_uniqueStorage()._tschchartaxiscategoryshowmajorgridlines = nil}

  var tschchartaxiscategoryshowminorgridlines: Bool {
    get {return _storage._tschchartaxiscategoryshowminorgridlines ?? false}
    set {_uniqueStorage()._tschchartaxiscategoryshowminorgridlines = newValue}
  }
  /// Returns true if `tschchartaxiscategoryshowminorgridlines` has been explicitly set.
  var hasTschchartaxiscategoryshowminorgridlines: Bool {return _storage._tschchartaxiscategoryshowminorgridlines != nil}
  /// Clears the value of `tschchartaxiscategoryshowminorgridlines`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategoryshowminorgridlines() {_uniqueStorage()._tschchartaxiscategoryshowminorgridlines = nil}

  var tschchartaxiscategorymajorgridlinestroke: TSD_StrokeArchive {
    get {return _storage._tschchartaxiscategorymajorgridlinestroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartaxiscategorymajorgridlinestroke = newValue}
  }
  /// Returns true if `tschchartaxiscategorymajorgridlinestroke` has been explicitly set.
  var hasTschchartaxiscategorymajorgridlinestroke: Bool {return _storage._tschchartaxiscategorymajorgridlinestroke != nil}
  /// Clears the value of `tschchartaxiscategorymajorgridlinestroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategorymajorgridlinestroke() {_uniqueStorage()._tschchartaxiscategorymajorgridlinestroke = nil}

  var tschchartaxiscategoryminorgridlinestroke: TSD_StrokeArchive {
    get {return _storage._tschchartaxiscategoryminorgridlinestroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartaxiscategoryminorgridlinestroke = newValue}
  }
  /// Returns true if `tschchartaxiscategoryminorgridlinestroke` has been explicitly set.
  var hasTschchartaxiscategoryminorgridlinestroke: Bool {return _storage._tschchartaxiscategoryminorgridlinestroke != nil}
  /// Clears the value of `tschchartaxiscategoryminorgridlinestroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategoryminorgridlinestroke() {_uniqueStorage()._tschchartaxiscategoryminorgridlinestroke = nil}

  var tschchartaxiscategorytickmarklocation: Int32 {
    get {return _storage._tschchartaxiscategorytickmarklocation ?? 0}
    set {_uniqueStorage()._tschchartaxiscategorytickmarklocation = newValue}
  }
  /// Returns true if `tschchartaxiscategorytickmarklocation` has been explicitly set.
  var hasTschchartaxiscategorytickmarklocation: Bool {return _storage._tschchartaxiscategorytickmarklocation != nil}
  /// Clears the value of `tschchartaxiscategorytickmarklocation`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategorytickmarklocation() {_uniqueStorage()._tschchartaxiscategorytickmarklocation = nil}

  var tschchartaxiscategoryshowmajortickmarks: Bool {
    get {return _storage._tschchartaxiscategoryshowmajortickmarks ?? false}
    set {_uniqueStorage()._tschchartaxiscategoryshowmajortickmarks = newValue}
  }
  /// Returns true if `tschchartaxiscategoryshowmajortickmarks` has been explicitly set.
  var hasTschchartaxiscategoryshowmajortickmarks: Bool {return _storage._tschchartaxiscategoryshowmajortickmarks != nil}
  /// Clears the value of `tschchartaxiscategoryshowmajortickmarks`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategoryshowmajortickmarks() {_uniqueStorage()._tschchartaxiscategoryshowmajortickmarks = nil}

  var tschchartaxiscategoryshowminortickmarks: Bool {
    get {return _storage._tschchartaxiscategoryshowminortickmarks ?? false}
    set {_uniqueStorage()._tschchartaxiscategoryshowminortickmarks = newValue}
  }
  /// Returns true if `tschchartaxiscategoryshowminortickmarks` has been explicitly set.
  var hasTschchartaxiscategoryshowminortickmarks: Bool {return _storage._tschchartaxiscategoryshowminortickmarks != nil}
  /// Clears the value of `tschchartaxiscategoryshowminortickmarks`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategoryshowminortickmarks() {_uniqueStorage()._tschchartaxiscategoryshowminortickmarks = nil}

  var tschchartaxiscategorylabelsorientation: Float {
    get {return _storage._tschchartaxiscategorylabelsorientation ?? 0}
    set {_uniqueStorage()._tschchartaxiscategorylabelsorientation = newValue}
  }
  /// Returns true if `tschchartaxiscategorylabelsorientation` has been explicitly set.
  var hasTschchartaxiscategorylabelsorientation: Bool {return _storage._tschchartaxiscategorylabelsorientation != nil}
  /// Clears the value of `tschchartaxiscategorylabelsorientation`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategorylabelsorientation() {_uniqueStorage()._tschchartaxiscategorylabelsorientation = nil}

  var tschchartaxiscategoryhorizontalspacing: Int32 {
    get {return _storage._tschchartaxiscategoryhorizontalspacing ?? 0}
    set {_uniqueStorage()._tschchartaxiscategoryhorizontalspacing = newValue}
  }
  /// Returns true if `tschchartaxiscategoryhorizontalspacing` has been explicitly set.
  var hasTschchartaxiscategoryhorizontalspacing: Bool {return _storage._tschchartaxiscategoryhorizontalspacing != nil}
  /// Clears the value of `tschchartaxiscategoryhorizontalspacing`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategoryhorizontalspacing() {_uniqueStorage()._tschchartaxiscategoryhorizontalspacing = nil}

  var tschchartaxiscategoryverticalspacing: Int32 {
    get {return _storage._tschchartaxiscategoryverticalspacing ?? 0}
    set {_uniqueStorage()._tschchartaxiscategoryverticalspacing = newValue}
  }
  /// Returns true if `tschchartaxiscategoryverticalspacing` has been explicitly set.
  var hasTschchartaxiscategoryverticalspacing: Bool {return _storage._tschchartaxiscategoryverticalspacing != nil}
  /// Clears the value of `tschchartaxiscategoryverticalspacing`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategoryverticalspacing() {_uniqueStorage()._tschchartaxiscategoryverticalspacing = nil}

  var tschchartaxiscategoryshowlastlabel: Bool {
    get {return _storage._tschchartaxiscategoryshowlastlabel ?? false}
    set {_uniqueStorage()._tschchartaxiscategoryshowlastlabel = newValue}
  }
  /// Returns true if `tschchartaxiscategoryshowlastlabel` has been explicitly set.
  var hasTschchartaxiscategoryshowlastlabel: Bool {return _storage._tschchartaxiscategoryshowlastlabel != nil}
  /// Clears the value of `tschchartaxiscategoryshowlastlabel`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategoryshowlastlabel() {_uniqueStorage()._tschchartaxiscategoryshowlastlabel = nil}

  var tschchartaxiscategorymajorgridlineshadow: TSD_ShadowArchive {
    get {return _storage._tschchartaxiscategorymajorgridlineshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartaxiscategorymajorgridlineshadow = newValue}
  }
  /// Returns true if `tschchartaxiscategorymajorgridlineshadow` has been explicitly set.
  var hasTschchartaxiscategorymajorgridlineshadow: Bool {return _storage._tschchartaxiscategorymajorgridlineshadow != nil}
  /// Clears the value of `tschchartaxiscategorymajorgridlineshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategorymajorgridlineshadow() {_uniqueStorage()._tschchartaxiscategorymajorgridlineshadow = nil}

  var tschchartaxiscategoryminorgridlineshadow: TSD_ShadowArchive {
    get {return _storage._tschchartaxiscategoryminorgridlineshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartaxiscategoryminorgridlineshadow = newValue}
  }
  /// Returns true if `tschchartaxiscategoryminorgridlineshadow` has been explicitly set.
  var hasTschchartaxiscategoryminorgridlineshadow: Bool {return _storage._tschchartaxiscategoryminorgridlineshadow != nil}
  /// Clears the value of `tschchartaxiscategoryminorgridlineshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategoryminorgridlineshadow() {_uniqueStorage()._tschchartaxiscategoryminorgridlineshadow = nil}

  var tschchartaxiscategorymajorgridlineopacity: Float {
    get {return _storage._tschchartaxiscategorymajorgridlineopacity ?? 0}
    set {_uniqueStorage()._tschchartaxiscategorymajorgridlineopacity = newValue}
  }
  /// Returns true if `tschchartaxiscategorymajorgridlineopacity` has been explicitly set.
  var hasTschchartaxiscategorymajorgridlineopacity: Bool {return _storage._tschchartaxiscategorymajorgridlineopacity != nil}
  /// Clears the value of `tschchartaxiscategorymajorgridlineopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategorymajorgridlineopacity() {_uniqueStorage()._tschchartaxiscategorymajorgridlineopacity = nil}

  var tschchartaxiscategoryminorgridlineopacity: Float {
    get {return _storage._tschchartaxiscategoryminorgridlineopacity ?? 0}
    set {_uniqueStorage()._tschchartaxiscategoryminorgridlineopacity = newValue}
  }
  /// Returns true if `tschchartaxiscategoryminorgridlineopacity` has been explicitly set.
  var hasTschchartaxiscategoryminorgridlineopacity: Bool {return _storage._tschchartaxiscategoryminorgridlineopacity != nil}
  /// Clears the value of `tschchartaxiscategoryminorgridlineopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategoryminorgridlineopacity() {_uniqueStorage()._tschchartaxiscategoryminorgridlineopacity = nil}

  var tschchartaxiscategoryshowaxis: Bool {
    get {return _storage._tschchartaxiscategoryshowaxis ?? false}
    set {_uniqueStorage()._tschchartaxiscategoryshowaxis = newValue}
  }
  /// Returns true if `tschchartaxiscategoryshowaxis` has been explicitly set.
  var hasTschchartaxiscategoryshowaxis: Bool {return _storage._tschchartaxiscategoryshowaxis != nil}
  /// Clears the value of `tschchartaxiscategoryshowaxis`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategoryshowaxis() {_uniqueStorage()._tschchartaxiscategoryshowaxis = nil}

  var tschchartaxisdefaultlabelsorientation: Float {
    get {return _storage._tschchartaxisdefaultlabelsorientation ?? 0}
    set {_uniqueStorage()._tschchartaxisdefaultlabelsorientation = newValue}
  }
  /// Returns true if `tschchartaxisdefaultlabelsorientation` has been explicitly set.
  var hasTschchartaxisdefaultlabelsorientation: Bool {return _storage._tschchartaxisdefaultlabelsorientation != nil}
  /// Clears the value of `tschchartaxisdefaultlabelsorientation`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisdefaultlabelsorientation() {_uniqueStorage()._tschchartaxisdefaultlabelsorientation = nil}

  var tschchartaxisdefaulttitleparagraphstyleindex: Int32 {
    get {return _storage._tschchartaxisdefaulttitleparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartaxisdefaulttitleparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartaxisdefaulttitleparagraphstyleindex` has been explicitly set.
  var hasTschchartaxisdefaulttitleparagraphstyleindex: Bool {return _storage._tschchartaxisdefaulttitleparagraphstyleindex != nil}
  /// Clears the value of `tschchartaxisdefaulttitleparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisdefaulttitleparagraphstyleindex() {_uniqueStorage()._tschchartaxisdefaulttitleparagraphstyleindex = nil}

  var tschchartaxisdefaultlabelparagraphstyleindex: Int32 {
    get {return _storage._tschchartaxisdefaultlabelparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartaxisdefaultlabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartaxisdefaultlabelparagraphstyleindex` has been explicitly set.
  var hasTschchartaxisdefaultlabelparagraphstyleindex: Bool {return _storage._tschchartaxisdefaultlabelparagraphstyleindex != nil}
  /// Clears the value of `tschchartaxisdefaultlabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisdefaultlabelparagraphstyleindex() {_uniqueStorage()._tschchartaxisdefaultlabelparagraphstyleindex = nil}

  var tschchartaxisvaluetitleparagraphstyleindex: Int32 {
    get {return _storage._tschchartaxisvaluetitleparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartaxisvaluetitleparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartaxisvaluetitleparagraphstyleindex` has been explicitly set.
  var hasTschchartaxisvaluetitleparagraphstyleindex: Bool {return _storage._tschchartaxisvaluetitleparagraphstyleindex != nil}
  /// Clears the value of `tschchartaxisvaluetitleparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvaluetitleparagraphstyleindex() {_uniqueStorage()._tschchartaxisvaluetitleparagraphstyleindex = nil}

  var tschchartaxisvaluelabelparagraphstyleindex: Int32 {
    get {return _storage._tschchartaxisvaluelabelparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartaxisvaluelabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartaxisvaluelabelparagraphstyleindex` has been explicitly set.
  var hasTschchartaxisvaluelabelparagraphstyleindex: Bool {return _storage._tschchartaxisvaluelabelparagraphstyleindex != nil}
  /// Clears the value of `tschchartaxisvaluelabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvaluelabelparagraphstyleindex() {_uniqueStorage()._tschchartaxisvaluelabelparagraphstyleindex = nil}

  var tschchartaxiscategorytitleparagraphstyleindex: Int32 {
    get {return _storage._tschchartaxiscategorytitleparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartaxiscategorytitleparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartaxiscategorytitleparagraphstyleindex` has been explicitly set.
  var hasTschchartaxiscategorytitleparagraphstyleindex: Bool {return _storage._tschchartaxiscategorytitleparagraphstyleindex != nil}
  /// Clears the value of `tschchartaxiscategorytitleparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategorytitleparagraphstyleindex() {_uniqueStorage()._tschchartaxiscategorytitleparagraphstyleindex = nil}

  var tschchartaxiscategorylabelparagraphstyleindex: Int32 {
    get {return _storage._tschchartaxiscategorylabelparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartaxiscategorylabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartaxiscategorylabelparagraphstyleindex` has been explicitly set.
  var hasTschchartaxiscategorylabelparagraphstyleindex: Bool {return _storage._tschchartaxiscategorylabelparagraphstyleindex != nil}
  /// Clears the value of `tschchartaxiscategorylabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategorylabelparagraphstyleindex() {_uniqueStorage()._tschchartaxiscategorylabelparagraphstyleindex = nil}

  var tschchartaxisvalue3Dgridlinestroke: TSD_StrokeArchive {
    get {return _storage._tschchartaxisvalue3Dgridlinestroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartaxisvalue3Dgridlinestroke = newValue}
  }
  /// Returns true if `tschchartaxisvalue3Dgridlinestroke` has been explicitly set.
  var hasTschchartaxisvalue3Dgridlinestroke: Bool {return _storage._tschchartaxisvalue3Dgridlinestroke != nil}
  /// Clears the value of `tschchartaxisvalue3Dgridlinestroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvalue3Dgridlinestroke() {_uniqueStorage()._tschchartaxisvalue3Dgridlinestroke = nil}

  var tschchartaxiscategory3Dgridlinestroke: TSD_StrokeArchive {
    get {return _storage._tschchartaxiscategory3Dgridlinestroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartaxiscategory3Dgridlinestroke = newValue}
  }
  /// Returns true if `tschchartaxiscategory3Dgridlinestroke` has been explicitly set.
  var hasTschchartaxiscategory3Dgridlinestroke: Bool {return _storage._tschchartaxiscategory3Dgridlinestroke != nil}
  /// Clears the value of `tschchartaxiscategory3Dgridlinestroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategory3Dgridlinestroke() {_uniqueStorage()._tschchartaxiscategory3Dgridlinestroke = nil}

  var tschchartaxisvalue3Dgridlineopacity: Float {
    get {return _storage._tschchartaxisvalue3Dgridlineopacity ?? 0}
    set {_uniqueStorage()._tschchartaxisvalue3Dgridlineopacity = newValue}
  }
  /// Returns true if `tschchartaxisvalue3Dgridlineopacity` has been explicitly set.
  var hasTschchartaxisvalue3Dgridlineopacity: Bool {return _storage._tschchartaxisvalue3Dgridlineopacity != nil}
  /// Clears the value of `tschchartaxisvalue3Dgridlineopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvalue3Dgridlineopacity() {_uniqueStorage()._tschchartaxisvalue3Dgridlineopacity = nil}

  var tschchartaxiscategory3Dgridlineopacity: Float {
    get {return _storage._tschchartaxiscategory3Dgridlineopacity ?? 0}
    set {_uniqueStorage()._tschchartaxiscategory3Dgridlineopacity = newValue}
  }
  /// Returns true if `tschchartaxiscategory3Dgridlineopacity` has been explicitly set.
  var hasTschchartaxiscategory3Dgridlineopacity: Bool {return _storage._tschchartaxiscategory3Dgridlineopacity != nil}
  /// Clears the value of `tschchartaxiscategory3Dgridlineopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategory3Dgridlineopacity() {_uniqueStorage()._tschchartaxiscategory3Dgridlineopacity = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

struct TSCH_PreUFF_ChartAxisNonStyleArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var `super`: TSS_StyleArchive {
    get {return _storage._super ?? TSS_StyleArchive()}
    set {_uniqueStorage()._super = newValue}
  }
  /// Returns true if ``super`` has been explicitly set.
  var hasSuper: Bool {return _storage._super != nil}
  /// Clears the value of ``super``. Subsequent reads from it will return its default value.
  mutating func clearSuper() {_uniqueStorage()._super = nil}

  var tschchartaxisdefaultusermin: TSCH_ChartsNSNumberDoubleArchive {
    get {return _storage._tschchartaxisdefaultusermin ?? TSCH_ChartsNSNumberDoubleArchive()}
    set {_uniqueStorage()._tschchartaxisdefaultusermin = newValue}
  }
  /// Returns true if `tschchartaxisdefaultusermin` has been explicitly set.
  var hasTschchartaxisdefaultusermin: Bool {return _storage._tschchartaxisdefaultusermin != nil}
  /// Clears the value of `tschchartaxisdefaultusermin`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisdefaultusermin() {_uniqueStorage()._tschchartaxisdefaultusermin = nil}

  var tschchartaxisdefaultusermax: TSCH_ChartsNSNumberDoubleArchive {
    get {return _storage._tschchartaxisdefaultusermax ?? TSCH_ChartsNSNumberDoubleArchive()}
    set {_uniqueStorage()._tschchartaxisdefaultusermax = newValue}
  }
  /// Returns true if `tschchartaxisdefaultusermax` has been explicitly set.
  var hasTschchartaxisdefaultusermax: Bool {return _storage._tschchartaxisdefaultusermax != nil}
  /// Clears the value of `tschchartaxisdefaultusermax`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisdefaultusermax() {_uniqueStorage()._tschchartaxisdefaultusermax = nil}

  var tschchartaxisdefaultnumberformat: TSCH_PreUFF_ChartsNumberFormatArchive {
    get {return _storage._tschchartaxisdefaultnumberformat ?? TSCH_PreUFF_ChartsNumberFormatArchive()}
    set {_uniqueStorage()._tschchartaxisdefaultnumberformat = newValue}
  }
  /// Returns true if `tschchartaxisdefaultnumberformat` has been explicitly set.
  var hasTschchartaxisdefaultnumberformat: Bool {return _storage._tschchartaxisdefaultnumberformat != nil}
  /// Clears the value of `tschchartaxisdefaultnumberformat`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisdefaultnumberformat() {_uniqueStorage()._tschchartaxisdefaultnumberformat = nil}

  var tschchartaxisdefaultshowlabels: Bool {
    get {return _storage._tschchartaxisdefaultshowlabels ?? false}
    set {_uniqueStorage()._tschchartaxisdefaultshowlabels = newValue}
  }
  /// Returns true if `tschchartaxisdefaultshowlabels` has been explicitly set.
  var hasTschchartaxisdefaultshowlabels: Bool {return _storage._tschchartaxisdefaultshowlabels != nil}
  /// Clears the value of `tschchartaxisdefaultshowlabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisdefaultshowlabels() {_uniqueStorage()._tschchartaxisdefaultshowlabels = nil}

  var tschchartaxisvaluenumberofminorgridlines: Int32 {
    get {return _storage._tschchartaxisvaluenumberofminorgridlines ?? 0}
    set {_uniqueStorage()._tschchartaxisvaluenumberofminorgridlines = newValue}
  }
  /// Returns true if `tschchartaxisvaluenumberofminorgridlines` has been explicitly set.
  var hasTschchartaxisvaluenumberofminorgridlines: Bool {return _storage._tschchartaxisvaluenumberofminorgridlines != nil}
  /// Clears the value of `tschchartaxisvaluenumberofminorgridlines`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvaluenumberofminorgridlines() {_uniqueStorage()._tschchartaxisvaluenumberofminorgridlines = nil}

  var tschchartaxisvaluescale: Int32 {
    get {return _storage._tschchartaxisvaluescale ?? 0}
    set {_uniqueStorage()._tschchartaxisvaluescale = newValue}
  }
  /// Returns true if `tschchartaxisvaluescale` has been explicitly set.
  var hasTschchartaxisvaluescale: Bool {return _storage._tschchartaxisvaluescale != nil}
  /// Clears the value of `tschchartaxisvaluescale`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvaluescale() {_uniqueStorage()._tschchartaxisvaluescale = nil}

  var tschchartaxisvaluenumberofdecades: Int32 {
    get {return _storage._tschchartaxisvaluenumberofdecades ?? 0}
    set {_uniqueStorage()._tschchartaxisvaluenumberofdecades = newValue}
  }
  /// Returns true if `tschchartaxisvaluenumberofdecades` has been explicitly set.
  var hasTschchartaxisvaluenumberofdecades: Bool {return _storage._tschchartaxisvaluenumberofdecades != nil}
  /// Clears the value of `tschchartaxisvaluenumberofdecades`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvaluenumberofdecades() {_uniqueStorage()._tschchartaxisvaluenumberofdecades = nil}

  var tschchartaxisvalueshowlabels: Bool {
    get {return _storage._tschchartaxisvalueshowlabels ?? false}
    set {_uniqueStorage()._tschchartaxisvalueshowlabels = newValue}
  }
  /// Returns true if `tschchartaxisvalueshowlabels` has been explicitly set.
  var hasTschchartaxisvalueshowlabels: Bool {return _storage._tschchartaxisvalueshowlabels != nil}
  /// Clears the value of `tschchartaxisvalueshowlabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvalueshowlabels() {_uniqueStorage()._tschchartaxisvalueshowlabels = nil}

  var tschchartaxisvalueshowtitle: Bool {
    get {return _storage._tschchartaxisvalueshowtitle ?? false}
    set {_uniqueStorage()._tschchartaxisvalueshowtitle = newValue}
  }
  /// Returns true if `tschchartaxisvalueshowtitle` has been explicitly set.
  var hasTschchartaxisvalueshowtitle: Bool {return _storage._tschchartaxisvalueshowtitle != nil}
  /// Clears the value of `tschchartaxisvalueshowtitle`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvalueshowtitle() {_uniqueStorage()._tschchartaxisvalueshowtitle = nil}

  var tschchartaxisvaluenumberofmajorgridlines: Int32 {
    get {return _storage._tschchartaxisvaluenumberofmajorgridlines ?? 0}
    set {_uniqueStorage()._tschchartaxisvaluenumberofmajorgridlines = newValue}
  }
  /// Returns true if `tschchartaxisvaluenumberofmajorgridlines` has been explicitly set.
  var hasTschchartaxisvaluenumberofmajorgridlines: Bool {return _storage._tschchartaxisvaluenumberofmajorgridlines != nil}
  /// Clears the value of `tschchartaxisvaluenumberofmajorgridlines`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvaluenumberofmajorgridlines() {_uniqueStorage()._tschchartaxisvaluenumberofmajorgridlines = nil}

  var tschchartaxisvaluetitle: String {
    get {return _storage._tschchartaxisvaluetitle ?? String()}
    set {_uniqueStorage()._tschchartaxisvaluetitle = newValue}
  }
  /// Returns true if `tschchartaxisvaluetitle` has been explicitly set.
  var hasTschchartaxisvaluetitle: Bool {return _storage._tschchartaxisvaluetitle != nil}
  /// Clears the value of `tschchartaxisvaluetitle`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisvaluetitle() {_uniqueStorage()._tschchartaxisvaluetitle = nil}

  var tschchartaxiscategoryshowlabels: Bool {
    get {return _storage._tschchartaxiscategoryshowlabels ?? false}
    set {_uniqueStorage()._tschchartaxiscategoryshowlabels = newValue}
  }
  /// Returns true if `tschchartaxiscategoryshowlabels` has been explicitly set.
  var hasTschchartaxiscategoryshowlabels: Bool {return _storage._tschchartaxiscategoryshowlabels != nil}
  /// Clears the value of `tschchartaxiscategoryshowlabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategoryshowlabels() {_uniqueStorage()._tschchartaxiscategoryshowlabels = nil}

  var tschchartaxiscategoryshowserieslabels: Bool {
    get {return _storage._tschchartaxiscategoryshowserieslabels ?? false}
    set {_uniqueStorage()._tschchartaxiscategoryshowserieslabels = newValue}
  }
  /// Returns true if `tschchartaxiscategoryshowserieslabels` has been explicitly set.
  var hasTschchartaxiscategoryshowserieslabels: Bool {return _storage._tschchartaxiscategoryshowserieslabels != nil}
  /// Clears the value of `tschchartaxiscategoryshowserieslabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategoryshowserieslabels() {_uniqueStorage()._tschchartaxiscategoryshowserieslabels = nil}

  var tschchartaxiscategoryshowtitle: Bool {
    get {return _storage._tschchartaxiscategoryshowtitle ?? false}
    set {_uniqueStorage()._tschchartaxiscategoryshowtitle = newValue}
  }
  /// Returns true if `tschchartaxiscategoryshowtitle` has been explicitly set.
  var hasTschchartaxiscategoryshowtitle: Bool {return _storage._tschchartaxiscategoryshowtitle != nil}
  /// Clears the value of `tschchartaxiscategoryshowtitle`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategoryshowtitle() {_uniqueStorage()._tschchartaxiscategoryshowtitle = nil}

  var tschchartaxiscategorytitle: String {
    get {return _storage._tschchartaxiscategorytitle ?? String()}
    set {_uniqueStorage()._tschchartaxiscategorytitle = newValue}
  }
  /// Returns true if `tschchartaxiscategorytitle` has been explicitly set.
  var hasTschchartaxiscategorytitle: Bool {return _storage._tschchartaxiscategorytitle != nil}
  /// Clears the value of `tschchartaxiscategorytitle`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategorytitle() {_uniqueStorage()._tschchartaxiscategorytitle = nil}

  var tschchartaxisdefaultnumberformattype: Int32 {
    get {return _storage._tschchartaxisdefaultnumberformattype ?? 0}
    set {_uniqueStorage()._tschchartaxisdefaultnumberformattype = newValue}
  }
  /// Returns true if `tschchartaxisdefaultnumberformattype` has been explicitly set.
  var hasTschchartaxisdefaultnumberformattype: Bool {return _storage._tschchartaxisdefaultnumberformattype != nil}
  /// Clears the value of `tschchartaxisdefaultnumberformattype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisdefaultnumberformattype() {_uniqueStorage()._tschchartaxisdefaultnumberformattype = nil}

  var tschchartaxisdefault3Dlabelposition: Int32 {
    get {return _storage._tschchartaxisdefault3Dlabelposition ?? 0}
    set {_uniqueStorage()._tschchartaxisdefault3Dlabelposition = newValue}
  }
  /// Returns true if `tschchartaxisdefault3Dlabelposition` has been explicitly set.
  var hasTschchartaxisdefault3Dlabelposition: Bool {return _storage._tschchartaxisdefault3Dlabelposition != nil}
  /// Clears the value of `tschchartaxisdefault3Dlabelposition`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxisdefault3Dlabelposition() {_uniqueStorage()._tschchartaxisdefault3Dlabelposition = nil}

  var tschchartaxiscategoryplottoedges: Bool {
    get {return _storage._tschchartaxiscategoryplottoedges ?? false}
    set {_uniqueStorage()._tschchartaxiscategoryplottoedges = newValue}
  }
  /// Returns true if `tschchartaxiscategoryplottoedges` has been explicitly set.
  var hasTschchartaxiscategoryplottoedges: Bool {return _storage._tschchartaxiscategoryplottoedges != nil}
  /// Clears the value of `tschchartaxiscategoryplottoedges`. Subsequent reads from it will return its default value.
  mutating func clearTschchartaxiscategoryplottoedges() {_uniqueStorage()._tschchartaxiscategoryplottoedges = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

struct TSCH_PreUFF_ChartSeriesStyleArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var `super`: TSS_StyleArchive {
    get {return _storage._super ?? TSS_StyleArchive()}
    set {_uniqueStorage()._super = newValue}
  }
  /// Returns true if ``super`` has been explicitly set.
  var hasSuper: Bool {return _storage._super != nil}
  /// Clears the value of ``super``. Subsequent reads from it will return its default value.
  mutating func clearSuper() {_uniqueStorage()._super = nil}

  var tschchartseriesdefaulttrendlineequationparagraphstyleindex: Int32 {
    get {return _storage._tschchartseriesdefaulttrendlineequationparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlineequationparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlineequationparagraphstyleindex` has been explicitly set.
  var hasTschchartseriesdefaulttrendlineequationparagraphstyleindex: Bool {return _storage._tschchartseriesdefaulttrendlineequationparagraphstyleindex != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlineequationparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlineequationparagraphstyleindex() {_uniqueStorage()._tschchartseriesdefaulttrendlineequationparagraphstyleindex = nil}

  var tschchartseriesdefaulttrendlinersquaredparagraphstyleindex: Int32 {
    get {return _storage._tschchartseriesdefaulttrendlinersquaredparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlinersquaredparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlinersquaredparagraphstyleindex` has been explicitly set.
  var hasTschchartseriesdefaulttrendlinersquaredparagraphstyleindex: Bool {return _storage._tschchartseriesdefaulttrendlinersquaredparagraphstyleindex != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlinersquaredparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlinersquaredparagraphstyleindex() {_uniqueStorage()._tschchartseriesdefaulttrendlinersquaredparagraphstyleindex = nil}

  var tschchartseriesdefaulttrendlineequationopacity: Float {
    get {return _storage._tschchartseriesdefaulttrendlineequationopacity ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlineequationopacity = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlineequationopacity` has been explicitly set.
  var hasTschchartseriesdefaulttrendlineequationopacity: Bool {return _storage._tschchartseriesdefaulttrendlineequationopacity != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlineequationopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlineequationopacity() {_uniqueStorage()._tschchartseriesdefaulttrendlineequationopacity = nil}

  var tschchartseriesdefaulttrendlinersquaredopacity: Float {
    get {return _storage._tschchartseriesdefaulttrendlinersquaredopacity ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlinersquaredopacity = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlinersquaredopacity` has been explicitly set.
  var hasTschchartseriesdefaulttrendlinersquaredopacity: Bool {return _storage._tschchartseriesdefaulttrendlinersquaredopacity != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlinersquaredopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlinersquaredopacity() {_uniqueStorage()._tschchartseriesdefaulttrendlinersquaredopacity = nil}

  var tschchartseriesbarfill: TSD_FillArchive {
    get {return _storage._tschchartseriesbarfill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseriesbarfill = newValue}
  }
  /// Returns true if `tschchartseriesbarfill` has been explicitly set.
  var hasTschchartseriesbarfill: Bool {return _storage._tschchartseriesbarfill != nil}
  /// Clears the value of `tschchartseriesbarfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbarfill() {_uniqueStorage()._tschchartseriesbarfill = nil}

  var tschchartseriesbarstroke: TSD_StrokeArchive {
    get {return _storage._tschchartseriesbarstroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriesbarstroke = newValue}
  }
  /// Returns true if `tschchartseriesbarstroke` has been explicitly set.
  var hasTschchartseriesbarstroke: Bool {return _storage._tschchartseriesbarstroke != nil}
  /// Clears the value of `tschchartseriesbarstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbarstroke() {_uniqueStorage()._tschchartseriesbarstroke = nil}

  var tschchartseriesbarvaluelabelposition: Int32 {
    get {return _storage._tschchartseriesbarvaluelabelposition ?? 0}
    set {_uniqueStorage()._tschchartseriesbarvaluelabelposition = newValue}
  }
  /// Returns true if `tschchartseriesbarvaluelabelposition` has been explicitly set.
  var hasTschchartseriesbarvaluelabelposition: Bool {return _storage._tschchartseriesbarvaluelabelposition != nil}
  /// Clears the value of `tschchartseriesbarvaluelabelposition`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbarvaluelabelposition() {_uniqueStorage()._tschchartseriesbarvaluelabelposition = nil}

  var tschchartserieslinestroke: TSD_StrokeArchive {
    get {return _storage._tschchartserieslinestroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartserieslinestroke = newValue}
  }
  /// Returns true if `tschchartserieslinestroke` has been explicitly set.
  var hasTschchartserieslinestroke: Bool {return _storage._tschchartserieslinestroke != nil}
  /// Clears the value of `tschchartserieslinestroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieslinestroke() {_uniqueStorage()._tschchartserieslinestroke = nil}

  var tschchartserieslinesymbolfill: TSD_FillArchive {
    get {return _storage._tschchartserieslinesymbolfill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartserieslinesymbolfill = newValue}
  }
  /// Returns true if `tschchartserieslinesymbolfill` has been explicitly set.
  var hasTschchartserieslinesymbolfill: Bool {return _storage._tschchartserieslinesymbolfill != nil}
  /// Clears the value of `tschchartserieslinesymbolfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieslinesymbolfill() {_uniqueStorage()._tschchartserieslinesymbolfill = nil}

  var tschchartserieslinesymbolstroke: TSD_StrokeArchive {
    get {return _storage._tschchartserieslinesymbolstroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartserieslinesymbolstroke = newValue}
  }
  /// Returns true if `tschchartserieslinesymbolstroke` has been explicitly set.
  var hasTschchartserieslinesymbolstroke: Bool {return _storage._tschchartserieslinesymbolstroke != nil}
  /// Clears the value of `tschchartserieslinesymbolstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieslinesymbolstroke() {_uniqueStorage()._tschchartserieslinesymbolstroke = nil}

  var tschchartserieslinesymbolsize: Float {
    get {return _storage._tschchartserieslinesymbolsize ?? 0}
    set {_uniqueStorage()._tschchartserieslinesymbolsize = newValue}
  }
  /// Returns true if `tschchartserieslinesymbolsize` has been explicitly set.
  var hasTschchartserieslinesymbolsize: Bool {return _storage._tschchartserieslinesymbolsize != nil}
  /// Clears the value of `tschchartserieslinesymbolsize`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieslinesymbolsize() {_uniqueStorage()._tschchartserieslinesymbolsize = nil}

  var tschchartserieslinevaluelabelposition: Int32 {
    get {return _storage._tschchartserieslinevaluelabelposition ?? 0}
    set {_uniqueStorage()._tschchartserieslinevaluelabelposition = newValue}
  }
  /// Returns true if `tschchartserieslinevaluelabelposition` has been explicitly set.
  var hasTschchartserieslinevaluelabelposition: Bool {return _storage._tschchartserieslinevaluelabelposition != nil}
  /// Clears the value of `tschchartserieslinevaluelabelposition`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieslinevaluelabelposition() {_uniqueStorage()._tschchartserieslinevaluelabelposition = nil}

  var tschchartseriesareafill: TSD_FillArchive {
    get {return _storage._tschchartseriesareafill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseriesareafill = newValue}
  }
  /// Returns true if `tschchartseriesareafill` has been explicitly set.
  var hasTschchartseriesareafill: Bool {return _storage._tschchartseriesareafill != nil}
  /// Clears the value of `tschchartseriesareafill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesareafill() {_uniqueStorage()._tschchartseriesareafill = nil}

  var tschchartseriesareastroke: TSD_StrokeArchive {
    get {return _storage._tschchartseriesareastroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriesareastroke = newValue}
  }
  /// Returns true if `tschchartseriesareastroke` has been explicitly set.
  var hasTschchartseriesareastroke: Bool {return _storage._tschchartseriesareastroke != nil}
  /// Clears the value of `tschchartseriesareastroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesareastroke() {_uniqueStorage()._tschchartseriesareastroke = nil}

  var tschchartseriesareavaluelabelposition: Int32 {
    get {return _storage._tschchartseriesareavaluelabelposition ?? 0}
    set {_uniqueStorage()._tschchartseriesareavaluelabelposition = newValue}
  }
  /// Returns true if `tschchartseriesareavaluelabelposition` has been explicitly set.
  var hasTschchartseriesareavaluelabelposition: Bool {return _storage._tschchartseriesareavaluelabelposition != nil}
  /// Clears the value of `tschchartseriesareavaluelabelposition`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesareavaluelabelposition() {_uniqueStorage()._tschchartseriesareavaluelabelposition = nil}

  var tschchartseriesareasymbolfill: TSD_FillArchive {
    get {return _storage._tschchartseriesareasymbolfill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseriesareasymbolfill = newValue}
  }
  /// Returns true if `tschchartseriesareasymbolfill` has been explicitly set.
  var hasTschchartseriesareasymbolfill: Bool {return _storage._tschchartseriesareasymbolfill != nil}
  /// Clears the value of `tschchartseriesareasymbolfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesareasymbolfill() {_uniqueStorage()._tschchartseriesareasymbolfill = nil}

  var tschchartseriesareasymbolstroke: TSD_StrokeArchive {
    get {return _storage._tschchartseriesareasymbolstroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriesareasymbolstroke = newValue}
  }
  /// Returns true if `tschchartseriesareasymbolstroke` has been explicitly set.
  var hasTschchartseriesareasymbolstroke: Bool {return _storage._tschchartseriesareasymbolstroke != nil}
  /// Clears the value of `tschchartseriesareasymbolstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesareasymbolstroke() {_uniqueStorage()._tschchartseriesareasymbolstroke = nil}

  var tschchartseriesareasymbolsize: Float {
    get {return _storage._tschchartseriesareasymbolsize ?? 0}
    set {_uniqueStorage()._tschchartseriesareasymbolsize = newValue}
  }
  /// Returns true if `tschchartseriesareasymbolsize` has been explicitly set.
  var hasTschchartseriesareasymbolsize: Bool {return _storage._tschchartseriesareasymbolsize != nil}
  /// Clears the value of `tschchartseriesareasymbolsize`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesareasymbolsize() {_uniqueStorage()._tschchartseriesareasymbolsize = nil}

  var tschchartseriespiefill: TSD_FillArchive {
    get {return _storage._tschchartseriespiefill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseriespiefill = newValue}
  }
  /// Returns true if `tschchartseriespiefill` has been explicitly set.
  var hasTschchartseriespiefill: Bool {return _storage._tschchartseriespiefill != nil}
  /// Clears the value of `tschchartseriespiefill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriespiefill() {_uniqueStorage()._tschchartseriespiefill = nil}

  var tschchartseriespiestroke: TSD_StrokeArchive {
    get {return _storage._tschchartseriespiestroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriespiestroke = newValue}
  }
  /// Returns true if `tschchartseriespiestroke` has been explicitly set.
  var hasTschchartseriespiestroke: Bool {return _storage._tschchartseriespiestroke != nil}
  /// Clears the value of `tschchartseriespiestroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriespiestroke() {_uniqueStorage()._tschchartseriespiestroke = nil}

  var tschchartseriesscatterstroke: TSD_StrokeArchive {
    get {return _storage._tschchartseriesscatterstroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriesscatterstroke = newValue}
  }
  /// Returns true if `tschchartseriesscatterstroke` has been explicitly set.
  var hasTschchartseriesscatterstroke: Bool {return _storage._tschchartseriesscatterstroke != nil}
  /// Clears the value of `tschchartseriesscatterstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesscatterstroke() {_uniqueStorage()._tschchartseriesscatterstroke = nil}

  var tschchartseriesscattersymbolfill: TSD_FillArchive {
    get {return _storage._tschchartseriesscattersymbolfill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseriesscattersymbolfill = newValue}
  }
  /// Returns true if `tschchartseriesscattersymbolfill` has been explicitly set.
  var hasTschchartseriesscattersymbolfill: Bool {return _storage._tschchartseriesscattersymbolfill != nil}
  /// Clears the value of `tschchartseriesscattersymbolfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesscattersymbolfill() {_uniqueStorage()._tschchartseriesscattersymbolfill = nil}

  var tschchartseriesscattersymbolstroke: TSD_StrokeArchive {
    get {return _storage._tschchartseriesscattersymbolstroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriesscattersymbolstroke = newValue}
  }
  /// Returns true if `tschchartseriesscattersymbolstroke` has been explicitly set.
  var hasTschchartseriesscattersymbolstroke: Bool {return _storage._tschchartseriesscattersymbolstroke != nil}
  /// Clears the value of `tschchartseriesscattersymbolstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesscattersymbolstroke() {_uniqueStorage()._tschchartseriesscattersymbolstroke = nil}

  var tschchartseriesscattersymbolsize: Float {
    get {return _storage._tschchartseriesscattersymbolsize ?? 0}
    set {_uniqueStorage()._tschchartseriesscattersymbolsize = newValue}
  }
  /// Returns true if `tschchartseriesscattersymbolsize` has been explicitly set.
  var hasTschchartseriesscattersymbolsize: Bool {return _storage._tschchartseriesscattersymbolsize != nil}
  /// Clears the value of `tschchartseriesscattersymbolsize`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesscattersymbolsize() {_uniqueStorage()._tschchartseriesscattersymbolsize = nil}

  var tschchartseriesscattervaluelabelposition: Int32 {
    get {return _storage._tschchartseriesscattervaluelabelposition ?? 0}
    set {_uniqueStorage()._tschchartseriesscattervaluelabelposition = newValue}
  }
  /// Returns true if `tschchartseriesscattervaluelabelposition` has been explicitly set.
  var hasTschchartseriesscattervaluelabelposition: Bool {return _storage._tschchartseriesscattervaluelabelposition != nil}
  /// Clears the value of `tschchartseriesscattervaluelabelposition`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesscattervaluelabelposition() {_uniqueStorage()._tschchartseriesscattervaluelabelposition = nil}

  var tschchartseriesdefaultfill: TSD_FillArchive {
    get {return _storage._tschchartseriesdefaultfill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseriesdefaultfill = newValue}
  }
  /// Returns true if `tschchartseriesdefaultfill` has been explicitly set.
  var hasTschchartseriesdefaultfill: Bool {return _storage._tschchartseriesdefaultfill != nil}
  /// Clears the value of `tschchartseriesdefaultfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultfill() {_uniqueStorage()._tschchartseriesdefaultfill = nil}

  var tschchartseriesdefaultvaluelabelposition: Int32 {
    get {return _storage._tschchartseriesdefaultvaluelabelposition ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaultvaluelabelposition = newValue}
  }
  /// Returns true if `tschchartseriesdefaultvaluelabelposition` has been explicitly set.
  var hasTschchartseriesdefaultvaluelabelposition: Bool {return _storage._tschchartseriesdefaultvaluelabelposition != nil}
  /// Clears the value of `tschchartseriesdefaultvaluelabelposition`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultvaluelabelposition() {_uniqueStorage()._tschchartseriesdefaultvaluelabelposition = nil}

  var tschchartseriespiedeprecatedserieslabelson: Bool {
    get {return _storage._tschchartseriespiedeprecatedserieslabelson ?? false}
    set {_uniqueStorage()._tschchartseriespiedeprecatedserieslabelson = newValue}
  }
  /// Returns true if `tschchartseriespiedeprecatedserieslabelson` has been explicitly set.
  var hasTschchartseriespiedeprecatedserieslabelson: Bool {return _storage._tschchartseriespiedeprecatedserieslabelson != nil}
  /// Clears the value of `tschchartseriespiedeprecatedserieslabelson`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriespiedeprecatedserieslabelson() {_uniqueStorage()._tschchartseriespiedeprecatedserieslabelson = nil}

  var tschchartseriescolumnfill: TSD_FillArchive {
    get {return _storage._tschchartseriescolumnfill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseriescolumnfill = newValue}
  }
  /// Returns true if `tschchartseriescolumnfill` has been explicitly set.
  var hasTschchartseriescolumnfill: Bool {return _storage._tschchartseriescolumnfill != nil}
  /// Clears the value of `tschchartseriescolumnfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriescolumnfill() {_uniqueStorage()._tschchartseriescolumnfill = nil}

  var tschchartseriespieshadow: TSD_ShadowArchive {
    get {return _storage._tschchartseriespieshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseriespieshadow = newValue}
  }
  /// Returns true if `tschchartseriespieshadow` has been explicitly set.
  var hasTschchartseriespieshadow: Bool {return _storage._tschchartseriespieshadow != nil}
  /// Clears the value of `tschchartseriespieshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriespieshadow() {_uniqueStorage()._tschchartseriespieshadow = nil}

  var tschchartseriesbarshadow: TSD_ShadowArchive {
    get {return _storage._tschchartseriesbarshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseriesbarshadow = newValue}
  }
  /// Returns true if `tschchartseriesbarshadow` has been explicitly set.
  var hasTschchartseriesbarshadow: Bool {return _storage._tschchartseriesbarshadow != nil}
  /// Clears the value of `tschchartseriesbarshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbarshadow() {_uniqueStorage()._tschchartseriesbarshadow = nil}

  var tschchartseriesareashadow: TSD_ShadowArchive {
    get {return _storage._tschchartseriesareashadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseriesareashadow = newValue}
  }
  /// Returns true if `tschchartseriesareashadow` has been explicitly set.
  var hasTschchartseriesareashadow: Bool {return _storage._tschchartseriesareashadow != nil}
  /// Clears the value of `tschchartseriesareashadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesareashadow() {_uniqueStorage()._tschchartseriesareashadow = nil}

  var tschchartseriesscattershadow: TSD_ShadowArchive {
    get {return _storage._tschchartseriesscattershadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseriesscattershadow = newValue}
  }
  /// Returns true if `tschchartseriesscattershadow` has been explicitly set.
  var hasTschchartseriesscattershadow: Bool {return _storage._tschchartseriesscattershadow != nil}
  /// Clears the value of `tschchartseriesscattershadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesscattershadow() {_uniqueStorage()._tschchartseriesscattershadow = nil}

  var tschchartseriesmixedlineshadow: TSD_ShadowArchive {
    get {return _storage._tschchartseriesmixedlineshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseriesmixedlineshadow = newValue}
  }
  /// Returns true if `tschchartseriesmixedlineshadow` has been explicitly set.
  var hasTschchartseriesmixedlineshadow: Bool {return _storage._tschchartseriesmixedlineshadow != nil}
  /// Clears the value of `tschchartseriesmixedlineshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedlineshadow() {_uniqueStorage()._tschchartseriesmixedlineshadow = nil}

  var tschchartseriesmixedareashadow: TSD_ShadowArchive {
    get {return _storage._tschchartseriesmixedareashadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseriesmixedareashadow = newValue}
  }
  /// Returns true if `tschchartseriesmixedareashadow` has been explicitly set.
  var hasTschchartseriesmixedareashadow: Bool {return _storage._tschchartseriesmixedareashadow != nil}
  /// Clears the value of `tschchartseriesmixedareashadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedareashadow() {_uniqueStorage()._tschchartseriesmixedareashadow = nil}

  var tschchartseriesmixedcolumnshadow: TSD_ShadowArchive {
    get {return _storage._tschchartseriesmixedcolumnshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseriesmixedcolumnshadow = newValue}
  }
  /// Returns true if `tschchartseriesmixedcolumnshadow` has been explicitly set.
  var hasTschchartseriesmixedcolumnshadow: Bool {return _storage._tschchartseriesmixedcolumnshadow != nil}
  /// Clears the value of `tschchartseriesmixedcolumnshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedcolumnshadow() {_uniqueStorage()._tschchartseriesmixedcolumnshadow = nil}

  var tschchartserieslineshadow: TSD_ShadowArchive {
    get {return _storage._tschchartserieslineshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartserieslineshadow = newValue}
  }
  /// Returns true if `tschchartserieslineshadow` has been explicitly set.
  var hasTschchartserieslineshadow: Bool {return _storage._tschchartserieslineshadow != nil}
  /// Clears the value of `tschchartserieslineshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieslineshadow() {_uniqueStorage()._tschchartserieslineshadow = nil}

  var tschchartseriesdefaultshadow: TSD_ShadowArchive {
    get {return _storage._tschchartseriesdefaultshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseriesdefaultshadow = newValue}
  }
  /// Returns true if `tschchartseriesdefaultshadow` has been explicitly set.
  var hasTschchartseriesdefaultshadow: Bool {return _storage._tschchartseriesdefaultshadow != nil}
  /// Clears the value of `tschchartseriesdefaultshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultshadow() {_uniqueStorage()._tschchartseriesdefaultshadow = nil}

  var tschchartseriesbubblesymbolfill: TSD_FillArchive {
    get {return _storage._tschchartseriesbubblesymbolfill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseriesbubblesymbolfill = newValue}
  }
  /// Returns true if `tschchartseriesbubblesymbolfill` has been explicitly set.
  var hasTschchartseriesbubblesymbolfill: Bool {return _storage._tschchartseriesbubblesymbolfill != nil}
  /// Clears the value of `tschchartseriesbubblesymbolfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbubblesymbolfill() {_uniqueStorage()._tschchartseriesbubblesymbolfill = nil}

  var tschchartseriesbubblestroke: TSD_StrokeArchive {
    get {return _storage._tschchartseriesbubblestroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriesbubblestroke = newValue}
  }
  /// Returns true if `tschchartseriesbubblestroke` has been explicitly set.
  var hasTschchartseriesbubblestroke: Bool {return _storage._tschchartseriesbubblestroke != nil}
  /// Clears the value of `tschchartseriesbubblestroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbubblestroke() {_uniqueStorage()._tschchartseriesbubblestroke = nil}

  var tschchartseriesbubblesymbolstroke: TSD_StrokeArchive {
    get {return _storage._tschchartseriesbubblesymbolstroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriesbubblesymbolstroke = newValue}
  }
  /// Returns true if `tschchartseriesbubblesymbolstroke` has been explicitly set.
  var hasTschchartseriesbubblesymbolstroke: Bool {return _storage._tschchartseriesbubblesymbolstroke != nil}
  /// Clears the value of `tschchartseriesbubblesymbolstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbubblesymbolstroke() {_uniqueStorage()._tschchartseriesbubblesymbolstroke = nil}

  var tschchartseriesbubblevaluelabelposition: Int32 {
    get {return _storage._tschchartseriesbubblevaluelabelposition ?? 0}
    set {_uniqueStorage()._tschchartseriesbubblevaluelabelposition = newValue}
  }
  /// Returns true if `tschchartseriesbubblevaluelabelposition` has been explicitly set.
  var hasTschchartseriesbubblevaluelabelposition: Bool {return _storage._tschchartseriesbubblevaluelabelposition != nil}
  /// Clears the value of `tschchartseriesbubblevaluelabelposition`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbubblevaluelabelposition() {_uniqueStorage()._tschchartseriesbubblevaluelabelposition = nil}

  var tschchartseriesbubbleshadow: TSD_ShadowArchive {
    get {return _storage._tschchartseriesbubbleshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseriesbubbleshadow = newValue}
  }
  /// Returns true if `tschchartseriesbubbleshadow` has been explicitly set.
  var hasTschchartseriesbubbleshadow: Bool {return _storage._tschchartseriesbubbleshadow != nil}
  /// Clears the value of `tschchartseriesbubbleshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbubbleshadow() {_uniqueStorage()._tschchartseriesbubbleshadow = nil}

  var tschchartseriesbubblesymbolfilluseseriesstroke: Bool {
    get {return _storage._tschchartseriesbubblesymbolfilluseseriesstroke ?? false}
    set {_uniqueStorage()._tschchartseriesbubblesymbolfilluseseriesstroke = newValue}
  }
  /// Returns true if `tschchartseriesbubblesymbolfilluseseriesstroke` has been explicitly set.
  var hasTschchartseriesbubblesymbolfilluseseriesstroke: Bool {return _storage._tschchartseriesbubblesymbolfilluseseriesstroke != nil}
  /// Clears the value of `tschchartseriesbubblesymbolfilluseseriesstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbubblesymbolfilluseseriesstroke() {_uniqueStorage()._tschchartseriesbubblesymbolfilluseseriesstroke = nil}

  var tschchartseries3Dbarshadow: TSD_ShadowArchive {
    get {return _storage._tschchartseries3Dbarshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseries3Dbarshadow = newValue}
  }
  /// Returns true if `tschchartseries3Dbarshadow` has been explicitly set.
  var hasTschchartseries3Dbarshadow: Bool {return _storage._tschchartseries3Dbarshadow != nil}
  /// Clears the value of `tschchartseries3Dbarshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseries3Dbarshadow() {_uniqueStorage()._tschchartseries3Dbarshadow = nil}

  var tschchartseries3Dcolumnshadow: TSD_ShadowArchive {
    get {return _storage._tschchartseries3Dcolumnshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseries3Dcolumnshadow = newValue}
  }
  /// Returns true if `tschchartseries3Dcolumnshadow` has been explicitly set.
  var hasTschchartseries3Dcolumnshadow: Bool {return _storage._tschchartseries3Dcolumnshadow != nil}
  /// Clears the value of `tschchartseries3Dcolumnshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseries3Dcolumnshadow() {_uniqueStorage()._tschchartseries3Dcolumnshadow = nil}

  var tschchartseries3Dlineshadow: TSD_ShadowArchive {
    get {return _storage._tschchartseries3Dlineshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseries3Dlineshadow = newValue}
  }
  /// Returns true if `tschchartseries3Dlineshadow` has been explicitly set.
  var hasTschchartseries3Dlineshadow: Bool {return _storage._tschchartseries3Dlineshadow != nil}
  /// Clears the value of `tschchartseries3Dlineshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseries3Dlineshadow() {_uniqueStorage()._tschchartseries3Dlineshadow = nil}

  var tschchartseries3Dareashadow: TSD_ShadowArchive {
    get {return _storage._tschchartseries3Dareashadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseries3Dareashadow = newValue}
  }
  /// Returns true if `tschchartseries3Dareashadow` has been explicitly set.
  var hasTschchartseries3Dareashadow: Bool {return _storage._tschchartseries3Dareashadow != nil}
  /// Clears the value of `tschchartseries3Dareashadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseries3Dareashadow() {_uniqueStorage()._tschchartseries3Dareashadow = nil}

  var tschchartseries3Dpieshadow: TSD_ShadowArchive {
    get {return _storage._tschchartseries3Dpieshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseries3Dpieshadow = newValue}
  }
  /// Returns true if `tschchartseries3Dpieshadow` has been explicitly set.
  var hasTschchartseries3Dpieshadow: Bool {return _storage._tschchartseries3Dpieshadow != nil}
  /// Clears the value of `tschchartseries3Dpieshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseries3Dpieshadow() {_uniqueStorage()._tschchartseries3Dpieshadow = nil}

  var tschchartseriesdefaultlabelparagraphstyleindex: Int32 {
    get {return _storage._tschchartseriesdefaultlabelparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaultlabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartseriesdefaultlabelparagraphstyleindex` has been explicitly set.
  var hasTschchartseriesdefaultlabelparagraphstyleindex: Bool {return _storage._tschchartseriesdefaultlabelparagraphstyleindex != nil}
  /// Clears the value of `tschchartseriesdefaultlabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultlabelparagraphstyleindex() {_uniqueStorage()._tschchartseriesdefaultlabelparagraphstyleindex = nil}

  var tschchartseriesbarlabelparagraphstyleindex: Int32 {
    get {return _storage._tschchartseriesbarlabelparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartseriesbarlabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartseriesbarlabelparagraphstyleindex` has been explicitly set.
  var hasTschchartseriesbarlabelparagraphstyleindex: Bool {return _storage._tschchartseriesbarlabelparagraphstyleindex != nil}
  /// Clears the value of `tschchartseriesbarlabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbarlabelparagraphstyleindex() {_uniqueStorage()._tschchartseriesbarlabelparagraphstyleindex = nil}

  var tschchartserieslinelabelparagraphstyleindex: Int32 {
    get {return _storage._tschchartserieslinelabelparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartserieslinelabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartserieslinelabelparagraphstyleindex` has been explicitly set.
  var hasTschchartserieslinelabelparagraphstyleindex: Bool {return _storage._tschchartserieslinelabelparagraphstyleindex != nil}
  /// Clears the value of `tschchartserieslinelabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieslinelabelparagraphstyleindex() {_uniqueStorage()._tschchartserieslinelabelparagraphstyleindex = nil}

  var tschchartseriesarealabelparagraphstyleindex: Int32 {
    get {return _storage._tschchartseriesarealabelparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartseriesarealabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartseriesarealabelparagraphstyleindex` has been explicitly set.
  var hasTschchartseriesarealabelparagraphstyleindex: Bool {return _storage._tschchartseriesarealabelparagraphstyleindex != nil}
  /// Clears the value of `tschchartseriesarealabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesarealabelparagraphstyleindex() {_uniqueStorage()._tschchartseriesarealabelparagraphstyleindex = nil}

  var tschchartseriespielabelparagraphstyleindex: Int32 {
    get {return _storage._tschchartseriespielabelparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartseriespielabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartseriespielabelparagraphstyleindex` has been explicitly set.
  var hasTschchartseriespielabelparagraphstyleindex: Bool {return _storage._tschchartseriespielabelparagraphstyleindex != nil}
  /// Clears the value of `tschchartseriespielabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriespielabelparagraphstyleindex() {_uniqueStorage()._tschchartseriespielabelparagraphstyleindex = nil}

  var tschchartseriesmixedlabelparagraphstyleindex: Int32 {
    get {return _storage._tschchartseriesmixedlabelparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartseriesmixedlabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartseriesmixedlabelparagraphstyleindex` has been explicitly set.
  var hasTschchartseriesmixedlabelparagraphstyleindex: Bool {return _storage._tschchartseriesmixedlabelparagraphstyleindex != nil}
  /// Clears the value of `tschchartseriesmixedlabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedlabelparagraphstyleindex() {_uniqueStorage()._tschchartseriesmixedlabelparagraphstyleindex = nil}

  var tschchartseriesdefaultopacity: Float {
    get {return _storage._tschchartseriesdefaultopacity ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaultopacity = newValue}
  }
  /// Returns true if `tschchartseriesdefaultopacity` has been explicitly set.
  var hasTschchartseriesdefaultopacity: Bool {return _storage._tschchartseriesdefaultopacity != nil}
  /// Clears the value of `tschchartseriesdefaultopacity`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultopacity() {_uniqueStorage()._tschchartseriesdefaultopacity = nil}

  var tschchartserieslinesymbolfilluseseriesstroke: Bool {
    get {return _storage._tschchartserieslinesymbolfilluseseriesstroke ?? false}
    set {_uniqueStorage()._tschchartserieslinesymbolfilluseseriesstroke = newValue}
  }
  /// Returns true if `tschchartserieslinesymbolfilluseseriesstroke` has been explicitly set.
  var hasTschchartserieslinesymbolfilluseseriesstroke: Bool {return _storage._tschchartserieslinesymbolfilluseseriesstroke != nil}
  /// Clears the value of `tschchartserieslinesymbolfilluseseriesstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieslinesymbolfilluseseriesstroke() {_uniqueStorage()._tschchartserieslinesymbolfilluseseriesstroke = nil}

  var tschchartseriesareasymbolfilluseseriesstroke: Bool {
    get {return _storage._tschchartseriesareasymbolfilluseseriesstroke ?? false}
    set {_uniqueStorage()._tschchartseriesareasymbolfilluseseriesstroke = newValue}
  }
  /// Returns true if `tschchartseriesareasymbolfilluseseriesstroke` has been explicitly set.
  var hasTschchartseriesareasymbolfilluseseriesstroke: Bool {return _storage._tschchartseriesareasymbolfilluseseriesstroke != nil}
  /// Clears the value of `tschchartseriesareasymbolfilluseseriesstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesareasymbolfilluseseriesstroke() {_uniqueStorage()._tschchartseriesareasymbolfilluseseriesstroke = nil}

  var tschchartseriesscattersymbolfilluseseriesstroke: Bool {
    get {return _storage._tschchartseriesscattersymbolfilluseseriesstroke ?? false}
    set {_uniqueStorage()._tschchartseriesscattersymbolfilluseseriesstroke = newValue}
  }
  /// Returns true if `tschchartseriesscattersymbolfilluseseriesstroke` has been explicitly set.
  var hasTschchartseriesscattersymbolfilluseseriesstroke: Bool {return _storage._tschchartseriesscattersymbolfilluseseriesstroke != nil}
  /// Clears the value of `tschchartseriesscattersymbolfilluseseriesstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesscattersymbolfilluseseriesstroke() {_uniqueStorage()._tschchartseriesscattersymbolfilluseseriesstroke = nil}

  var tschchartseriesmixedlinesymbolfilluseseriesstroke: Bool {
    get {return _storage._tschchartseriesmixedlinesymbolfilluseseriesstroke ?? false}
    set {_uniqueStorage()._tschchartseriesmixedlinesymbolfilluseseriesstroke = newValue}
  }
  /// Returns true if `tschchartseriesmixedlinesymbolfilluseseriesstroke` has been explicitly set.
  var hasTschchartseriesmixedlinesymbolfilluseseriesstroke: Bool {return _storage._tschchartseriesmixedlinesymbolfilluseseriesstroke != nil}
  /// Clears the value of `tschchartseriesmixedlinesymbolfilluseseriesstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedlinesymbolfilluseseriesstroke() {_uniqueStorage()._tschchartseriesmixedlinesymbolfilluseseriesstroke = nil}

  var tschchartseriesmixedareasymbolfilluseseriesstroke: Bool {
    get {return _storage._tschchartseriesmixedareasymbolfilluseseriesstroke ?? false}
    set {_uniqueStorage()._tschchartseriesmixedareasymbolfilluseseriesstroke = newValue}
  }
  /// Returns true if `tschchartseriesmixedareasymbolfilluseseriesstroke` has been explicitly set.
  var hasTschchartseriesmixedareasymbolfilluseseriesstroke: Bool {return _storage._tschchartseriesmixedareasymbolfilluseseriesstroke != nil}
  /// Clears the value of `tschchartseriesmixedareasymbolfilluseseriesstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedareasymbolfilluseseriesstroke() {_uniqueStorage()._tschchartseriesmixedareasymbolfilluseseriesstroke = nil}

  var tschchartserieslinesymbolfilluseseriesfill: Bool {
    get {return _storage._tschchartserieslinesymbolfilluseseriesfill ?? false}
    set {_uniqueStorage()._tschchartserieslinesymbolfilluseseriesfill = newValue}
  }
  /// Returns true if `tschchartserieslinesymbolfilluseseriesfill` has been explicitly set.
  var hasTschchartserieslinesymbolfilluseseriesfill: Bool {return _storage._tschchartserieslinesymbolfilluseseriesfill != nil}
  /// Clears the value of `tschchartserieslinesymbolfilluseseriesfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieslinesymbolfilluseseriesfill() {_uniqueStorage()._tschchartserieslinesymbolfilluseseriesfill = nil}

  var tschchartseriesareasymbolfilluseseriesfill: Bool {
    get {return _storage._tschchartseriesareasymbolfilluseseriesfill ?? false}
    set {_uniqueStorage()._tschchartseriesareasymbolfilluseseriesfill = newValue}
  }
  /// Returns true if `tschchartseriesareasymbolfilluseseriesfill` has been explicitly set.
  var hasTschchartseriesareasymbolfilluseseriesfill: Bool {return _storage._tschchartseriesareasymbolfilluseseriesfill != nil}
  /// Clears the value of `tschchartseriesareasymbolfilluseseriesfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesareasymbolfilluseseriesfill() {_uniqueStorage()._tschchartseriesareasymbolfilluseseriesfill = nil}

  var tschchartseriesmixedlinesymbolfilluseseriesfill: Bool {
    get {return _storage._tschchartseriesmixedlinesymbolfilluseseriesfill ?? false}
    set {_uniqueStorage()._tschchartseriesmixedlinesymbolfilluseseriesfill = newValue}
  }
  /// Returns true if `tschchartseriesmixedlinesymbolfilluseseriesfill` has been explicitly set.
  var hasTschchartseriesmixedlinesymbolfilluseseriesfill: Bool {return _storage._tschchartseriesmixedlinesymbolfilluseseriesfill != nil}
  /// Clears the value of `tschchartseriesmixedlinesymbolfilluseseriesfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedlinesymbolfilluseseriesfill() {_uniqueStorage()._tschchartseriesmixedlinesymbolfilluseseriesfill = nil}

  var tschchartseriesmixedareasymbolfilluseseriesfill: Bool {
    get {return _storage._tschchartseriesmixedareasymbolfilluseseriesfill ?? false}
    set {_uniqueStorage()._tschchartseriesmixedareasymbolfilluseseriesfill = newValue}
  }
  /// Returns true if `tschchartseriesmixedareasymbolfilluseseriesfill` has been explicitly set.
  var hasTschchartseriesmixedareasymbolfilluseseriesfill: Bool {return _storage._tschchartseriesmixedareasymbolfilluseseriesfill != nil}
  /// Clears the value of `tschchartseriesmixedareasymbolfilluseseriesfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedareasymbolfilluseseriesfill() {_uniqueStorage()._tschchartseriesmixedareasymbolfilluseseriesfill = nil}

  var tschchartseriesmixedcolumnfill: TSD_FillArchive {
    get {return _storage._tschchartseriesmixedcolumnfill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseriesmixedcolumnfill = newValue}
  }
  /// Returns true if `tschchartseriesmixedcolumnfill` has been explicitly set.
  var hasTschchartseriesmixedcolumnfill: Bool {return _storage._tschchartseriesmixedcolumnfill != nil}
  /// Clears the value of `tschchartseriesmixedcolumnfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedcolumnfill() {_uniqueStorage()._tschchartseriesmixedcolumnfill = nil}

  var tschchartseriesmixedareafill: TSD_FillArchive {
    get {return _storage._tschchartseriesmixedareafill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseriesmixedareafill = newValue}
  }
  /// Returns true if `tschchartseriesmixedareafill` has been explicitly set.
  var hasTschchartseriesmixedareafill: Bool {return _storage._tschchartseriesmixedareafill != nil}
  /// Clears the value of `tschchartseriesmixedareafill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedareafill() {_uniqueStorage()._tschchartseriesmixedareafill = nil}

  var tschchartseriesmixedcolumnstroke: TSD_StrokeArchive {
    get {return _storage._tschchartseriesmixedcolumnstroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriesmixedcolumnstroke = newValue}
  }
  /// Returns true if `tschchartseriesmixedcolumnstroke` has been explicitly set.
  var hasTschchartseriesmixedcolumnstroke: Bool {return _storage._tschchartseriesmixedcolumnstroke != nil}
  /// Clears the value of `tschchartseriesmixedcolumnstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedcolumnstroke() {_uniqueStorage()._tschchartseriesmixedcolumnstroke = nil}

  var tschchartseriesmixedlinestroke: TSD_StrokeArchive {
    get {return _storage._tschchartseriesmixedlinestroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriesmixedlinestroke = newValue}
  }
  /// Returns true if `tschchartseriesmixedlinestroke` has been explicitly set.
  var hasTschchartseriesmixedlinestroke: Bool {return _storage._tschchartseriesmixedlinestroke != nil}
  /// Clears the value of `tschchartseriesmixedlinestroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedlinestroke() {_uniqueStorage()._tschchartseriesmixedlinestroke = nil}

  var tschchartseriesmixedareastroke: TSD_StrokeArchive {
    get {return _storage._tschchartseriesmixedareastroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriesmixedareastroke = newValue}
  }
  /// Returns true if `tschchartseriesmixedareastroke` has been explicitly set.
  var hasTschchartseriesmixedareastroke: Bool {return _storage._tschchartseriesmixedareastroke != nil}
  /// Clears the value of `tschchartseriesmixedareastroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedareastroke() {_uniqueStorage()._tschchartseriesmixedareastroke = nil}

  var tschchartseriesmixedlinesymbolsize: Float {
    get {return _storage._tschchartseriesmixedlinesymbolsize ?? 0}
    set {_uniqueStorage()._tschchartseriesmixedlinesymbolsize = newValue}
  }
  /// Returns true if `tschchartseriesmixedlinesymbolsize` has been explicitly set.
  var hasTschchartseriesmixedlinesymbolsize: Bool {return _storage._tschchartseriesmixedlinesymbolsize != nil}
  /// Clears the value of `tschchartseriesmixedlinesymbolsize`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedlinesymbolsize() {_uniqueStorage()._tschchartseriesmixedlinesymbolsize = nil}

  var tschchartseriesmixedareasymbolsize: Float {
    get {return _storage._tschchartseriesmixedareasymbolsize ?? 0}
    set {_uniqueStorage()._tschchartseriesmixedareasymbolsize = newValue}
  }
  /// Returns true if `tschchartseriesmixedareasymbolsize` has been explicitly set.
  var hasTschchartseriesmixedareasymbolsize: Bool {return _storage._tschchartseriesmixedareasymbolsize != nil}
  /// Clears the value of `tschchartseriesmixedareasymbolsize`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedareasymbolsize() {_uniqueStorage()._tschchartseriesmixedareasymbolsize = nil}

  var tschchartseriesmixedlinesymbolfill: TSD_FillArchive {
    get {return _storage._tschchartseriesmixedlinesymbolfill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseriesmixedlinesymbolfill = newValue}
  }
  /// Returns true if `tschchartseriesmixedlinesymbolfill` has been explicitly set.
  var hasTschchartseriesmixedlinesymbolfill: Bool {return _storage._tschchartseriesmixedlinesymbolfill != nil}
  /// Clears the value of `tschchartseriesmixedlinesymbolfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedlinesymbolfill() {_uniqueStorage()._tschchartseriesmixedlinesymbolfill = nil}

  var tschchartseriesmixedareasymbolfill: TSD_FillArchive {
    get {return _storage._tschchartseriesmixedareasymbolfill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseriesmixedareasymbolfill = newValue}
  }
  /// Returns true if `tschchartseriesmixedareasymbolfill` has been explicitly set.
  var hasTschchartseriesmixedareasymbolfill: Bool {return _storage._tschchartseriesmixedareasymbolfill != nil}
  /// Clears the value of `tschchartseriesmixedareasymbolfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedareasymbolfill() {_uniqueStorage()._tschchartseriesmixedareasymbolfill = nil}

  var tschchartseriesmixedlinesymbolstroke: TSD_StrokeArchive {
    get {return _storage._tschchartseriesmixedlinesymbolstroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriesmixedlinesymbolstroke = newValue}
  }
  /// Returns true if `tschchartseriesmixedlinesymbolstroke` has been explicitly set.
  var hasTschchartseriesmixedlinesymbolstroke: Bool {return _storage._tschchartseriesmixedlinesymbolstroke != nil}
  /// Clears the value of `tschchartseriesmixedlinesymbolstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedlinesymbolstroke() {_uniqueStorage()._tschchartseriesmixedlinesymbolstroke = nil}

  var tschchartseriesmixedareasymbolstroke: TSD_StrokeArchive {
    get {return _storage._tschchartseriesmixedareasymbolstroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriesmixedareasymbolstroke = newValue}
  }
  /// Returns true if `tschchartseriesmixedareasymbolstroke` has been explicitly set.
  var hasTschchartseriesmixedareasymbolstroke: Bool {return _storage._tschchartseriesmixedareasymbolstroke != nil}
  /// Clears the value of `tschchartseriesmixedareasymbolstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedareasymbolstroke() {_uniqueStorage()._tschchartseriesmixedareasymbolstroke = nil}

  var tschchartseriesmixedcolumnvaluelabelposition: Int32 {
    get {return _storage._tschchartseriesmixedcolumnvaluelabelposition ?? 0}
    set {_uniqueStorage()._tschchartseriesmixedcolumnvaluelabelposition = newValue}
  }
  /// Returns true if `tschchartseriesmixedcolumnvaluelabelposition` has been explicitly set.
  var hasTschchartseriesmixedcolumnvaluelabelposition: Bool {return _storage._tschchartseriesmixedcolumnvaluelabelposition != nil}
  /// Clears the value of `tschchartseriesmixedcolumnvaluelabelposition`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedcolumnvaluelabelposition() {_uniqueStorage()._tschchartseriesmixedcolumnvaluelabelposition = nil}

  var tschchartseriesmixedlinevaluelabelposition: Int32 {
    get {return _storage._tschchartseriesmixedlinevaluelabelposition ?? 0}
    set {_uniqueStorage()._tschchartseriesmixedlinevaluelabelposition = newValue}
  }
  /// Returns true if `tschchartseriesmixedlinevaluelabelposition` has been explicitly set.
  var hasTschchartseriesmixedlinevaluelabelposition: Bool {return _storage._tschchartseriesmixedlinevaluelabelposition != nil}
  /// Clears the value of `tschchartseriesmixedlinevaluelabelposition`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedlinevaluelabelposition() {_uniqueStorage()._tschchartseriesmixedlinevaluelabelposition = nil}

  var tschchartseriesmixedareavaluelabelposition: Int32 {
    get {return _storage._tschchartseriesmixedareavaluelabelposition ?? 0}
    set {_uniqueStorage()._tschchartseriesmixedareavaluelabelposition = newValue}
  }
  /// Returns true if `tschchartseriesmixedareavaluelabelposition` has been explicitly set.
  var hasTschchartseriesmixedareavaluelabelposition: Bool {return _storage._tschchartseriesmixedareavaluelabelposition != nil}
  /// Clears the value of `tschchartseriesmixedareavaluelabelposition`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedareavaluelabelposition() {_uniqueStorage()._tschchartseriesmixedareavaluelabelposition = nil}

  var tschchartseriesdefaultoutsidelabelparagraphstyleindex: Int32 {
    get {return _storage._tschchartseriesdefaultoutsidelabelparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaultoutsidelabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartseriesdefaultoutsidelabelparagraphstyleindex` has been explicitly set.
  var hasTschchartseriesdefaultoutsidelabelparagraphstyleindex: Bool {return _storage._tschchartseriesdefaultoutsidelabelparagraphstyleindex != nil}
  /// Clears the value of `tschchartseriesdefaultoutsidelabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultoutsidelabelparagraphstyleindex() {_uniqueStorage()._tschchartseriesdefaultoutsidelabelparagraphstyleindex = nil}

  var tschchartseriesbaroutsidelabelparagraphstyleindex: Int32 {
    get {return _storage._tschchartseriesbaroutsidelabelparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartseriesbaroutsidelabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartseriesbaroutsidelabelparagraphstyleindex` has been explicitly set.
  var hasTschchartseriesbaroutsidelabelparagraphstyleindex: Bool {return _storage._tschchartseriesbaroutsidelabelparagraphstyleindex != nil}
  /// Clears the value of `tschchartseriesbaroutsidelabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbaroutsidelabelparagraphstyleindex() {_uniqueStorage()._tschchartseriesbaroutsidelabelparagraphstyleindex = nil}

  var tschchartseriesareaoutsidelabelparagraphstyleindex: Int32 {
    get {return _storage._tschchartseriesareaoutsidelabelparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartseriesareaoutsidelabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartseriesareaoutsidelabelparagraphstyleindex` has been explicitly set.
  var hasTschchartseriesareaoutsidelabelparagraphstyleindex: Bool {return _storage._tschchartseriesareaoutsidelabelparagraphstyleindex != nil}
  /// Clears the value of `tschchartseriesareaoutsidelabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesareaoutsidelabelparagraphstyleindex() {_uniqueStorage()._tschchartseriesareaoutsidelabelparagraphstyleindex = nil}

  var tschchartseriespieoutsidelabelparagraphstyleindex: Int32 {
    get {return _storage._tschchartseriespieoutsidelabelparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartseriespieoutsidelabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartseriespieoutsidelabelparagraphstyleindex` has been explicitly set.
  var hasTschchartseriespieoutsidelabelparagraphstyleindex: Bool {return _storage._tschchartseriespieoutsidelabelparagraphstyleindex != nil}
  /// Clears the value of `tschchartseriespieoutsidelabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriespieoutsidelabelparagraphstyleindex() {_uniqueStorage()._tschchartseriespieoutsidelabelparagraphstyleindex = nil}

  var tschchartseriesmixedoutsidelabelparagraphstyleindex: Int32 {
    get {return _storage._tschchartseriesmixedoutsidelabelparagraphstyleindex ?? 0}
    set {_uniqueStorage()._tschchartseriesmixedoutsidelabelparagraphstyleindex = newValue}
  }
  /// Returns true if `tschchartseriesmixedoutsidelabelparagraphstyleindex` has been explicitly set.
  var hasTschchartseriesmixedoutsidelabelparagraphstyleindex: Bool {return _storage._tschchartseriesmixedoutsidelabelparagraphstyleindex != nil}
  /// Clears the value of `tschchartseriesmixedoutsidelabelparagraphstyleindex`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedoutsidelabelparagraphstyleindex() {_uniqueStorage()._tschchartseriesmixedoutsidelabelparagraphstyleindex = nil}

  var tschchartseriesstackedbarvaluelabelposition: Int32 {
    get {return _storage._tschchartseriesstackedbarvaluelabelposition ?? 0}
    set {_uniqueStorage()._tschchartseriesstackedbarvaluelabelposition = newValue}
  }
  /// Returns true if `tschchartseriesstackedbarvaluelabelposition` has been explicitly set.
  var hasTschchartseriesstackedbarvaluelabelposition: Bool {return _storage._tschchartseriesstackedbarvaluelabelposition != nil}
  /// Clears the value of `tschchartseriesstackedbarvaluelabelposition`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesstackedbarvaluelabelposition() {_uniqueStorage()._tschchartseriesstackedbarvaluelabelposition = nil}

  var tschchartseriesstackedareavaluelabelposition: Int32 {
    get {return _storage._tschchartseriesstackedareavaluelabelposition ?? 0}
    set {_uniqueStorage()._tschchartseriesstackedareavaluelabelposition = newValue}
  }
  /// Returns true if `tschchartseriesstackedareavaluelabelposition` has been explicitly set.
  var hasTschchartseriesstackedareavaluelabelposition: Bool {return _storage._tschchartseriesstackedareavaluelabelposition != nil}
  /// Clears the value of `tschchartseriesstackedareavaluelabelposition`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesstackedareavaluelabelposition() {_uniqueStorage()._tschchartseriesstackedareavaluelabelposition = nil}

  var tschchartseriesdefaulttrendlinestroke: TSD_StrokeArchive {
    get {return _storage._tschchartseriesdefaulttrendlinestroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlinestroke = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlinestroke` has been explicitly set.
  var hasTschchartseriesdefaulttrendlinestroke: Bool {return _storage._tschchartseriesdefaulttrendlinestroke != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlinestroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlinestroke() {_uniqueStorage()._tschchartseriesdefaulttrendlinestroke = nil}

  var tschchartseriesdefaulttrendlineshadow: TSD_ShadowArchive {
    get {return _storage._tschchartseriesdefaulttrendlineshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlineshadow = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlineshadow` has been explicitly set.
  var hasTschchartseriesdefaulttrendlineshadow: Bool {return _storage._tschchartseriesdefaulttrendlineshadow != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlineshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlineshadow() {_uniqueStorage()._tschchartseriesdefaulttrendlineshadow = nil}

  var tschchartseriesdefaulterrorbarshadow: TSD_ShadowArchive {
    get {return _storage._tschchartseriesdefaulterrorbarshadow ?? TSD_ShadowArchive()}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarshadow = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarshadow` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarshadow: Bool {return _storage._tschchartseriesdefaulterrorbarshadow != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarshadow`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarshadow() {_uniqueStorage()._tschchartseriesdefaulterrorbarshadow = nil}

  var tschchartseriesdefaulterrorbarstroke: TSD_StrokeArchive {
    get {return _storage._tschchartseriesdefaulterrorbarstroke ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarstroke = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarstroke` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarstroke: Bool {return _storage._tschchartseriesdefaulterrorbarstroke != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarstroke`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarstroke() {_uniqueStorage()._tschchartseriesdefaulterrorbarstroke = nil}

  var tschchartseriesdefaulterrorbarstrokescatterx: TSD_StrokeArchive {
    get {return _storage._tschchartseriesdefaulterrorbarstrokescatterx ?? TSD_StrokeArchive()}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarstrokescatterx = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarstrokescatterx` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarstrokescatterx: Bool {return _storage._tschchartseriesdefaulterrorbarstrokescatterx != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarstrokescatterx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarstrokescatterx() {_uniqueStorage()._tschchartseriesdefaulterrorbarstrokescatterx = nil}

  var tschchartseriesdefaulterrorbarlineend: TSD_LineEndArchive {
    get {return _storage._tschchartseriesdefaulterrorbarlineend ?? TSD_LineEndArchive()}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarlineend = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarlineend` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarlineend: Bool {return _storage._tschchartseriesdefaulterrorbarlineend != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarlineend`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarlineend() {_uniqueStorage()._tschchartseriesdefaulterrorbarlineend = nil}

  var tschchartseriesdefaulterrorbarlineendscatterx: TSD_LineEndArchive {
    get {return _storage._tschchartseriesdefaulterrorbarlineendscatterx ?? TSD_LineEndArchive()}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarlineendscatterx = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarlineendscatterx` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarlineendscatterx: Bool {return _storage._tschchartseriesdefaulterrorbarlineendscatterx != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarlineendscatterx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarlineendscatterx() {_uniqueStorage()._tschchartseriesdefaulterrorbarlineendscatterx = nil}

  var tschchartseriesdefaultdeprecated3Dfill: TSCH_DEPRECATEDChart3DFillArchive {
    get {return _storage._tschchartseriesdefaultdeprecated3Dfill ?? TSCH_DEPRECATEDChart3DFillArchive()}
    set {_uniqueStorage()._tschchartseriesdefaultdeprecated3Dfill = newValue}
  }
  /// Returns true if `tschchartseriesdefaultdeprecated3Dfill` has been explicitly set.
  var hasTschchartseriesdefaultdeprecated3Dfill: Bool {return _storage._tschchartseriesdefaultdeprecated3Dfill != nil}
  /// Clears the value of `tschchartseriesdefaultdeprecated3Dfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultdeprecated3Dfill() {_uniqueStorage()._tschchartseriesdefaultdeprecated3Dfill = nil}

  var tschchartseriesbardeprecated3Dfill: TSCH_DEPRECATEDChart3DFillArchive {
    get {return _storage._tschchartseriesbardeprecated3Dfill ?? TSCH_DEPRECATEDChart3DFillArchive()}
    set {_uniqueStorage()._tschchartseriesbardeprecated3Dfill = newValue}
  }
  /// Returns true if `tschchartseriesbardeprecated3Dfill` has been explicitly set.
  var hasTschchartseriesbardeprecated3Dfill: Bool {return _storage._tschchartseriesbardeprecated3Dfill != nil}
  /// Clears the value of `tschchartseriesbardeprecated3Dfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbardeprecated3Dfill() {_uniqueStorage()._tschchartseriesbardeprecated3Dfill = nil}

  var tschchartseriescolumndeprecated3Dfill: TSCH_DEPRECATEDChart3DFillArchive {
    get {return _storage._tschchartseriescolumndeprecated3Dfill ?? TSCH_DEPRECATEDChart3DFillArchive()}
    set {_uniqueStorage()._tschchartseriescolumndeprecated3Dfill = newValue}
  }
  /// Returns true if `tschchartseriescolumndeprecated3Dfill` has been explicitly set.
  var hasTschchartseriescolumndeprecated3Dfill: Bool {return _storage._tschchartseriescolumndeprecated3Dfill != nil}
  /// Clears the value of `tschchartseriescolumndeprecated3Dfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriescolumndeprecated3Dfill() {_uniqueStorage()._tschchartseriescolumndeprecated3Dfill = nil}

  var tschchartserieslinedeprecated3Dfill: TSCH_DEPRECATEDChart3DFillArchive {
    get {return _storage._tschchartserieslinedeprecated3Dfill ?? TSCH_DEPRECATEDChart3DFillArchive()}
    set {_uniqueStorage()._tschchartserieslinedeprecated3Dfill = newValue}
  }
  /// Returns true if `tschchartserieslinedeprecated3Dfill` has been explicitly set.
  var hasTschchartserieslinedeprecated3Dfill: Bool {return _storage._tschchartserieslinedeprecated3Dfill != nil}
  /// Clears the value of `tschchartserieslinedeprecated3Dfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieslinedeprecated3Dfill() {_uniqueStorage()._tschchartserieslinedeprecated3Dfill = nil}

  var tschchartseriesareadeprecated3Dfill: TSCH_DEPRECATEDChart3DFillArchive {
    get {return _storage._tschchartseriesareadeprecated3Dfill ?? TSCH_DEPRECATEDChart3DFillArchive()}
    set {_uniqueStorage()._tschchartseriesareadeprecated3Dfill = newValue}
  }
  /// Returns true if `tschchartseriesareadeprecated3Dfill` has been explicitly set.
  var hasTschchartseriesareadeprecated3Dfill: Bool {return _storage._tschchartseriesareadeprecated3Dfill != nil}
  /// Clears the value of `tschchartseriesareadeprecated3Dfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesareadeprecated3Dfill() {_uniqueStorage()._tschchartseriesareadeprecated3Dfill = nil}

  var tschchartseriespiedeprecated3Dfill: TSCH_DEPRECATEDChart3DFillArchive {
    get {return _storage._tschchartseriespiedeprecated3Dfill ?? TSCH_DEPRECATEDChart3DFillArchive()}
    set {_uniqueStorage()._tschchartseriespiedeprecated3Dfill = newValue}
  }
  /// Returns true if `tschchartseriespiedeprecated3Dfill` has been explicitly set.
  var hasTschchartseriespiedeprecated3Dfill: Bool {return _storage._tschchartseriespiedeprecated3Dfill != nil}
  /// Clears the value of `tschchartseriespiedeprecated3Dfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriespiedeprecated3Dfill() {_uniqueStorage()._tschchartseriespiedeprecated3Dfill = nil}

  var tschchartseries3Dbarfill: TSD_FillArchive {
    get {return _storage._tschchartseries3Dbarfill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseries3Dbarfill = newValue}
  }
  /// Returns true if `tschchartseries3Dbarfill` has been explicitly set.
  var hasTschchartseries3Dbarfill: Bool {return _storage._tschchartseries3Dbarfill != nil}
  /// Clears the value of `tschchartseries3Dbarfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseries3Dbarfill() {_uniqueStorage()._tschchartseries3Dbarfill = nil}

  var tschchartseries3Dcolumnfill: TSD_FillArchive {
    get {return _storage._tschchartseries3Dcolumnfill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseries3Dcolumnfill = newValue}
  }
  /// Returns true if `tschchartseries3Dcolumnfill` has been explicitly set.
  var hasTschchartseries3Dcolumnfill: Bool {return _storage._tschchartseries3Dcolumnfill != nil}
  /// Clears the value of `tschchartseries3Dcolumnfill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseries3Dcolumnfill() {_uniqueStorage()._tschchartseries3Dcolumnfill = nil}

  var tschchartseries3Dlinefill: TSD_FillArchive {
    get {return _storage._tschchartseries3Dlinefill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseries3Dlinefill = newValue}
  }
  /// Returns true if `tschchartseries3Dlinefill` has been explicitly set.
  var hasTschchartseries3Dlinefill: Bool {return _storage._tschchartseries3Dlinefill != nil}
  /// Clears the value of `tschchartseries3Dlinefill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseries3Dlinefill() {_uniqueStorage()._tschchartseries3Dlinefill = nil}

  var tschchartseries3Dareafill: TSD_FillArchive {
    get {return _storage._tschchartseries3Dareafill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseries3Dareafill = newValue}
  }
  /// Returns true if `tschchartseries3Dareafill` has been explicitly set.
  var hasTschchartseries3Dareafill: Bool {return _storage._tschchartseries3Dareafill != nil}
  /// Clears the value of `tschchartseries3Dareafill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseries3Dareafill() {_uniqueStorage()._tschchartseries3Dareafill = nil}

  var tschchartseries3Dpiefill: TSD_FillArchive {
    get {return _storage._tschchartseries3Dpiefill ?? TSD_FillArchive()}
    set {_uniqueStorage()._tschchartseries3Dpiefill = newValue}
  }
  /// Returns true if `tschchartseries3Dpiefill` has been explicitly set.
  var hasTschchartseries3Dpiefill: Bool {return _storage._tschchartseries3Dpiefill != nil}
  /// Clears the value of `tschchartseries3Dpiefill`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseries3Dpiefill() {_uniqueStorage()._tschchartseries3Dpiefill = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

struct TSCH_PreUFF_ChartSeriesNonStyleArchive {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var `super`: TSS_StyleArchive {
    get {return _storage._super ?? TSS_StyleArchive()}
    set {_uniqueStorage()._super = newValue}
  }
  /// Returns true if ``super`` has been explicitly set.
  var hasSuper: Bool {return _storage._super != nil}
  /// Clears the value of ``super``. Subsequent reads from it will return its default value.
  mutating func clearSuper() {_uniqueStorage()._super = nil}

  var tschchartseriesdefaultnumberformat: TSCH_PreUFF_ChartsNumberFormatArchive {
    get {return _storage._tschchartseriesdefaultnumberformat ?? TSCH_PreUFF_ChartsNumberFormatArchive()}
    set {_uniqueStorage()._tschchartseriesdefaultnumberformat = newValue}
  }
  /// Returns true if `tschchartseriesdefaultnumberformat` has been explicitly set.
  var hasTschchartseriesdefaultnumberformat: Bool {return _storage._tschchartseriesdefaultnumberformat != nil}
  /// Clears the value of `tschchartseriesdefaultnumberformat`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultnumberformat() {_uniqueStorage()._tschchartseriesdefaultnumberformat = nil}

  var tschchartseriesdefaultnumberformattype: Int32 {
    get {return _storage._tschchartseriesdefaultnumberformattype ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaultnumberformattype = newValue}
  }
  /// Returns true if `tschchartseriesdefaultnumberformattype` has been explicitly set.
  var hasTschchartseriesdefaultnumberformattype: Bool {return _storage._tschchartseriesdefaultnumberformattype != nil}
  /// Clears the value of `tschchartseriesdefaultnumberformattype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultnumberformattype() {_uniqueStorage()._tschchartseriesdefaultnumberformattype = nil}

  var tschchartseriesbarshowvaluelabels: Bool {
    get {return _storage._tschchartseriesbarshowvaluelabels ?? false}
    set {_uniqueStorage()._tschchartseriesbarshowvaluelabels = newValue}
  }
  /// Returns true if `tschchartseriesbarshowvaluelabels` has been explicitly set.
  var hasTschchartseriesbarshowvaluelabels: Bool {return _storage._tschchartseriesbarshowvaluelabels != nil}
  /// Clears the value of `tschchartseriesbarshowvaluelabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbarshowvaluelabels() {_uniqueStorage()._tschchartseriesbarshowvaluelabels = nil}

  var tschchartserieslinesymboltype: Int32 {
    get {return _storage._tschchartserieslinesymboltype ?? 0}
    set {_uniqueStorage()._tschchartserieslinesymboltype = newValue}
  }
  /// Returns true if `tschchartserieslinesymboltype` has been explicitly set.
  var hasTschchartserieslinesymboltype: Bool {return _storage._tschchartserieslinesymboltype != nil}
  /// Clears the value of `tschchartserieslinesymboltype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieslinesymboltype() {_uniqueStorage()._tschchartserieslinesymboltype = nil}

  var tschchartserieslineshowsymbol: Bool {
    get {return _storage._tschchartserieslineshowsymbol ?? false}
    set {_uniqueStorage()._tschchartserieslineshowsymbol = newValue}
  }
  /// Returns true if `tschchartserieslineshowsymbol` has been explicitly set.
  var hasTschchartserieslineshowsymbol: Bool {return _storage._tschchartserieslineshowsymbol != nil}
  /// Clears the value of `tschchartserieslineshowsymbol`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieslineshowsymbol() {_uniqueStorage()._tschchartserieslineshowsymbol = nil}

  var tschchartserieslineshowvaluelabels: Bool {
    get {return _storage._tschchartserieslineshowvaluelabels ?? false}
    set {_uniqueStorage()._tschchartserieslineshowvaluelabels = newValue}
  }
  /// Returns true if `tschchartserieslineshowvaluelabels` has been explicitly set.
  var hasTschchartserieslineshowvaluelabels: Bool {return _storage._tschchartserieslineshowvaluelabels != nil}
  /// Clears the value of `tschchartserieslineshowvaluelabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieslineshowvaluelabels() {_uniqueStorage()._tschchartserieslineshowvaluelabels = nil}

  var tschchartseriesareashowvaluelabels: Bool {
    get {return _storage._tschchartseriesareashowvaluelabels ?? false}
    set {_uniqueStorage()._tschchartseriesareashowvaluelabels = newValue}
  }
  /// Returns true if `tschchartseriesareashowvaluelabels` has been explicitly set.
  var hasTschchartseriesareashowvaluelabels: Bool {return _storage._tschchartseriesareashowvaluelabels != nil}
  /// Clears the value of `tschchartseriesareashowvaluelabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesareashowvaluelabels() {_uniqueStorage()._tschchartseriesareashowvaluelabels = nil}

  var tschchartserieslinelinetype: Int32 {
    get {return _storage._tschchartserieslinelinetype ?? 0}
    set {_uniqueStorage()._tschchartserieslinelinetype = newValue}
  }
  /// Returns true if `tschchartserieslinelinetype` has been explicitly set.
  var hasTschchartserieslinelinetype: Bool {return _storage._tschchartserieslinelinetype != nil}
  /// Clears the value of `tschchartserieslinelinetype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartserieslinelinetype() {_uniqueStorage()._tschchartserieslinelinetype = nil}

  var tschchartseriesareasymboltype: Int32 {
    get {return _storage._tschchartseriesareasymboltype ?? 0}
    set {_uniqueStorage()._tschchartseriesareasymboltype = newValue}
  }
  /// Returns true if `tschchartseriesareasymboltype` has been explicitly set.
  var hasTschchartseriesareasymboltype: Bool {return _storage._tschchartseriesareasymboltype != nil}
  /// Clears the value of `tschchartseriesareasymboltype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesareasymboltype() {_uniqueStorage()._tschchartseriesareasymboltype = nil}

  var tschchartseriesareashowsymbol: Bool {
    get {return _storage._tschchartseriesareashowsymbol ?? false}
    set {_uniqueStorage()._tschchartseriesareashowsymbol = newValue}
  }
  /// Returns true if `tschchartseriesareashowsymbol` has been explicitly set.
  var hasTschchartseriesareashowsymbol: Bool {return _storage._tschchartseriesareashowsymbol != nil}
  /// Clears the value of `tschchartseriesareashowsymbol`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesareashowsymbol() {_uniqueStorage()._tschchartseriesareashowsymbol = nil}

  var tschchartseriespieshowvaluelabels: Bool {
    get {return _storage._tschchartseriespieshowvaluelabels ?? false}
    set {_uniqueStorage()._tschchartseriespieshowvaluelabels = newValue}
  }
  /// Returns true if `tschchartseriespieshowvaluelabels` has been explicitly set.
  var hasTschchartseriespieshowvaluelabels: Bool {return _storage._tschchartseriespieshowvaluelabels != nil}
  /// Clears the value of `tschchartseriespieshowvaluelabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriespieshowvaluelabels() {_uniqueStorage()._tschchartseriespieshowvaluelabels = nil}

  var tschchartseriesscattershowvaluelabels: Bool {
    get {return _storage._tschchartseriesscattershowvaluelabels ?? false}
    set {_uniqueStorage()._tschchartseriesscattershowvaluelabels = newValue}
  }
  /// Returns true if `tschchartseriesscattershowvaluelabels` has been explicitly set.
  var hasTschchartseriesscattershowvaluelabels: Bool {return _storage._tschchartseriesscattershowvaluelabels != nil}
  /// Clears the value of `tschchartseriesscattershowvaluelabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesscattershowvaluelabels() {_uniqueStorage()._tschchartseriesscattershowvaluelabels = nil}

  var tschchartseriespiewedgeexplosion: Float {
    get {return _storage._tschchartseriespiewedgeexplosion ?? 0}
    set {_uniqueStorage()._tschchartseriespiewedgeexplosion = newValue}
  }
  /// Returns true if `tschchartseriespiewedgeexplosion` has been explicitly set.
  var hasTschchartseriespiewedgeexplosion: Bool {return _storage._tschchartseriespiewedgeexplosion != nil}
  /// Clears the value of `tschchartseriespiewedgeexplosion`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriespiewedgeexplosion() {_uniqueStorage()._tschchartseriespiewedgeexplosion = nil}

  var tschchartseriesdefaultshowvaluelabels: Bool {
    get {return _storage._tschchartseriesdefaultshowvaluelabels ?? false}
    set {_uniqueStorage()._tschchartseriesdefaultshowvaluelabels = newValue}
  }
  /// Returns true if `tschchartseriesdefaultshowvaluelabels` has been explicitly set.
  var hasTschchartseriesdefaultshowvaluelabels: Bool {return _storage._tschchartseriesdefaultshowvaluelabels != nil}
  /// Clears the value of `tschchartseriesdefaultshowvaluelabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultshowvaluelabels() {_uniqueStorage()._tschchartseriesdefaultshowvaluelabels = nil}

  var tschchartseriespienumberformat: TSCH_PreUFF_ChartsNumberFormatArchive {
    get {return _storage._tschchartseriespienumberformat ?? TSCH_PreUFF_ChartsNumberFormatArchive()}
    set {_uniqueStorage()._tschchartseriespienumberformat = newValue}
  }
  /// Returns true if `tschchartseriespienumberformat` has been explicitly set.
  var hasTschchartseriespienumberformat: Bool {return _storage._tschchartseriespienumberformat != nil}
  /// Clears the value of `tschchartseriespienumberformat`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriespienumberformat() {_uniqueStorage()._tschchartseriespienumberformat = nil}

  var tschchartseriespienumberformattype: Int32 {
    get {return _storage._tschchartseriespienumberformattype ?? 0}
    set {_uniqueStorage()._tschchartseriespienumberformattype = newValue}
  }
  /// Returns true if `tschchartseriespienumberformattype` has been explicitly set.
  var hasTschchartseriespienumberformattype: Bool {return _storage._tschchartseriespienumberformattype != nil}
  /// Clears the value of `tschchartseriespienumberformattype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriespienumberformattype() {_uniqueStorage()._tschchartseriespienumberformattype = nil}

  var tschchartseriespielabelexplosion: Float {
    get {return _storage._tschchartseriespielabelexplosion ?? 0}
    set {_uniqueStorage()._tschchartseriespielabelexplosion = newValue}
  }
  /// Returns true if `tschchartseriespielabelexplosion` has been explicitly set.
  var hasTschchartseriespielabelexplosion: Bool {return _storage._tschchartseriespielabelexplosion != nil}
  /// Clears the value of `tschchartseriespielabelexplosion`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriespielabelexplosion() {_uniqueStorage()._tschchartseriespielabelexplosion = nil}

  var tschchartseriesmixedlineshowsymbol: Bool {
    get {return _storage._tschchartseriesmixedlineshowsymbol ?? false}
    set {_uniqueStorage()._tschchartseriesmixedlineshowsymbol = newValue}
  }
  /// Returns true if `tschchartseriesmixedlineshowsymbol` has been explicitly set.
  var hasTschchartseriesmixedlineshowsymbol: Bool {return _storage._tschchartseriesmixedlineshowsymbol != nil}
  /// Clears the value of `tschchartseriesmixedlineshowsymbol`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedlineshowsymbol() {_uniqueStorage()._tschchartseriesmixedlineshowsymbol = nil}

  var tschchartseriesmixedareashowsymbol: Bool {
    get {return _storage._tschchartseriesmixedareashowsymbol ?? false}
    set {_uniqueStorage()._tschchartseriesmixedareashowsymbol = newValue}
  }
  /// Returns true if `tschchartseriesmixedareashowsymbol` has been explicitly set.
  var hasTschchartseriesmixedareashowsymbol: Bool {return _storage._tschchartseriesmixedareashowsymbol != nil}
  /// Clears the value of `tschchartseriesmixedareashowsymbol`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedareashowsymbol() {_uniqueStorage()._tschchartseriesmixedareashowsymbol = nil}

  var tschchartseriesmixedlinesymboltype: Int32 {
    get {return _storage._tschchartseriesmixedlinesymboltype ?? 0}
    set {_uniqueStorage()._tschchartseriesmixedlinesymboltype = newValue}
  }
  /// Returns true if `tschchartseriesmixedlinesymboltype` has been explicitly set.
  var hasTschchartseriesmixedlinesymboltype: Bool {return _storage._tschchartseriesmixedlinesymboltype != nil}
  /// Clears the value of `tschchartseriesmixedlinesymboltype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedlinesymboltype() {_uniqueStorage()._tschchartseriesmixedlinesymboltype = nil}

  var tschchartseriesmixedareasymboltype: Int32 {
    get {return _storage._tschchartseriesmixedareasymboltype ?? 0}
    set {_uniqueStorage()._tschchartseriesmixedareasymboltype = newValue}
  }
  /// Returns true if `tschchartseriesmixedareasymboltype` has been explicitly set.
  var hasTschchartseriesmixedareasymboltype: Bool {return _storage._tschchartseriesmixedareasymboltype != nil}
  /// Clears the value of `tschchartseriesmixedareasymboltype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedareasymboltype() {_uniqueStorage()._tschchartseriesmixedareasymboltype = nil}

  var tschchartseriesmixedshowvaluelabels: Bool {
    get {return _storage._tschchartseriesmixedshowvaluelabels ?? false}
    set {_uniqueStorage()._tschchartseriesmixedshowvaluelabels = newValue}
  }
  /// Returns true if `tschchartseriesmixedshowvaluelabels` has been explicitly set.
  var hasTschchartseriesmixedshowvaluelabels: Bool {return _storage._tschchartseriesmixedshowvaluelabels != nil}
  /// Clears the value of `tschchartseriesmixedshowvaluelabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedshowvaluelabels() {_uniqueStorage()._tschchartseriesmixedshowvaluelabels = nil}

  var tschchartseriesmixedlinelinetype: Int32 {
    get {return _storage._tschchartseriesmixedlinelinetype ?? 0}
    set {_uniqueStorage()._tschchartseriesmixedlinelinetype = newValue}
  }
  /// Returns true if `tschchartseriesmixedlinelinetype` has been explicitly set.
  var hasTschchartseriesmixedlinelinetype: Bool {return _storage._tschchartseriesmixedlinelinetype != nil}
  /// Clears the value of `tschchartseriesmixedlinelinetype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesmixedlinelinetype() {_uniqueStorage()._tschchartseriesmixedlinelinetype = nil}

  var tschchartseriesdefaultyaxisordinal: Int32 {
    get {return _storage._tschchartseriesdefaultyaxisordinal ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaultyaxisordinal = newValue}
  }
  /// Returns true if `tschchartseriesdefaultyaxisordinal` has been explicitly set.
  var hasTschchartseriesdefaultyaxisordinal: Bool {return _storage._tschchartseriesdefaultyaxisordinal != nil}
  /// Clears the value of `tschchartseriesdefaultyaxisordinal`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultyaxisordinal() {_uniqueStorage()._tschchartseriesdefaultyaxisordinal = nil}

  var tschchartseriespieshowserieslabels: Bool {
    get {return _storage._tschchartseriespieshowserieslabels ?? false}
    set {_uniqueStorage()._tschchartseriespieshowserieslabels = newValue}
  }
  /// Returns true if `tschchartseriespieshowserieslabels` has been explicitly set.
  var hasTschchartseriespieshowserieslabels: Bool {return _storage._tschchartseriespieshowserieslabels != nil}
  /// Clears the value of `tschchartseriespieshowserieslabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriespieshowserieslabels() {_uniqueStorage()._tschchartseriespieshowserieslabels = nil}

  var tschchartseriesscattershowsymbol: Bool {
    get {return _storage._tschchartseriesscattershowsymbol ?? false}
    set {_uniqueStorage()._tschchartseriesscattershowsymbol = newValue}
  }
  /// Returns true if `tschchartseriesscattershowsymbol` has been explicitly set.
  var hasTschchartseriesscattershowsymbol: Bool {return _storage._tschchartseriesscattershowsymbol != nil}
  /// Clears the value of `tschchartseriesscattershowsymbol`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesscattershowsymbol() {_uniqueStorage()._tschchartseriesscattershowsymbol = nil}

  var tschchartseriesscattersymboltype: Int32 {
    get {return _storage._tschchartseriesscattersymboltype ?? 0}
    set {_uniqueStorage()._tschchartseriesscattersymboltype = newValue}
  }
  /// Returns true if `tschchartseriesscattersymboltype` has been explicitly set.
  var hasTschchartseriesscattersymboltype: Bool {return _storage._tschchartseriesscattersymboltype != nil}
  /// Clears the value of `tschchartseriesscattersymboltype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesscattersymboltype() {_uniqueStorage()._tschchartseriesscattersymboltype = nil}

  var tschchartseriesscatterlinetype: Int32 {
    get {return _storage._tschchartseriesscatterlinetype ?? 0}
    set {_uniqueStorage()._tschchartseriesscatterlinetype = newValue}
  }
  /// Returns true if `tschchartseriesscatterlinetype` has been explicitly set.
  var hasTschchartseriesscatterlinetype: Bool {return _storage._tschchartseriesscatterlinetype != nil}
  /// Clears the value of `tschchartseriesscatterlinetype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesscatterlinetype() {_uniqueStorage()._tschchartseriesscatterlinetype = nil}

  var tschchartseriesscattershowline: Bool {
    get {return _storage._tschchartseriesscattershowline ?? false}
    set {_uniqueStorage()._tschchartseriesscattershowline = newValue}
  }
  /// Returns true if `tschchartseriesscattershowline` has been explicitly set.
  var hasTschchartseriesscattershowline: Bool {return _storage._tschchartseriesscattershowline != nil}
  /// Clears the value of `tschchartseriesscattershowline`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesscattershowline() {_uniqueStorage()._tschchartseriesscattershowline = nil}

  var tschchartseriesstackedpercentnumberformat: TSCH_PreUFF_ChartsNumberFormatArchive {
    get {return _storage._tschchartseriesstackedpercentnumberformat ?? TSCH_PreUFF_ChartsNumberFormatArchive()}
    set {_uniqueStorage()._tschchartseriesstackedpercentnumberformat = newValue}
  }
  /// Returns true if `tschchartseriesstackedpercentnumberformat` has been explicitly set.
  var hasTschchartseriesstackedpercentnumberformat: Bool {return _storage._tschchartseriesstackedpercentnumberformat != nil}
  /// Clears the value of `tschchartseriesstackedpercentnumberformat`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesstackedpercentnumberformat() {_uniqueStorage()._tschchartseriesstackedpercentnumberformat = nil}

  var tschchartseriesdefaultseriestype: Int32 {
    get {return _storage._tschchartseriesdefaultseriestype ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaultseriestype = newValue}
  }
  /// Returns true if `tschchartseriesdefaultseriestype` has been explicitly set.
  var hasTschchartseriesdefaultseriestype: Bool {return _storage._tschchartseriesdefaultseriestype != nil}
  /// Clears the value of `tschchartseriesdefaultseriestype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultseriestype() {_uniqueStorage()._tschchartseriesdefaultseriestype = nil}

  var tschchartseriesdefaulttrendlinetype: Int32 {
    get {return _storage._tschchartseriesdefaulttrendlinetype ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlinetype = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlinetype` has been explicitly set.
  var hasTschchartseriesdefaulttrendlinetype: Bool {return _storage._tschchartseriesdefaulttrendlinetype != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlinetype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlinetype() {_uniqueStorage()._tschchartseriesdefaulttrendlinetype = nil}

  var tschchartseriesdefaulttrendlineorder: Int32 {
    get {return _storage._tschchartseriesdefaulttrendlineorder ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlineorder = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlineorder` has been explicitly set.
  var hasTschchartseriesdefaulttrendlineorder: Bool {return _storage._tschchartseriesdefaulttrendlineorder != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlineorder`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlineorder() {_uniqueStorage()._tschchartseriesdefaulttrendlineorder = nil}

  var tschchartseriesdefaulttrendlineperiod: Int32 {
    get {return _storage._tschchartseriesdefaulttrendlineperiod ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlineperiod = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlineperiod` has been explicitly set.
  var hasTschchartseriesdefaulttrendlineperiod: Bool {return _storage._tschchartseriesdefaulttrendlineperiod != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlineperiod`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlineperiod() {_uniqueStorage()._tschchartseriesdefaulttrendlineperiod = nil}

  var tschchartseriesdefaulttrendlineshowlabel: Bool {
    get {return _storage._tschchartseriesdefaulttrendlineshowlabel ?? false}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlineshowlabel = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlineshowlabel` has been explicitly set.
  var hasTschchartseriesdefaulttrendlineshowlabel: Bool {return _storage._tschchartseriesdefaulttrendlineshowlabel != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlineshowlabel`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlineshowlabel() {_uniqueStorage()._tschchartseriesdefaulttrendlineshowlabel = nil}

  var tschchartseriesdefaulttrendlinelabelstring: String {
    get {return _storage._tschchartseriesdefaulttrendlinelabelstring ?? String()}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlinelabelstring = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlinelabelstring` has been explicitly set.
  var hasTschchartseriesdefaulttrendlinelabelstring: Bool {return _storage._tschchartseriesdefaulttrendlinelabelstring != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlinelabelstring`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlinelabelstring() {_uniqueStorage()._tschchartseriesdefaulttrendlinelabelstring = nil}

  var tschchartseriesdefaulttrendlineshowequation: Bool {
    get {return _storage._tschchartseriesdefaulttrendlineshowequation ?? false}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlineshowequation = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlineshowequation` has been explicitly set.
  var hasTschchartseriesdefaulttrendlineshowequation: Bool {return _storage._tschchartseriesdefaulttrendlineshowequation != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlineshowequation`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlineshowequation() {_uniqueStorage()._tschchartseriesdefaulttrendlineshowequation = nil}

  var tschchartseriesdefaulttrendlineshowr2Value: Bool {
    get {return _storage._tschchartseriesdefaulttrendlineshowr2Value ?? false}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlineshowr2Value = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlineshowr2Value` has been explicitly set.
  var hasTschchartseriesdefaulttrendlineshowr2Value: Bool {return _storage._tschchartseriesdefaulttrendlineshowr2Value != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlineshowr2Value`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlineshowr2Value() {_uniqueStorage()._tschchartseriesdefaulttrendlineshowr2Value = nil}

  var tschchartseriesdefaulterrorbarsetting: Int32 {
    get {return _storage._tschchartseriesdefaulterrorbarsetting ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarsetting = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarsetting` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarsetting: Bool {return _storage._tschchartseriesdefaulterrorbarsetting != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarsetting`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarsetting() {_uniqueStorage()._tschchartseriesdefaulterrorbarsetting = nil}

  var tschchartseriesdefaulterrorbarsettingscatterx: Int32 {
    get {return _storage._tschchartseriesdefaulterrorbarsettingscatterx ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarsettingscatterx = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarsettingscatterx` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarsettingscatterx: Bool {return _storage._tschchartseriesdefaulterrorbarsettingscatterx != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarsettingscatterx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarsettingscatterx() {_uniqueStorage()._tschchartseriesdefaulterrorbarsettingscatterx = nil}

  var tschchartseriesdefaulterrorbartype: Int32 {
    get {return _storage._tschchartseriesdefaulterrorbartype ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbartype = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbartype` has been explicitly set.
  var hasTschchartseriesdefaulterrorbartype: Bool {return _storage._tschchartseriesdefaulterrorbartype != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbartype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbartype() {_uniqueStorage()._tschchartseriesdefaulterrorbartype = nil}

  var tschchartseriesdefaulterrorbartypescatterx: Int32 {
    get {return _storage._tschchartseriesdefaulterrorbartypescatterx ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbartypescatterx = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbartypescatterx` has been explicitly set.
  var hasTschchartseriesdefaulterrorbartypescatterx: Bool {return _storage._tschchartseriesdefaulterrorbartypescatterx != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbartypescatterx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbartypescatterx() {_uniqueStorage()._tschchartseriesdefaulterrorbartypescatterx = nil}

  var tschchartseriesdefaulterrorbarfixedvalue: Float {
    get {return _storage._tschchartseriesdefaulterrorbarfixedvalue ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarfixedvalue = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarfixedvalue` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarfixedvalue: Bool {return _storage._tschchartseriesdefaulterrorbarfixedvalue != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarfixedvalue`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarfixedvalue() {_uniqueStorage()._tschchartseriesdefaulterrorbarfixedvalue = nil}

  var tschchartseriesdefaulterrorbarfixedvaluescatterx: Float {
    get {return _storage._tschchartseriesdefaulterrorbarfixedvaluescatterx ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarfixedvaluescatterx = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarfixedvaluescatterx` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarfixedvaluescatterx: Bool {return _storage._tschchartseriesdefaulterrorbarfixedvaluescatterx != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarfixedvaluescatterx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarfixedvaluescatterx() {_uniqueStorage()._tschchartseriesdefaulterrorbarfixedvaluescatterx = nil}

  var tschchartseriesdefaulterrorbarpercentvalue: Float {
    get {return _storage._tschchartseriesdefaulterrorbarpercentvalue ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarpercentvalue = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarpercentvalue` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarpercentvalue: Bool {return _storage._tschchartseriesdefaulterrorbarpercentvalue != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarpercentvalue`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarpercentvalue() {_uniqueStorage()._tschchartseriesdefaulterrorbarpercentvalue = nil}

  var tschchartseriesdefaulterrorbarpercentvaluescatterx: Float {
    get {return _storage._tschchartseriesdefaulterrorbarpercentvaluescatterx ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarpercentvaluescatterx = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarpercentvaluescatterx` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarpercentvaluescatterx: Bool {return _storage._tschchartseriesdefaulterrorbarpercentvaluescatterx != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarpercentvaluescatterx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarpercentvaluescatterx() {_uniqueStorage()._tschchartseriesdefaulterrorbarpercentvaluescatterx = nil}

  var tschchartseriesdefaulterrorbarstddevvalue: Float {
    get {return _storage._tschchartseriesdefaulterrorbarstddevvalue ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarstddevvalue = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarstddevvalue` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarstddevvalue: Bool {return _storage._tschchartseriesdefaulterrorbarstddevvalue != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarstddevvalue`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarstddevvalue() {_uniqueStorage()._tschchartseriesdefaulterrorbarstddevvalue = nil}

  var tschchartseriesdefaulterrorbarstddevvaluescatterx: Float {
    get {return _storage._tschchartseriesdefaulterrorbarstddevvaluescatterx ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarstddevvaluescatterx = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarstddevvaluescatterx` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarstddevvaluescatterx: Bool {return _storage._tschchartseriesdefaulterrorbarstddevvaluescatterx != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarstddevvaluescatterx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarstddevvaluescatterx() {_uniqueStorage()._tschchartseriesdefaulterrorbarstddevvaluescatterx = nil}

  var tschchartseriesdefaulterrorbarcustompositivedata: TSCH_ChartsNSArrayOfNSNumberDoubleArchive {
    get {return _storage._tschchartseriesdefaulterrorbarcustompositivedata ?? TSCH_ChartsNSArrayOfNSNumberDoubleArchive()}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarcustompositivedata = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarcustompositivedata` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarcustompositivedata: Bool {return _storage._tschchartseriesdefaulterrorbarcustompositivedata != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarcustompositivedata`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarcustompositivedata() {_uniqueStorage()._tschchartseriesdefaulterrorbarcustompositivedata = nil}

  var tschchartseriesdefaulterrorbarcustompositivedatascatterx: TSCH_ChartsNSArrayOfNSNumberDoubleArchive {
    get {return _storage._tschchartseriesdefaulterrorbarcustompositivedatascatterx ?? TSCH_ChartsNSArrayOfNSNumberDoubleArchive()}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarcustompositivedatascatterx = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarcustompositivedatascatterx` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarcustompositivedatascatterx: Bool {return _storage._tschchartseriesdefaulterrorbarcustompositivedatascatterx != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarcustompositivedatascatterx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarcustompositivedatascatterx() {_uniqueStorage()._tschchartseriesdefaulterrorbarcustompositivedatascatterx = nil}

  var tschchartseriesdefaulterrorbarcustomnegativedata: TSCH_ChartsNSArrayOfNSNumberDoubleArchive {
    get {return _storage._tschchartseriesdefaulterrorbarcustomnegativedata ?? TSCH_ChartsNSArrayOfNSNumberDoubleArchive()}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarcustomnegativedata = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarcustomnegativedata` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarcustomnegativedata: Bool {return _storage._tschchartseriesdefaulterrorbarcustomnegativedata != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarcustomnegativedata`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarcustomnegativedata() {_uniqueStorage()._tschchartseriesdefaulterrorbarcustomnegativedata = nil}

  var tschchartseriesdefaulterrorbarcustomnegativedatascatterx: TSCH_ChartsNSArrayOfNSNumberDoubleArchive {
    get {return _storage._tschchartseriesdefaulterrorbarcustomnegativedatascatterx ?? TSCH_ChartsNSArrayOfNSNumberDoubleArchive()}
    set {_uniqueStorage()._tschchartseriesdefaulterrorbarcustomnegativedatascatterx = newValue}
  }
  /// Returns true if `tschchartseriesdefaulterrorbarcustomnegativedatascatterx` has been explicitly set.
  var hasTschchartseriesdefaulterrorbarcustomnegativedatascatterx: Bool {return _storage._tschchartseriesdefaulterrorbarcustomnegativedatascatterx != nil}
  /// Clears the value of `tschchartseriesdefaulterrorbarcustomnegativedatascatterx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulterrorbarcustomnegativedatascatterx() {_uniqueStorage()._tschchartseriesdefaulterrorbarcustomnegativedatascatterx = nil}

  var tschchartseriesdefaulttrendlineequationoffsetx: Float {
    get {return _storage._tschchartseriesdefaulttrendlineequationoffsetx ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlineequationoffsetx = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlineequationoffsetx` has been explicitly set.
  var hasTschchartseriesdefaulttrendlineequationoffsetx: Bool {return _storage._tschchartseriesdefaulttrendlineequationoffsetx != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlineequationoffsetx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlineequationoffsetx() {_uniqueStorage()._tschchartseriesdefaulttrendlineequationoffsetx = nil}

  var tschchartseriesdefaulttrendlineequationoffsety: Float {
    get {return _storage._tschchartseriesdefaulttrendlineequationoffsety ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlineequationoffsety = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlineequationoffsety` has been explicitly set.
  var hasTschchartseriesdefaulttrendlineequationoffsety: Bool {return _storage._tschchartseriesdefaulttrendlineequationoffsety != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlineequationoffsety`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlineequationoffsety() {_uniqueStorage()._tschchartseriesdefaulttrendlineequationoffsety = nil}

  var tschchartseriesdefaulttrendlinersquaredoffsetx: Float {
    get {return _storage._tschchartseriesdefaulttrendlinersquaredoffsetx ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlinersquaredoffsetx = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlinersquaredoffsetx` has been explicitly set.
  var hasTschchartseriesdefaulttrendlinersquaredoffsetx: Bool {return _storage._tschchartseriesdefaulttrendlinersquaredoffsetx != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlinersquaredoffsetx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlinersquaredoffsetx() {_uniqueStorage()._tschchartseriesdefaulttrendlinersquaredoffsetx = nil}

  var tschchartseriesdefaulttrendlinersquaredoffsety: Float {
    get {return _storage._tschchartseriesdefaulttrendlinersquaredoffsety ?? 0}
    set {_uniqueStorage()._tschchartseriesdefaulttrendlinersquaredoffsety = newValue}
  }
  /// Returns true if `tschchartseriesdefaulttrendlinersquaredoffsety` has been explicitly set.
  var hasTschchartseriesdefaulttrendlinersquaredoffsety: Bool {return _storage._tschchartseriesdefaulttrendlinersquaredoffsety != nil}
  /// Clears the value of `tschchartseriesdefaulttrendlinersquaredoffsety`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaulttrendlinersquaredoffsety() {_uniqueStorage()._tschchartseriesdefaulttrendlinersquaredoffsety = nil}

  var tschchartseriesdefaultshowtrendline: Bool {
    get {return _storage._tschchartseriesdefaultshowtrendline ?? false}
    set {_uniqueStorage()._tschchartseriesdefaultshowtrendline = newValue}
  }
  /// Returns true if `tschchartseriesdefaultshowtrendline` has been explicitly set.
  var hasTschchartseriesdefaultshowtrendline: Bool {return _storage._tschchartseriesdefaultshowtrendline != nil}
  /// Clears the value of `tschchartseriesdefaultshowtrendline`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultshowtrendline() {_uniqueStorage()._tschchartseriesdefaultshowtrendline = nil}

  var tschchartseriesdefaultshowerrorbar: Bool {
    get {return _storage._tschchartseriesdefaultshowerrorbar ?? false}
    set {_uniqueStorage()._tschchartseriesdefaultshowerrorbar = newValue}
  }
  /// Returns true if `tschchartseriesdefaultshowerrorbar` has been explicitly set.
  var hasTschchartseriesdefaultshowerrorbar: Bool {return _storage._tschchartseriesdefaultshowerrorbar != nil}
  /// Clears the value of `tschchartseriesdefaultshowerrorbar`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultshowerrorbar() {_uniqueStorage()._tschchartseriesdefaultshowerrorbar = nil}

  var tschchartseriesdefaultshowerrorbarscatterx: Bool {
    get {return _storage._tschchartseriesdefaultshowerrorbarscatterx ?? false}
    set {_uniqueStorage()._tschchartseriesdefaultshowerrorbarscatterx = newValue}
  }
  /// Returns true if `tschchartseriesdefaultshowerrorbarscatterx` has been explicitly set.
  var hasTschchartseriesdefaultshowerrorbarscatterx: Bool {return _storage._tschchartseriesdefaultshowerrorbarscatterx != nil}
  /// Clears the value of `tschchartseriesdefaultshowerrorbarscatterx`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesdefaultshowerrorbarscatterx() {_uniqueStorage()._tschchartseriesdefaultshowerrorbarscatterx = nil}

  var tschchartseriesbubblesizedimension: Int32 {
    get {return _storage._tschchartseriesbubblesizedimension ?? 0}
    set {_uniqueStorage()._tschchartseriesbubblesizedimension = newValue}
  }
  /// Returns true if `tschchartseriesbubblesizedimension` has been explicitly set.
  var hasTschchartseriesbubblesizedimension: Bool {return _storage._tschchartseriesbubblesizedimension != nil}
  /// Clears the value of `tschchartseriesbubblesizedimension`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbubblesizedimension() {_uniqueStorage()._tschchartseriesbubblesizedimension = nil}

  var tschchartseriesbubbleshowvaluelabels: Bool {
    get {return _storage._tschchartseriesbubbleshowvaluelabels ?? false}
    set {_uniqueStorage()._tschchartseriesbubbleshowvaluelabels = newValue}
  }
  /// Returns true if `tschchartseriesbubbleshowvaluelabels` has been explicitly set.
  var hasTschchartseriesbubbleshowvaluelabels: Bool {return _storage._tschchartseriesbubbleshowvaluelabels != nil}
  /// Clears the value of `tschchartseriesbubbleshowvaluelabels`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbubbleshowvaluelabels() {_uniqueStorage()._tschchartseriesbubbleshowvaluelabels = nil}

  var tschchartseriesbubblelinetype: Int32 {
    get {return _storage._tschchartseriesbubblelinetype ?? 0}
    set {_uniqueStorage()._tschchartseriesbubblelinetype = newValue}
  }
  /// Returns true if `tschchartseriesbubblelinetype` has been explicitly set.
  var hasTschchartseriesbubblelinetype: Bool {return _storage._tschchartseriesbubblelinetype != nil}
  /// Clears the value of `tschchartseriesbubblelinetype`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbubblelinetype() {_uniqueStorage()._tschchartseriesbubblelinetype = nil}

  var tschchartseriesbubbleshownegativedata: Bool {
    get {return _storage._tschchartseriesbubbleshownegativedata ?? false}
    set {_uniqueStorage()._tschchartseriesbubbleshownegativedata = newValue}
  }
  /// Returns true if `tschchartseriesbubbleshownegativedata` has been explicitly set.
  var hasTschchartseriesbubbleshownegativedata: Bool {return _storage._tschchartseriesbubbleshownegativedata != nil}
  /// Clears the value of `tschchartseriesbubbleshownegativedata`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbubbleshownegativedata() {_uniqueStorage()._tschchartseriesbubbleshownegativedata = nil}

  var tschchartseriesbubbleadjustmentscale: Float {
    get {return _storage._tschchartseriesbubbleadjustmentscale ?? 0}
    set {_uniqueStorage()._tschchartseriesbubbleadjustmentscale = newValue}
  }
  /// Returns true if `tschchartseriesbubbleadjustmentscale` has been explicitly set.
  var hasTschchartseriesbubbleadjustmentscale: Bool {return _storage._tschchartseriesbubbleadjustmentscale != nil}
  /// Clears the value of `tschchartseriesbubbleadjustmentscale`. Subsequent reads from it will return its default value.
  mutating func clearTschchartseriesbubbleadjustmentscale() {_uniqueStorage()._tschchartseriesbubbleadjustmentscale = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "TSCH.PreUFF"

extension TSCH_PreUFF_ChartInfoArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ChartInfoArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "super"),
    2: .standard(proto: "chart_model"),
    3: .same(proto: "style"),
    4: .standard(proto: "chart_type"),
    5: .standard(proto: "legend_model"),
    6: .standard(proto: "inner_chart_frame"),
    7: .standard(proto: "value_axis_styles"),
    8: .standard(proto: "category_axis_styles"),
    9: .standard(proto: "value_axis_nonstyles"),
    10: .standard(proto: "category_axis_nonstyles"),
    11: .standard(proto: "series_theme_styles"),
    12: .standard(proto: "series_private_styles"),
    13: .standard(proto: "series_non_styles"),
    14: .standard(proto: "non_style"),
    15: .same(proto: "mediator"),
    16: .standard(proto: "cde_preview_origin"),
    17: .standard(proto: "chart_style_preset"),
    18: .standard(proto: "paragraph_styles"),
    19: .standard(proto: "last_row_sected_in_the_cde"),
    20: .standard(proto: "last_column_sected_in_the_cde"),
    21: .standard(proto: "chart_style_preset_index"),
    22: .standard(proto: "needs_calc_engine_deferred_import_action"),
  ]

  fileprivate class _StorageClass {
    var _super: TSD_DrawableArchive? = nil
    var _chartModel: TSCH_PreUFF_ChartModelArchive? = nil
    var _style: TSP_Reference? = nil
    var _chartType: TSCH_ChartType? = nil
    var _legendModel: TSCH_PreUFF_LegendModelArchive? = nil
    var _innerChartFrame: TSCH_RectArchive? = nil
    var _valueAxisStyles: [TSP_Reference] = []
    var _categoryAxisStyles: [TSP_Reference] = []
    var _valueAxisNonstyles: [TSP_Reference] = []
    var _categoryAxisNonstyles: [TSP_Reference] = []
    var _seriesThemeStyles: [TSP_Reference] = []
    var _seriesPrivateStyles: TSP_SparseReferenceArray? = nil
    var _seriesNonStyles: TSP_SparseReferenceArray? = nil
    var _nonStyle: TSP_Reference? = nil
    var _mediator: TSP_Reference? = nil
    var _cdePreviewOrigin: TSP_Point? = nil
    var _chartStylePreset: TSP_Reference? = nil
    var _paragraphStyles: [TSP_Reference] = []
    var _lastRowSectedInTheCde: Int32? = nil
    var _lastColumnSectedInTheCde: Int32? = nil
    var _chartStylePresetIndex: Int32? = nil
    var _needsCalcEngineDeferredImportAction: Bool? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _super = source._super
      _chartModel = source._chartModel
      _style = source._style
      _chartType = source._chartType
      _legendModel = source._legendModel
      _innerChartFrame = source._innerChartFrame
      _valueAxisStyles = source._valueAxisStyles
      _categoryAxisStyles = source._categoryAxisStyles
      _valueAxisNonstyles = source._valueAxisNonstyles
      _categoryAxisNonstyles = source._categoryAxisNonstyles
      _seriesThemeStyles = source._seriesThemeStyles
      _seriesPrivateStyles = source._seriesPrivateStyles
      _seriesNonStyles = source._seriesNonStyles
      _nonStyle = source._nonStyle
      _mediator = source._mediator
      _cdePreviewOrigin = source._cdePreviewOrigin
      _chartStylePreset = source._chartStylePreset
      _paragraphStyles = source._paragraphStyles
      _lastRowSectedInTheCde = source._lastRowSectedInTheCde
      _lastColumnSectedInTheCde = source._lastColumnSectedInTheCde
      _chartStylePresetIndex = source._chartStylePresetIndex
      _needsCalcEngineDeferredImportAction = source._needsCalcEngineDeferredImportAction
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._super == nil {return false}
      if _storage._chartModel == nil {return false}
      if _storage._chartType == nil {return false}
      if _storage._innerChartFrame == nil {return false}
      if let v = _storage._super, !v.isInitialized {return false}
      if let v = _storage._chartModel, !v.isInitialized {return false}
      if let v = _storage._style, !v.isInitialized {return false}
      if let v = _storage._legendModel, !v.isInitialized {return false}
      if let v = _storage._innerChartFrame, !v.isInitialized {return false}
      if !SwiftProtobuf.Internal.areAllInitialized(_storage._valueAxisStyles) {return false}
      if !SwiftProtobuf.Internal.areAllInitialized(_storage._categoryAxisStyles) {return false}
      if !SwiftProtobuf.Internal.areAllInitialized(_storage._valueAxisNonstyles) {return false}
      if !SwiftProtobuf.Internal.areAllInitialized(_storage._categoryAxisNonstyles) {return false}
      if !SwiftProtobuf.Internal.areAllInitialized(_storage._seriesThemeStyles) {return false}
      if let v = _storage._seriesPrivateStyles, !v.isInitialized {return false}
      if let v = _storage._seriesNonStyles, !v.isInitialized {return false}
      if let v = _storage._nonStyle, !v.isInitialized {return false}
      if let v = _storage._mediator, !v.isInitialized {return false}
      if let v = _storage._cdePreviewOrigin, !v.isInitialized {return false}
      if let v = _storage._chartStylePreset, !v.isInitialized {return false}
      if !SwiftProtobuf.Internal.areAllInitialized(_storage._paragraphStyles) {return false}
      return true
    }
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._super)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._chartModel)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._style)
        case 4: try decoder.decodeSingularEnumField(value: &_storage._chartType)
        case 5: try decoder.decodeSingularMessageField(value: &_storage._legendModel)
        case 6: try decoder.decodeSingularMessageField(value: &_storage._innerChartFrame)
        case 7: try decoder.decodeRepeatedMessageField(value: &_storage._valueAxisStyles)
        case 8: try decoder.decodeRepeatedMessageField(value: &_storage._categoryAxisStyles)
        case 9: try decoder.decodeRepeatedMessageField(value: &_storage._valueAxisNonstyles)
        case 10: try decoder.decodeRepeatedMessageField(value: &_storage._categoryAxisNonstyles)
        case 11: try decoder.decodeRepeatedMessageField(value: &_storage._seriesThemeStyles)
        case 12: try decoder.decodeSingularMessageField(value: &_storage._seriesPrivateStyles)
        case 13: try decoder.decodeSingularMessageField(value: &_storage._seriesNonStyles)
        case 14: try decoder.decodeSingularMessageField(value: &_storage._nonStyle)
        case 15: try decoder.decodeSingularMessageField(value: &_storage._mediator)
        case 16: try decoder.decodeSingularMessageField(value: &_storage._cdePreviewOrigin)
        case 17: try decoder.decodeSingularMessageField(value: &_storage._chartStylePreset)
        case 18: try decoder.decodeRepeatedMessageField(value: &_storage._paragraphStyles)
        case 19: try decoder.decodeSingularInt32Field(value: &_storage._lastRowSectedInTheCde)
        case 20: try decoder.decodeSingularInt32Field(value: &_storage._lastColumnSectedInTheCde)
        case 21: try decoder.decodeSingularInt32Field(value: &_storage._chartStylePresetIndex)
        case 22: try decoder.decodeSingularBoolField(value: &_storage._needsCalcEngineDeferredImportAction)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._super {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._chartModel {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._style {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if let v = _storage._chartType {
        try visitor.visitSingularEnumField(value: v, fieldNumber: 4)
      }
      if let v = _storage._legendModel {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      }
      if let v = _storage._innerChartFrame {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
      }
      if !_storage._valueAxisStyles.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._valueAxisStyles, fieldNumber: 7)
      }
      if !_storage._categoryAxisStyles.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._categoryAxisStyles, fieldNumber: 8)
      }
      if !_storage._valueAxisNonstyles.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._valueAxisNonstyles, fieldNumber: 9)
      }
      if !_storage._categoryAxisNonstyles.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._categoryAxisNonstyles, fieldNumber: 10)
      }
      if !_storage._seriesThemeStyles.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._seriesThemeStyles, fieldNumber: 11)
      }
      if let v = _storage._seriesPrivateStyles {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 12)
      }
      if let v = _storage._seriesNonStyles {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 13)
      }
      if let v = _storage._nonStyle {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 14)
      }
      if let v = _storage._mediator {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 15)
      }
      if let v = _storage._cdePreviewOrigin {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 16)
      }
      if let v = _storage._chartStylePreset {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 17)
      }
      if !_storage._paragraphStyles.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._paragraphStyles, fieldNumber: 18)
      }
      if let v = _storage._lastRowSectedInTheCde {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 19)
      }
      if let v = _storage._lastColumnSectedInTheCde {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 20)
      }
      if let v = _storage._chartStylePresetIndex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 21)
      }
      if let v = _storage._needsCalcEngineDeferredImportAction {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 22)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSCH_PreUFF_ChartInfoArchive, rhs: TSCH_PreUFF_ChartInfoArchive) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._super != rhs_storage._super {return false}
        if _storage._chartModel != rhs_storage._chartModel {return false}
        if _storage._style != rhs_storage._style {return false}
        if _storage._chartType != rhs_storage._chartType {return false}
        if _storage._legendModel != rhs_storage._legendModel {return false}
        if _storage._innerChartFrame != rhs_storage._innerChartFrame {return false}
        if _storage._valueAxisStyles != rhs_storage._valueAxisStyles {return false}
        if _storage._categoryAxisStyles != rhs_storage._categoryAxisStyles {return false}
        if _storage._valueAxisNonstyles != rhs_storage._valueAxisNonstyles {return false}
        if _storage._categoryAxisNonstyles != rhs_storage._categoryAxisNonstyles {return false}
        if _storage._seriesThemeStyles != rhs_storage._seriesThemeStyles {return false}
        if _storage._seriesPrivateStyles != rhs_storage._seriesPrivateStyles {return false}
        if _storage._seriesNonStyles != rhs_storage._seriesNonStyles {return false}
        if _storage._nonStyle != rhs_storage._nonStyle {return false}
        if _storage._mediator != rhs_storage._mediator {return false}
        if _storage._cdePreviewOrigin != rhs_storage._cdePreviewOrigin {return false}
        if _storage._chartStylePreset != rhs_storage._chartStylePreset {return false}
        if _storage._paragraphStyles != rhs_storage._paragraphStyles {return false}
        if _storage._lastRowSectedInTheCde != rhs_storage._lastRowSectedInTheCde {return false}
        if _storage._lastColumnSectedInTheCde != rhs_storage._lastColumnSectedInTheCde {return false}
        if _storage._chartStylePresetIndex != rhs_storage._chartStylePresetIndex {return false}
        if _storage._needsCalcEngineDeferredImportAction != rhs_storage._needsCalcEngineDeferredImportAction {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSCH_PreUFF_LegendModelArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".LegendModelArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "info"),
    2: .same(proto: "frame"),
    3: .same(proto: "style"),
    4: .standard(proto: "non_style"),
  ]

  public var isInitialized: Bool {
    if self._frame == nil {return false}
    if self._style == nil {return false}
    if self._nonStyle == nil {return false}
    if let v = self._info, !v.isInitialized {return false}
    if let v = self._frame, !v.isInitialized {return false}
    if let v = self._style, !v.isInitialized {return false}
    if let v = self._nonStyle, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._info)
      case 2: try decoder.decodeSingularMessageField(value: &self._frame)
      case 3: try decoder.decodeSingularMessageField(value: &self._style)
      case 4: try decoder.decodeSingularMessageField(value: &self._nonStyle)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._info {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if let v = self._frame {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    }
    if let v = self._style {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
    }
    if let v = self._nonStyle {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSCH_PreUFF_LegendModelArchive, rhs: TSCH_PreUFF_LegendModelArchive) -> Bool {
    if lhs._info != rhs._info {return false}
    if lhs._frame != rhs._frame {return false}
    if lhs._style != rhs._style {return false}
    if lhs._nonStyle != rhs._nonStyle {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSCH_PreUFF_ChartModelArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ChartModelArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "info"),
    2: .same(proto: "grid"),
    3: .standard(proto: "series_types"),
    4: .standard(proto: "scatter_format"),
    5: .standard(proto: "inline_grid"),
    6: .standard(proto: "multidataset_index"),
  ]

  public var isInitialized: Bool {
    if self._grid == nil {return false}
    if let v = self._info, !v.isInitialized {return false}
    if let v = self._grid, !v.isInitialized {return false}
    if let v = self._inlineGrid, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._info)
      case 2: try decoder.decodeSingularMessageField(value: &self._grid)
      case 3: try decoder.decodeRepeatedUInt32Field(value: &self.seriesTypes)
      case 4: try decoder.decodeSingularUInt32Field(value: &self._scatterFormat)
      case 5: try decoder.decodeSingularMessageField(value: &self._inlineGrid)
      case 6: try decoder.decodeSingularUInt32Field(value: &self._multidatasetIndex)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._info {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if let v = self._grid {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    }
    if !self.seriesTypes.isEmpty {
      try visitor.visitRepeatedUInt32Field(value: self.seriesTypes, fieldNumber: 3)
    }
    if let v = self._scatterFormat {
      try visitor.visitSingularUInt32Field(value: v, fieldNumber: 4)
    }
    if let v = self._inlineGrid {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
    }
    if let v = self._multidatasetIndex {
      try visitor.visitSingularUInt32Field(value: v, fieldNumber: 6)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSCH_PreUFF_ChartModelArchive, rhs: TSCH_PreUFF_ChartModelArchive) -> Bool {
    if lhs._info != rhs._info {return false}
    if lhs._grid != rhs._grid {return false}
    if lhs.seriesTypes != rhs.seriesTypes {return false}
    if lhs._scatterFormat != rhs._scatterFormat {return false}
    if lhs._inlineGrid != rhs._inlineGrid {return false}
    if lhs._multidatasetIndex != rhs._multidatasetIndex {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSCH_PreUFF_ChartGridArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ChartGridArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "direction"),
    2: .standard(proto: "row_name"),
    3: .standard(proto: "column_name"),
    4: .standard(proto: "value_row"),
    6: .same(proto: "dirty"),
  ]

  public var isInitialized: Bool {
    if self._direction == nil {return false}
    if self._dirty == nil {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularInt32Field(value: &self._direction)
      case 2: try decoder.decodeRepeatedStringField(value: &self.rowName)
      case 3: try decoder.decodeRepeatedStringField(value: &self.columnName)
      case 4: try decoder.decodeRepeatedMessageField(value: &self.valueRow)
      case 6: try decoder.decodeSingularBoolField(value: &self._dirty)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._direction {
      try visitor.visitSingularInt32Field(value: v, fieldNumber: 1)
    }
    if !self.rowName.isEmpty {
      try visitor.visitRepeatedStringField(value: self.rowName, fieldNumber: 2)
    }
    if !self.columnName.isEmpty {
      try visitor.visitRepeatedStringField(value: self.columnName, fieldNumber: 3)
    }
    if !self.valueRow.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.valueRow, fieldNumber: 4)
    }
    if let v = self._dirty {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 6)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSCH_PreUFF_ChartGridArchive, rhs: TSCH_PreUFF_ChartGridArchive) -> Bool {
    if lhs._direction != rhs._direction {return false}
    if lhs.rowName != rhs.rowName {return false}
    if lhs.columnName != rhs.columnName {return false}
    if lhs.valueRow != rhs.valueRow {return false}
    if lhs._dirty != rhs._dirty {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSCH_PreUFF_ChartGridArchive.ValueRow: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = TSCH_PreUFF_ChartGridArchive.protoMessageName + ".ValueRow"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "value"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeRepeatedDoubleField(value: &self.value)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.value.isEmpty {
      try visitor.visitRepeatedDoubleField(value: self.value, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSCH_PreUFF_ChartGridArchive.ValueRow, rhs: TSCH_PreUFF_ChartGridArchive.ValueRow) -> Bool {
    if lhs.value != rhs.value {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSCH_PreUFF_ChartsNumberFormatArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ChartsNumberFormatArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "value_type"),
    2: .standard(proto: "format_string"),
    3: .standard(proto: "decimal_places"),
    4: .standard(proto: "currency_code"),
    5: .standard(proto: "negative_style"),
    6: .standard(proto: "show_thousands_separator"),
    7: .standard(proto: "fraction_accuracy"),
    8: .standard(proto: "suffix_string"),
    9: .same(proto: "base"),
    10: .standard(proto: "base_places"),
    11: .standard(proto: "base_use_minus_sign"),
    12: .standard(proto: "use_accounting_style"),
    13: .standard(proto: "is_custom"),
    14: .standard(proto: "scale_factor"),
    15: .standard(proto: "interstitial_strings"),
    16: .standard(proto: "interstitial_string_insertion_indexes"),
    17: .standard(proto: "index_from_right_of_last_digit_placeholder"),
    18: .standard(proto: "is_text_format"),
    19: .standard(proto: "minimum_integer_width"),
    20: .standard(proto: "decimal_width"),
    21: .standard(proto: "number_of_non_space_integer_placeholder_digits"),
    22: .standard(proto: "number_of_non_space_decimal_placeholder_digits"),
    23: .standard(proto: "format_name"),
    24: .standard(proto: "prefix_string"),
  ]

  fileprivate class _StorageClass {
    var _valueType: TSCH_NumberValueType? = nil
    var _formatString: String? = nil
    var _decimalPlaces: UInt32? = nil
    var _currencyCode: String? = nil
    var _negativeStyle: TSCH_NegativeNumberStyle? = nil
    var _showThousandsSeparator: Bool? = nil
    var _fractionAccuracy: TSCH_FractionAccuracy? = nil
    var _suffixString: String? = nil
    var _base: UInt32? = nil
    var _basePlaces: UInt32? = nil
    var _baseUseMinusSign: Bool? = nil
    var _useAccountingStyle: Bool? = nil
    var _isCustom: Bool? = nil
    var _scaleFactor: Double? = nil
    var _interstitialStrings: [String] = []
    var _interstitialStringInsertionIndexes: TSP_IndexSet? = nil
    var _indexFromRightOfLastDigitPlaceholder: UInt32? = nil
    var _isTextFormat: Bool? = nil
    var _minimumIntegerWidth: UInt32? = nil
    var _decimalWidth: UInt32? = nil
    var _numberOfNonSpaceIntegerPlaceholderDigits: UInt32? = nil
    var _numberOfNonSpaceDecimalPlaceholderDigits: UInt32? = nil
    var _formatName: String? = nil
    var _prefixString: String? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _valueType = source._valueType
      _formatString = source._formatString
      _decimalPlaces = source._decimalPlaces
      _currencyCode = source._currencyCode
      _negativeStyle = source._negativeStyle
      _showThousandsSeparator = source._showThousandsSeparator
      _fractionAccuracy = source._fractionAccuracy
      _suffixString = source._suffixString
      _base = source._base
      _basePlaces = source._basePlaces
      _baseUseMinusSign = source._baseUseMinusSign
      _useAccountingStyle = source._useAccountingStyle
      _isCustom = source._isCustom
      _scaleFactor = source._scaleFactor
      _interstitialStrings = source._interstitialStrings
      _interstitialStringInsertionIndexes = source._interstitialStringInsertionIndexes
      _indexFromRightOfLastDigitPlaceholder = source._indexFromRightOfLastDigitPlaceholder
      _isTextFormat = source._isTextFormat
      _minimumIntegerWidth = source._minimumIntegerWidth
      _decimalWidth = source._decimalWidth
      _numberOfNonSpaceIntegerPlaceholderDigits = source._numberOfNonSpaceIntegerPlaceholderDigits
      _numberOfNonSpaceDecimalPlaceholderDigits = source._numberOfNonSpaceDecimalPlaceholderDigits
      _formatName = source._formatName
      _prefixString = source._prefixString
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._valueType == nil {return false}
      if _storage._decimalPlaces == nil {return false}
      if _storage._negativeStyle == nil {return false}
      if _storage._showThousandsSeparator == nil {return false}
      if _storage._fractionAccuracy == nil {return false}
      if _storage._base == nil {return false}
      if _storage._basePlaces == nil {return false}
      if _storage._baseUseMinusSign == nil {return false}
      if _storage._useAccountingStyle == nil {return false}
      if _storage._isCustom == nil {return false}
      if _storage._scaleFactor == nil {return false}
      if _storage._interstitialStringInsertionIndexes == nil {return false}
      if _storage._indexFromRightOfLastDigitPlaceholder == nil {return false}
      if _storage._isTextFormat == nil {return false}
      if _storage._minimumIntegerWidth == nil {return false}
      if _storage._decimalWidth == nil {return false}
      if _storage._numberOfNonSpaceIntegerPlaceholderDigits == nil {return false}
      if _storage._numberOfNonSpaceDecimalPlaceholderDigits == nil {return false}
      if let v = _storage._interstitialStringInsertionIndexes, !v.isInitialized {return false}
      return true
    }
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularEnumField(value: &_storage._valueType)
        case 2: try decoder.decodeSingularStringField(value: &_storage._formatString)
        case 3: try decoder.decodeSingularUInt32Field(value: &_storage._decimalPlaces)
        case 4: try decoder.decodeSingularStringField(value: &_storage._currencyCode)
        case 5: try decoder.decodeSingularEnumField(value: &_storage._negativeStyle)
        case 6: try decoder.decodeSingularBoolField(value: &_storage._showThousandsSeparator)
        case 7: try decoder.decodeSingularEnumField(value: &_storage._fractionAccuracy)
        case 8: try decoder.decodeSingularStringField(value: &_storage._suffixString)
        case 9: try decoder.decodeSingularUInt32Field(value: &_storage._base)
        case 10: try decoder.decodeSingularUInt32Field(value: &_storage._basePlaces)
        case 11: try decoder.decodeSingularBoolField(value: &_storage._baseUseMinusSign)
        case 12: try decoder.decodeSingularBoolField(value: &_storage._useAccountingStyle)
        case 13: try decoder.decodeSingularBoolField(value: &_storage._isCustom)
        case 14: try decoder.decodeSingularDoubleField(value: &_storage._scaleFactor)
        case 15: try decoder.decodeRepeatedStringField(value: &_storage._interstitialStrings)
        case 16: try decoder.decodeSingularMessageField(value: &_storage._interstitialStringInsertionIndexes)
        case 17: try decoder.decodeSingularUInt32Field(value: &_storage._indexFromRightOfLastDigitPlaceholder)
        case 18: try decoder.decodeSingularBoolField(value: &_storage._isTextFormat)
        case 19: try decoder.decodeSingularUInt32Field(value: &_storage._minimumIntegerWidth)
        case 20: try decoder.decodeSingularUInt32Field(value: &_storage._decimalWidth)
        case 21: try decoder.decodeSingularUInt32Field(value: &_storage._numberOfNonSpaceIntegerPlaceholderDigits)
        case 22: try decoder.decodeSingularUInt32Field(value: &_storage._numberOfNonSpaceDecimalPlaceholderDigits)
        case 23: try decoder.decodeSingularStringField(value: &_storage._formatName)
        case 24: try decoder.decodeSingularStringField(value: &_storage._prefixString)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._valueType {
        try visitor.visitSingularEnumField(value: v, fieldNumber: 1)
      }
      if let v = _storage._formatString {
        try visitor.visitSingularStringField(value: v, fieldNumber: 2)
      }
      if let v = _storage._decimalPlaces {
        try visitor.visitSingularUInt32Field(value: v, fieldNumber: 3)
      }
      if let v = _storage._currencyCode {
        try visitor.visitSingularStringField(value: v, fieldNumber: 4)
      }
      if let v = _storage._negativeStyle {
        try visitor.visitSingularEnumField(value: v, fieldNumber: 5)
      }
      if let v = _storage._showThousandsSeparator {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 6)
      }
      if let v = _storage._fractionAccuracy {
        try visitor.visitSingularEnumField(value: v, fieldNumber: 7)
      }
      if let v = _storage._suffixString {
        try visitor.visitSingularStringField(value: v, fieldNumber: 8)
      }
      if let v = _storage._base {
        try visitor.visitSingularUInt32Field(value: v, fieldNumber: 9)
      }
      if let v = _storage._basePlaces {
        try visitor.visitSingularUInt32Field(value: v, fieldNumber: 10)
      }
      if let v = _storage._baseUseMinusSign {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 11)
      }
      if let v = _storage._useAccountingStyle {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 12)
      }
      if let v = _storage._isCustom {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 13)
      }
      if let v = _storage._scaleFactor {
        try visitor.visitSingularDoubleField(value: v, fieldNumber: 14)
      }
      if !_storage._interstitialStrings.isEmpty {
        try visitor.visitRepeatedStringField(value: _storage._interstitialStrings, fieldNumber: 15)
      }
      if let v = _storage._interstitialStringInsertionIndexes {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 16)
      }
      if let v = _storage._indexFromRightOfLastDigitPlaceholder {
        try visitor.visitSingularUInt32Field(value: v, fieldNumber: 17)
      }
      if let v = _storage._isTextFormat {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 18)
      }
      if let v = _storage._minimumIntegerWidth {
        try visitor.visitSingularUInt32Field(value: v, fieldNumber: 19)
      }
      if let v = _storage._decimalWidth {
        try visitor.visitSingularUInt32Field(value: v, fieldNumber: 20)
      }
      if let v = _storage._numberOfNonSpaceIntegerPlaceholderDigits {
        try visitor.visitSingularUInt32Field(value: v, fieldNumber: 21)
      }
      if let v = _storage._numberOfNonSpaceDecimalPlaceholderDigits {
        try visitor.visitSingularUInt32Field(value: v, fieldNumber: 22)
      }
      if let v = _storage._formatName {
        try visitor.visitSingularStringField(value: v, fieldNumber: 23)
      }
      if let v = _storage._prefixString {
        try visitor.visitSingularStringField(value: v, fieldNumber: 24)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSCH_PreUFF_ChartsNumberFormatArchive, rhs: TSCH_PreUFF_ChartsNumberFormatArchive) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._valueType != rhs_storage._valueType {return false}
        if _storage._formatString != rhs_storage._formatString {return false}
        if _storage._decimalPlaces != rhs_storage._decimalPlaces {return false}
        if _storage._currencyCode != rhs_storage._currencyCode {return false}
        if _storage._negativeStyle != rhs_storage._negativeStyle {return false}
        if _storage._showThousandsSeparator != rhs_storage._showThousandsSeparator {return false}
        if _storage._fractionAccuracy != rhs_storage._fractionAccuracy {return false}
        if _storage._suffixString != rhs_storage._suffixString {return false}
        if _storage._base != rhs_storage._base {return false}
        if _storage._basePlaces != rhs_storage._basePlaces {return false}
        if _storage._baseUseMinusSign != rhs_storage._baseUseMinusSign {return false}
        if _storage._useAccountingStyle != rhs_storage._useAccountingStyle {return false}
        if _storage._isCustom != rhs_storage._isCustom {return false}
        if _storage._scaleFactor != rhs_storage._scaleFactor {return false}
        if _storage._interstitialStrings != rhs_storage._interstitialStrings {return false}
        if _storage._interstitialStringInsertionIndexes != rhs_storage._interstitialStringInsertionIndexes {return false}
        if _storage._indexFromRightOfLastDigitPlaceholder != rhs_storage._indexFromRightOfLastDigitPlaceholder {return false}
        if _storage._isTextFormat != rhs_storage._isTextFormat {return false}
        if _storage._minimumIntegerWidth != rhs_storage._minimumIntegerWidth {return false}
        if _storage._decimalWidth != rhs_storage._decimalWidth {return false}
        if _storage._numberOfNonSpaceIntegerPlaceholderDigits != rhs_storage._numberOfNonSpaceIntegerPlaceholderDigits {return false}
        if _storage._numberOfNonSpaceDecimalPlaceholderDigits != rhs_storage._numberOfNonSpaceDecimalPlaceholderDigits {return false}
        if _storage._formatName != rhs_storage._formatName {return false}
        if _storage._prefixString != rhs_storage._prefixString {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSCH_PreUFF_ChartStyleArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ChartStyleArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "super"),
    10: .same(proto: "tschchartinfodefaultbackgroundfill"),
    11: .same(proto: "tschchartinfodefaultbackgroundstroke"),
    12: .same(proto: "tschchartinfodefaultgridbackgroundfill"),
    13: .same(proto: "tschchartinfodefaultintersetgap"),
    14: .same(proto: "tschchartinfodefaultinterbargap"),
    15: .same(proto: "tschchartinfodefaultshowborder"),
    16: .same(proto: "tschchartinfodefaultborderstroke"),
    18: .same(proto: "tschchartinfodefaulttitlecolor"),
    19: .same(proto: "tschchartinfodefaultgridbackgroundopacity"),
    20: .same(proto: "tschchartinfodefaultcombinelayers"),
    21: .same(proto: "tschchartinfodefaultbordershadow"),
    22: .same(proto: "tschchartinfodefaultborderopacity"),
    23: .same(proto: "tschchartinfodefaulttitleparagraphstyleindex"),
    24: .same(proto: "tschchartinfodefaultdeprecatedmasterfontfamily"),
    25: .same(proto: "tschchartinfodefaultdeprecatedmasterfontnamedsize"),
    30: .same(proto: "tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex"),
    31: .same(proto: "tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex"),
    32: .same(proto: "tschchartinfodefaultdeprecatedtrendlineequationshadow"),
    33: .same(proto: "tschchartinfodefaultdeprecatedtrendlinersquaredshadow"),
    34: .same(proto: "tschchartinfodefaultdeprecatedtrendlineequationopacity"),
    35: .same(proto: "tschchartinfodefaultdeprecatedtrendlinersquaredopacity"),
    308: .same(proto: "tschchartinfobardeprecated3dshadow"),
    309: .same(proto: "tschchartinfocolumndeprecated3dshadow"),
    310: .same(proto: "tschchartinfolinedeprecated3dshadow"),
    311: .same(proto: "tschchartinfoareadeprecated3dshadow"),
    312: .same(proto: "tschchartinfopiedeprecated3dshadow"),
    313: .same(proto: "tschchartinfodefault3dlightingpackage"),
    314: .same(proto: "tschchartinfocolumn3dlightingpackage"),
    315: .same(proto: "tschchartinfobar3dlightingpackage"),
    316: .same(proto: "tschchartinfoline3dlightingpackage"),
    317: .same(proto: "tschchartinfoarea3dlightingpackage"),
    318: .same(proto: "tschchartinfopie3dlightingpackage"),
    326: .same(proto: "tschchartinfodefaultdeprecated3dbeveledges"),
    327: .same(proto: "tschchartinfopiedeprecated3dbeveledges"),
    328: .same(proto: "tschchartinfobardeprecated3dbeveledges"),
    329: .same(proto: "tschchartinfocolumndeprecated3dbeveledges"),
    330: .same(proto: "tschchartinfodefaultdeprecated3dbarshape"),
    335: .same(proto: "tschchartinfodefault3dchartopacity"),
  ]

  fileprivate class _StorageClass {
    var _super: TSS_StyleArchive? = nil
    var _tschchartinfodefaultbackgroundfill: TSD_FillArchive? = nil
    var _tschchartinfodefaultbackgroundstroke: TSD_StrokeArchive? = nil
    var _tschchartinfodefaultgridbackgroundfill: TSD_FillArchive? = nil
    var _tschchartinfodefaultintersetgap: Float? = nil
    var _tschchartinfodefaultinterbargap: Float? = nil
    var _tschchartinfodefaultshowborder: Bool? = nil
    var _tschchartinfodefaultborderstroke: TSD_StrokeArchive? = nil
    var _tschchartinfodefaulttitlecolor: TSP_Color? = nil
    var _tschchartinfodefaultgridbackgroundopacity: Float? = nil
    var _tschchartinfodefaultcombinelayers: Bool? = nil
    var _tschchartinfodefaultbordershadow: TSD_ShadowArchive? = nil
    var _tschchartinfodefaultborderopacity: Float? = nil
    var _tschchartinfodefaulttitleparagraphstyleindex: Int32? = nil
    var _tschchartinfodefaultdeprecatedmasterfontfamily: String? = nil
    var _tschchartinfodefaultdeprecatedmasterfontnamedsize: Int32? = nil
    var _tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex: Int32? = nil
    var _tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex: Int32? = nil
    var _tschchartinfodefaultdeprecatedtrendlineequationshadow: TSD_ShadowArchive? = nil
    var _tschchartinfodefaultdeprecatedtrendlinersquaredshadow: TSD_ShadowArchive? = nil
    var _tschchartinfodefaultdeprecatedtrendlineequationopacity: Float? = nil
    var _tschchartinfodefaultdeprecatedtrendlinersquaredopacity: Float? = nil
    var _tschchartinfobardeprecated3Dshadow: TSD_ShadowArchive? = nil
    var _tschchartinfocolumndeprecated3Dshadow: TSD_ShadowArchive? = nil
    var _tschchartinfolinedeprecated3Dshadow: TSD_ShadowArchive? = nil
    var _tschchartinfoareadeprecated3Dshadow: TSD_ShadowArchive? = nil
    var _tschchartinfopiedeprecated3Dshadow: TSD_ShadowArchive? = nil
    var _tschchartinfodefault3Dlightingpackage: TSCH_Chart3DLightingPackageArchive? = nil
    var _tschchartinfocolumn3Dlightingpackage: TSCH_Chart3DLightingPackageArchive? = nil
    var _tschchartinfobar3Dlightingpackage: TSCH_Chart3DLightingPackageArchive? = nil
    var _tschchartinfoline3Dlightingpackage: TSCH_Chart3DLightingPackageArchive? = nil
    var _tschchartinfoarea3Dlightingpackage: TSCH_Chart3DLightingPackageArchive? = nil
    var _tschchartinfopie3Dlightingpackage: TSCH_Chart3DLightingPackageArchive? = nil
    var _tschchartinfodefaultdeprecated3Dbeveledges: Bool? = nil
    var _tschchartinfopiedeprecated3Dbeveledges: Bool? = nil
    var _tschchartinfobardeprecated3Dbeveledges: Bool? = nil
    var _tschchartinfocolumndeprecated3Dbeveledges: Bool? = nil
    var _tschchartinfodefaultdeprecated3Dbarshape: Int32? = nil
    var _tschchartinfodefault3Dchartopacity: Float? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _super = source._super
      _tschchartinfodefaultbackgroundfill = source._tschchartinfodefaultbackgroundfill
      _tschchartinfodefaultbackgroundstroke = source._tschchartinfodefaultbackgroundstroke
      _tschchartinfodefaultgridbackgroundfill = source._tschchartinfodefaultgridbackgroundfill
      _tschchartinfodefaultintersetgap = source._tschchartinfodefaultintersetgap
      _tschchartinfodefaultinterbargap = source._tschchartinfodefaultinterbargap
      _tschchartinfodefaultshowborder = source._tschchartinfodefaultshowborder
      _tschchartinfodefaultborderstroke = source._tschchartinfodefaultborderstroke
      _tschchartinfodefaulttitlecolor = source._tschchartinfodefaulttitlecolor
      _tschchartinfodefaultgridbackgroundopacity = source._tschchartinfodefaultgridbackgroundopacity
      _tschchartinfodefaultcombinelayers = source._tschchartinfodefaultcombinelayers
      _tschchartinfodefaultbordershadow = source._tschchartinfodefaultbordershadow
      _tschchartinfodefaultborderopacity = source._tschchartinfodefaultborderopacity
      _tschchartinfodefaulttitleparagraphstyleindex = source._tschchartinfodefaulttitleparagraphstyleindex
      _tschchartinfodefaultdeprecatedmasterfontfamily = source._tschchartinfodefaultdeprecatedmasterfontfamily
      _tschchartinfodefaultdeprecatedmasterfontnamedsize = source._tschchartinfodefaultdeprecatedmasterfontnamedsize
      _tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex = source._tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex
      _tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex = source._tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex
      _tschchartinfodefaultdeprecatedtrendlineequationshadow = source._tschchartinfodefaultdeprecatedtrendlineequationshadow
      _tschchartinfodefaultdeprecatedtrendlinersquaredshadow = source._tschchartinfodefaultdeprecatedtrendlinersquaredshadow
      _tschchartinfodefaultdeprecatedtrendlineequationopacity = source._tschchartinfodefaultdeprecatedtrendlineequationopacity
      _tschchartinfodefaultdeprecatedtrendlinersquaredopacity = source._tschchartinfodefaultdeprecatedtrendlinersquaredopacity
      _tschchartinfobardeprecated3Dshadow = source._tschchartinfobardeprecated3Dshadow
      _tschchartinfocolumndeprecated3Dshadow = source._tschchartinfocolumndeprecated3Dshadow
      _tschchartinfolinedeprecated3Dshadow = source._tschchartinfolinedeprecated3Dshadow
      _tschchartinfoareadeprecated3Dshadow = source._tschchartinfoareadeprecated3Dshadow
      _tschchartinfopiedeprecated3Dshadow = source._tschchartinfopiedeprecated3Dshadow
      _tschchartinfodefault3Dlightingpackage = source._tschchartinfodefault3Dlightingpackage
      _tschchartinfocolumn3Dlightingpackage = source._tschchartinfocolumn3Dlightingpackage
      _tschchartinfobar3Dlightingpackage = source._tschchartinfobar3Dlightingpackage
      _tschchartinfoline3Dlightingpackage = source._tschchartinfoline3Dlightingpackage
      _tschchartinfoarea3Dlightingpackage = source._tschchartinfoarea3Dlightingpackage
      _tschchartinfopie3Dlightingpackage = source._tschchartinfopie3Dlightingpackage
      _tschchartinfodefaultdeprecated3Dbeveledges = source._tschchartinfodefaultdeprecated3Dbeveledges
      _tschchartinfopiedeprecated3Dbeveledges = source._tschchartinfopiedeprecated3Dbeveledges
      _tschchartinfobardeprecated3Dbeveledges = source._tschchartinfobardeprecated3Dbeveledges
      _tschchartinfocolumndeprecated3Dbeveledges = source._tschchartinfocolumndeprecated3Dbeveledges
      _tschchartinfodefaultdeprecated3Dbarshape = source._tschchartinfodefaultdeprecated3Dbarshape
      _tschchartinfodefault3Dchartopacity = source._tschchartinfodefault3Dchartopacity
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._super == nil {return false}
      if let v = _storage._super, !v.isInitialized {return false}
      if let v = _storage._tschchartinfodefaultbackgroundfill, !v.isInitialized {return false}
      if let v = _storage._tschchartinfodefaultbackgroundstroke, !v.isInitialized {return false}
      if let v = _storage._tschchartinfodefaultgridbackgroundfill, !v.isInitialized {return false}
      if let v = _storage._tschchartinfodefaultborderstroke, !v.isInitialized {return false}
      if let v = _storage._tschchartinfodefaulttitlecolor, !v.isInitialized {return false}
      if let v = _storage._tschchartinfodefaultbordershadow, !v.isInitialized {return false}
      if let v = _storage._tschchartinfodefaultdeprecatedtrendlineequationshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartinfodefaultdeprecatedtrendlinersquaredshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartinfobardeprecated3Dshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartinfocolumndeprecated3Dshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartinfolinedeprecated3Dshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartinfoareadeprecated3Dshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartinfopiedeprecated3Dshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartinfodefault3Dlightingpackage, !v.isInitialized {return false}
      if let v = _storage._tschchartinfocolumn3Dlightingpackage, !v.isInitialized {return false}
      if let v = _storage._tschchartinfobar3Dlightingpackage, !v.isInitialized {return false}
      if let v = _storage._tschchartinfoline3Dlightingpackage, !v.isInitialized {return false}
      if let v = _storage._tschchartinfoarea3Dlightingpackage, !v.isInitialized {return false}
      if let v = _storage._tschchartinfopie3Dlightingpackage, !v.isInitialized {return false}
      return true
    }
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._super)
        case 10: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfodefaultbackgroundfill)
        case 11: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfodefaultbackgroundstroke)
        case 12: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfodefaultgridbackgroundfill)
        case 13: try decoder.decodeSingularFloatField(value: &_storage._tschchartinfodefaultintersetgap)
        case 14: try decoder.decodeSingularFloatField(value: &_storage._tschchartinfodefaultinterbargap)
        case 15: try decoder.decodeSingularBoolField(value: &_storage._tschchartinfodefaultshowborder)
        case 16: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfodefaultborderstroke)
        case 18: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfodefaulttitlecolor)
        case 19: try decoder.decodeSingularFloatField(value: &_storage._tschchartinfodefaultgridbackgroundopacity)
        case 20: try decoder.decodeSingularBoolField(value: &_storage._tschchartinfodefaultcombinelayers)
        case 21: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfodefaultbordershadow)
        case 22: try decoder.decodeSingularFloatField(value: &_storage._tschchartinfodefaultborderopacity)
        case 23: try decoder.decodeSingularInt32Field(value: &_storage._tschchartinfodefaulttitleparagraphstyleindex)
        case 24: try decoder.decodeSingularStringField(value: &_storage._tschchartinfodefaultdeprecatedmasterfontfamily)
        case 25: try decoder.decodeSingularInt32Field(value: &_storage._tschchartinfodefaultdeprecatedmasterfontnamedsize)
        case 30: try decoder.decodeSingularInt32Field(value: &_storage._tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex)
        case 31: try decoder.decodeSingularInt32Field(value: &_storage._tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex)
        case 32: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfodefaultdeprecatedtrendlineequationshadow)
        case 33: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfodefaultdeprecatedtrendlinersquaredshadow)
        case 34: try decoder.decodeSingularFloatField(value: &_storage._tschchartinfodefaultdeprecatedtrendlineequationopacity)
        case 35: try decoder.decodeSingularFloatField(value: &_storage._tschchartinfodefaultdeprecatedtrendlinersquaredopacity)
        case 308: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfobardeprecated3Dshadow)
        case 309: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfocolumndeprecated3Dshadow)
        case 310: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfolinedeprecated3Dshadow)
        case 311: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfoareadeprecated3Dshadow)
        case 312: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfopiedeprecated3Dshadow)
        case 313: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfodefault3Dlightingpackage)
        case 314: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfocolumn3Dlightingpackage)
        case 315: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfobar3Dlightingpackage)
        case 316: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfoline3Dlightingpackage)
        case 317: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfoarea3Dlightingpackage)
        case 318: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfopie3Dlightingpackage)
        case 326: try decoder.decodeSingularBoolField(value: &_storage._tschchartinfodefaultdeprecated3Dbeveledges)
        case 327: try decoder.decodeSingularBoolField(value: &_storage._tschchartinfopiedeprecated3Dbeveledges)
        case 328: try decoder.decodeSingularBoolField(value: &_storage._tschchartinfobardeprecated3Dbeveledges)
        case 329: try decoder.decodeSingularBoolField(value: &_storage._tschchartinfocolumndeprecated3Dbeveledges)
        case 330: try decoder.decodeSingularInt32Field(value: &_storage._tschchartinfodefaultdeprecated3Dbarshape)
        case 335: try decoder.decodeSingularFloatField(value: &_storage._tschchartinfodefault3Dchartopacity)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._super {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._tschchartinfodefaultbackgroundfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 10)
      }
      if let v = _storage._tschchartinfodefaultbackgroundstroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 11)
      }
      if let v = _storage._tschchartinfodefaultgridbackgroundfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 12)
      }
      if let v = _storage._tschchartinfodefaultintersetgap {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 13)
      }
      if let v = _storage._tschchartinfodefaultinterbargap {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 14)
      }
      if let v = _storage._tschchartinfodefaultshowborder {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 15)
      }
      if let v = _storage._tschchartinfodefaultborderstroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 16)
      }
      if let v = _storage._tschchartinfodefaulttitlecolor {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 18)
      }
      if let v = _storage._tschchartinfodefaultgridbackgroundopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 19)
      }
      if let v = _storage._tschchartinfodefaultcombinelayers {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 20)
      }
      if let v = _storage._tschchartinfodefaultbordershadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 21)
      }
      if let v = _storage._tschchartinfodefaultborderopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 22)
      }
      if let v = _storage._tschchartinfodefaulttitleparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 23)
      }
      if let v = _storage._tschchartinfodefaultdeprecatedmasterfontfamily {
        try visitor.visitSingularStringField(value: v, fieldNumber: 24)
      }
      if let v = _storage._tschchartinfodefaultdeprecatedmasterfontnamedsize {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 25)
      }
      if let v = _storage._tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 30)
      }
      if let v = _storage._tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 31)
      }
      if let v = _storage._tschchartinfodefaultdeprecatedtrendlineequationshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 32)
      }
      if let v = _storage._tschchartinfodefaultdeprecatedtrendlinersquaredshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 33)
      }
      if let v = _storage._tschchartinfodefaultdeprecatedtrendlineequationopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 34)
      }
      if let v = _storage._tschchartinfodefaultdeprecatedtrendlinersquaredopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 35)
      }
      if let v = _storage._tschchartinfobardeprecated3Dshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 308)
      }
      if let v = _storage._tschchartinfocolumndeprecated3Dshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 309)
      }
      if let v = _storage._tschchartinfolinedeprecated3Dshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 310)
      }
      if let v = _storage._tschchartinfoareadeprecated3Dshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 311)
      }
      if let v = _storage._tschchartinfopiedeprecated3Dshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 312)
      }
      if let v = _storage._tschchartinfodefault3Dlightingpackage {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 313)
      }
      if let v = _storage._tschchartinfocolumn3Dlightingpackage {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 314)
      }
      if let v = _storage._tschchartinfobar3Dlightingpackage {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 315)
      }
      if let v = _storage._tschchartinfoline3Dlightingpackage {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 316)
      }
      if let v = _storage._tschchartinfoarea3Dlightingpackage {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 317)
      }
      if let v = _storage._tschchartinfopie3Dlightingpackage {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 318)
      }
      if let v = _storage._tschchartinfodefaultdeprecated3Dbeveledges {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 326)
      }
      if let v = _storage._tschchartinfopiedeprecated3Dbeveledges {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 327)
      }
      if let v = _storage._tschchartinfobardeprecated3Dbeveledges {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 328)
      }
      if let v = _storage._tschchartinfocolumndeprecated3Dbeveledges {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 329)
      }
      if let v = _storage._tschchartinfodefaultdeprecated3Dbarshape {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 330)
      }
      if let v = _storage._tschchartinfodefault3Dchartopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 335)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSCH_PreUFF_ChartStyleArchive, rhs: TSCH_PreUFF_ChartStyleArchive) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._super != rhs_storage._super {return false}
        if _storage._tschchartinfodefaultbackgroundfill != rhs_storage._tschchartinfodefaultbackgroundfill {return false}
        if _storage._tschchartinfodefaultbackgroundstroke != rhs_storage._tschchartinfodefaultbackgroundstroke {return false}
        if _storage._tschchartinfodefaultgridbackgroundfill != rhs_storage._tschchartinfodefaultgridbackgroundfill {return false}
        if _storage._tschchartinfodefaultintersetgap != rhs_storage._tschchartinfodefaultintersetgap {return false}
        if _storage._tschchartinfodefaultinterbargap != rhs_storage._tschchartinfodefaultinterbargap {return false}
        if _storage._tschchartinfodefaultshowborder != rhs_storage._tschchartinfodefaultshowborder {return false}
        if _storage._tschchartinfodefaultborderstroke != rhs_storage._tschchartinfodefaultborderstroke {return false}
        if _storage._tschchartinfodefaulttitlecolor != rhs_storage._tschchartinfodefaulttitlecolor {return false}
        if _storage._tschchartinfodefaultgridbackgroundopacity != rhs_storage._tschchartinfodefaultgridbackgroundopacity {return false}
        if _storage._tschchartinfodefaultcombinelayers != rhs_storage._tschchartinfodefaultcombinelayers {return false}
        if _storage._tschchartinfodefaultbordershadow != rhs_storage._tschchartinfodefaultbordershadow {return false}
        if _storage._tschchartinfodefaultborderopacity != rhs_storage._tschchartinfodefaultborderopacity {return false}
        if _storage._tschchartinfodefaulttitleparagraphstyleindex != rhs_storage._tschchartinfodefaulttitleparagraphstyleindex {return false}
        if _storage._tschchartinfodefaultdeprecatedmasterfontfamily != rhs_storage._tschchartinfodefaultdeprecatedmasterfontfamily {return false}
        if _storage._tschchartinfodefaultdeprecatedmasterfontnamedsize != rhs_storage._tschchartinfodefaultdeprecatedmasterfontnamedsize {return false}
        if _storage._tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex != rhs_storage._tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex {return false}
        if _storage._tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex != rhs_storage._tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex {return false}
        if _storage._tschchartinfodefaultdeprecatedtrendlineequationshadow != rhs_storage._tschchartinfodefaultdeprecatedtrendlineequationshadow {return false}
        if _storage._tschchartinfodefaultdeprecatedtrendlinersquaredshadow != rhs_storage._tschchartinfodefaultdeprecatedtrendlinersquaredshadow {return false}
        if _storage._tschchartinfodefaultdeprecatedtrendlineequationopacity != rhs_storage._tschchartinfodefaultdeprecatedtrendlineequationopacity {return false}
        if _storage._tschchartinfodefaultdeprecatedtrendlinersquaredopacity != rhs_storage._tschchartinfodefaultdeprecatedtrendlinersquaredopacity {return false}
        if _storage._tschchartinfobardeprecated3Dshadow != rhs_storage._tschchartinfobardeprecated3Dshadow {return false}
        if _storage._tschchartinfocolumndeprecated3Dshadow != rhs_storage._tschchartinfocolumndeprecated3Dshadow {return false}
        if _storage._tschchartinfolinedeprecated3Dshadow != rhs_storage._tschchartinfolinedeprecated3Dshadow {return false}
        if _storage._tschchartinfoareadeprecated3Dshadow != rhs_storage._tschchartinfoareadeprecated3Dshadow {return false}
        if _storage._tschchartinfopiedeprecated3Dshadow != rhs_storage._tschchartinfopiedeprecated3Dshadow {return false}
        if _storage._tschchartinfodefault3Dlightingpackage != rhs_storage._tschchartinfodefault3Dlightingpackage {return false}
        if _storage._tschchartinfocolumn3Dlightingpackage != rhs_storage._tschchartinfocolumn3Dlightingpackage {return false}
        if _storage._tschchartinfobar3Dlightingpackage != rhs_storage._tschchartinfobar3Dlightingpackage {return false}
        if _storage._tschchartinfoline3Dlightingpackage != rhs_storage._tschchartinfoline3Dlightingpackage {return false}
        if _storage._tschchartinfoarea3Dlightingpackage != rhs_storage._tschchartinfoarea3Dlightingpackage {return false}
        if _storage._tschchartinfopie3Dlightingpackage != rhs_storage._tschchartinfopie3Dlightingpackage {return false}
        if _storage._tschchartinfodefaultdeprecated3Dbeveledges != rhs_storage._tschchartinfodefaultdeprecated3Dbeveledges {return false}
        if _storage._tschchartinfopiedeprecated3Dbeveledges != rhs_storage._tschchartinfopiedeprecated3Dbeveledges {return false}
        if _storage._tschchartinfobardeprecated3Dbeveledges != rhs_storage._tschchartinfobardeprecated3Dbeveledges {return false}
        if _storage._tschchartinfocolumndeprecated3Dbeveledges != rhs_storage._tschchartinfocolumndeprecated3Dbeveledges {return false}
        if _storage._tschchartinfodefaultdeprecated3Dbarshape != rhs_storage._tschchartinfodefaultdeprecated3Dbarshape {return false}
        if _storage._tschchartinfodefault3Dchartopacity != rhs_storage._tschchartinfodefault3Dchartopacity {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSCH_PreUFF_ChartNonStyleArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ChartNonStyleArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "super"),
    10: .same(proto: "tschchartinfodefaulttitle"),
    11: .same(proto: "tschchartinfodefaultshowlegend"),
    12: .same(proto: "tschchartinfodefaultpiestartangle"),
    13: .same(proto: "tschchartinfodefaultshowtitle"),
    25: .same(proto: "tschchartinfodefaultdeprecatedagainmasterfontnamedsize"),
    300: .same(proto: "tschchartinfodefault3drotation"),
    301: .same(proto: "tschchartinfodefault3dscale"),
    302: .same(proto: "tschchartinfocolumn3dscale"),
    303: .same(proto: "tschchartinfobar3dscale"),
    304: .same(proto: "tschchartinfoline3dscale"),
    305: .same(proto: "tschchartinfoarea3dscale"),
    306: .same(proto: "tschchartinfopie3dscale"),
    313: .same(proto: "tschchartinfodefault3dviewport"),
    320: .same(proto: "tschchartinfodefaultdeprecated3dlightingpackage"),
    321: .same(proto: "tschchartinfocolumndeprecated3dlightingpackage"),
    322: .same(proto: "tschchartinfobardeprecated3dlightingpackage"),
    323: .same(proto: "tschchartinfolinedeprecated3dlightingpackage"),
    324: .same(proto: "tschchartinfoareadeprecated3dlightingpackage"),
    325: .same(proto: "tschchartinfopiedeprecated3dlightingpackage"),
    326: .same(proto: "tschchartinfodefaultskiphiddendata"),
    327: .same(proto: "tschchartinfodefault3dbeveledges"),
    336: .same(proto: "tschchartinfodefault3dbarshape"),
    331: .same(proto: "tschchartinfodefault3dintersetdepthgap"),
  ]

  fileprivate class _StorageClass {
    var _super: TSS_StyleArchive? = nil
    var _tschchartinfodefaulttitle: String? = nil
    var _tschchartinfodefaultshowlegend: Bool? = nil
    var _tschchartinfodefaultpiestartangle: Float? = nil
    var _tschchartinfodefaultshowtitle: Bool? = nil
    var _tschchartinfodefaultdeprecatedagainmasterfontnamedsize: Int32? = nil
    var _tschchartinfodefault3Drotation: TSCH_Chart3DVectorArchive? = nil
    var _tschchartinfodefault3Dscale: TSCH_Chart3DVectorArchive? = nil
    var _tschchartinfocolumn3Dscale: TSCH_Chart3DVectorArchive? = nil
    var _tschchartinfobar3Dscale: TSCH_Chart3DVectorArchive? = nil
    var _tschchartinfoline3Dscale: TSCH_Chart3DVectorArchive? = nil
    var _tschchartinfoarea3Dscale: TSCH_Chart3DVectorArchive? = nil
    var _tschchartinfopie3Dscale: TSCH_Chart3DVectorArchive? = nil
    var _tschchartinfodefault3Dviewport: TSCH_Chart3DVectorArchive? = nil
    var _tschchartinfodefaultdeprecated3Dlightingpackage: TSCH_Chart3DLightingPackageArchive? = nil
    var _tschchartinfocolumndeprecated3Dlightingpackage: TSCH_Chart3DLightingPackageArchive? = nil
    var _tschchartinfobardeprecated3Dlightingpackage: TSCH_Chart3DLightingPackageArchive? = nil
    var _tschchartinfolinedeprecated3Dlightingpackage: TSCH_Chart3DLightingPackageArchive? = nil
    var _tschchartinfoareadeprecated3Dlightingpackage: TSCH_Chart3DLightingPackageArchive? = nil
    var _tschchartinfopiedeprecated3Dlightingpackage: TSCH_Chart3DLightingPackageArchive? = nil
    var _tschchartinfodefaultskiphiddendata: Bool? = nil
    var _tschchartinfodefault3Dbeveledges: Bool? = nil
    var _tschchartinfodefault3Dbarshape: Int32? = nil
    var _tschchartinfodefault3Dintersetdepthgap: Float? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _super = source._super
      _tschchartinfodefaulttitle = source._tschchartinfodefaulttitle
      _tschchartinfodefaultshowlegend = source._tschchartinfodefaultshowlegend
      _tschchartinfodefaultpiestartangle = source._tschchartinfodefaultpiestartangle
      _tschchartinfodefaultshowtitle = source._tschchartinfodefaultshowtitle
      _tschchartinfodefaultdeprecatedagainmasterfontnamedsize = source._tschchartinfodefaultdeprecatedagainmasterfontnamedsize
      _tschchartinfodefault3Drotation = source._tschchartinfodefault3Drotation
      _tschchartinfodefault3Dscale = source._tschchartinfodefault3Dscale
      _tschchartinfocolumn3Dscale = source._tschchartinfocolumn3Dscale
      _tschchartinfobar3Dscale = source._tschchartinfobar3Dscale
      _tschchartinfoline3Dscale = source._tschchartinfoline3Dscale
      _tschchartinfoarea3Dscale = source._tschchartinfoarea3Dscale
      _tschchartinfopie3Dscale = source._tschchartinfopie3Dscale
      _tschchartinfodefault3Dviewport = source._tschchartinfodefault3Dviewport
      _tschchartinfodefaultdeprecated3Dlightingpackage = source._tschchartinfodefaultdeprecated3Dlightingpackage
      _tschchartinfocolumndeprecated3Dlightingpackage = source._tschchartinfocolumndeprecated3Dlightingpackage
      _tschchartinfobardeprecated3Dlightingpackage = source._tschchartinfobardeprecated3Dlightingpackage
      _tschchartinfolinedeprecated3Dlightingpackage = source._tschchartinfolinedeprecated3Dlightingpackage
      _tschchartinfoareadeprecated3Dlightingpackage = source._tschchartinfoareadeprecated3Dlightingpackage
      _tschchartinfopiedeprecated3Dlightingpackage = source._tschchartinfopiedeprecated3Dlightingpackage
      _tschchartinfodefaultskiphiddendata = source._tschchartinfodefaultskiphiddendata
      _tschchartinfodefault3Dbeveledges = source._tschchartinfodefault3Dbeveledges
      _tschchartinfodefault3Dbarshape = source._tschchartinfodefault3Dbarshape
      _tschchartinfodefault3Dintersetdepthgap = source._tschchartinfodefault3Dintersetdepthgap
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._super == nil {return false}
      if let v = _storage._super, !v.isInitialized {return false}
      if let v = _storage._tschchartinfodefault3Drotation, !v.isInitialized {return false}
      if let v = _storage._tschchartinfodefault3Dscale, !v.isInitialized {return false}
      if let v = _storage._tschchartinfocolumn3Dscale, !v.isInitialized {return false}
      if let v = _storage._tschchartinfobar3Dscale, !v.isInitialized {return false}
      if let v = _storage._tschchartinfoline3Dscale, !v.isInitialized {return false}
      if let v = _storage._tschchartinfoarea3Dscale, !v.isInitialized {return false}
      if let v = _storage._tschchartinfopie3Dscale, !v.isInitialized {return false}
      if let v = _storage._tschchartinfodefault3Dviewport, !v.isInitialized {return false}
      if let v = _storage._tschchartinfodefaultdeprecated3Dlightingpackage, !v.isInitialized {return false}
      if let v = _storage._tschchartinfocolumndeprecated3Dlightingpackage, !v.isInitialized {return false}
      if let v = _storage._tschchartinfobardeprecated3Dlightingpackage, !v.isInitialized {return false}
      if let v = _storage._tschchartinfolinedeprecated3Dlightingpackage, !v.isInitialized {return false}
      if let v = _storage._tschchartinfoareadeprecated3Dlightingpackage, !v.isInitialized {return false}
      if let v = _storage._tschchartinfopiedeprecated3Dlightingpackage, !v.isInitialized {return false}
      return true
    }
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._super)
        case 10: try decoder.decodeSingularStringField(value: &_storage._tschchartinfodefaulttitle)
        case 11: try decoder.decodeSingularBoolField(value: &_storage._tschchartinfodefaultshowlegend)
        case 12: try decoder.decodeSingularFloatField(value: &_storage._tschchartinfodefaultpiestartangle)
        case 13: try decoder.decodeSingularBoolField(value: &_storage._tschchartinfodefaultshowtitle)
        case 25: try decoder.decodeSingularInt32Field(value: &_storage._tschchartinfodefaultdeprecatedagainmasterfontnamedsize)
        case 300: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfodefault3Drotation)
        case 301: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfodefault3Dscale)
        case 302: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfocolumn3Dscale)
        case 303: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfobar3Dscale)
        case 304: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfoline3Dscale)
        case 305: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfoarea3Dscale)
        case 306: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfopie3Dscale)
        case 313: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfodefault3Dviewport)
        case 320: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfodefaultdeprecated3Dlightingpackage)
        case 321: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfocolumndeprecated3Dlightingpackage)
        case 322: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfobardeprecated3Dlightingpackage)
        case 323: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfolinedeprecated3Dlightingpackage)
        case 324: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfoareadeprecated3Dlightingpackage)
        case 325: try decoder.decodeSingularMessageField(value: &_storage._tschchartinfopiedeprecated3Dlightingpackage)
        case 326: try decoder.decodeSingularBoolField(value: &_storage._tschchartinfodefaultskiphiddendata)
        case 327: try decoder.decodeSingularBoolField(value: &_storage._tschchartinfodefault3Dbeveledges)
        case 331: try decoder.decodeSingularFloatField(value: &_storage._tschchartinfodefault3Dintersetdepthgap)
        case 336: try decoder.decodeSingularInt32Field(value: &_storage._tschchartinfodefault3Dbarshape)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._super {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._tschchartinfodefaulttitle {
        try visitor.visitSingularStringField(value: v, fieldNumber: 10)
      }
      if let v = _storage._tschchartinfodefaultshowlegend {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 11)
      }
      if let v = _storage._tschchartinfodefaultpiestartangle {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 12)
      }
      if let v = _storage._tschchartinfodefaultshowtitle {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 13)
      }
      if let v = _storage._tschchartinfodefaultdeprecatedagainmasterfontnamedsize {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 25)
      }
      if let v = _storage._tschchartinfodefault3Drotation {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 300)
      }
      if let v = _storage._tschchartinfodefault3Dscale {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 301)
      }
      if let v = _storage._tschchartinfocolumn3Dscale {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 302)
      }
      if let v = _storage._tschchartinfobar3Dscale {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 303)
      }
      if let v = _storage._tschchartinfoline3Dscale {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 304)
      }
      if let v = _storage._tschchartinfoarea3Dscale {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 305)
      }
      if let v = _storage._tschchartinfopie3Dscale {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 306)
      }
      if let v = _storage._tschchartinfodefault3Dviewport {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 313)
      }
      if let v = _storage._tschchartinfodefaultdeprecated3Dlightingpackage {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 320)
      }
      if let v = _storage._tschchartinfocolumndeprecated3Dlightingpackage {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 321)
      }
      if let v = _storage._tschchartinfobardeprecated3Dlightingpackage {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 322)
      }
      if let v = _storage._tschchartinfolinedeprecated3Dlightingpackage {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 323)
      }
      if let v = _storage._tschchartinfoareadeprecated3Dlightingpackage {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 324)
      }
      if let v = _storage._tschchartinfopiedeprecated3Dlightingpackage {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 325)
      }
      if let v = _storage._tschchartinfodefaultskiphiddendata {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 326)
      }
      if let v = _storage._tschchartinfodefault3Dbeveledges {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 327)
      }
      if let v = _storage._tschchartinfodefault3Dintersetdepthgap {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 331)
      }
      if let v = _storage._tschchartinfodefault3Dbarshape {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 336)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSCH_PreUFF_ChartNonStyleArchive, rhs: TSCH_PreUFF_ChartNonStyleArchive) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._super != rhs_storage._super {return false}
        if _storage._tschchartinfodefaulttitle != rhs_storage._tschchartinfodefaulttitle {return false}
        if _storage._tschchartinfodefaultshowlegend != rhs_storage._tschchartinfodefaultshowlegend {return false}
        if _storage._tschchartinfodefaultpiestartangle != rhs_storage._tschchartinfodefaultpiestartangle {return false}
        if _storage._tschchartinfodefaultshowtitle != rhs_storage._tschchartinfodefaultshowtitle {return false}
        if _storage._tschchartinfodefaultdeprecatedagainmasterfontnamedsize != rhs_storage._tschchartinfodefaultdeprecatedagainmasterfontnamedsize {return false}
        if _storage._tschchartinfodefault3Drotation != rhs_storage._tschchartinfodefault3Drotation {return false}
        if _storage._tschchartinfodefault3Dscale != rhs_storage._tschchartinfodefault3Dscale {return false}
        if _storage._tschchartinfocolumn3Dscale != rhs_storage._tschchartinfocolumn3Dscale {return false}
        if _storage._tschchartinfobar3Dscale != rhs_storage._tschchartinfobar3Dscale {return false}
        if _storage._tschchartinfoline3Dscale != rhs_storage._tschchartinfoline3Dscale {return false}
        if _storage._tschchartinfoarea3Dscale != rhs_storage._tschchartinfoarea3Dscale {return false}
        if _storage._tschchartinfopie3Dscale != rhs_storage._tschchartinfopie3Dscale {return false}
        if _storage._tschchartinfodefault3Dviewport != rhs_storage._tschchartinfodefault3Dviewport {return false}
        if _storage._tschchartinfodefaultdeprecated3Dlightingpackage != rhs_storage._tschchartinfodefaultdeprecated3Dlightingpackage {return false}
        if _storage._tschchartinfocolumndeprecated3Dlightingpackage != rhs_storage._tschchartinfocolumndeprecated3Dlightingpackage {return false}
        if _storage._tschchartinfobardeprecated3Dlightingpackage != rhs_storage._tschchartinfobardeprecated3Dlightingpackage {return false}
        if _storage._tschchartinfolinedeprecated3Dlightingpackage != rhs_storage._tschchartinfolinedeprecated3Dlightingpackage {return false}
        if _storage._tschchartinfoareadeprecated3Dlightingpackage != rhs_storage._tschchartinfoareadeprecated3Dlightingpackage {return false}
        if _storage._tschchartinfopiedeprecated3Dlightingpackage != rhs_storage._tschchartinfopiedeprecated3Dlightingpackage {return false}
        if _storage._tschchartinfodefaultskiphiddendata != rhs_storage._tschchartinfodefaultskiphiddendata {return false}
        if _storage._tschchartinfodefault3Dbeveledges != rhs_storage._tschchartinfodefault3Dbeveledges {return false}
        if _storage._tschchartinfodefault3Dbarshape != rhs_storage._tschchartinfodefault3Dbarshape {return false}
        if _storage._tschchartinfodefault3Dintersetdepthgap != rhs_storage._tschchartinfodefault3Dintersetdepthgap {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSCH_PreUFF_LegendStyleArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".LegendStyleArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "super"),
    10: .same(proto: "tschlegendmodeldefaultfill"),
    11: .same(proto: "tschlegendmodeldefaultstroke"),
    14: .same(proto: "tschlegendmodeldefaultshadow"),
    15: .same(proto: "tschlegendmodeldefaultopacity"),
    16: .same(proto: "tschlegendmodeldefaultlabelparagraphstyleindex"),
  ]

  public var isInitialized: Bool {
    if self._super == nil {return false}
    if let v = self._super, !v.isInitialized {return false}
    if let v = self._tschlegendmodeldefaultfill, !v.isInitialized {return false}
    if let v = self._tschlegendmodeldefaultstroke, !v.isInitialized {return false}
    if let v = self._tschlegendmodeldefaultshadow, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._super)
      case 10: try decoder.decodeSingularMessageField(value: &self._tschlegendmodeldefaultfill)
      case 11: try decoder.decodeSingularMessageField(value: &self._tschlegendmodeldefaultstroke)
      case 14: try decoder.decodeSingularMessageField(value: &self._tschlegendmodeldefaultshadow)
      case 15: try decoder.decodeSingularFloatField(value: &self._tschlegendmodeldefaultopacity)
      case 16: try decoder.decodeSingularInt32Field(value: &self._tschlegendmodeldefaultlabelparagraphstyleindex)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._super {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if let v = self._tschlegendmodeldefaultfill {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 10)
    }
    if let v = self._tschlegendmodeldefaultstroke {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 11)
    }
    if let v = self._tschlegendmodeldefaultshadow {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 14)
    }
    if let v = self._tschlegendmodeldefaultopacity {
      try visitor.visitSingularFloatField(value: v, fieldNumber: 15)
    }
    if let v = self._tschlegendmodeldefaultlabelparagraphstyleindex {
      try visitor.visitSingularInt32Field(value: v, fieldNumber: 16)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSCH_PreUFF_LegendStyleArchive, rhs: TSCH_PreUFF_LegendStyleArchive) -> Bool {
    if lhs._super != rhs._super {return false}
    if lhs._tschlegendmodeldefaultfill != rhs._tschlegendmodeldefaultfill {return false}
    if lhs._tschlegendmodeldefaultstroke != rhs._tschlegendmodeldefaultstroke {return false}
    if lhs._tschlegendmodeldefaultshadow != rhs._tschlegendmodeldefaultshadow {return false}
    if lhs._tschlegendmodeldefaultopacity != rhs._tschlegendmodeldefaultopacity {return false}
    if lhs._tschlegendmodeldefaultlabelparagraphstyleindex != rhs._tschlegendmodeldefaultlabelparagraphstyleindex {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSCH_PreUFF_LegendNonStyleArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".LegendNonStyleArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "super"),
  ]

  public var isInitialized: Bool {
    if self._super == nil {return false}
    if let v = self._super, !v.isInitialized {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._super)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._super {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSCH_PreUFF_LegendNonStyleArchive, rhs: TSCH_PreUFF_LegendNonStyleArchive) -> Bool {
    if lhs._super != rhs._super {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSCH_PreUFF_ChartAxisStyleArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ChartAxisStyleArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "super"),
    10: .same(proto: "tschchartaxisvalueshowmajorgridlines"),
    11: .same(proto: "tschchartaxisvalueshowminorgridlines"),
    12: .same(proto: "tschchartaxisvaluemajorgridlinestroke"),
    13: .same(proto: "tschchartaxisvalueminorgridlinestroke"),
    14: .same(proto: "tschchartaxisvaluetickmarklocation"),
    15: .same(proto: "tschchartaxisvalueshowmajortickmarks"),
    16: .same(proto: "tschchartaxisvalueshowminortickmarks"),
    17: .same(proto: "tschchartaxisvaluelabelsorientation"),
    18: .same(proto: "tschchartaxisvalueshowminimumlabel"),
    21: .same(proto: "tschchartaxisvaluemajorgridlineshadow"),
    22: .same(proto: "tschchartaxisvalueminorgridlineshadow"),
    23: .same(proto: "tschchartaxisvaluemajorgridlineopacity"),
    24: .same(proto: "tschchartaxisvalueminorgridlineopacity"),
    25: .same(proto: "tschchartaxisvalueshowaxis"),
    50: .same(proto: "tschchartaxiscategoryshowmajorgridlines"),
    51: .same(proto: "tschchartaxiscategoryshowminorgridlines"),
    52: .same(proto: "tschchartaxiscategorymajorgridlinestroke"),
    53: .same(proto: "tschchartaxiscategoryminorgridlinestroke"),
    54: .same(proto: "tschchartaxiscategorytickmarklocation"),
    55: .same(proto: "tschchartaxiscategoryshowmajortickmarks"),
    56: .same(proto: "tschchartaxiscategoryshowminortickmarks"),
    57: .same(proto: "tschchartaxiscategorylabelsorientation"),
    58: .same(proto: "tschchartaxiscategoryhorizontalspacing"),
    59: .same(proto: "tschchartaxiscategoryverticalspacing"),
    60: .same(proto: "tschchartaxiscategoryshowlastlabel"),
    63: .same(proto: "tschchartaxiscategorymajorgridlineshadow"),
    64: .same(proto: "tschchartaxiscategoryminorgridlineshadow"),
    65: .same(proto: "tschchartaxiscategorymajorgridlineopacity"),
    66: .same(proto: "tschchartaxiscategoryminorgridlineopacity"),
    67: .same(proto: "tschchartaxiscategoryshowaxis"),
    102: .same(proto: "tschchartaxisdefaultlabelsorientation"),
    110: .same(proto: "tschchartaxisdefaulttitleparagraphstyleindex"),
    111: .same(proto: "tschchartaxisdefaultlabelparagraphstyleindex"),
    112: .same(proto: "tschchartaxisvaluetitleparagraphstyleindex"),
    113: .same(proto: "tschchartaxisvaluelabelparagraphstyleindex"),
    114: .same(proto: "tschchartaxiscategorytitleparagraphstyleindex"),
    115: .same(proto: "tschchartaxiscategorylabelparagraphstyleindex"),
    331: .same(proto: "tschchartaxisvalue3dgridlinestroke"),
    332: .same(proto: "tschchartaxiscategory3dgridlinestroke"),
    333: .same(proto: "tschchartaxisvalue3dgridlineopacity"),
    334: .same(proto: "tschchartaxiscategory3dgridlineopacity"),
  ]

  fileprivate class _StorageClass {
    var _super: TSS_StyleArchive? = nil
    var _tschchartaxisvalueshowmajorgridlines: Bool? = nil
    var _tschchartaxisvalueshowminorgridlines: Bool? = nil
    var _tschchartaxisvaluemajorgridlinestroke: TSD_StrokeArchive? = nil
    var _tschchartaxisvalueminorgridlinestroke: TSD_StrokeArchive? = nil
    var _tschchartaxisvaluetickmarklocation: Int32? = nil
    var _tschchartaxisvalueshowmajortickmarks: Bool? = nil
    var _tschchartaxisvalueshowminortickmarks: Bool? = nil
    var _tschchartaxisvaluelabelsorientation: Float? = nil
    var _tschchartaxisvalueshowminimumlabel: Bool? = nil
    var _tschchartaxisvaluemajorgridlineshadow: TSD_ShadowArchive? = nil
    var _tschchartaxisvalueminorgridlineshadow: TSD_ShadowArchive? = nil
    var _tschchartaxisvaluemajorgridlineopacity: Float? = nil
    var _tschchartaxisvalueminorgridlineopacity: Float? = nil
    var _tschchartaxisvalueshowaxis: Bool? = nil
    var _tschchartaxiscategoryshowmajorgridlines: Bool? = nil
    var _tschchartaxiscategoryshowminorgridlines: Bool? = nil
    var _tschchartaxiscategorymajorgridlinestroke: TSD_StrokeArchive? = nil
    var _tschchartaxiscategoryminorgridlinestroke: TSD_StrokeArchive? = nil
    var _tschchartaxiscategorytickmarklocation: Int32? = nil
    var _tschchartaxiscategoryshowmajortickmarks: Bool? = nil
    var _tschchartaxiscategoryshowminortickmarks: Bool? = nil
    var _tschchartaxiscategorylabelsorientation: Float? = nil
    var _tschchartaxiscategoryhorizontalspacing: Int32? = nil
    var _tschchartaxiscategoryverticalspacing: Int32? = nil
    var _tschchartaxiscategoryshowlastlabel: Bool? = nil
    var _tschchartaxiscategorymajorgridlineshadow: TSD_ShadowArchive? = nil
    var _tschchartaxiscategoryminorgridlineshadow: TSD_ShadowArchive? = nil
    var _tschchartaxiscategorymajorgridlineopacity: Float? = nil
    var _tschchartaxiscategoryminorgridlineopacity: Float? = nil
    var _tschchartaxiscategoryshowaxis: Bool? = nil
    var _tschchartaxisdefaultlabelsorientation: Float? = nil
    var _tschchartaxisdefaulttitleparagraphstyleindex: Int32? = nil
    var _tschchartaxisdefaultlabelparagraphstyleindex: Int32? = nil
    var _tschchartaxisvaluetitleparagraphstyleindex: Int32? = nil
    var _tschchartaxisvaluelabelparagraphstyleindex: Int32? = nil
    var _tschchartaxiscategorytitleparagraphstyleindex: Int32? = nil
    var _tschchartaxiscategorylabelparagraphstyleindex: Int32? = nil
    var _tschchartaxisvalue3Dgridlinestroke: TSD_StrokeArchive? = nil
    var _tschchartaxiscategory3Dgridlinestroke: TSD_StrokeArchive? = nil
    var _tschchartaxisvalue3Dgridlineopacity: Float? = nil
    var _tschchartaxiscategory3Dgridlineopacity: Float? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _super = source._super
      _tschchartaxisvalueshowmajorgridlines = source._tschchartaxisvalueshowmajorgridlines
      _tschchartaxisvalueshowminorgridlines = source._tschchartaxisvalueshowminorgridlines
      _tschchartaxisvaluemajorgridlinestroke = source._tschchartaxisvaluemajorgridlinestroke
      _tschchartaxisvalueminorgridlinestroke = source._tschchartaxisvalueminorgridlinestroke
      _tschchartaxisvaluetickmarklocation = source._tschchartaxisvaluetickmarklocation
      _tschchartaxisvalueshowmajortickmarks = source._tschchartaxisvalueshowmajortickmarks
      _tschchartaxisvalueshowminortickmarks = source._tschchartaxisvalueshowminortickmarks
      _tschchartaxisvaluelabelsorientation = source._tschchartaxisvaluelabelsorientation
      _tschchartaxisvalueshowminimumlabel = source._tschchartaxisvalueshowminimumlabel
      _tschchartaxisvaluemajorgridlineshadow = source._tschchartaxisvaluemajorgridlineshadow
      _tschchartaxisvalueminorgridlineshadow = source._tschchartaxisvalueminorgridlineshadow
      _tschchartaxisvaluemajorgridlineopacity = source._tschchartaxisvaluemajorgridlineopacity
      _tschchartaxisvalueminorgridlineopacity = source._tschchartaxisvalueminorgridlineopacity
      _tschchartaxisvalueshowaxis = source._tschchartaxisvalueshowaxis
      _tschchartaxiscategoryshowmajorgridlines = source._tschchartaxiscategoryshowmajorgridlines
      _tschchartaxiscategoryshowminorgridlines = source._tschchartaxiscategoryshowminorgridlines
      _tschchartaxiscategorymajorgridlinestroke = source._tschchartaxiscategorymajorgridlinestroke
      _tschchartaxiscategoryminorgridlinestroke = source._tschchartaxiscategoryminorgridlinestroke
      _tschchartaxiscategorytickmarklocation = source._tschchartaxiscategorytickmarklocation
      _tschchartaxiscategoryshowmajortickmarks = source._tschchartaxiscategoryshowmajortickmarks
      _tschchartaxiscategoryshowminortickmarks = source._tschchartaxiscategoryshowminortickmarks
      _tschchartaxiscategorylabelsorientation = source._tschchartaxiscategorylabelsorientation
      _tschchartaxiscategoryhorizontalspacing = source._tschchartaxiscategoryhorizontalspacing
      _tschchartaxiscategoryverticalspacing = source._tschchartaxiscategoryverticalspacing
      _tschchartaxiscategoryshowlastlabel = source._tschchartaxiscategoryshowlastlabel
      _tschchartaxiscategorymajorgridlineshadow = source._tschchartaxiscategorymajorgridlineshadow
      _tschchartaxiscategoryminorgridlineshadow = source._tschchartaxiscategoryminorgridlineshadow
      _tschchartaxiscategorymajorgridlineopacity = source._tschchartaxiscategorymajorgridlineopacity
      _tschchartaxiscategoryminorgridlineopacity = source._tschchartaxiscategoryminorgridlineopacity
      _tschchartaxiscategoryshowaxis = source._tschchartaxiscategoryshowaxis
      _tschchartaxisdefaultlabelsorientation = source._tschchartaxisdefaultlabelsorientation
      _tschchartaxisdefaulttitleparagraphstyleindex = source._tschchartaxisdefaulttitleparagraphstyleindex
      _tschchartaxisdefaultlabelparagraphstyleindex = source._tschchartaxisdefaultlabelparagraphstyleindex
      _tschchartaxisvaluetitleparagraphstyleindex = source._tschchartaxisvaluetitleparagraphstyleindex
      _tschchartaxisvaluelabelparagraphstyleindex = source._tschchartaxisvaluelabelparagraphstyleindex
      _tschchartaxiscategorytitleparagraphstyleindex = source._tschchartaxiscategorytitleparagraphstyleindex
      _tschchartaxiscategorylabelparagraphstyleindex = source._tschchartaxiscategorylabelparagraphstyleindex
      _tschchartaxisvalue3Dgridlinestroke = source._tschchartaxisvalue3Dgridlinestroke
      _tschchartaxiscategory3Dgridlinestroke = source._tschchartaxiscategory3Dgridlinestroke
      _tschchartaxisvalue3Dgridlineopacity = source._tschchartaxisvalue3Dgridlineopacity
      _tschchartaxiscategory3Dgridlineopacity = source._tschchartaxiscategory3Dgridlineopacity
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._super == nil {return false}
      if let v = _storage._super, !v.isInitialized {return false}
      if let v = _storage._tschchartaxisvaluemajorgridlinestroke, !v.isInitialized {return false}
      if let v = _storage._tschchartaxisvalueminorgridlinestroke, !v.isInitialized {return false}
      if let v = _storage._tschchartaxisvaluemajorgridlineshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartaxisvalueminorgridlineshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartaxiscategorymajorgridlinestroke, !v.isInitialized {return false}
      if let v = _storage._tschchartaxiscategoryminorgridlinestroke, !v.isInitialized {return false}
      if let v = _storage._tschchartaxiscategorymajorgridlineshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartaxiscategoryminorgridlineshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartaxisvalue3Dgridlinestroke, !v.isInitialized {return false}
      if let v = _storage._tschchartaxiscategory3Dgridlinestroke, !v.isInitialized {return false}
      return true
    }
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._super)
        case 10: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxisvalueshowmajorgridlines)
        case 11: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxisvalueshowminorgridlines)
        case 12: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxisvaluemajorgridlinestroke)
        case 13: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxisvalueminorgridlinestroke)
        case 14: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxisvaluetickmarklocation)
        case 15: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxisvalueshowmajortickmarks)
        case 16: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxisvalueshowminortickmarks)
        case 17: try decoder.decodeSingularFloatField(value: &_storage._tschchartaxisvaluelabelsorientation)
        case 18: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxisvalueshowminimumlabel)
        case 21: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxisvaluemajorgridlineshadow)
        case 22: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxisvalueminorgridlineshadow)
        case 23: try decoder.decodeSingularFloatField(value: &_storage._tschchartaxisvaluemajorgridlineopacity)
        case 24: try decoder.decodeSingularFloatField(value: &_storage._tschchartaxisvalueminorgridlineopacity)
        case 25: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxisvalueshowaxis)
        case 50: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxiscategoryshowmajorgridlines)
        case 51: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxiscategoryshowminorgridlines)
        case 52: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxiscategorymajorgridlinestroke)
        case 53: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxiscategoryminorgridlinestroke)
        case 54: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxiscategorytickmarklocation)
        case 55: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxiscategoryshowmajortickmarks)
        case 56: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxiscategoryshowminortickmarks)
        case 57: try decoder.decodeSingularFloatField(value: &_storage._tschchartaxiscategorylabelsorientation)
        case 58: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxiscategoryhorizontalspacing)
        case 59: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxiscategoryverticalspacing)
        case 60: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxiscategoryshowlastlabel)
        case 63: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxiscategorymajorgridlineshadow)
        case 64: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxiscategoryminorgridlineshadow)
        case 65: try decoder.decodeSingularFloatField(value: &_storage._tschchartaxiscategorymajorgridlineopacity)
        case 66: try decoder.decodeSingularFloatField(value: &_storage._tschchartaxiscategoryminorgridlineopacity)
        case 67: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxiscategoryshowaxis)
        case 102: try decoder.decodeSingularFloatField(value: &_storage._tschchartaxisdefaultlabelsorientation)
        case 110: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxisdefaulttitleparagraphstyleindex)
        case 111: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxisdefaultlabelparagraphstyleindex)
        case 112: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxisvaluetitleparagraphstyleindex)
        case 113: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxisvaluelabelparagraphstyleindex)
        case 114: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxiscategorytitleparagraphstyleindex)
        case 115: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxiscategorylabelparagraphstyleindex)
        case 331: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxisvalue3Dgridlinestroke)
        case 332: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxiscategory3Dgridlinestroke)
        case 333: try decoder.decodeSingularFloatField(value: &_storage._tschchartaxisvalue3Dgridlineopacity)
        case 334: try decoder.decodeSingularFloatField(value: &_storage._tschchartaxiscategory3Dgridlineopacity)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._super {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._tschchartaxisvalueshowmajorgridlines {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 10)
      }
      if let v = _storage._tschchartaxisvalueshowminorgridlines {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 11)
      }
      if let v = _storage._tschchartaxisvaluemajorgridlinestroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 12)
      }
      if let v = _storage._tschchartaxisvalueminorgridlinestroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 13)
      }
      if let v = _storage._tschchartaxisvaluetickmarklocation {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 14)
      }
      if let v = _storage._tschchartaxisvalueshowmajortickmarks {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 15)
      }
      if let v = _storage._tschchartaxisvalueshowminortickmarks {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 16)
      }
      if let v = _storage._tschchartaxisvaluelabelsorientation {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 17)
      }
      if let v = _storage._tschchartaxisvalueshowminimumlabel {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 18)
      }
      if let v = _storage._tschchartaxisvaluemajorgridlineshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 21)
      }
      if let v = _storage._tschchartaxisvalueminorgridlineshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 22)
      }
      if let v = _storage._tschchartaxisvaluemajorgridlineopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 23)
      }
      if let v = _storage._tschchartaxisvalueminorgridlineopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 24)
      }
      if let v = _storage._tschchartaxisvalueshowaxis {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 25)
      }
      if let v = _storage._tschchartaxiscategoryshowmajorgridlines {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 50)
      }
      if let v = _storage._tschchartaxiscategoryshowminorgridlines {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 51)
      }
      if let v = _storage._tschchartaxiscategorymajorgridlinestroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 52)
      }
      if let v = _storage._tschchartaxiscategoryminorgridlinestroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 53)
      }
      if let v = _storage._tschchartaxiscategorytickmarklocation {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 54)
      }
      if let v = _storage._tschchartaxiscategoryshowmajortickmarks {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 55)
      }
      if let v = _storage._tschchartaxiscategoryshowminortickmarks {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 56)
      }
      if let v = _storage._tschchartaxiscategorylabelsorientation {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 57)
      }
      if let v = _storage._tschchartaxiscategoryhorizontalspacing {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 58)
      }
      if let v = _storage._tschchartaxiscategoryverticalspacing {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 59)
      }
      if let v = _storage._tschchartaxiscategoryshowlastlabel {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 60)
      }
      if let v = _storage._tschchartaxiscategorymajorgridlineshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 63)
      }
      if let v = _storage._tschchartaxiscategoryminorgridlineshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 64)
      }
      if let v = _storage._tschchartaxiscategorymajorgridlineopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 65)
      }
      if let v = _storage._tschchartaxiscategoryminorgridlineopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 66)
      }
      if let v = _storage._tschchartaxiscategoryshowaxis {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 67)
      }
      if let v = _storage._tschchartaxisdefaultlabelsorientation {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 102)
      }
      if let v = _storage._tschchartaxisdefaulttitleparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 110)
      }
      if let v = _storage._tschchartaxisdefaultlabelparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 111)
      }
      if let v = _storage._tschchartaxisvaluetitleparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 112)
      }
      if let v = _storage._tschchartaxisvaluelabelparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 113)
      }
      if let v = _storage._tschchartaxiscategorytitleparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 114)
      }
      if let v = _storage._tschchartaxiscategorylabelparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 115)
      }
      if let v = _storage._tschchartaxisvalue3Dgridlinestroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 331)
      }
      if let v = _storage._tschchartaxiscategory3Dgridlinestroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 332)
      }
      if let v = _storage._tschchartaxisvalue3Dgridlineopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 333)
      }
      if let v = _storage._tschchartaxiscategory3Dgridlineopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 334)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSCH_PreUFF_ChartAxisStyleArchive, rhs: TSCH_PreUFF_ChartAxisStyleArchive) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._super != rhs_storage._super {return false}
        if _storage._tschchartaxisvalueshowmajorgridlines != rhs_storage._tschchartaxisvalueshowmajorgridlines {return false}
        if _storage._tschchartaxisvalueshowminorgridlines != rhs_storage._tschchartaxisvalueshowminorgridlines {return false}
        if _storage._tschchartaxisvaluemajorgridlinestroke != rhs_storage._tschchartaxisvaluemajorgridlinestroke {return false}
        if _storage._tschchartaxisvalueminorgridlinestroke != rhs_storage._tschchartaxisvalueminorgridlinestroke {return false}
        if _storage._tschchartaxisvaluetickmarklocation != rhs_storage._tschchartaxisvaluetickmarklocation {return false}
        if _storage._tschchartaxisvalueshowmajortickmarks != rhs_storage._tschchartaxisvalueshowmajortickmarks {return false}
        if _storage._tschchartaxisvalueshowminortickmarks != rhs_storage._tschchartaxisvalueshowminortickmarks {return false}
        if _storage._tschchartaxisvaluelabelsorientation != rhs_storage._tschchartaxisvaluelabelsorientation {return false}
        if _storage._tschchartaxisvalueshowminimumlabel != rhs_storage._tschchartaxisvalueshowminimumlabel {return false}
        if _storage._tschchartaxisvaluemajorgridlineshadow != rhs_storage._tschchartaxisvaluemajorgridlineshadow {return false}
        if _storage._tschchartaxisvalueminorgridlineshadow != rhs_storage._tschchartaxisvalueminorgridlineshadow {return false}
        if _storage._tschchartaxisvaluemajorgridlineopacity != rhs_storage._tschchartaxisvaluemajorgridlineopacity {return false}
        if _storage._tschchartaxisvalueminorgridlineopacity != rhs_storage._tschchartaxisvalueminorgridlineopacity {return false}
        if _storage._tschchartaxisvalueshowaxis != rhs_storage._tschchartaxisvalueshowaxis {return false}
        if _storage._tschchartaxiscategoryshowmajorgridlines != rhs_storage._tschchartaxiscategoryshowmajorgridlines {return false}
        if _storage._tschchartaxiscategoryshowminorgridlines != rhs_storage._tschchartaxiscategoryshowminorgridlines {return false}
        if _storage._tschchartaxiscategorymajorgridlinestroke != rhs_storage._tschchartaxiscategorymajorgridlinestroke {return false}
        if _storage._tschchartaxiscategoryminorgridlinestroke != rhs_storage._tschchartaxiscategoryminorgridlinestroke {return false}
        if _storage._tschchartaxiscategorytickmarklocation != rhs_storage._tschchartaxiscategorytickmarklocation {return false}
        if _storage._tschchartaxiscategoryshowmajortickmarks != rhs_storage._tschchartaxiscategoryshowmajortickmarks {return false}
        if _storage._tschchartaxiscategoryshowminortickmarks != rhs_storage._tschchartaxiscategoryshowminortickmarks {return false}
        if _storage._tschchartaxiscategorylabelsorientation != rhs_storage._tschchartaxiscategorylabelsorientation {return false}
        if _storage._tschchartaxiscategoryhorizontalspacing != rhs_storage._tschchartaxiscategoryhorizontalspacing {return false}
        if _storage._tschchartaxiscategoryverticalspacing != rhs_storage._tschchartaxiscategoryverticalspacing {return false}
        if _storage._tschchartaxiscategoryshowlastlabel != rhs_storage._tschchartaxiscategoryshowlastlabel {return false}
        if _storage._tschchartaxiscategorymajorgridlineshadow != rhs_storage._tschchartaxiscategorymajorgridlineshadow {return false}
        if _storage._tschchartaxiscategoryminorgridlineshadow != rhs_storage._tschchartaxiscategoryminorgridlineshadow {return false}
        if _storage._tschchartaxiscategorymajorgridlineopacity != rhs_storage._tschchartaxiscategorymajorgridlineopacity {return false}
        if _storage._tschchartaxiscategoryminorgridlineopacity != rhs_storage._tschchartaxiscategoryminorgridlineopacity {return false}
        if _storage._tschchartaxiscategoryshowaxis != rhs_storage._tschchartaxiscategoryshowaxis {return false}
        if _storage._tschchartaxisdefaultlabelsorientation != rhs_storage._tschchartaxisdefaultlabelsorientation {return false}
        if _storage._tschchartaxisdefaulttitleparagraphstyleindex != rhs_storage._tschchartaxisdefaulttitleparagraphstyleindex {return false}
        if _storage._tschchartaxisdefaultlabelparagraphstyleindex != rhs_storage._tschchartaxisdefaultlabelparagraphstyleindex {return false}
        if _storage._tschchartaxisvaluetitleparagraphstyleindex != rhs_storage._tschchartaxisvaluetitleparagraphstyleindex {return false}
        if _storage._tschchartaxisvaluelabelparagraphstyleindex != rhs_storage._tschchartaxisvaluelabelparagraphstyleindex {return false}
        if _storage._tschchartaxiscategorytitleparagraphstyleindex != rhs_storage._tschchartaxiscategorytitleparagraphstyleindex {return false}
        if _storage._tschchartaxiscategorylabelparagraphstyleindex != rhs_storage._tschchartaxiscategorylabelparagraphstyleindex {return false}
        if _storage._tschchartaxisvalue3Dgridlinestroke != rhs_storage._tschchartaxisvalue3Dgridlinestroke {return false}
        if _storage._tschchartaxiscategory3Dgridlinestroke != rhs_storage._tschchartaxiscategory3Dgridlinestroke {return false}
        if _storage._tschchartaxisvalue3Dgridlineopacity != rhs_storage._tschchartaxisvalue3Dgridlineopacity {return false}
        if _storage._tschchartaxiscategory3Dgridlineopacity != rhs_storage._tschchartaxiscategory3Dgridlineopacity {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSCH_PreUFF_ChartAxisNonStyleArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ChartAxisNonStyleArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "super"),
    11: .same(proto: "tschchartaxisdefaultusermin"),
    12: .same(proto: "tschchartaxisdefaultusermax"),
    13: .same(proto: "tschchartaxisdefaultnumberformat"),
    14: .same(proto: "tschchartaxisdefaultshowlabels"),
    50: .same(proto: "tschchartaxisvaluenumberofminorgridlines"),
    51: .same(proto: "tschchartaxisvaluescale"),
    52: .same(proto: "tschchartaxisvaluenumberofdecades"),
    53: .same(proto: "tschchartaxisvalueshowlabels"),
    54: .same(proto: "tschchartaxisvalueshowtitle"),
    55: .same(proto: "tschchartaxisvaluenumberofmajorgridlines"),
    56: .same(proto: "tschchartaxisvaluetitle"),
    100: .same(proto: "tschchartaxiscategoryshowlabels"),
    101: .same(proto: "tschchartaxiscategoryshowserieslabels"),
    102: .same(proto: "tschchartaxiscategoryshowtitle"),
    103: .same(proto: "tschchartaxiscategorytitle"),
    120: .same(proto: "tschchartaxisdefaultnumberformattype"),
    336: .same(proto: "tschchartaxisdefault3dlabelposition"),
    116: .same(proto: "tschchartaxiscategoryplottoedges"),
  ]

  fileprivate class _StorageClass {
    var _super: TSS_StyleArchive? = nil
    var _tschchartaxisdefaultusermin: TSCH_ChartsNSNumberDoubleArchive? = nil
    var _tschchartaxisdefaultusermax: TSCH_ChartsNSNumberDoubleArchive? = nil
    var _tschchartaxisdefaultnumberformat: TSCH_PreUFF_ChartsNumberFormatArchive? = nil
    var _tschchartaxisdefaultshowlabels: Bool? = nil
    var _tschchartaxisvaluenumberofminorgridlines: Int32? = nil
    var _tschchartaxisvaluescale: Int32? = nil
    var _tschchartaxisvaluenumberofdecades: Int32? = nil
    var _tschchartaxisvalueshowlabels: Bool? = nil
    var _tschchartaxisvalueshowtitle: Bool? = nil
    var _tschchartaxisvaluenumberofmajorgridlines: Int32? = nil
    var _tschchartaxisvaluetitle: String? = nil
    var _tschchartaxiscategoryshowlabels: Bool? = nil
    var _tschchartaxiscategoryshowserieslabels: Bool? = nil
    var _tschchartaxiscategoryshowtitle: Bool? = nil
    var _tschchartaxiscategorytitle: String? = nil
    var _tschchartaxisdefaultnumberformattype: Int32? = nil
    var _tschchartaxisdefault3Dlabelposition: Int32? = nil
    var _tschchartaxiscategoryplottoedges: Bool? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _super = source._super
      _tschchartaxisdefaultusermin = source._tschchartaxisdefaultusermin
      _tschchartaxisdefaultusermax = source._tschchartaxisdefaultusermax
      _tschchartaxisdefaultnumberformat = source._tschchartaxisdefaultnumberformat
      _tschchartaxisdefaultshowlabels = source._tschchartaxisdefaultshowlabels
      _tschchartaxisvaluenumberofminorgridlines = source._tschchartaxisvaluenumberofminorgridlines
      _tschchartaxisvaluescale = source._tschchartaxisvaluescale
      _tschchartaxisvaluenumberofdecades = source._tschchartaxisvaluenumberofdecades
      _tschchartaxisvalueshowlabels = source._tschchartaxisvalueshowlabels
      _tschchartaxisvalueshowtitle = source._tschchartaxisvalueshowtitle
      _tschchartaxisvaluenumberofmajorgridlines = source._tschchartaxisvaluenumberofmajorgridlines
      _tschchartaxisvaluetitle = source._tschchartaxisvaluetitle
      _tschchartaxiscategoryshowlabels = source._tschchartaxiscategoryshowlabels
      _tschchartaxiscategoryshowserieslabels = source._tschchartaxiscategoryshowserieslabels
      _tschchartaxiscategoryshowtitle = source._tschchartaxiscategoryshowtitle
      _tschchartaxiscategorytitle = source._tschchartaxiscategorytitle
      _tschchartaxisdefaultnumberformattype = source._tschchartaxisdefaultnumberformattype
      _tschchartaxisdefault3Dlabelposition = source._tschchartaxisdefault3Dlabelposition
      _tschchartaxiscategoryplottoedges = source._tschchartaxiscategoryplottoedges
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._super == nil {return false}
      if let v = _storage._super, !v.isInitialized {return false}
      if let v = _storage._tschchartaxisdefaultnumberformat, !v.isInitialized {return false}
      return true
    }
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._super)
        case 11: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxisdefaultusermin)
        case 12: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxisdefaultusermax)
        case 13: try decoder.decodeSingularMessageField(value: &_storage._tschchartaxisdefaultnumberformat)
        case 14: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxisdefaultshowlabels)
        case 50: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxisvaluenumberofminorgridlines)
        case 51: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxisvaluescale)
        case 52: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxisvaluenumberofdecades)
        case 53: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxisvalueshowlabels)
        case 54: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxisvalueshowtitle)
        case 55: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxisvaluenumberofmajorgridlines)
        case 56: try decoder.decodeSingularStringField(value: &_storage._tschchartaxisvaluetitle)
        case 100: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxiscategoryshowlabels)
        case 101: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxiscategoryshowserieslabels)
        case 102: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxiscategoryshowtitle)
        case 103: try decoder.decodeSingularStringField(value: &_storage._tschchartaxiscategorytitle)
        case 116: try decoder.decodeSingularBoolField(value: &_storage._tschchartaxiscategoryplottoedges)
        case 120: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxisdefaultnumberformattype)
        case 336: try decoder.decodeSingularInt32Field(value: &_storage._tschchartaxisdefault3Dlabelposition)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._super {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._tschchartaxisdefaultusermin {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 11)
      }
      if let v = _storage._tschchartaxisdefaultusermax {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 12)
      }
      if let v = _storage._tschchartaxisdefaultnumberformat {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 13)
      }
      if let v = _storage._tschchartaxisdefaultshowlabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 14)
      }
      if let v = _storage._tschchartaxisvaluenumberofminorgridlines {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 50)
      }
      if let v = _storage._tschchartaxisvaluescale {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 51)
      }
      if let v = _storage._tschchartaxisvaluenumberofdecades {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 52)
      }
      if let v = _storage._tschchartaxisvalueshowlabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 53)
      }
      if let v = _storage._tschchartaxisvalueshowtitle {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 54)
      }
      if let v = _storage._tschchartaxisvaluenumberofmajorgridlines {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 55)
      }
      if let v = _storage._tschchartaxisvaluetitle {
        try visitor.visitSingularStringField(value: v, fieldNumber: 56)
      }
      if let v = _storage._tschchartaxiscategoryshowlabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 100)
      }
      if let v = _storage._tschchartaxiscategoryshowserieslabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 101)
      }
      if let v = _storage._tschchartaxiscategoryshowtitle {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 102)
      }
      if let v = _storage._tschchartaxiscategorytitle {
        try visitor.visitSingularStringField(value: v, fieldNumber: 103)
      }
      if let v = _storage._tschchartaxiscategoryplottoedges {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 116)
      }
      if let v = _storage._tschchartaxisdefaultnumberformattype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 120)
      }
      if let v = _storage._tschchartaxisdefault3Dlabelposition {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 336)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSCH_PreUFF_ChartAxisNonStyleArchive, rhs: TSCH_PreUFF_ChartAxisNonStyleArchive) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._super != rhs_storage._super {return false}
        if _storage._tschchartaxisdefaultusermin != rhs_storage._tschchartaxisdefaultusermin {return false}
        if _storage._tschchartaxisdefaultusermax != rhs_storage._tschchartaxisdefaultusermax {return false}
        if _storage._tschchartaxisdefaultnumberformat != rhs_storage._tschchartaxisdefaultnumberformat {return false}
        if _storage._tschchartaxisdefaultshowlabels != rhs_storage._tschchartaxisdefaultshowlabels {return false}
        if _storage._tschchartaxisvaluenumberofminorgridlines != rhs_storage._tschchartaxisvaluenumberofminorgridlines {return false}
        if _storage._tschchartaxisvaluescale != rhs_storage._tschchartaxisvaluescale {return false}
        if _storage._tschchartaxisvaluenumberofdecades != rhs_storage._tschchartaxisvaluenumberofdecades {return false}
        if _storage._tschchartaxisvalueshowlabels != rhs_storage._tschchartaxisvalueshowlabels {return false}
        if _storage._tschchartaxisvalueshowtitle != rhs_storage._tschchartaxisvalueshowtitle {return false}
        if _storage._tschchartaxisvaluenumberofmajorgridlines != rhs_storage._tschchartaxisvaluenumberofmajorgridlines {return false}
        if _storage._tschchartaxisvaluetitle != rhs_storage._tschchartaxisvaluetitle {return false}
        if _storage._tschchartaxiscategoryshowlabels != rhs_storage._tschchartaxiscategoryshowlabels {return false}
        if _storage._tschchartaxiscategoryshowserieslabels != rhs_storage._tschchartaxiscategoryshowserieslabels {return false}
        if _storage._tschchartaxiscategoryshowtitle != rhs_storage._tschchartaxiscategoryshowtitle {return false}
        if _storage._tschchartaxiscategorytitle != rhs_storage._tschchartaxiscategorytitle {return false}
        if _storage._tschchartaxisdefaultnumberformattype != rhs_storage._tschchartaxisdefaultnumberformattype {return false}
        if _storage._tschchartaxisdefault3Dlabelposition != rhs_storage._tschchartaxisdefault3Dlabelposition {return false}
        if _storage._tschchartaxiscategoryplottoedges != rhs_storage._tschchartaxiscategoryplottoedges {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSCH_PreUFF_ChartSeriesStyleArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ChartSeriesStyleArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "super"),
    201: .same(proto: "tschchartseriesdefaulttrendlineequationparagraphstyleindex"),
    202: .same(proto: "tschchartseriesdefaulttrendlinersquaredparagraphstyleindex"),
    205: .same(proto: "tschchartseriesdefaulttrendlineequationopacity"),
    206: .same(proto: "tschchartseriesdefaulttrendlinersquaredopacity"),
    10: .same(proto: "tschchartseriesbarfill"),
    11: .same(proto: "tschchartseriesbarstroke"),
    13: .same(proto: "tschchartseriesbarvaluelabelposition"),
    16: .same(proto: "tschchartserieslinestroke"),
    17: .same(proto: "tschchartserieslinesymbolfill"),
    18: .same(proto: "tschchartserieslinesymbolstroke"),
    20: .same(proto: "tschchartserieslinesymbolsize"),
    22: .same(proto: "tschchartserieslinevaluelabelposition"),
    25: .same(proto: "tschchartseriesareafill"),
    26: .same(proto: "tschchartseriesareastroke"),
    28: .same(proto: "tschchartseriesareavaluelabelposition"),
    29: .same(proto: "tschchartseriesareasymbolfill"),
    30: .same(proto: "tschchartseriesareasymbolstroke"),
    32: .same(proto: "tschchartseriesareasymbolsize"),
    35: .same(proto: "tschchartseriespiefill"),
    36: .same(proto: "tschchartseriespiestroke"),
    40: .same(proto: "tschchartseriesscatterstroke"),
    41: .same(proto: "tschchartseriesscattersymbolfill"),
    42: .same(proto: "tschchartseriesscattersymbolstroke"),
    44: .same(proto: "tschchartseriesscattersymbolsize"),
    46: .same(proto: "tschchartseriesscattervaluelabelposition"),
    50: .same(proto: "tschchartseriesdefaultfill"),
    52: .same(proto: "tschchartseriesdefaultvaluelabelposition"),
    60: .same(proto: "tschchartseriespiedeprecatedserieslabelson"),
    62: .same(proto: "tschchartseriescolumnfill"),
    100: .same(proto: "tschchartseriespieshadow"),
    101: .same(proto: "tschchartseriesbarshadow"),
    102: .same(proto: "tschchartseriesareashadow"),
    103: .same(proto: "tschchartseriesscattershadow"),
    104: .same(proto: "tschchartseriesmixedlineshadow"),
    105: .same(proto: "tschchartseriesmixedareashadow"),
    106: .same(proto: "tschchartseriesmixedcolumnshadow"),
    107: .same(proto: "tschchartserieslineshadow"),
    108: .same(proto: "tschchartseriesdefaultshadow"),
    207: .same(proto: "tschchartseriesbubblesymbolfill"),
    211: .same(proto: "tschchartseriesbubblestroke"),
    212: .same(proto: "tschchartseriesbubblesymbolstroke"),
    213: .same(proto: "tschchartseriesbubblevaluelabelposition"),
    214: .same(proto: "tschchartseriesbubbleshadow"),
    215: .same(proto: "tschchartseriesbubblesymbolfilluseseriesstroke"),
    306: .same(proto: "tschchartseries3dbarshadow"),
    307: .same(proto: "tschchartseries3dcolumnshadow"),
    308: .same(proto: "tschchartseries3dlineshadow"),
    309: .same(proto: "tschchartseries3dareashadow"),
    310: .same(proto: "tschchartseries3dpieshadow"),
    110: .same(proto: "tschchartseriesdefaultlabelparagraphstyleindex"),
    111: .same(proto: "tschchartseriesbarlabelparagraphstyleindex"),
    112: .same(proto: "tschchartserieslinelabelparagraphstyleindex"),
    113: .same(proto: "tschchartseriesarealabelparagraphstyleindex"),
    114: .same(proto: "tschchartseriespielabelparagraphstyleindex"),
    115: .same(proto: "tschchartseriesmixedlabelparagraphstyleindex"),
    116: .same(proto: "tschchartseriesdefaultopacity"),
    117: .same(proto: "tschchartserieslinesymbolfilluseseriesstroke"),
    118: .same(proto: "tschchartseriesareasymbolfilluseseriesstroke"),
    119: .same(proto: "tschchartseriesscattersymbolfilluseseriesstroke"),
    120: .same(proto: "tschchartseriesmixedlinesymbolfilluseseriesstroke"),
    121: .same(proto: "tschchartseriesmixedareasymbolfilluseseriesstroke"),
    122: .same(proto: "tschchartserieslinesymbolfilluseseriesfill"),
    123: .same(proto: "tschchartseriesareasymbolfilluseseriesfill"),
    124: .same(proto: "tschchartseriesmixedlinesymbolfilluseseriesfill"),
    125: .same(proto: "tschchartseriesmixedareasymbolfilluseseriesfill"),
    130: .same(proto: "tschchartseriesmixedcolumnfill"),
    131: .same(proto: "tschchartseriesmixedareafill"),
    132: .same(proto: "tschchartseriesmixedcolumnstroke"),
    133: .same(proto: "tschchartseriesmixedlinestroke"),
    134: .same(proto: "tschchartseriesmixedareastroke"),
    135: .same(proto: "tschchartseriesmixedlinesymbolsize"),
    136: .same(proto: "tschchartseriesmixedareasymbolsize"),
    137: .same(proto: "tschchartseriesmixedlinesymbolfill"),
    138: .same(proto: "tschchartseriesmixedareasymbolfill"),
    139: .same(proto: "tschchartseriesmixedlinesymbolstroke"),
    140: .same(proto: "tschchartseriesmixedareasymbolstroke"),
    141: .same(proto: "tschchartseriesmixedcolumnvaluelabelposition"),
    142: .same(proto: "tschchartseriesmixedlinevaluelabelposition"),
    143: .same(proto: "tschchartseriesmixedareavaluelabelposition"),
    150: .same(proto: "tschchartseriesdefaultoutsidelabelparagraphstyleindex"),
    151: .same(proto: "tschchartseriesbaroutsidelabelparagraphstyleindex"),
    153: .same(proto: "tschchartseriesareaoutsidelabelparagraphstyleindex"),
    154: .same(proto: "tschchartseriespieoutsidelabelparagraphstyleindex"),
    155: .same(proto: "tschchartseriesmixedoutsidelabelparagraphstyleindex"),
    156: .same(proto: "tschchartseriesstackedbarvaluelabelposition"),
    157: .same(proto: "tschchartseriesstackedareavaluelabelposition"),
    167: .same(proto: "tschchartseriesdefaulttrendlinestroke"),
    168: .same(proto: "tschchartseriesdefaulttrendlineshadow"),
    180: .same(proto: "tschchartseriesdefaulterrorbarshadow"),
    181: .same(proto: "tschchartseriesdefaulterrorbarstroke"),
    182: .same(proto: "tschchartseriesdefaulterrorbarstrokescatterx"),
    183: .same(proto: "tschchartseriesdefaulterrorbarlineend"),
    184: .same(proto: "tschchartseriesdefaulterrorbarlineendscatterx"),
    300: .same(proto: "tschchartseriesdefaultdeprecated3dfill"),
    301: .same(proto: "tschchartseriesbardeprecated3dfill"),
    302: .same(proto: "tschchartseriescolumndeprecated3dfill"),
    303: .same(proto: "tschchartserieslinedeprecated3dfill"),
    304: .same(proto: "tschchartseriesareadeprecated3dfill"),
    305: .same(proto: "tschchartseriespiedeprecated3dfill"),
    320: .same(proto: "tschchartseries3dbarfill"),
    321: .same(proto: "tschchartseries3dcolumnfill"),
    322: .same(proto: "tschchartseries3dlinefill"),
    323: .same(proto: "tschchartseries3dareafill"),
    324: .same(proto: "tschchartseries3dpiefill"),
  ]

  fileprivate class _StorageClass {
    var _super: TSS_StyleArchive? = nil
    var _tschchartseriesdefaulttrendlineequationparagraphstyleindex: Int32? = nil
    var _tschchartseriesdefaulttrendlinersquaredparagraphstyleindex: Int32? = nil
    var _tschchartseriesdefaulttrendlineequationopacity: Float? = nil
    var _tschchartseriesdefaulttrendlinersquaredopacity: Float? = nil
    var _tschchartseriesbarfill: TSD_FillArchive? = nil
    var _tschchartseriesbarstroke: TSD_StrokeArchive? = nil
    var _tschchartseriesbarvaluelabelposition: Int32? = nil
    var _tschchartserieslinestroke: TSD_StrokeArchive? = nil
    var _tschchartserieslinesymbolfill: TSD_FillArchive? = nil
    var _tschchartserieslinesymbolstroke: TSD_StrokeArchive? = nil
    var _tschchartserieslinesymbolsize: Float? = nil
    var _tschchartserieslinevaluelabelposition: Int32? = nil
    var _tschchartseriesareafill: TSD_FillArchive? = nil
    var _tschchartseriesareastroke: TSD_StrokeArchive? = nil
    var _tschchartseriesareavaluelabelposition: Int32? = nil
    var _tschchartseriesareasymbolfill: TSD_FillArchive? = nil
    var _tschchartseriesareasymbolstroke: TSD_StrokeArchive? = nil
    var _tschchartseriesareasymbolsize: Float? = nil
    var _tschchartseriespiefill: TSD_FillArchive? = nil
    var _tschchartseriespiestroke: TSD_StrokeArchive? = nil
    var _tschchartseriesscatterstroke: TSD_StrokeArchive? = nil
    var _tschchartseriesscattersymbolfill: TSD_FillArchive? = nil
    var _tschchartseriesscattersymbolstroke: TSD_StrokeArchive? = nil
    var _tschchartseriesscattersymbolsize: Float? = nil
    var _tschchartseriesscattervaluelabelposition: Int32? = nil
    var _tschchartseriesdefaultfill: TSD_FillArchive? = nil
    var _tschchartseriesdefaultvaluelabelposition: Int32? = nil
    var _tschchartseriespiedeprecatedserieslabelson: Bool? = nil
    var _tschchartseriescolumnfill: TSD_FillArchive? = nil
    var _tschchartseriespieshadow: TSD_ShadowArchive? = nil
    var _tschchartseriesbarshadow: TSD_ShadowArchive? = nil
    var _tschchartseriesareashadow: TSD_ShadowArchive? = nil
    var _tschchartseriesscattershadow: TSD_ShadowArchive? = nil
    var _tschchartseriesmixedlineshadow: TSD_ShadowArchive? = nil
    var _tschchartseriesmixedareashadow: TSD_ShadowArchive? = nil
    var _tschchartseriesmixedcolumnshadow: TSD_ShadowArchive? = nil
    var _tschchartserieslineshadow: TSD_ShadowArchive? = nil
    var _tschchartseriesdefaultshadow: TSD_ShadowArchive? = nil
    var _tschchartseriesbubblesymbolfill: TSD_FillArchive? = nil
    var _tschchartseriesbubblestroke: TSD_StrokeArchive? = nil
    var _tschchartseriesbubblesymbolstroke: TSD_StrokeArchive? = nil
    var _tschchartseriesbubblevaluelabelposition: Int32? = nil
    var _tschchartseriesbubbleshadow: TSD_ShadowArchive? = nil
    var _tschchartseriesbubblesymbolfilluseseriesstroke: Bool? = nil
    var _tschchartseries3Dbarshadow: TSD_ShadowArchive? = nil
    var _tschchartseries3Dcolumnshadow: TSD_ShadowArchive? = nil
    var _tschchartseries3Dlineshadow: TSD_ShadowArchive? = nil
    var _tschchartseries3Dareashadow: TSD_ShadowArchive? = nil
    var _tschchartseries3Dpieshadow: TSD_ShadowArchive? = nil
    var _tschchartseriesdefaultlabelparagraphstyleindex: Int32? = nil
    var _tschchartseriesbarlabelparagraphstyleindex: Int32? = nil
    var _tschchartserieslinelabelparagraphstyleindex: Int32? = nil
    var _tschchartseriesarealabelparagraphstyleindex: Int32? = nil
    var _tschchartseriespielabelparagraphstyleindex: Int32? = nil
    var _tschchartseriesmixedlabelparagraphstyleindex: Int32? = nil
    var _tschchartseriesdefaultopacity: Float? = nil
    var _tschchartserieslinesymbolfilluseseriesstroke: Bool? = nil
    var _tschchartseriesareasymbolfilluseseriesstroke: Bool? = nil
    var _tschchartseriesscattersymbolfilluseseriesstroke: Bool? = nil
    var _tschchartseriesmixedlinesymbolfilluseseriesstroke: Bool? = nil
    var _tschchartseriesmixedareasymbolfilluseseriesstroke: Bool? = nil
    var _tschchartserieslinesymbolfilluseseriesfill: Bool? = nil
    var _tschchartseriesareasymbolfilluseseriesfill: Bool? = nil
    var _tschchartseriesmixedlinesymbolfilluseseriesfill: Bool? = nil
    var _tschchartseriesmixedareasymbolfilluseseriesfill: Bool? = nil
    var _tschchartseriesmixedcolumnfill: TSD_FillArchive? = nil
    var _tschchartseriesmixedareafill: TSD_FillArchive? = nil
    var _tschchartseriesmixedcolumnstroke: TSD_StrokeArchive? = nil
    var _tschchartseriesmixedlinestroke: TSD_StrokeArchive? = nil
    var _tschchartseriesmixedareastroke: TSD_StrokeArchive? = nil
    var _tschchartseriesmixedlinesymbolsize: Float? = nil
    var _tschchartseriesmixedareasymbolsize: Float? = nil
    var _tschchartseriesmixedlinesymbolfill: TSD_FillArchive? = nil
    var _tschchartseriesmixedareasymbolfill: TSD_FillArchive? = nil
    var _tschchartseriesmixedlinesymbolstroke: TSD_StrokeArchive? = nil
    var _tschchartseriesmixedareasymbolstroke: TSD_StrokeArchive? = nil
    var _tschchartseriesmixedcolumnvaluelabelposition: Int32? = nil
    var _tschchartseriesmixedlinevaluelabelposition: Int32? = nil
    var _tschchartseriesmixedareavaluelabelposition: Int32? = nil
    var _tschchartseriesdefaultoutsidelabelparagraphstyleindex: Int32? = nil
    var _tschchartseriesbaroutsidelabelparagraphstyleindex: Int32? = nil
    var _tschchartseriesareaoutsidelabelparagraphstyleindex: Int32? = nil
    var _tschchartseriespieoutsidelabelparagraphstyleindex: Int32? = nil
    var _tschchartseriesmixedoutsidelabelparagraphstyleindex: Int32? = nil
    var _tschchartseriesstackedbarvaluelabelposition: Int32? = nil
    var _tschchartseriesstackedareavaluelabelposition: Int32? = nil
    var _tschchartseriesdefaulttrendlinestroke: TSD_StrokeArchive? = nil
    var _tschchartseriesdefaulttrendlineshadow: TSD_ShadowArchive? = nil
    var _tschchartseriesdefaulterrorbarshadow: TSD_ShadowArchive? = nil
    var _tschchartseriesdefaulterrorbarstroke: TSD_StrokeArchive? = nil
    var _tschchartseriesdefaulterrorbarstrokescatterx: TSD_StrokeArchive? = nil
    var _tschchartseriesdefaulterrorbarlineend: TSD_LineEndArchive? = nil
    var _tschchartseriesdefaulterrorbarlineendscatterx: TSD_LineEndArchive? = nil
    var _tschchartseriesdefaultdeprecated3Dfill: TSCH_DEPRECATEDChart3DFillArchive? = nil
    var _tschchartseriesbardeprecated3Dfill: TSCH_DEPRECATEDChart3DFillArchive? = nil
    var _tschchartseriescolumndeprecated3Dfill: TSCH_DEPRECATEDChart3DFillArchive? = nil
    var _tschchartserieslinedeprecated3Dfill: TSCH_DEPRECATEDChart3DFillArchive? = nil
    var _tschchartseriesareadeprecated3Dfill: TSCH_DEPRECATEDChart3DFillArchive? = nil
    var _tschchartseriespiedeprecated3Dfill: TSCH_DEPRECATEDChart3DFillArchive? = nil
    var _tschchartseries3Dbarfill: TSD_FillArchive? = nil
    var _tschchartseries3Dcolumnfill: TSD_FillArchive? = nil
    var _tschchartseries3Dlinefill: TSD_FillArchive? = nil
    var _tschchartseries3Dareafill: TSD_FillArchive? = nil
    var _tschchartseries3Dpiefill: TSD_FillArchive? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _super = source._super
      _tschchartseriesdefaulttrendlineequationparagraphstyleindex = source._tschchartseriesdefaulttrendlineequationparagraphstyleindex
      _tschchartseriesdefaulttrendlinersquaredparagraphstyleindex = source._tschchartseriesdefaulttrendlinersquaredparagraphstyleindex
      _tschchartseriesdefaulttrendlineequationopacity = source._tschchartseriesdefaulttrendlineequationopacity
      _tschchartseriesdefaulttrendlinersquaredopacity = source._tschchartseriesdefaulttrendlinersquaredopacity
      _tschchartseriesbarfill = source._tschchartseriesbarfill
      _tschchartseriesbarstroke = source._tschchartseriesbarstroke
      _tschchartseriesbarvaluelabelposition = source._tschchartseriesbarvaluelabelposition
      _tschchartserieslinestroke = source._tschchartserieslinestroke
      _tschchartserieslinesymbolfill = source._tschchartserieslinesymbolfill
      _tschchartserieslinesymbolstroke = source._tschchartserieslinesymbolstroke
      _tschchartserieslinesymbolsize = source._tschchartserieslinesymbolsize
      _tschchartserieslinevaluelabelposition = source._tschchartserieslinevaluelabelposition
      _tschchartseriesareafill = source._tschchartseriesareafill
      _tschchartseriesareastroke = source._tschchartseriesareastroke
      _tschchartseriesareavaluelabelposition = source._tschchartseriesareavaluelabelposition
      _tschchartseriesareasymbolfill = source._tschchartseriesareasymbolfill
      _tschchartseriesareasymbolstroke = source._tschchartseriesareasymbolstroke
      _tschchartseriesareasymbolsize = source._tschchartseriesareasymbolsize
      _tschchartseriespiefill = source._tschchartseriespiefill
      _tschchartseriespiestroke = source._tschchartseriespiestroke
      _tschchartseriesscatterstroke = source._tschchartseriesscatterstroke
      _tschchartseriesscattersymbolfill = source._tschchartseriesscattersymbolfill
      _tschchartseriesscattersymbolstroke = source._tschchartseriesscattersymbolstroke
      _tschchartseriesscattersymbolsize = source._tschchartseriesscattersymbolsize
      _tschchartseriesscattervaluelabelposition = source._tschchartseriesscattervaluelabelposition
      _tschchartseriesdefaultfill = source._tschchartseriesdefaultfill
      _tschchartseriesdefaultvaluelabelposition = source._tschchartseriesdefaultvaluelabelposition
      _tschchartseriespiedeprecatedserieslabelson = source._tschchartseriespiedeprecatedserieslabelson
      _tschchartseriescolumnfill = source._tschchartseriescolumnfill
      _tschchartseriespieshadow = source._tschchartseriespieshadow
      _tschchartseriesbarshadow = source._tschchartseriesbarshadow
      _tschchartseriesareashadow = source._tschchartseriesareashadow
      _tschchartseriesscattershadow = source._tschchartseriesscattershadow
      _tschchartseriesmixedlineshadow = source._tschchartseriesmixedlineshadow
      _tschchartseriesmixedareashadow = source._tschchartseriesmixedareashadow
      _tschchartseriesmixedcolumnshadow = source._tschchartseriesmixedcolumnshadow
      _tschchartserieslineshadow = source._tschchartserieslineshadow
      _tschchartseriesdefaultshadow = source._tschchartseriesdefaultshadow
      _tschchartseriesbubblesymbolfill = source._tschchartseriesbubblesymbolfill
      _tschchartseriesbubblestroke = source._tschchartseriesbubblestroke
      _tschchartseriesbubblesymbolstroke = source._tschchartseriesbubblesymbolstroke
      _tschchartseriesbubblevaluelabelposition = source._tschchartseriesbubblevaluelabelposition
      _tschchartseriesbubbleshadow = source._tschchartseriesbubbleshadow
      _tschchartseriesbubblesymbolfilluseseriesstroke = source._tschchartseriesbubblesymbolfilluseseriesstroke
      _tschchartseries3Dbarshadow = source._tschchartseries3Dbarshadow
      _tschchartseries3Dcolumnshadow = source._tschchartseries3Dcolumnshadow
      _tschchartseries3Dlineshadow = source._tschchartseries3Dlineshadow
      _tschchartseries3Dareashadow = source._tschchartseries3Dareashadow
      _tschchartseries3Dpieshadow = source._tschchartseries3Dpieshadow
      _tschchartseriesdefaultlabelparagraphstyleindex = source._tschchartseriesdefaultlabelparagraphstyleindex
      _tschchartseriesbarlabelparagraphstyleindex = source._tschchartseriesbarlabelparagraphstyleindex
      _tschchartserieslinelabelparagraphstyleindex = source._tschchartserieslinelabelparagraphstyleindex
      _tschchartseriesarealabelparagraphstyleindex = source._tschchartseriesarealabelparagraphstyleindex
      _tschchartseriespielabelparagraphstyleindex = source._tschchartseriespielabelparagraphstyleindex
      _tschchartseriesmixedlabelparagraphstyleindex = source._tschchartseriesmixedlabelparagraphstyleindex
      _tschchartseriesdefaultopacity = source._tschchartseriesdefaultopacity
      _tschchartserieslinesymbolfilluseseriesstroke = source._tschchartserieslinesymbolfilluseseriesstroke
      _tschchartseriesareasymbolfilluseseriesstroke = source._tschchartseriesareasymbolfilluseseriesstroke
      _tschchartseriesscattersymbolfilluseseriesstroke = source._tschchartseriesscattersymbolfilluseseriesstroke
      _tschchartseriesmixedlinesymbolfilluseseriesstroke = source._tschchartseriesmixedlinesymbolfilluseseriesstroke
      _tschchartseriesmixedareasymbolfilluseseriesstroke = source._tschchartseriesmixedareasymbolfilluseseriesstroke
      _tschchartserieslinesymbolfilluseseriesfill = source._tschchartserieslinesymbolfilluseseriesfill
      _tschchartseriesareasymbolfilluseseriesfill = source._tschchartseriesareasymbolfilluseseriesfill
      _tschchartseriesmixedlinesymbolfilluseseriesfill = source._tschchartseriesmixedlinesymbolfilluseseriesfill
      _tschchartseriesmixedareasymbolfilluseseriesfill = source._tschchartseriesmixedareasymbolfilluseseriesfill
      _tschchartseriesmixedcolumnfill = source._tschchartseriesmixedcolumnfill
      _tschchartseriesmixedareafill = source._tschchartseriesmixedareafill
      _tschchartseriesmixedcolumnstroke = source._tschchartseriesmixedcolumnstroke
      _tschchartseriesmixedlinestroke = source._tschchartseriesmixedlinestroke
      _tschchartseriesmixedareastroke = source._tschchartseriesmixedareastroke
      _tschchartseriesmixedlinesymbolsize = source._tschchartseriesmixedlinesymbolsize
      _tschchartseriesmixedareasymbolsize = source._tschchartseriesmixedareasymbolsize
      _tschchartseriesmixedlinesymbolfill = source._tschchartseriesmixedlinesymbolfill
      _tschchartseriesmixedareasymbolfill = source._tschchartseriesmixedareasymbolfill
      _tschchartseriesmixedlinesymbolstroke = source._tschchartseriesmixedlinesymbolstroke
      _tschchartseriesmixedareasymbolstroke = source._tschchartseriesmixedareasymbolstroke
      _tschchartseriesmixedcolumnvaluelabelposition = source._tschchartseriesmixedcolumnvaluelabelposition
      _tschchartseriesmixedlinevaluelabelposition = source._tschchartseriesmixedlinevaluelabelposition
      _tschchartseriesmixedareavaluelabelposition = source._tschchartseriesmixedareavaluelabelposition
      _tschchartseriesdefaultoutsidelabelparagraphstyleindex = source._tschchartseriesdefaultoutsidelabelparagraphstyleindex
      _tschchartseriesbaroutsidelabelparagraphstyleindex = source._tschchartseriesbaroutsidelabelparagraphstyleindex
      _tschchartseriesareaoutsidelabelparagraphstyleindex = source._tschchartseriesareaoutsidelabelparagraphstyleindex
      _tschchartseriespieoutsidelabelparagraphstyleindex = source._tschchartseriespieoutsidelabelparagraphstyleindex
      _tschchartseriesmixedoutsidelabelparagraphstyleindex = source._tschchartseriesmixedoutsidelabelparagraphstyleindex
      _tschchartseriesstackedbarvaluelabelposition = source._tschchartseriesstackedbarvaluelabelposition
      _tschchartseriesstackedareavaluelabelposition = source._tschchartseriesstackedareavaluelabelposition
      _tschchartseriesdefaulttrendlinestroke = source._tschchartseriesdefaulttrendlinestroke
      _tschchartseriesdefaulttrendlineshadow = source._tschchartseriesdefaulttrendlineshadow
      _tschchartseriesdefaulterrorbarshadow = source._tschchartseriesdefaulterrorbarshadow
      _tschchartseriesdefaulterrorbarstroke = source._tschchartseriesdefaulterrorbarstroke
      _tschchartseriesdefaulterrorbarstrokescatterx = source._tschchartseriesdefaulterrorbarstrokescatterx
      _tschchartseriesdefaulterrorbarlineend = source._tschchartseriesdefaulterrorbarlineend
      _tschchartseriesdefaulterrorbarlineendscatterx = source._tschchartseriesdefaulterrorbarlineendscatterx
      _tschchartseriesdefaultdeprecated3Dfill = source._tschchartseriesdefaultdeprecated3Dfill
      _tschchartseriesbardeprecated3Dfill = source._tschchartseriesbardeprecated3Dfill
      _tschchartseriescolumndeprecated3Dfill = source._tschchartseriescolumndeprecated3Dfill
      _tschchartserieslinedeprecated3Dfill = source._tschchartserieslinedeprecated3Dfill
      _tschchartseriesareadeprecated3Dfill = source._tschchartseriesareadeprecated3Dfill
      _tschchartseriespiedeprecated3Dfill = source._tschchartseriespiedeprecated3Dfill
      _tschchartseries3Dbarfill = source._tschchartseries3Dbarfill
      _tschchartseries3Dcolumnfill = source._tschchartseries3Dcolumnfill
      _tschchartseries3Dlinefill = source._tschchartseries3Dlinefill
      _tschchartseries3Dareafill = source._tschchartseries3Dareafill
      _tschchartseries3Dpiefill = source._tschchartseries3Dpiefill
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._super == nil {return false}
      if let v = _storage._super, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesbarfill, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesbarstroke, !v.isInitialized {return false}
      if let v = _storage._tschchartserieslinestroke, !v.isInitialized {return false}
      if let v = _storage._tschchartserieslinesymbolfill, !v.isInitialized {return false}
      if let v = _storage._tschchartserieslinesymbolstroke, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesareafill, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesareastroke, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesareasymbolfill, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesareasymbolstroke, !v.isInitialized {return false}
      if let v = _storage._tschchartseriespiefill, !v.isInitialized {return false}
      if let v = _storage._tschchartseriespiestroke, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesscatterstroke, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesscattersymbolfill, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesscattersymbolstroke, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesdefaultfill, !v.isInitialized {return false}
      if let v = _storage._tschchartseriescolumnfill, !v.isInitialized {return false}
      if let v = _storage._tschchartseriespieshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesbarshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesareashadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesscattershadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesmixedlineshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesmixedareashadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesmixedcolumnshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartserieslineshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesdefaultshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesbubblesymbolfill, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesbubblestroke, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesbubblesymbolstroke, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesbubbleshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseries3Dbarshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseries3Dcolumnshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseries3Dlineshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseries3Dareashadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseries3Dpieshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesmixedcolumnfill, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesmixedareafill, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesmixedcolumnstroke, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesmixedlinestroke, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesmixedareastroke, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesmixedlinesymbolfill, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesmixedareasymbolfill, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesmixedlinesymbolstroke, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesmixedareasymbolstroke, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesdefaulttrendlinestroke, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesdefaulttrendlineshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesdefaulterrorbarshadow, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesdefaulterrorbarstroke, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesdefaulterrorbarstrokescatterx, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesdefaulterrorbarlineend, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesdefaulterrorbarlineendscatterx, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesdefaultdeprecated3Dfill, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesbardeprecated3Dfill, !v.isInitialized {return false}
      if let v = _storage._tschchartseriescolumndeprecated3Dfill, !v.isInitialized {return false}
      if let v = _storage._tschchartserieslinedeprecated3Dfill, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesareadeprecated3Dfill, !v.isInitialized {return false}
      if let v = _storage._tschchartseriespiedeprecated3Dfill, !v.isInitialized {return false}
      if let v = _storage._tschchartseries3Dbarfill, !v.isInitialized {return false}
      if let v = _storage._tschchartseries3Dcolumnfill, !v.isInitialized {return false}
      if let v = _storage._tschchartseries3Dlinefill, !v.isInitialized {return false}
      if let v = _storage._tschchartseries3Dareafill, !v.isInitialized {return false}
      if let v = _storage._tschchartseries3Dpiefill, !v.isInitialized {return false}
      return true
    }
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._super)
        case 10: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesbarfill)
        case 11: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesbarstroke)
        case 13: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesbarvaluelabelposition)
        case 16: try decoder.decodeSingularMessageField(value: &_storage._tschchartserieslinestroke)
        case 17: try decoder.decodeSingularMessageField(value: &_storage._tschchartserieslinesymbolfill)
        case 18: try decoder.decodeSingularMessageField(value: &_storage._tschchartserieslinesymbolstroke)
        case 20: try decoder.decodeSingularFloatField(value: &_storage._tschchartserieslinesymbolsize)
        case 22: try decoder.decodeSingularInt32Field(value: &_storage._tschchartserieslinevaluelabelposition)
        case 25: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesareafill)
        case 26: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesareastroke)
        case 28: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesareavaluelabelposition)
        case 29: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesareasymbolfill)
        case 30: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesareasymbolstroke)
        case 32: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesareasymbolsize)
        case 35: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriespiefill)
        case 36: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriespiestroke)
        case 40: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesscatterstroke)
        case 41: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesscattersymbolfill)
        case 42: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesscattersymbolstroke)
        case 44: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesscattersymbolsize)
        case 46: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesscattervaluelabelposition)
        case 50: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaultfill)
        case 52: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaultvaluelabelposition)
        case 60: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriespiedeprecatedserieslabelson)
        case 62: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriescolumnfill)
        case 100: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriespieshadow)
        case 101: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesbarshadow)
        case 102: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesareashadow)
        case 103: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesscattershadow)
        case 104: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesmixedlineshadow)
        case 105: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesmixedareashadow)
        case 106: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesmixedcolumnshadow)
        case 107: try decoder.decodeSingularMessageField(value: &_storage._tschchartserieslineshadow)
        case 108: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaultshadow)
        case 110: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaultlabelparagraphstyleindex)
        case 111: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesbarlabelparagraphstyleindex)
        case 112: try decoder.decodeSingularInt32Field(value: &_storage._tschchartserieslinelabelparagraphstyleindex)
        case 113: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesarealabelparagraphstyleindex)
        case 114: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriespielabelparagraphstyleindex)
        case 115: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesmixedlabelparagraphstyleindex)
        case 116: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesdefaultopacity)
        case 117: try decoder.decodeSingularBoolField(value: &_storage._tschchartserieslinesymbolfilluseseriesstroke)
        case 118: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesareasymbolfilluseseriesstroke)
        case 119: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesscattersymbolfilluseseriesstroke)
        case 120: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesmixedlinesymbolfilluseseriesstroke)
        case 121: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesmixedareasymbolfilluseseriesstroke)
        case 122: try decoder.decodeSingularBoolField(value: &_storage._tschchartserieslinesymbolfilluseseriesfill)
        case 123: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesareasymbolfilluseseriesfill)
        case 124: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesmixedlinesymbolfilluseseriesfill)
        case 125: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesmixedareasymbolfilluseseriesfill)
        case 130: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesmixedcolumnfill)
        case 131: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesmixedareafill)
        case 132: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesmixedcolumnstroke)
        case 133: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesmixedlinestroke)
        case 134: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesmixedareastroke)
        case 135: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesmixedlinesymbolsize)
        case 136: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesmixedareasymbolsize)
        case 137: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesmixedlinesymbolfill)
        case 138: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesmixedareasymbolfill)
        case 139: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesmixedlinesymbolstroke)
        case 140: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesmixedareasymbolstroke)
        case 141: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesmixedcolumnvaluelabelposition)
        case 142: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesmixedlinevaluelabelposition)
        case 143: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesmixedareavaluelabelposition)
        case 150: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaultoutsidelabelparagraphstyleindex)
        case 151: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesbaroutsidelabelparagraphstyleindex)
        case 153: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesareaoutsidelabelparagraphstyleindex)
        case 154: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriespieoutsidelabelparagraphstyleindex)
        case 155: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesmixedoutsidelabelparagraphstyleindex)
        case 156: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesstackedbarvaluelabelposition)
        case 157: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesstackedareavaluelabelposition)
        case 167: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaulttrendlinestroke)
        case 168: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaulttrendlineshadow)
        case 180: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaulterrorbarshadow)
        case 181: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaulterrorbarstroke)
        case 182: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaulterrorbarstrokescatterx)
        case 183: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaulterrorbarlineend)
        case 184: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaulterrorbarlineendscatterx)
        case 201: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaulttrendlineequationparagraphstyleindex)
        case 202: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaulttrendlinersquaredparagraphstyleindex)
        case 205: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesdefaulttrendlineequationopacity)
        case 206: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesdefaulttrendlinersquaredopacity)
        case 207: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesbubblesymbolfill)
        case 211: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesbubblestroke)
        case 212: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesbubblesymbolstroke)
        case 213: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesbubblevaluelabelposition)
        case 214: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesbubbleshadow)
        case 215: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesbubblesymbolfilluseseriesstroke)
        case 300: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaultdeprecated3Dfill)
        case 301: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesbardeprecated3Dfill)
        case 302: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriescolumndeprecated3Dfill)
        case 303: try decoder.decodeSingularMessageField(value: &_storage._tschchartserieslinedeprecated3Dfill)
        case 304: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesareadeprecated3Dfill)
        case 305: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriespiedeprecated3Dfill)
        case 306: try decoder.decodeSingularMessageField(value: &_storage._tschchartseries3Dbarshadow)
        case 307: try decoder.decodeSingularMessageField(value: &_storage._tschchartseries3Dcolumnshadow)
        case 308: try decoder.decodeSingularMessageField(value: &_storage._tschchartseries3Dlineshadow)
        case 309: try decoder.decodeSingularMessageField(value: &_storage._tschchartseries3Dareashadow)
        case 310: try decoder.decodeSingularMessageField(value: &_storage._tschchartseries3Dpieshadow)
        case 320: try decoder.decodeSingularMessageField(value: &_storage._tschchartseries3Dbarfill)
        case 321: try decoder.decodeSingularMessageField(value: &_storage._tschchartseries3Dcolumnfill)
        case 322: try decoder.decodeSingularMessageField(value: &_storage._tschchartseries3Dlinefill)
        case 323: try decoder.decodeSingularMessageField(value: &_storage._tschchartseries3Dareafill)
        case 324: try decoder.decodeSingularMessageField(value: &_storage._tschchartseries3Dpiefill)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._super {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._tschchartseriesbarfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 10)
      }
      if let v = _storage._tschchartseriesbarstroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 11)
      }
      if let v = _storage._tschchartseriesbarvaluelabelposition {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 13)
      }
      if let v = _storage._tschchartserieslinestroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 16)
      }
      if let v = _storage._tschchartserieslinesymbolfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 17)
      }
      if let v = _storage._tschchartserieslinesymbolstroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 18)
      }
      if let v = _storage._tschchartserieslinesymbolsize {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 20)
      }
      if let v = _storage._tschchartserieslinevaluelabelposition {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 22)
      }
      if let v = _storage._tschchartseriesareafill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 25)
      }
      if let v = _storage._tschchartseriesareastroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 26)
      }
      if let v = _storage._tschchartseriesareavaluelabelposition {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 28)
      }
      if let v = _storage._tschchartseriesareasymbolfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 29)
      }
      if let v = _storage._tschchartseriesareasymbolstroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 30)
      }
      if let v = _storage._tschchartseriesareasymbolsize {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 32)
      }
      if let v = _storage._tschchartseriespiefill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 35)
      }
      if let v = _storage._tschchartseriespiestroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 36)
      }
      if let v = _storage._tschchartseriesscatterstroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 40)
      }
      if let v = _storage._tschchartseriesscattersymbolfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 41)
      }
      if let v = _storage._tschchartseriesscattersymbolstroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 42)
      }
      if let v = _storage._tschchartseriesscattersymbolsize {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 44)
      }
      if let v = _storage._tschchartseriesscattervaluelabelposition {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 46)
      }
      if let v = _storage._tschchartseriesdefaultfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 50)
      }
      if let v = _storage._tschchartseriesdefaultvaluelabelposition {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 52)
      }
      if let v = _storage._tschchartseriespiedeprecatedserieslabelson {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 60)
      }
      if let v = _storage._tschchartseriescolumnfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 62)
      }
      if let v = _storage._tschchartseriespieshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 100)
      }
      if let v = _storage._tschchartseriesbarshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 101)
      }
      if let v = _storage._tschchartseriesareashadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 102)
      }
      if let v = _storage._tschchartseriesscattershadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 103)
      }
      if let v = _storage._tschchartseriesmixedlineshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 104)
      }
      if let v = _storage._tschchartseriesmixedareashadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 105)
      }
      if let v = _storage._tschchartseriesmixedcolumnshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 106)
      }
      if let v = _storage._tschchartserieslineshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 107)
      }
      if let v = _storage._tschchartseriesdefaultshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 108)
      }
      if let v = _storage._tschchartseriesdefaultlabelparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 110)
      }
      if let v = _storage._tschchartseriesbarlabelparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 111)
      }
      if let v = _storage._tschchartserieslinelabelparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 112)
      }
      if let v = _storage._tschchartseriesarealabelparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 113)
      }
      if let v = _storage._tschchartseriespielabelparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 114)
      }
      if let v = _storage._tschchartseriesmixedlabelparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 115)
      }
      if let v = _storage._tschchartseriesdefaultopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 116)
      }
      if let v = _storage._tschchartserieslinesymbolfilluseseriesstroke {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 117)
      }
      if let v = _storage._tschchartseriesareasymbolfilluseseriesstroke {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 118)
      }
      if let v = _storage._tschchartseriesscattersymbolfilluseseriesstroke {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 119)
      }
      if let v = _storage._tschchartseriesmixedlinesymbolfilluseseriesstroke {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 120)
      }
      if let v = _storage._tschchartseriesmixedareasymbolfilluseseriesstroke {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 121)
      }
      if let v = _storage._tschchartserieslinesymbolfilluseseriesfill {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 122)
      }
      if let v = _storage._tschchartseriesareasymbolfilluseseriesfill {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 123)
      }
      if let v = _storage._tschchartseriesmixedlinesymbolfilluseseriesfill {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 124)
      }
      if let v = _storage._tschchartseriesmixedareasymbolfilluseseriesfill {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 125)
      }
      if let v = _storage._tschchartseriesmixedcolumnfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 130)
      }
      if let v = _storage._tschchartseriesmixedareafill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 131)
      }
      if let v = _storage._tschchartseriesmixedcolumnstroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 132)
      }
      if let v = _storage._tschchartseriesmixedlinestroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 133)
      }
      if let v = _storage._tschchartseriesmixedareastroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 134)
      }
      if let v = _storage._tschchartseriesmixedlinesymbolsize {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 135)
      }
      if let v = _storage._tschchartseriesmixedareasymbolsize {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 136)
      }
      if let v = _storage._tschchartseriesmixedlinesymbolfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 137)
      }
      if let v = _storage._tschchartseriesmixedareasymbolfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 138)
      }
      if let v = _storage._tschchartseriesmixedlinesymbolstroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 139)
      }
      if let v = _storage._tschchartseriesmixedareasymbolstroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 140)
      }
      if let v = _storage._tschchartseriesmixedcolumnvaluelabelposition {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 141)
      }
      if let v = _storage._tschchartseriesmixedlinevaluelabelposition {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 142)
      }
      if let v = _storage._tschchartseriesmixedareavaluelabelposition {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 143)
      }
      if let v = _storage._tschchartseriesdefaultoutsidelabelparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 150)
      }
      if let v = _storage._tschchartseriesbaroutsidelabelparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 151)
      }
      if let v = _storage._tschchartseriesareaoutsidelabelparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 153)
      }
      if let v = _storage._tschchartseriespieoutsidelabelparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 154)
      }
      if let v = _storage._tschchartseriesmixedoutsidelabelparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 155)
      }
      if let v = _storage._tschchartseriesstackedbarvaluelabelposition {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 156)
      }
      if let v = _storage._tschchartseriesstackedareavaluelabelposition {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 157)
      }
      if let v = _storage._tschchartseriesdefaulttrendlinestroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 167)
      }
      if let v = _storage._tschchartseriesdefaulttrendlineshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 168)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 180)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarstroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 181)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarstrokescatterx {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 182)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarlineend {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 183)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarlineendscatterx {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 184)
      }
      if let v = _storage._tschchartseriesdefaulttrendlineequationparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 201)
      }
      if let v = _storage._tschchartseriesdefaulttrendlinersquaredparagraphstyleindex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 202)
      }
      if let v = _storage._tschchartseriesdefaulttrendlineequationopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 205)
      }
      if let v = _storage._tschchartseriesdefaulttrendlinersquaredopacity {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 206)
      }
      if let v = _storage._tschchartseriesbubblesymbolfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 207)
      }
      if let v = _storage._tschchartseriesbubblestroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 211)
      }
      if let v = _storage._tschchartseriesbubblesymbolstroke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 212)
      }
      if let v = _storage._tschchartseriesbubblevaluelabelposition {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 213)
      }
      if let v = _storage._tschchartseriesbubbleshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 214)
      }
      if let v = _storage._tschchartseriesbubblesymbolfilluseseriesstroke {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 215)
      }
      if let v = _storage._tschchartseriesdefaultdeprecated3Dfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 300)
      }
      if let v = _storage._tschchartseriesbardeprecated3Dfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 301)
      }
      if let v = _storage._tschchartseriescolumndeprecated3Dfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 302)
      }
      if let v = _storage._tschchartserieslinedeprecated3Dfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 303)
      }
      if let v = _storage._tschchartseriesareadeprecated3Dfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 304)
      }
      if let v = _storage._tschchartseriespiedeprecated3Dfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 305)
      }
      if let v = _storage._tschchartseries3Dbarshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 306)
      }
      if let v = _storage._tschchartseries3Dcolumnshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 307)
      }
      if let v = _storage._tschchartseries3Dlineshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 308)
      }
      if let v = _storage._tschchartseries3Dareashadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 309)
      }
      if let v = _storage._tschchartseries3Dpieshadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 310)
      }
      if let v = _storage._tschchartseries3Dbarfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 320)
      }
      if let v = _storage._tschchartseries3Dcolumnfill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 321)
      }
      if let v = _storage._tschchartseries3Dlinefill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 322)
      }
      if let v = _storage._tschchartseries3Dareafill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 323)
      }
      if let v = _storage._tschchartseries3Dpiefill {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 324)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSCH_PreUFF_ChartSeriesStyleArchive, rhs: TSCH_PreUFF_ChartSeriesStyleArchive) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._super != rhs_storage._super {return false}
        if _storage._tschchartseriesdefaulttrendlineequationparagraphstyleindex != rhs_storage._tschchartseriesdefaulttrendlineequationparagraphstyleindex {return false}
        if _storage._tschchartseriesdefaulttrendlinersquaredparagraphstyleindex != rhs_storage._tschchartseriesdefaulttrendlinersquaredparagraphstyleindex {return false}
        if _storage._tschchartseriesdefaulttrendlineequationopacity != rhs_storage._tschchartseriesdefaulttrendlineequationopacity {return false}
        if _storage._tschchartseriesdefaulttrendlinersquaredopacity != rhs_storage._tschchartseriesdefaulttrendlinersquaredopacity {return false}
        if _storage._tschchartseriesbarfill != rhs_storage._tschchartseriesbarfill {return false}
        if _storage._tschchartseriesbarstroke != rhs_storage._tschchartseriesbarstroke {return false}
        if _storage._tschchartseriesbarvaluelabelposition != rhs_storage._tschchartseriesbarvaluelabelposition {return false}
        if _storage._tschchartserieslinestroke != rhs_storage._tschchartserieslinestroke {return false}
        if _storage._tschchartserieslinesymbolfill != rhs_storage._tschchartserieslinesymbolfill {return false}
        if _storage._tschchartserieslinesymbolstroke != rhs_storage._tschchartserieslinesymbolstroke {return false}
        if _storage._tschchartserieslinesymbolsize != rhs_storage._tschchartserieslinesymbolsize {return false}
        if _storage._tschchartserieslinevaluelabelposition != rhs_storage._tschchartserieslinevaluelabelposition {return false}
        if _storage._tschchartseriesareafill != rhs_storage._tschchartseriesareafill {return false}
        if _storage._tschchartseriesareastroke != rhs_storage._tschchartseriesareastroke {return false}
        if _storage._tschchartseriesareavaluelabelposition != rhs_storage._tschchartseriesareavaluelabelposition {return false}
        if _storage._tschchartseriesareasymbolfill != rhs_storage._tschchartseriesareasymbolfill {return false}
        if _storage._tschchartseriesareasymbolstroke != rhs_storage._tschchartseriesareasymbolstroke {return false}
        if _storage._tschchartseriesareasymbolsize != rhs_storage._tschchartseriesareasymbolsize {return false}
        if _storage._tschchartseriespiefill != rhs_storage._tschchartseriespiefill {return false}
        if _storage._tschchartseriespiestroke != rhs_storage._tschchartseriespiestroke {return false}
        if _storage._tschchartseriesscatterstroke != rhs_storage._tschchartseriesscatterstroke {return false}
        if _storage._tschchartseriesscattersymbolfill != rhs_storage._tschchartseriesscattersymbolfill {return false}
        if _storage._tschchartseriesscattersymbolstroke != rhs_storage._tschchartseriesscattersymbolstroke {return false}
        if _storage._tschchartseriesscattersymbolsize != rhs_storage._tschchartseriesscattersymbolsize {return false}
        if _storage._tschchartseriesscattervaluelabelposition != rhs_storage._tschchartseriesscattervaluelabelposition {return false}
        if _storage._tschchartseriesdefaultfill != rhs_storage._tschchartseriesdefaultfill {return false}
        if _storage._tschchartseriesdefaultvaluelabelposition != rhs_storage._tschchartseriesdefaultvaluelabelposition {return false}
        if _storage._tschchartseriespiedeprecatedserieslabelson != rhs_storage._tschchartseriespiedeprecatedserieslabelson {return false}
        if _storage._tschchartseriescolumnfill != rhs_storage._tschchartseriescolumnfill {return false}
        if _storage._tschchartseriespieshadow != rhs_storage._tschchartseriespieshadow {return false}
        if _storage._tschchartseriesbarshadow != rhs_storage._tschchartseriesbarshadow {return false}
        if _storage._tschchartseriesareashadow != rhs_storage._tschchartseriesareashadow {return false}
        if _storage._tschchartseriesscattershadow != rhs_storage._tschchartseriesscattershadow {return false}
        if _storage._tschchartseriesmixedlineshadow != rhs_storage._tschchartseriesmixedlineshadow {return false}
        if _storage._tschchartseriesmixedareashadow != rhs_storage._tschchartseriesmixedareashadow {return false}
        if _storage._tschchartseriesmixedcolumnshadow != rhs_storage._tschchartseriesmixedcolumnshadow {return false}
        if _storage._tschchartserieslineshadow != rhs_storage._tschchartserieslineshadow {return false}
        if _storage._tschchartseriesdefaultshadow != rhs_storage._tschchartseriesdefaultshadow {return false}
        if _storage._tschchartseriesbubblesymbolfill != rhs_storage._tschchartseriesbubblesymbolfill {return false}
        if _storage._tschchartseriesbubblestroke != rhs_storage._tschchartseriesbubblestroke {return false}
        if _storage._tschchartseriesbubblesymbolstroke != rhs_storage._tschchartseriesbubblesymbolstroke {return false}
        if _storage._tschchartseriesbubblevaluelabelposition != rhs_storage._tschchartseriesbubblevaluelabelposition {return false}
        if _storage._tschchartseriesbubbleshadow != rhs_storage._tschchartseriesbubbleshadow {return false}
        if _storage._tschchartseriesbubblesymbolfilluseseriesstroke != rhs_storage._tschchartseriesbubblesymbolfilluseseriesstroke {return false}
        if _storage._tschchartseries3Dbarshadow != rhs_storage._tschchartseries3Dbarshadow {return false}
        if _storage._tschchartseries3Dcolumnshadow != rhs_storage._tschchartseries3Dcolumnshadow {return false}
        if _storage._tschchartseries3Dlineshadow != rhs_storage._tschchartseries3Dlineshadow {return false}
        if _storage._tschchartseries3Dareashadow != rhs_storage._tschchartseries3Dareashadow {return false}
        if _storage._tschchartseries3Dpieshadow != rhs_storage._tschchartseries3Dpieshadow {return false}
        if _storage._tschchartseriesdefaultlabelparagraphstyleindex != rhs_storage._tschchartseriesdefaultlabelparagraphstyleindex {return false}
        if _storage._tschchartseriesbarlabelparagraphstyleindex != rhs_storage._tschchartseriesbarlabelparagraphstyleindex {return false}
        if _storage._tschchartserieslinelabelparagraphstyleindex != rhs_storage._tschchartserieslinelabelparagraphstyleindex {return false}
        if _storage._tschchartseriesarealabelparagraphstyleindex != rhs_storage._tschchartseriesarealabelparagraphstyleindex {return false}
        if _storage._tschchartseriespielabelparagraphstyleindex != rhs_storage._tschchartseriespielabelparagraphstyleindex {return false}
        if _storage._tschchartseriesmixedlabelparagraphstyleindex != rhs_storage._tschchartseriesmixedlabelparagraphstyleindex {return false}
        if _storage._tschchartseriesdefaultopacity != rhs_storage._tschchartseriesdefaultopacity {return false}
        if _storage._tschchartserieslinesymbolfilluseseriesstroke != rhs_storage._tschchartserieslinesymbolfilluseseriesstroke {return false}
        if _storage._tschchartseriesareasymbolfilluseseriesstroke != rhs_storage._tschchartseriesareasymbolfilluseseriesstroke {return false}
        if _storage._tschchartseriesscattersymbolfilluseseriesstroke != rhs_storage._tschchartseriesscattersymbolfilluseseriesstroke {return false}
        if _storage._tschchartseriesmixedlinesymbolfilluseseriesstroke != rhs_storage._tschchartseriesmixedlinesymbolfilluseseriesstroke {return false}
        if _storage._tschchartseriesmixedareasymbolfilluseseriesstroke != rhs_storage._tschchartseriesmixedareasymbolfilluseseriesstroke {return false}
        if _storage._tschchartserieslinesymbolfilluseseriesfill != rhs_storage._tschchartserieslinesymbolfilluseseriesfill {return false}
        if _storage._tschchartseriesareasymbolfilluseseriesfill != rhs_storage._tschchartseriesareasymbolfilluseseriesfill {return false}
        if _storage._tschchartseriesmixedlinesymbolfilluseseriesfill != rhs_storage._tschchartseriesmixedlinesymbolfilluseseriesfill {return false}
        if _storage._tschchartseriesmixedareasymbolfilluseseriesfill != rhs_storage._tschchartseriesmixedareasymbolfilluseseriesfill {return false}
        if _storage._tschchartseriesmixedcolumnfill != rhs_storage._tschchartseriesmixedcolumnfill {return false}
        if _storage._tschchartseriesmixedareafill != rhs_storage._tschchartseriesmixedareafill {return false}
        if _storage._tschchartseriesmixedcolumnstroke != rhs_storage._tschchartseriesmixedcolumnstroke {return false}
        if _storage._tschchartseriesmixedlinestroke != rhs_storage._tschchartseriesmixedlinestroke {return false}
        if _storage._tschchartseriesmixedareastroke != rhs_storage._tschchartseriesmixedareastroke {return false}
        if _storage._tschchartseriesmixedlinesymbolsize != rhs_storage._tschchartseriesmixedlinesymbolsize {return false}
        if _storage._tschchartseriesmixedareasymbolsize != rhs_storage._tschchartseriesmixedareasymbolsize {return false}
        if _storage._tschchartseriesmixedlinesymbolfill != rhs_storage._tschchartseriesmixedlinesymbolfill {return false}
        if _storage._tschchartseriesmixedareasymbolfill != rhs_storage._tschchartseriesmixedareasymbolfill {return false}
        if _storage._tschchartseriesmixedlinesymbolstroke != rhs_storage._tschchartseriesmixedlinesymbolstroke {return false}
        if _storage._tschchartseriesmixedareasymbolstroke != rhs_storage._tschchartseriesmixedareasymbolstroke {return false}
        if _storage._tschchartseriesmixedcolumnvaluelabelposition != rhs_storage._tschchartseriesmixedcolumnvaluelabelposition {return false}
        if _storage._tschchartseriesmixedlinevaluelabelposition != rhs_storage._tschchartseriesmixedlinevaluelabelposition {return false}
        if _storage._tschchartseriesmixedareavaluelabelposition != rhs_storage._tschchartseriesmixedareavaluelabelposition {return false}
        if _storage._tschchartseriesdefaultoutsidelabelparagraphstyleindex != rhs_storage._tschchartseriesdefaultoutsidelabelparagraphstyleindex {return false}
        if _storage._tschchartseriesbaroutsidelabelparagraphstyleindex != rhs_storage._tschchartseriesbaroutsidelabelparagraphstyleindex {return false}
        if _storage._tschchartseriesareaoutsidelabelparagraphstyleindex != rhs_storage._tschchartseriesareaoutsidelabelparagraphstyleindex {return false}
        if _storage._tschchartseriespieoutsidelabelparagraphstyleindex != rhs_storage._tschchartseriespieoutsidelabelparagraphstyleindex {return false}
        if _storage._tschchartseriesmixedoutsidelabelparagraphstyleindex != rhs_storage._tschchartseriesmixedoutsidelabelparagraphstyleindex {return false}
        if _storage._tschchartseriesstackedbarvaluelabelposition != rhs_storage._tschchartseriesstackedbarvaluelabelposition {return false}
        if _storage._tschchartseriesstackedareavaluelabelposition != rhs_storage._tschchartseriesstackedareavaluelabelposition {return false}
        if _storage._tschchartseriesdefaulttrendlinestroke != rhs_storage._tschchartseriesdefaulttrendlinestroke {return false}
        if _storage._tschchartseriesdefaulttrendlineshadow != rhs_storage._tschchartseriesdefaulttrendlineshadow {return false}
        if _storage._tschchartseriesdefaulterrorbarshadow != rhs_storage._tschchartseriesdefaulterrorbarshadow {return false}
        if _storage._tschchartseriesdefaulterrorbarstroke != rhs_storage._tschchartseriesdefaulterrorbarstroke {return false}
        if _storage._tschchartseriesdefaulterrorbarstrokescatterx != rhs_storage._tschchartseriesdefaulterrorbarstrokescatterx {return false}
        if _storage._tschchartseriesdefaulterrorbarlineend != rhs_storage._tschchartseriesdefaulterrorbarlineend {return false}
        if _storage._tschchartseriesdefaulterrorbarlineendscatterx != rhs_storage._tschchartseriesdefaulterrorbarlineendscatterx {return false}
        if _storage._tschchartseriesdefaultdeprecated3Dfill != rhs_storage._tschchartseriesdefaultdeprecated3Dfill {return false}
        if _storage._tschchartseriesbardeprecated3Dfill != rhs_storage._tschchartseriesbardeprecated3Dfill {return false}
        if _storage._tschchartseriescolumndeprecated3Dfill != rhs_storage._tschchartseriescolumndeprecated3Dfill {return false}
        if _storage._tschchartserieslinedeprecated3Dfill != rhs_storage._tschchartserieslinedeprecated3Dfill {return false}
        if _storage._tschchartseriesareadeprecated3Dfill != rhs_storage._tschchartseriesareadeprecated3Dfill {return false}
        if _storage._tschchartseriespiedeprecated3Dfill != rhs_storage._tschchartseriespiedeprecated3Dfill {return false}
        if _storage._tschchartseries3Dbarfill != rhs_storage._tschchartseries3Dbarfill {return false}
        if _storage._tschchartseries3Dcolumnfill != rhs_storage._tschchartseries3Dcolumnfill {return false}
        if _storage._tschchartseries3Dlinefill != rhs_storage._tschchartseries3Dlinefill {return false}
        if _storage._tschchartseries3Dareafill != rhs_storage._tschchartseries3Dareafill {return false}
        if _storage._tschchartseries3Dpiefill != rhs_storage._tschchartseries3Dpiefill {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension TSCH_PreUFF_ChartSeriesNonStyleArchive: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ChartSeriesNonStyleArchive"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "super"),
    10: .same(proto: "tschchartseriesdefaultnumberformat"),
    11: .same(proto: "tschchartseriesdefaultnumberformattype"),
    12: .same(proto: "tschchartseriesbarshowvaluelabels"),
    19: .same(proto: "tschchartserieslinesymboltype"),
    20: .same(proto: "tschchartserieslineshowsymbol"),
    21: .same(proto: "tschchartserieslineshowvaluelabels"),
    27: .same(proto: "tschchartseriesareashowvaluelabels"),
    30: .same(proto: "tschchartserieslinelinetype"),
    31: .same(proto: "tschchartseriesareasymboltype"),
    32: .same(proto: "tschchartseriesareashowsymbol"),
    37: .same(proto: "tschchartseriespieshowvaluelabels"),
    45: .same(proto: "tschchartseriesscattershowvaluelabels"),
    50: .same(proto: "tschchartseriespiewedgeexplosion"),
    51: .same(proto: "tschchartseriesdefaultshowvaluelabels"),
    52: .same(proto: "tschchartseriespienumberformat"),
    53: .same(proto: "tschchartseriespienumberformattype"),
    54: .same(proto: "tschchartseriespielabelexplosion"),
    58: .same(proto: "tschchartseriesmixedlineshowsymbol"),
    59: .same(proto: "tschchartseriesmixedareashowsymbol"),
    60: .same(proto: "tschchartseriesmixedlinesymboltype"),
    61: .same(proto: "tschchartseriesmixedareasymboltype"),
    62: .same(proto: "tschchartseriesmixedshowvaluelabels"),
    63: .same(proto: "tschchartseriesmixedlinelinetype"),
    65: .same(proto: "tschchartseriesdefaultyaxisordinal"),
    66: .same(proto: "tschchartseriespieshowserieslabels"),
    69: .same(proto: "tschchartseriesscattershowsymbol"),
    70: .same(proto: "tschchartseriesscattersymboltype"),
    71: .same(proto: "tschchartseriesscatterlinetype"),
    72: .same(proto: "tschchartseriesscattershowline"),
    90: .same(proto: "tschchartseriesstackedpercentnumberformat"),
    126: .same(proto: "tschchartseriesdefaultseriestype"),
    160: .same(proto: "tschchartseriesdefaulttrendlinetype"),
    161: .same(proto: "tschchartseriesdefaulttrendlineorder"),
    162: .same(proto: "tschchartseriesdefaulttrendlineperiod"),
    163: .same(proto: "tschchartseriesdefaulttrendlineshowlabel"),
    164: .same(proto: "tschchartseriesdefaulttrendlinelabelstring"),
    165: .same(proto: "tschchartseriesdefaulttrendlineshowequation"),
    166: .same(proto: "tschchartseriesdefaulttrendlineshowr2value"),
    170: .same(proto: "tschchartseriesdefaulterrorbarsetting"),
    171: .same(proto: "tschchartseriesdefaulterrorbarsettingscatterx"),
    172: .same(proto: "tschchartseriesdefaulterrorbartype"),
    173: .same(proto: "tschchartseriesdefaulterrorbartypescatterx"),
    174: .same(proto: "tschchartseriesdefaulterrorbarfixedvalue"),
    175: .same(proto: "tschchartseriesdefaulterrorbarfixedvaluescatterx"),
    176: .same(proto: "tschchartseriesdefaulterrorbarpercentvalue"),
    177: .same(proto: "tschchartseriesdefaulterrorbarpercentvaluescatterx"),
    178: .same(proto: "tschchartseriesdefaulterrorbarstddevvalue"),
    179: .same(proto: "tschchartseriesdefaulterrorbarstddevvaluescatterx"),
    190: .same(proto: "tschchartseriesdefaulterrorbarcustompositivedata"),
    191: .same(proto: "tschchartseriesdefaulterrorbarcustompositivedatascatterx"),
    192: .same(proto: "tschchartseriesdefaulterrorbarcustomnegativedata"),
    193: .same(proto: "tschchartseriesdefaulterrorbarcustomnegativedatascatterx"),
    194: .same(proto: "tschchartseriesdefaulttrendlineequationoffsetx"),
    195: .same(proto: "tschchartseriesdefaulttrendlineequationoffsety"),
    196: .same(proto: "tschchartseriesdefaulttrendlinersquaredoffsetx"),
    197: .same(proto: "tschchartseriesdefaulttrendlinersquaredoffsety"),
    198: .same(proto: "tschchartseriesdefaultshowtrendline"),
    199: .same(proto: "tschchartseriesdefaultshowerrorbar"),
    200: .same(proto: "tschchartseriesdefaultshowerrorbarscatterx"),
    208: .same(proto: "tschchartseriesbubblesizedimension"),
    209: .same(proto: "tschchartseriesbubbleshowvaluelabels"),
    210: .same(proto: "tschchartseriesbubblelinetype"),
    216: .same(proto: "tschchartseriesbubbleshownegativedata"),
    217: .same(proto: "tschchartseriesbubbleadjustmentscale"),
  ]

  fileprivate class _StorageClass {
    var _super: TSS_StyleArchive? = nil
    var _tschchartseriesdefaultnumberformat: TSCH_PreUFF_ChartsNumberFormatArchive? = nil
    var _tschchartseriesdefaultnumberformattype: Int32? = nil
    var _tschchartseriesbarshowvaluelabels: Bool? = nil
    var _tschchartserieslinesymboltype: Int32? = nil
    var _tschchartserieslineshowsymbol: Bool? = nil
    var _tschchartserieslineshowvaluelabels: Bool? = nil
    var _tschchartseriesareashowvaluelabels: Bool? = nil
    var _tschchartserieslinelinetype: Int32? = nil
    var _tschchartseriesareasymboltype: Int32? = nil
    var _tschchartseriesareashowsymbol: Bool? = nil
    var _tschchartseriespieshowvaluelabels: Bool? = nil
    var _tschchartseriesscattershowvaluelabels: Bool? = nil
    var _tschchartseriespiewedgeexplosion: Float? = nil
    var _tschchartseriesdefaultshowvaluelabels: Bool? = nil
    var _tschchartseriespienumberformat: TSCH_PreUFF_ChartsNumberFormatArchive? = nil
    var _tschchartseriespienumberformattype: Int32? = nil
    var _tschchartseriespielabelexplosion: Float? = nil
    var _tschchartseriesmixedlineshowsymbol: Bool? = nil
    var _tschchartseriesmixedareashowsymbol: Bool? = nil
    var _tschchartseriesmixedlinesymboltype: Int32? = nil
    var _tschchartseriesmixedareasymboltype: Int32? = nil
    var _tschchartseriesmixedshowvaluelabels: Bool? = nil
    var _tschchartseriesmixedlinelinetype: Int32? = nil
    var _tschchartseriesdefaultyaxisordinal: Int32? = nil
    var _tschchartseriespieshowserieslabels: Bool? = nil
    var _tschchartseriesscattershowsymbol: Bool? = nil
    var _tschchartseriesscattersymboltype: Int32? = nil
    var _tschchartseriesscatterlinetype: Int32? = nil
    var _tschchartseriesscattershowline: Bool? = nil
    var _tschchartseriesstackedpercentnumberformat: TSCH_PreUFF_ChartsNumberFormatArchive? = nil
    var _tschchartseriesdefaultseriestype: Int32? = nil
    var _tschchartseriesdefaulttrendlinetype: Int32? = nil
    var _tschchartseriesdefaulttrendlineorder: Int32? = nil
    var _tschchartseriesdefaulttrendlineperiod: Int32? = nil
    var _tschchartseriesdefaulttrendlineshowlabel: Bool? = nil
    var _tschchartseriesdefaulttrendlinelabelstring: String? = nil
    var _tschchartseriesdefaulttrendlineshowequation: Bool? = nil
    var _tschchartseriesdefaulttrendlineshowr2Value: Bool? = nil
    var _tschchartseriesdefaulterrorbarsetting: Int32? = nil
    var _tschchartseriesdefaulterrorbarsettingscatterx: Int32? = nil
    var _tschchartseriesdefaulterrorbartype: Int32? = nil
    var _tschchartseriesdefaulterrorbartypescatterx: Int32? = nil
    var _tschchartseriesdefaulterrorbarfixedvalue: Float? = nil
    var _tschchartseriesdefaulterrorbarfixedvaluescatterx: Float? = nil
    var _tschchartseriesdefaulterrorbarpercentvalue: Float? = nil
    var _tschchartseriesdefaulterrorbarpercentvaluescatterx: Float? = nil
    var _tschchartseriesdefaulterrorbarstddevvalue: Float? = nil
    var _tschchartseriesdefaulterrorbarstddevvaluescatterx: Float? = nil
    var _tschchartseriesdefaulterrorbarcustompositivedata: TSCH_ChartsNSArrayOfNSNumberDoubleArchive? = nil
    var _tschchartseriesdefaulterrorbarcustompositivedatascatterx: TSCH_ChartsNSArrayOfNSNumberDoubleArchive? = nil
    var _tschchartseriesdefaulterrorbarcustomnegativedata: TSCH_ChartsNSArrayOfNSNumberDoubleArchive? = nil
    var _tschchartseriesdefaulterrorbarcustomnegativedatascatterx: TSCH_ChartsNSArrayOfNSNumberDoubleArchive? = nil
    var _tschchartseriesdefaulttrendlineequationoffsetx: Float? = nil
    var _tschchartseriesdefaulttrendlineequationoffsety: Float? = nil
    var _tschchartseriesdefaulttrendlinersquaredoffsetx: Float? = nil
    var _tschchartseriesdefaulttrendlinersquaredoffsety: Float? = nil
    var _tschchartseriesdefaultshowtrendline: Bool? = nil
    var _tschchartseriesdefaultshowerrorbar: Bool? = nil
    var _tschchartseriesdefaultshowerrorbarscatterx: Bool? = nil
    var _tschchartseriesbubblesizedimension: Int32? = nil
    var _tschchartseriesbubbleshowvaluelabels: Bool? = nil
    var _tschchartseriesbubblelinetype: Int32? = nil
    var _tschchartseriesbubbleshownegativedata: Bool? = nil
    var _tschchartseriesbubbleadjustmentscale: Float? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _super = source._super
      _tschchartseriesdefaultnumberformat = source._tschchartseriesdefaultnumberformat
      _tschchartseriesdefaultnumberformattype = source._tschchartseriesdefaultnumberformattype
      _tschchartseriesbarshowvaluelabels = source._tschchartseriesbarshowvaluelabels
      _tschchartserieslinesymboltype = source._tschchartserieslinesymboltype
      _tschchartserieslineshowsymbol = source._tschchartserieslineshowsymbol
      _tschchartserieslineshowvaluelabels = source._tschchartserieslineshowvaluelabels
      _tschchartseriesareashowvaluelabels = source._tschchartseriesareashowvaluelabels
      _tschchartserieslinelinetype = source._tschchartserieslinelinetype
      _tschchartseriesareasymboltype = source._tschchartseriesareasymboltype
      _tschchartseriesareashowsymbol = source._tschchartseriesareashowsymbol
      _tschchartseriespieshowvaluelabels = source._tschchartseriespieshowvaluelabels
      _tschchartseriesscattershowvaluelabels = source._tschchartseriesscattershowvaluelabels
      _tschchartseriespiewedgeexplosion = source._tschchartseriespiewedgeexplosion
      _tschchartseriesdefaultshowvaluelabels = source._tschchartseriesdefaultshowvaluelabels
      _tschchartseriespienumberformat = source._tschchartseriespienumberformat
      _tschchartseriespienumberformattype = source._tschchartseriespienumberformattype
      _tschchartseriespielabelexplosion = source._tschchartseriespielabelexplosion
      _tschchartseriesmixedlineshowsymbol = source._tschchartseriesmixedlineshowsymbol
      _tschchartseriesmixedareashowsymbol = source._tschchartseriesmixedareashowsymbol
      _tschchartseriesmixedlinesymboltype = source._tschchartseriesmixedlinesymboltype
      _tschchartseriesmixedareasymboltype = source._tschchartseriesmixedareasymboltype
      _tschchartseriesmixedshowvaluelabels = source._tschchartseriesmixedshowvaluelabels
      _tschchartseriesmixedlinelinetype = source._tschchartseriesmixedlinelinetype
      _tschchartseriesdefaultyaxisordinal = source._tschchartseriesdefaultyaxisordinal
      _tschchartseriespieshowserieslabels = source._tschchartseriespieshowserieslabels
      _tschchartseriesscattershowsymbol = source._tschchartseriesscattershowsymbol
      _tschchartseriesscattersymboltype = source._tschchartseriesscattersymboltype
      _tschchartseriesscatterlinetype = source._tschchartseriesscatterlinetype
      _tschchartseriesscattershowline = source._tschchartseriesscattershowline
      _tschchartseriesstackedpercentnumberformat = source._tschchartseriesstackedpercentnumberformat
      _tschchartseriesdefaultseriestype = source._tschchartseriesdefaultseriestype
      _tschchartseriesdefaulttrendlinetype = source._tschchartseriesdefaulttrendlinetype
      _tschchartseriesdefaulttrendlineorder = source._tschchartseriesdefaulttrendlineorder
      _tschchartseriesdefaulttrendlineperiod = source._tschchartseriesdefaulttrendlineperiod
      _tschchartseriesdefaulttrendlineshowlabel = source._tschchartseriesdefaulttrendlineshowlabel
      _tschchartseriesdefaulttrendlinelabelstring = source._tschchartseriesdefaulttrendlinelabelstring
      _tschchartseriesdefaulttrendlineshowequation = source._tschchartseriesdefaulttrendlineshowequation
      _tschchartseriesdefaulttrendlineshowr2Value = source._tschchartseriesdefaulttrendlineshowr2Value
      _tschchartseriesdefaulterrorbarsetting = source._tschchartseriesdefaulterrorbarsetting
      _tschchartseriesdefaulterrorbarsettingscatterx = source._tschchartseriesdefaulterrorbarsettingscatterx
      _tschchartseriesdefaulterrorbartype = source._tschchartseriesdefaulterrorbartype
      _tschchartseriesdefaulterrorbartypescatterx = source._tschchartseriesdefaulterrorbartypescatterx
      _tschchartseriesdefaulterrorbarfixedvalue = source._tschchartseriesdefaulterrorbarfixedvalue
      _tschchartseriesdefaulterrorbarfixedvaluescatterx = source._tschchartseriesdefaulterrorbarfixedvaluescatterx
      _tschchartseriesdefaulterrorbarpercentvalue = source._tschchartseriesdefaulterrorbarpercentvalue
      _tschchartseriesdefaulterrorbarpercentvaluescatterx = source._tschchartseriesdefaulterrorbarpercentvaluescatterx
      _tschchartseriesdefaulterrorbarstddevvalue = source._tschchartseriesdefaulterrorbarstddevvalue
      _tschchartseriesdefaulterrorbarstddevvaluescatterx = source._tschchartseriesdefaulterrorbarstddevvaluescatterx
      _tschchartseriesdefaulterrorbarcustompositivedata = source._tschchartseriesdefaulterrorbarcustompositivedata
      _tschchartseriesdefaulterrorbarcustompositivedatascatterx = source._tschchartseriesdefaulterrorbarcustompositivedatascatterx
      _tschchartseriesdefaulterrorbarcustomnegativedata = source._tschchartseriesdefaulterrorbarcustomnegativedata
      _tschchartseriesdefaulterrorbarcustomnegativedatascatterx = source._tschchartseriesdefaulterrorbarcustomnegativedatascatterx
      _tschchartseriesdefaulttrendlineequationoffsetx = source._tschchartseriesdefaulttrendlineequationoffsetx
      _tschchartseriesdefaulttrendlineequationoffsety = source._tschchartseriesdefaulttrendlineequationoffsety
      _tschchartseriesdefaulttrendlinersquaredoffsetx = source._tschchartseriesdefaulttrendlinersquaredoffsetx
      _tschchartseriesdefaulttrendlinersquaredoffsety = source._tschchartseriesdefaulttrendlinersquaredoffsety
      _tschchartseriesdefaultshowtrendline = source._tschchartseriesdefaultshowtrendline
      _tschchartseriesdefaultshowerrorbar = source._tschchartseriesdefaultshowerrorbar
      _tschchartseriesdefaultshowerrorbarscatterx = source._tschchartseriesdefaultshowerrorbarscatterx
      _tschchartseriesbubblesizedimension = source._tschchartseriesbubblesizedimension
      _tschchartseriesbubbleshowvaluelabels = source._tschchartseriesbubbleshowvaluelabels
      _tschchartseriesbubblelinetype = source._tschchartseriesbubblelinetype
      _tschchartseriesbubbleshownegativedata = source._tschchartseriesbubbleshownegativedata
      _tschchartseriesbubbleadjustmentscale = source._tschchartseriesbubbleadjustmentscale
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._super == nil {return false}
      if let v = _storage._super, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesdefaultnumberformat, !v.isInitialized {return false}
      if let v = _storage._tschchartseriespienumberformat, !v.isInitialized {return false}
      if let v = _storage._tschchartseriesstackedpercentnumberformat, !v.isInitialized {return false}
      return true
    }
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._super)
        case 10: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaultnumberformat)
        case 11: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaultnumberformattype)
        case 12: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesbarshowvaluelabels)
        case 19: try decoder.decodeSingularInt32Field(value: &_storage._tschchartserieslinesymboltype)
        case 20: try decoder.decodeSingularBoolField(value: &_storage._tschchartserieslineshowsymbol)
        case 21: try decoder.decodeSingularBoolField(value: &_storage._tschchartserieslineshowvaluelabels)
        case 27: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesareashowvaluelabels)
        case 30: try decoder.decodeSingularInt32Field(value: &_storage._tschchartserieslinelinetype)
        case 31: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesareasymboltype)
        case 32: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesareashowsymbol)
        case 37: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriespieshowvaluelabels)
        case 45: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesscattershowvaluelabels)
        case 50: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriespiewedgeexplosion)
        case 51: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesdefaultshowvaluelabels)
        case 52: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriespienumberformat)
        case 53: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriespienumberformattype)
        case 54: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriespielabelexplosion)
        case 58: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesmixedlineshowsymbol)
        case 59: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesmixedareashowsymbol)
        case 60: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesmixedlinesymboltype)
        case 61: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesmixedareasymboltype)
        case 62: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesmixedshowvaluelabels)
        case 63: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesmixedlinelinetype)
        case 65: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaultyaxisordinal)
        case 66: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriespieshowserieslabels)
        case 69: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesscattershowsymbol)
        case 70: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesscattersymboltype)
        case 71: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesscatterlinetype)
        case 72: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesscattershowline)
        case 90: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesstackedpercentnumberformat)
        case 126: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaultseriestype)
        case 160: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaulttrendlinetype)
        case 161: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaulttrendlineorder)
        case 162: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaulttrendlineperiod)
        case 163: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesdefaulttrendlineshowlabel)
        case 164: try decoder.decodeSingularStringField(value: &_storage._tschchartseriesdefaulttrendlinelabelstring)
        case 165: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesdefaulttrendlineshowequation)
        case 166: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesdefaulttrendlineshowr2Value)
        case 170: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaulterrorbarsetting)
        case 171: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaulterrorbarsettingscatterx)
        case 172: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaulterrorbartype)
        case 173: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesdefaulterrorbartypescatterx)
        case 174: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesdefaulterrorbarfixedvalue)
        case 175: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesdefaulterrorbarfixedvaluescatterx)
        case 176: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesdefaulterrorbarpercentvalue)
        case 177: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesdefaulterrorbarpercentvaluescatterx)
        case 178: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesdefaulterrorbarstddevvalue)
        case 179: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesdefaulterrorbarstddevvaluescatterx)
        case 190: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaulterrorbarcustompositivedata)
        case 191: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaulterrorbarcustompositivedatascatterx)
        case 192: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaulterrorbarcustomnegativedata)
        case 193: try decoder.decodeSingularMessageField(value: &_storage._tschchartseriesdefaulterrorbarcustomnegativedatascatterx)
        case 194: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesdefaulttrendlineequationoffsetx)
        case 195: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesdefaulttrendlineequationoffsety)
        case 196: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesdefaulttrendlinersquaredoffsetx)
        case 197: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesdefaulttrendlinersquaredoffsety)
        case 198: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesdefaultshowtrendline)
        case 199: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesdefaultshowerrorbar)
        case 200: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesdefaultshowerrorbarscatterx)
        case 208: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesbubblesizedimension)
        case 209: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesbubbleshowvaluelabels)
        case 210: try decoder.decodeSingularInt32Field(value: &_storage._tschchartseriesbubblelinetype)
        case 216: try decoder.decodeSingularBoolField(value: &_storage._tschchartseriesbubbleshownegativedata)
        case 217: try decoder.decodeSingularFloatField(value: &_storage._tschchartseriesbubbleadjustmentscale)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._super {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._tschchartseriesdefaultnumberformat {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 10)
      }
      if let v = _storage._tschchartseriesdefaultnumberformattype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 11)
      }
      if let v = _storage._tschchartseriesbarshowvaluelabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 12)
      }
      if let v = _storage._tschchartserieslinesymboltype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 19)
      }
      if let v = _storage._tschchartserieslineshowsymbol {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 20)
      }
      if let v = _storage._tschchartserieslineshowvaluelabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 21)
      }
      if let v = _storage._tschchartseriesareashowvaluelabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 27)
      }
      if let v = _storage._tschchartserieslinelinetype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 30)
      }
      if let v = _storage._tschchartseriesareasymboltype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 31)
      }
      if let v = _storage._tschchartseriesareashowsymbol {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 32)
      }
      if let v = _storage._tschchartseriespieshowvaluelabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 37)
      }
      if let v = _storage._tschchartseriesscattershowvaluelabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 45)
      }
      if let v = _storage._tschchartseriespiewedgeexplosion {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 50)
      }
      if let v = _storage._tschchartseriesdefaultshowvaluelabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 51)
      }
      if let v = _storage._tschchartseriespienumberformat {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 52)
      }
      if let v = _storage._tschchartseriespienumberformattype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 53)
      }
      if let v = _storage._tschchartseriespielabelexplosion {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 54)
      }
      if let v = _storage._tschchartseriesmixedlineshowsymbol {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 58)
      }
      if let v = _storage._tschchartseriesmixedareashowsymbol {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 59)
      }
      if let v = _storage._tschchartseriesmixedlinesymboltype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 60)
      }
      if let v = _storage._tschchartseriesmixedareasymboltype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 61)
      }
      if let v = _storage._tschchartseriesmixedshowvaluelabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 62)
      }
      if let v = _storage._tschchartseriesmixedlinelinetype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 63)
      }
      if let v = _storage._tschchartseriesdefaultyaxisordinal {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 65)
      }
      if let v = _storage._tschchartseriespieshowserieslabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 66)
      }
      if let v = _storage._tschchartseriesscattershowsymbol {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 69)
      }
      if let v = _storage._tschchartseriesscattersymboltype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 70)
      }
      if let v = _storage._tschchartseriesscatterlinetype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 71)
      }
      if let v = _storage._tschchartseriesscattershowline {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 72)
      }
      if let v = _storage._tschchartseriesstackedpercentnumberformat {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 90)
      }
      if let v = _storage._tschchartseriesdefaultseriestype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 126)
      }
      if let v = _storage._tschchartseriesdefaulttrendlinetype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 160)
      }
      if let v = _storage._tschchartseriesdefaulttrendlineorder {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 161)
      }
      if let v = _storage._tschchartseriesdefaulttrendlineperiod {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 162)
      }
      if let v = _storage._tschchartseriesdefaulttrendlineshowlabel {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 163)
      }
      if let v = _storage._tschchartseriesdefaulttrendlinelabelstring {
        try visitor.visitSingularStringField(value: v, fieldNumber: 164)
      }
      if let v = _storage._tschchartseriesdefaulttrendlineshowequation {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 165)
      }
      if let v = _storage._tschchartseriesdefaulttrendlineshowr2Value {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 166)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarsetting {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 170)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarsettingscatterx {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 171)
      }
      if let v = _storage._tschchartseriesdefaulterrorbartype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 172)
      }
      if let v = _storage._tschchartseriesdefaulterrorbartypescatterx {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 173)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarfixedvalue {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 174)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarfixedvaluescatterx {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 175)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarpercentvalue {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 176)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarpercentvaluescatterx {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 177)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarstddevvalue {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 178)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarstddevvaluescatterx {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 179)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarcustompositivedata {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 190)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarcustompositivedatascatterx {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 191)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarcustomnegativedata {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 192)
      }
      if let v = _storage._tschchartseriesdefaulterrorbarcustomnegativedatascatterx {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 193)
      }
      if let v = _storage._tschchartseriesdefaulttrendlineequationoffsetx {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 194)
      }
      if let v = _storage._tschchartseriesdefaulttrendlineequationoffsety {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 195)
      }
      if let v = _storage._tschchartseriesdefaulttrendlinersquaredoffsetx {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 196)
      }
      if let v = _storage._tschchartseriesdefaulttrendlinersquaredoffsety {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 197)
      }
      if let v = _storage._tschchartseriesdefaultshowtrendline {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 198)
      }
      if let v = _storage._tschchartseriesdefaultshowerrorbar {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 199)
      }
      if let v = _storage._tschchartseriesdefaultshowerrorbarscatterx {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 200)
      }
      if let v = _storage._tschchartseriesbubblesizedimension {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 208)
      }
      if let v = _storage._tschchartseriesbubbleshowvaluelabels {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 209)
      }
      if let v = _storage._tschchartseriesbubblelinetype {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 210)
      }
      if let v = _storage._tschchartseriesbubbleshownegativedata {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 216)
      }
      if let v = _storage._tschchartseriesbubbleadjustmentscale {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 217)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: TSCH_PreUFF_ChartSeriesNonStyleArchive, rhs: TSCH_PreUFF_ChartSeriesNonStyleArchive) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._super != rhs_storage._super {return false}
        if _storage._tschchartseriesdefaultnumberformat != rhs_storage._tschchartseriesdefaultnumberformat {return false}
        if _storage._tschchartseriesdefaultnumberformattype != rhs_storage._tschchartseriesdefaultnumberformattype {return false}
        if _storage._tschchartseriesbarshowvaluelabels != rhs_storage._tschchartseriesbarshowvaluelabels {return false}
        if _storage._tschchartserieslinesymboltype != rhs_storage._tschchartserieslinesymboltype {return false}
        if _storage._tschchartserieslineshowsymbol != rhs_storage._tschchartserieslineshowsymbol {return false}
        if _storage._tschchartserieslineshowvaluelabels != rhs_storage._tschchartserieslineshowvaluelabels {return false}
        if _storage._tschchartseriesareashowvaluelabels != rhs_storage._tschchartseriesareashowvaluelabels {return false}
        if _storage._tschchartserieslinelinetype != rhs_storage._tschchartserieslinelinetype {return false}
        if _storage._tschchartseriesareasymboltype != rhs_storage._tschchartseriesareasymboltype {return false}
        if _storage._tschchartseriesareashowsymbol != rhs_storage._tschchartseriesareashowsymbol {return false}
        if _storage._tschchartseriespieshowvaluelabels != rhs_storage._tschchartseriespieshowvaluelabels {return false}
        if _storage._tschchartseriesscattershowvaluelabels != rhs_storage._tschchartseriesscattershowvaluelabels {return false}
        if _storage._tschchartseriespiewedgeexplosion != rhs_storage._tschchartseriespiewedgeexplosion {return false}
        if _storage._tschchartseriesdefaultshowvaluelabels != rhs_storage._tschchartseriesdefaultshowvaluelabels {return false}
        if _storage._tschchartseriespienumberformat != rhs_storage._tschchartseriespienumberformat {return false}
        if _storage._tschchartseriespienumberformattype != rhs_storage._tschchartseriespienumberformattype {return false}
        if _storage._tschchartseriespielabelexplosion != rhs_storage._tschchartseriespielabelexplosion {return false}
        if _storage._tschchartseriesmixedlineshowsymbol != rhs_storage._tschchartseriesmixedlineshowsymbol {return false}
        if _storage._tschchartseriesmixedareashowsymbol != rhs_storage._tschchartseriesmixedareashowsymbol {return false}
        if _storage._tschchartseriesmixedlinesymboltype != rhs_storage._tschchartseriesmixedlinesymboltype {return false}
        if _storage._tschchartseriesmixedareasymboltype != rhs_storage._tschchartseriesmixedareasymboltype {return false}
        if _storage._tschchartseriesmixedshowvaluelabels != rhs_storage._tschchartseriesmixedshowvaluelabels {return false}
        if _storage._tschchartseriesmixedlinelinetype != rhs_storage._tschchartseriesmixedlinelinetype {return false}
        if _storage._tschchartseriesdefaultyaxisordinal != rhs_storage._tschchartseriesdefaultyaxisordinal {return false}
        if _storage._tschchartseriespieshowserieslabels != rhs_storage._tschchartseriespieshowserieslabels {return false}
        if _storage._tschchartseriesscattershowsymbol != rhs_storage._tschchartseriesscattershowsymbol {return false}
        if _storage._tschchartseriesscattersymboltype != rhs_storage._tschchartseriesscattersymboltype {return false}
        if _storage._tschchartseriesscatterlinetype != rhs_storage._tschchartseriesscatterlinetype {return false}
        if _storage._tschchartseriesscattershowline != rhs_storage._tschchartseriesscattershowline {return false}
        if _storage._tschchartseriesstackedpercentnumberformat != rhs_storage._tschchartseriesstackedpercentnumberformat {return false}
        if _storage._tschchartseriesdefaultseriestype != rhs_storage._tschchartseriesdefaultseriestype {return false}
        if _storage._tschchartseriesdefaulttrendlinetype != rhs_storage._tschchartseriesdefaulttrendlinetype {return false}
        if _storage._tschchartseriesdefaulttrendlineorder != rhs_storage._tschchartseriesdefaulttrendlineorder {return false}
        if _storage._tschchartseriesdefaulttrendlineperiod != rhs_storage._tschchartseriesdefaulttrendlineperiod {return false}
        if _storage._tschchartseriesdefaulttrendlineshowlabel != rhs_storage._tschchartseriesdefaulttrendlineshowlabel {return false}
        if _storage._tschchartseriesdefaulttrendlinelabelstring != rhs_storage._tschchartseriesdefaulttrendlinelabelstring {return false}
        if _storage._tschchartseriesdefaulttrendlineshowequation != rhs_storage._tschchartseriesdefaulttrendlineshowequation {return false}
        if _storage._tschchartseriesdefaulttrendlineshowr2Value != rhs_storage._tschchartseriesdefaulttrendlineshowr2Value {return false}
        if _storage._tschchartseriesdefaulterrorbarsetting != rhs_storage._tschchartseriesdefaulterrorbarsetting {return false}
        if _storage._tschchartseriesdefaulterrorbarsettingscatterx != rhs_storage._tschchartseriesdefaulterrorbarsettingscatterx {return false}
        if _storage._tschchartseriesdefaulterrorbartype != rhs_storage._tschchartseriesdefaulterrorbartype {return false}
        if _storage._tschchartseriesdefaulterrorbartypescatterx != rhs_storage._tschchartseriesdefaulterrorbartypescatterx {return false}
        if _storage._tschchartseriesdefaulterrorbarfixedvalue != rhs_storage._tschchartseriesdefaulterrorbarfixedvalue {return false}
        if _storage._tschchartseriesdefaulterrorbarfixedvaluescatterx != rhs_storage._tschchartseriesdefaulterrorbarfixedvaluescatterx {return false}
        if _storage._tschchartseriesdefaulterrorbarpercentvalue != rhs_storage._tschchartseriesdefaulterrorbarpercentvalue {return false}
        if _storage._tschchartseriesdefaulterrorbarpercentvaluescatterx != rhs_storage._tschchartseriesdefaulterrorbarpercentvaluescatterx {return false}
        if _storage._tschchartseriesdefaulterrorbarstddevvalue != rhs_storage._tschchartseriesdefaulterrorbarstddevvalue {return false}
        if _storage._tschchartseriesdefaulterrorbarstddevvaluescatterx != rhs_storage._tschchartseriesdefaulterrorbarstddevvaluescatterx {return false}
        if _storage._tschchartseriesdefaulterrorbarcustompositivedata != rhs_storage._tschchartseriesdefaulterrorbarcustompositivedata {return false}
        if _storage._tschchartseriesdefaulterrorbarcustompositivedatascatterx != rhs_storage._tschchartseriesdefaulterrorbarcustompositivedatascatterx {return false}
        if _storage._tschchartseriesdefaulterrorbarcustomnegativedata != rhs_storage._tschchartseriesdefaulterrorbarcustomnegativedata {return false}
        if _storage._tschchartseriesdefaulterrorbarcustomnegativedatascatterx != rhs_storage._tschchartseriesdefaulterrorbarcustomnegativedatascatterx {return false}
        if _storage._tschchartseriesdefaulttrendlineequationoffsetx != rhs_storage._tschchartseriesdefaulttrendlineequationoffsetx {return false}
        if _storage._tschchartseriesdefaulttrendlineequationoffsety != rhs_storage._tschchartseriesdefaulttrendlineequationoffsety {return false}
        if _storage._tschchartseriesdefaulttrendlinersquaredoffsetx != rhs_storage._tschchartseriesdefaulttrendlinersquaredoffsetx {return false}
        if _storage._tschchartseriesdefaulttrendlinersquaredoffsety != rhs_storage._tschchartseriesdefaulttrendlinersquaredoffsety {return false}
        if _storage._tschchartseriesdefaultshowtrendline != rhs_storage._tschchartseriesdefaultshowtrendline {return false}
        if _storage._tschchartseriesdefaultshowerrorbar != rhs_storage._tschchartseriesdefaultshowerrorbar {return false}
        if _storage._tschchartseriesdefaultshowerrorbarscatterx != rhs_storage._tschchartseriesdefaultshowerrorbarscatterx {return false}
        if _storage._tschchartseriesbubblesizedimension != rhs_storage._tschchartseriesbubblesizedimension {return false}
        if _storage._tschchartseriesbubbleshowvaluelabels != rhs_storage._tschchartseriesbubbleshowvaluelabels {return false}
        if _storage._tschchartseriesbubblelinetype != rhs_storage._tschchartseriesbubblelinetype {return false}
        if _storage._tschchartseriesbubbleshownegativedata != rhs_storage._tschchartseriesbubbleshownegativedata {return false}
        if _storage._tschchartseriesbubbleadjustmentscale != rhs_storage._tschchartseriesbubbleadjustmentscale {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
